[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"# Do Understand Know Empower (duke)","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"Hello ðŸ˜„ This is Ryan Ong\u0027s evolution of the **duke Chatbot** with the purpose of keeping track of the tasks *you* ~~die die~~ need to do.","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003e Quidquid latine dictum sit, altum videtur","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"## Features","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * Add tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * Delete tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * Complete tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" * Local storage","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"## Tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"Tasks are available in the following types:","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"1. ToDo","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"2. Event","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"3. Deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"## Example code","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"Here\u0027s an example of the `code` for the ToDo task!","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"```java","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"public static class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\", done);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"## Have you tried all the features?","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":" - [ ] Added three tasks (one of each type)","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":" - [ ] Completed task 2","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":" - [ ] Deleted task 1","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":" - [ ] Closed the program","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":" - [ ] Restarted the program to see your list is saved!","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"## Guess what page I\u0027m referring to now?","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"[This page!](https://nus-cs2103-ay2122s1.github.io/website/schedule/week4/project.html)","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ryanongra":43,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"javafx {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027]","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryanongra":8,"-":45}},{"path":"docs/testSave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"D\u003e0\u003etest deadline\u003e2020-02-02T20:20","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ryanongra":1}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":12}},{"path":"src/main/java/duke/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add a Deadline type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class AddDeadlineCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    private final String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    TaskManager tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    ResponseManager responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    Task addedDeadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * Adds the deadline task by interacting with the","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     * relevant instances as mentioned above.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            addedDeadline \u003d tm.addDeadline(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            if (addedDeadline !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskAdditionMessage(addedDeadline, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.NoTimeSpecifiedException(\"Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n\" +","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"                        \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException |","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                DukeException.NoTimeSpecifiedException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":54}},{"path":"src/main/java/duke/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add an event type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class AddEventCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    private final String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    TaskManager tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    ResponseManager responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    Task addedEvent;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * Adds the event task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            Task addedEvent \u003d tm.addEvent(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            this.addedEvent \u003d addedEvent;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            if (addedEvent !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskAdditionMessage(addedEvent, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.NoTimeSpecifiedException(\"Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n\" +","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"                        \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException |","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                DukeException.NoTimeSpecifiedException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":53}},{"path":"src/main/java/duke/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add a To-Do type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class AddToDoCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    public AddToDoCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * Adds the to-do task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"            Task addedTask \u003d tm.addToDo(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getTaskAdditionMessage(addedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":39}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to cease the conversation with Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the Ui.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class ByeCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"     * Called the Ui object to display the \u0027bye\u0027 message then ends the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getByeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        return getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":26}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to delete a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class DeleteCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    TaskManager tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    ResponseManager responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    Task deletedTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @param taskIndex The index of the task which the user wants deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public DeleteCommand(String taskIndex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     * Deletes the desired task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            deletedTask \u003d tm.deleteTask(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            if (deletedTask \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getInvalidIndexMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskDeletionMessage(deletedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.InvalidInputException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":51}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":61}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to complete a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class DoneCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    TaskManager tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    ResponseManager responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    Task completedTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * @param taskIndex The index of the task which the user wants to mark completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    public DoneCommand(String taskIndex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     * Marks the desired task completed by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            completedTask \u003d tm.completeTask(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            if (completedTask \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getInvalidIndexMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskCompletionMessage(completedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.InvalidInputException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":52}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":" * The main class for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private TaskManager taskManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jesse.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        //new Duke(\"docs\\\\save.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        duke \u003d new Duke(\"docs\\\\save.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        stage.setTitle(\"duke\");","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"     * Iteration 1:","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"        System.out.println(react(userText));","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"        String dukeText \u003d react(userText);","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"ryanongra"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"ryanongra"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"ryanongra"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"ryanongra"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"ryanongra"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"ryanongra"},"content":"        ICommand c \u003d parser.getInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"ryanongra"},"content":"        c.execute(taskManager, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"        return c.getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"ryanongra"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"ryanongra"},"content":"     * @param saveFileLocation The path to where the save file is to be stored.","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"    public Duke(String saveFileLocation) {","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"        responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"        storage \u003d new Storage(saveFileLocation);","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"ryanongra"},"content":"        taskManager \u003d new TaskManager(storage.loadSave());","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":162,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"ryanongra"},"content":"     * Runs the program until the bye command is used to end it.","lastModifiedDate":"2021-09-02"},{"lineNumber":164,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":165,"author":{"gitId":"ryanongra"},"content":"    public String react(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":166,"author":{"gitId":"ryanongra"},"content":"        //ui.introduceYourself();","lastModifiedDate":"2021-09-02"},{"lineNumber":167,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":168,"author":{"gitId":"ryanongra"},"content":"        ICommand c \u003d parser.getInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"ryanongra"},"content":"        c.execute(taskManager, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"ryanongra"},"content":"        return c.getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":173,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":174}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates exceptions which the Duke program could throw/","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when an input is invalid","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"     * (e.g. passes a String instead of an int).","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public static class InvalidInputException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        public InvalidInputException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when the user attempts to create a","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * deadline/event without specifying the time.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public static class NoTimeSpecifiedException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        public NoTimeSpecifiedException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when the user attempts to","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * add in a task with no name.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    public static class NoNameException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        public NoNameException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":38}},{"path":"src/main/java/duke/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"public class FindTasksCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"    private String keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    public FindTasksCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"        keyword \u003d input.substring(5);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        ArrayList\u003cTask\u003e originalTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        originalTasks.addAll(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) originalTasks.stream().filter(task -\u003e task.getName().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getListTasksMessage(filteredTasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":28}},{"path":"src/main/java/duke/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This interface is used by all commands and ensures that commands implement the execute() method.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"public interface ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"    void execute(TaskManager tm, ResponseManager responseManager, Storage storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    String getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":12}},{"path":"src/main/java/duke/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to display the current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager and Ui.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"public class ListTasksCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"     * Calls the Ui object to display the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getListTasksMessage(tm.getTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":25}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private Duke duke \u003d new Duke(\"docs\\\\save.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jesse.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        String welcomeMsg \u003d \"Hello I\u0027m\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"                + \" ___        _        \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"                + \"|___/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"                DialogBox.getDukeDialog(welcomeMsg, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"    public MainWindow() {","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the understanding of commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" * It calls the relevant command depending on the user\u0027s input.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"     * Gets the user\u0027s input and return the relevant command to execute.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"     * @return A command which determines how the program should react.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public ICommand getInput(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        //String input \u003d sc.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"        // Exit","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        // List out tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        // Delete tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        // Add to-do task","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"todo\")){","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            return new AddToDoCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        // Add deadline task","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"deadline\")){","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        // Add event task","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"            return new FindTasksCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        // Unknown command","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":55}},{"path":"src/main/java/duke/ResponseManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * This class encapsulated the management of the user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class ResponseManager {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"     * Introduction method shown when program is first run.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    public String introductionMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Hello I\u0027m\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * Goodbye message when the user enters the \"bye\" command.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    public String getByeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * Prints out the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    public String getListTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: Here is your list of tasks :)\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            message +\u003d \"Looks like you don\u0027t have any pending tasks!\\nMust be nice (-_-;)\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"                String newTask \u003d i + 1 + \".\"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                        + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                message +\u003d newTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was added successfully.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was added.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The new total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    public String getTaskAdditionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: I\u0027ve added the task: \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was successfully deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The new total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"    public String getTaskDeletionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: I\u0027ve deleted the task: \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was successfully completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The current total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"    public String getTaskCompletionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: You\u0027ve completed the task: \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"Well done!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"     * @param msg The error that was thrown.","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"    public String getErrorMessage(Exception msg) {","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"        String message \u003d msg.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"     * Prints a message to tell the user that Duke does not understand their input.","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    public String getUnknownCommandMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: Sorry I don\u0027t understand what that means\";","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"     * Prints a message to tell the user that the task number they are trying to complete/delete does not exist.","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"    public String getInvalidIndexMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"        String message \u003d \"Duke says: You don\u0027t have that many tasks!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":116}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":" * This class encapsulated the management of local storage for Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private final String SAVE_FILE_LOCATION;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * Constructor for Storage object, requires the path to","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * where the save file should be located.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * @param saveFileLocation","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public Storage(String saveFileLocation) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        this.SAVE_FILE_LOCATION \u003d saveFileLocation;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * This method updates the local save file with the latest","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * list of tasks. It is called whenever a task is added/deleted/completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * @param tasks The latest list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    public void updateSave(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            data +\u003d tasks.get(i).toStringSave() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            FileOutputStream fos \u003d new FileOutputStream(SAVE_FILE_LOCATION, false);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            byte[] b \u003d data.getBytes();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            fos.write(b);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            fos.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: Unable to save latest task. Please try again \\n\" + ex.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"     * This method is run once whenever the program is started up.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"     * It loads the previous save or creates a new save file if it is","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     * the first time the program is run.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     * @return The array list from the previous save.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    public ArrayList\u003cTask\u003e loadSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"            File saveFile \u003d new File(SAVE_FILE_LOCATION);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"            Scanner sc \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"                Task newTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"                String[] taskDetails \u003d sc.nextLine().split(\"\u003e\");","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"                String name \u003d taskDetails[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"                boolean done \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"                switch (taskDetails[0]) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"                        newTask \u003d new Task.ToDo(name, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"                        newTask \u003d new Task.Deadline(name, LocalDateTime.parse(taskDetails[3]), done);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"                        newTask \u003d new Task.Event(name, LocalDateTime.parse(taskDetails[3]), done);","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"                        break;","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"                    default:","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"                        throw new DukeException.NoNameException(\"Duke.Task type invalid\");","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"            return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: save file not found \\n\" + e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: save file invalid\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":90}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the tasks: To-do, Deadline, and Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    private final String NAME;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private String taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * Constructor for newly added tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoNameException Throws then the task name passed in is empty.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public Task(String name, String taskType) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        if (name.replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke.Duke says: Duke.Task cannot have no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        this.NAME \u003d name;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     * Constructor for tasks created from storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param done Whether the task has been completed or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoNameException Throws then the task name passed in is empty.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    public Task(String name, String taskType, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        if (name.replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke.Duke says: Duke.Task cannot have no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        this.NAME \u003d name;","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    public String getName() {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        return NAME;","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        return (taskType + (isDone ? \" (done) \" : \" (not done) \") + NAME);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"    public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        int doneData \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"        char taskTypeData \u003d taskType.equals(\"#ToDo\")","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"                ? \u0027T\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"                : taskType.equals(\"#Deadline\")","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"                ? \u0027D\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"                : \u0027E\u0027;","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"        return taskTypeData + \"\u003e\" + doneData + \"\u003e\" + NAME;","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\");","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"        private final LocalDateTime deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"        public Deadline(String name, LocalDateTime deadline) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Deadline\");","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        public Deadline(String name, LocalDateTime deadline, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Deadline\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"        public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"            return super.toString() + \" (\" + deadline.toString().replace(\u0027T\u0027, \u0027 \u0027) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"            return super.toStringSave() + \"\u003e\" + deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"    public static class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"        //private final LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"        private final LocalDateTime when;","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"        public Event(String name, LocalDateTime when) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Event\");","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"            this.when \u003d when;","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"        public Event(String name, LocalDateTime when, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Event\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"            this.when \u003d when;","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"        public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"            return super.toString() + \" (\" + when.toString().replace(\u0027T\u0027, \u0027 \u0027) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"        public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"            return super.toStringSave() + \"\u003e\" + when;","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":128}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    public Task addToDo(String input) throws DukeException.NoNameException, DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke says: You can\u0027t add a task with no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        Task.ToDo newToDo \u003d new Task.ToDo(input.substring(5));","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        return newToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    public Task addDeadline(String input) throws DukeException.NoTimeSpecifiedException, DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        Task addedDeadline \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            Task.Deadline newDeadline \u003d new Task.Deadline(input.substring(9).split(\" /\")[0],","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"                    LocalDateTime.parse(input.substring(9).split(\" /\")[1],","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            addedDeadline \u003d newDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoTimeSpecifiedException(\"Duke.Duke says: Please include a deadline\");","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Duke says: Please use the format YYYY-MM-DD HH:MM when entering deadline \\n \" +","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                    \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        return addedDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    public Task addEvent(String input) throws DukeException.NoTimeSpecifiedException, DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        Task addedEvent \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"            Task.Event newEvent \u003d new Task.Event(input.substring(6).split(\" /\")[0],","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"                    LocalDateTime.parse(input.substring(6).split(\" /\")[1],","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"            addedEvent \u003d newEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoTimeSpecifiedException(\"Duke.Duke says: Please include a time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Duke says: Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n \" +","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"                    \"E.g. 2021-08-28T18:30\");","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        return addedEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    public Task completeTask(String input) throws DukeException.InvalidInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        Task completedTask \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"            int taskIndex \u003d Integer.parseInt(String.valueOf(input.charAt(5)));","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"            if (!(taskIndex \u003e tasks.size())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"                completedTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"                completedTask.completeTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.InvalidInputException(\"Duke says: Please enter the index of the completed task\");","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        return completedTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"    public Task deleteTask(String input) throws DukeException.InvalidInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        Task deletedTask \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"            int taskIndex \u003d Integer.parseInt(String.valueOf(input.charAt(7)));","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"            if (!(taskIndex \u003e tasks.size())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"                System.out.println(\"Duke says: You have deleted the task \" +","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"                        tasks.get(taskIndex - 1).getName());","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"                deletedTask \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.InvalidInputException(\"Duke says: Please enter the index of the task you want to delete\");","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":93}},{"path":"src/main/java/duke/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class is used when an input is not understood.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"public class UnknownCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"    String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"        this.reply \u003d responseManager.getUnknownCommandMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"import duke.ResponseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public void addEventCommandTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        TaskManager tm \u003d new TaskManager(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"        Storage storage \u003d new Storage(\"docs\\\\testSave.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        ResponseManager responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        String addEvent \u003d \"event test event /2020-02-02 20:20\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        AddEventCommand command \u003d new AddEventCommand(addEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#Event (not done) test event (2020-02-02 20:20)\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public void addDeadlineCommandTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        TaskManager tm \u003d new TaskManager(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        Storage storage \u003d new Storage(\"docs\\\\testSave.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        ResponseManager responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        String addDeadline \u003d \"deadline test deadline /2020-02-02 20:20\";","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(addDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#Deadline (not done) test deadline (2020-02-02 20:20)\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    public void addToDoCommandTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        TaskManager tm \u003d new TaskManager(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        Storage storage \u003d new Storage(\"docs\\\\testSave.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        ResponseManager responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        String addDeadline \u003d \"todo test todo\";","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        AddToDoCommand command \u003d new AddToDoCommand(addDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#ToDo (not done) test todo\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"todo get some sleep","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"event dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"event dinner /thurs","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"deadline homework","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"deadline homework /monday","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"remove 1","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ryanongra":18}}]
