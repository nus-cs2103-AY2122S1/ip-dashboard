[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"    mainClassName \u003d \"jackie.Launcher\"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    archiveBaseName \u003d \"Jackie\"","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    archiveVersion \u003d \"1.0\"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"jackgugz":17}},{"path":"data/jackie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"T | 1 | i added a todo test","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"D | 0 | i added a deadline test | 2021-09-01","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"E | 0 | i added an event test | 1998-03-28","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"E | 1 | i added another event test | 2021-09-01","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"D | 1 | CS2103T ip submission | 2021-09-17","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"jackgugz":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"# How to master Jackie 101","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"\u003e Free thing is great thing. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"\u003e -[Jack](https://github.com/jackgugz)","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"### Jackie frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"- text-based","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"- easy to learn","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"- ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"  ","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"  \u003cimg src\u003d\"https://www.vippng.com/png/detail/7-77855_harold-thumbs-up-harold-thumbs-up-transparent.png\" alt\u003d\"Thumb up image\" width\u003d\"200\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"### All you need to do is,","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"1. download it from [here](https://github.com/jackgugz/ip/releases/download/A-Release/Jackie-1.0.jar).","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"2. double-click it.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"3. add your tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"4. let it manage your tasks for you 👍","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"   And it is **FREE**! ⚡","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"   ","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"- [X] Managing todos","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"- [X] Managing deadlines","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"- [X] Managing events","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"- [X] Find tasks on specified date","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"- [X] Find tasks with specified keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"- [X] Undo previous action","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"### Feature - Managing todos/deadlines/events","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"This feature allows CRUD functionalities of todo/deadline/event tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"### Feature - Find tasks on specified date","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"This feature allows task list to be filtered by a specified date.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"### Feature - Find tasks with specified keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"This feature allows task list to be filtered by a specified key word/phrase.","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"### Feature - Undo previous action","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"This feature allows task list to be restored to the previous version before the last done operation. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"Only a maximum of one undo operation can be executed until a new opeartion is executed. ","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"### `list {optional date}` - Show existing full/filtered task list","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"Show existing full/filtered task list based on the optional date argument. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"The date has to be in yyyy-MM-dd format.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"`list 2021-09-01`","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"Darling, here are the tasks with a schedule of 2021-09-01:","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"1. [D][ ] i added a deadline test (by: Sep 01 2021) ","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"2. [E][X] i added another event test (at: Sep 01 2021) ","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"### `find {keywords}` - Find tasks with matched keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"Show existing filtered task list based on the specified keywords.","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"`find CS2103T`","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"Darling, here are the matching tasks(with CS2103T) in your list:","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"1. [D][X] CS2103T ip submission (by: Sep 17 2021) ","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"### `todo {task}` - Add a todo","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"Add a todo with specified {task} content. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"The todo is added to the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"`todo finish CS2103T readme`","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"Gotcha my dear. I\u0027ve added this task for you: ","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"[T][ ] finish CS2103T readme","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"### `event/deadline {task} / {date}` - Add an event/deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"Add a event/deadline with specified {task} content and specified {date}. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"The event/deadline is added to the task list. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"The date has to be in yyyy-MM-dd format.","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"`deadline CS2103T ip submission / 2021-09-17`","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"Gotcha my dear. I\u0027ve added this task for you: ","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"[D][ ] CS2103T ip submission (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"### `done {index}` - Mark the specified task as done","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"Mark the specified task as done by an index with reference to the indexing when showing full list. ","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"`done 5`","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"Noice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"[D][X] CS2103T ip submission (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"### `delete {index}` - Delete the specified task","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"Delete the specified task as done by an index with reference to the indexing when showing full list.","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"`delete 5`","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"okie! I\u0027ve removed this annoying task: ","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"[D][X] CS2103T ip submission (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"### `undo` - Undo the previous operation","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"Undo the previous operation. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"Restore the task list to the previous version. \\","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"A maximum of 1 undo operation can be done until a new operation is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"`undo`","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"jackgugz"},"content":"Gotcha my dear! I have restored the previous version.","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"jackgugz"},"content":"1. [T][X] i added a todo test","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"2. [D][ ] i added a deadline test (by: Sep 01 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"3. [E][ ] i added an event test (at: Mar 28 1998)","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"4. [E][X] i added another event test (at: Sep 01 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"5. [D][X] CS2103T ip submission (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"### `bye` - exit the program","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"Exit the program.","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"`bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"jackgugz"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"Bye bye. Love you","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"jackgugz":167,"-":27}},{"path":"src/main/java/MockDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class MockDuke {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":11}},{"path":"src/main/java/jackie/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        displayPicture.setClip(new Circle(20, 20, 20));","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        dialog.setStyle(\"-fx-background-color: rgba(196, 196, 196, 0.8);\");","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"        dialog.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        this.setPrefHeight(dialog.getMaxHeight());","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    public static DialogBox getJackieDialog(String text, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        if (text.startsWith(\"Error\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"            db.setErrorMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"    private void setErrorMessage() {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"        dialog.setTextFill(Color.web(\"#ff0000\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":74}},{"path":"src/main/java/jackie/Jackie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import jackie.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" * A chatbot programme that executes a series of commands from user input and helps keep track user\u0027s tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"public class Jackie {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * Returns an Jackie instance with storage tasklist and ui initialised.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     * @param filePath the directory to stored data as a Path.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    public Jackie(Path filePath) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        } catch (JackieException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     * Executes the Jackie programme.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"                Command c \u003d Parser.parse(fullCommand.split(\" \"));","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"            } catch (JackieException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"            } finally {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     * Drives the Jackie programme.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"     * @param args A String array from user input","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"     * @throws JackieException Exception that is specific to Jackie where invalid input is detected","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"    public static void main(String[] args) throws JackieException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        String currDir \u003d new File(\"\").getAbsolutePath();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        Path filePath \u003d Paths.get(currDir, \"data\", \"jackie.txt\");","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        new Jackie(filePath).run();","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"            Command c \u003d Parser.parse(input.split(\" \"));","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"        } catch (JackieException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jackgugz":79,"-":2}},{"path":"src/main/java/jackie/JackieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":" * An Exception subclass that is specific to the misbehaviours of Duke programme.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"public class JackieException extends Exception {","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"     * Returns an DukeException instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"     * The Exception is initialised with an error message in String.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"     * @param errorMessage Description of the error.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    public JackieException(String errorMessage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":19}},{"path":"src/main/java/jackie/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":12}},{"path":"src/main/java/jackie/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" * A GUI for Jackie using FXML.","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private Jackie jackie \u003d new Jackie(Paths.get(new File(\"\").getAbsolutePath(), \"data\", \"jackie.txt\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            stage.setTitle(\"Jackie - Your Most Reliable Helper\");","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"            stage.getIcons().add(new Image(\"/images/DaJackie.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJackie(jackie);","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":35}},{"path":"src/main/java/jackie/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    private Jackie jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"    private Image jackieImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaJackie.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"    public void setJackie(Jackie d) {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"        jackie \u003d d;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Jackie\u0027s reply and then appends them to","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        String response \u003d jackie.getResponse(input);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"                DialogBox.getJackieDialog(response, jackieImage)","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":51}},{"path":"src/main/java/jackie/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.command.Command;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * A class with method to interpret the commands from user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * The parse method will return the interpretation in the form of a Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"     * A collection of command words that is used to specify the user input command.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private enum CommandWord {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"), FIND(\"find\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"        DONE(\"done\"), DELETE(\"delete\"), BYE(\"bye\"), LIST(\"list\"), UNDO(\"undo\");","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"        private String value;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"        private CommandWord(String value) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"            this.value \u003d value;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"     * Interprets the user input in terms of a String and returns the information in the form of a Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"     * @param command A String that contains the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * @return A Command that is corresponding to the specific user input of command.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * @throws JackieException Will be thrown should the user input command are not in the correct formats.","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    public static Command parse(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"        String commandHolder \u003d command[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        for (Parser.CommandWord c : Parser.CommandWord.values()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"            // Goes through the CommandWord Enum to check any matches with valid commands","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"            if (c.value.equals(commandHolder)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"                switch (c) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                case BYE:","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.ExitCommand();","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"                case LIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.ListCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.DoneCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"                case DELETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.DeleteCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"                case FIND:","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.FindCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"                case UNDO:","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.UndoCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"                case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"                case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"                    return new jackie.command.AddCommand(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"                    continue;","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"        throw new JackieException(\"D: oopsie!!! I\u0027m sorry my dear but I can\u0027t do that for you\");","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":63}},{"path":"src/main/java/jackie/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"import jackie.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":" * A class that communicates and delivers the data between the running programme and database.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":" * The database is specified through a Path object indicating its file directory.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     * A collection of done statuses, 1 indicates done and 0 not done.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     * @author Gu Geng","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    private enum DoneStatus {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        DONE(\"1\"), NOT_DONE(\"0\");","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        private final String value;","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        DoneStatus(String s) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            this.value \u003d s;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     * A collection of indexes of the content array and what they mean respectively.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * @author Gu Geng","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    private enum Index {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        TYPE(0), DONE_STATUS(1), CONTENT(2), TIME(3);","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        private final int value;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        Index(int i) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"            this.value \u003d i;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    private final Path filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"     * Returns a Storage instance with the file directory in the form of Path.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"     * @param filePath A Path object specifying the file directory to the data storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"     * Returns an ArrayList of Task objects created from data stored in the directory specified by the file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"     * @return An ArrayList of Task objects created from data stored in the directory specified by the file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"     * @throws JackieException Will be thrown if directory specified cannot be located or Task objects failed to create.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"    public ArrayList\u003cjackie.task.Task\u003e load() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"            ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"            createPath();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"            File fileHolder \u003d new File(filePath.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"            Scanner scanner \u003d new Scanner(fileHolder);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"                tasks.add(scanner.nextLine());","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"            scanner.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"            return parseTaskList(tasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: OH NOOOOO! I cannot locate the file!!\" + e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"     * Updates the storage file specified by the this.filePath against the TaskList provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A TaskList object containing information to update the storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"     * @throws JackieException Will be thrown if the storage file cannot be located.","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"    public void updateStorage(TaskList taskList) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"            Path temp \u003d Files.createTempFile(Paths.get(filePath.toString(), \"..\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"                    \"temp\", \".txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"            FileWriter fw \u003d new FileWriter(temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"            File tempFile \u003d new File(temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"                jackie.task.Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"                fw.write(task.record() + System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"            Files.delete(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"            Files.copy(temp, filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"            tempFile.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: OH NOOOOO! Something wrong with the file!!\" + e.getMessage());","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"    private ArrayList\u003cjackie.task.Task\u003e parseTaskList(ArrayList\u003cString\u003e rawDatas) {","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"        ArrayList\u003cjackie.task.Task\u003e result \u003d rawDatas.stream().map(rawData -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"            Task holder \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"                holder \u003d parseTask(rawData);","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"            } catch (JackieException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"            return holder;","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"        })","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"        return result;","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"    private jackie.task.Task parseTask(String rawData) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"        String[] content \u003d rawData.split(\" \\\\| \");","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"        switch (content[Index.TYPE.value]) {","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"        case \"T\":","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"            return createTodo(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"        case \"D\":","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"            return createDeadline(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"        case \"E\":","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"            return createEvent(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: OH NO! Something wrong in parsing from database!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"    private void createPath() throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"        Path folderPath \u003d Paths.get(filePath.toString(), \"..\");","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"        if (!Files.exists(folderPath)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"            // create filepath if not existed","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"            Files.createDirectories(folderPath);","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"        assert !Files.exists(folderPath);","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"            // create file if not existed","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"        assert !Files.exists(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"    private jackie.task.Todo createTodo(String[] content) {","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"        jackie.task.Todo todo \u003d new jackie.task.Todo(\"todo \", content[Index.CONTENT.value].trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"        if (content[Index.DONE_STATUS.value].equals(DoneStatus.DONE.value)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"            todo.doneTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"        assert content[Index.DONE_STATUS.value].equals(DoneStatus.NOT_DONE.value);","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"        return todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"    private jackie.task.Deadline createDeadline(String[] content) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"        jackie.task.Deadline deadline \u003d new jackie.task.Deadline(\"deadline \",","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"                content[Index.CONTENT.value].trim(), \"/\", content[Index.TIME.value].trim());","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"        if (content[Index.DONE_STATUS.value].equals(DoneStatus.DONE.value)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"            deadline.doneTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"        assert content[Index.DONE_STATUS.value].equals(DoneStatus.NOT_DONE.value);","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"        return deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"    private jackie.task.Event createEvent(String[] content) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"jackgugz"},"content":"        jackie.task.Event event \u003d new jackie.task.Event(","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"jackgugz"},"content":"                \"event \", content[Index.CONTENT.value].trim(), \"/\", content[Index.TIME.value].trim());","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"jackgugz"},"content":"        if (content[Index.DONE_STATUS.value].equals(DoneStatus.DONE.value)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"            event.doneTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"        assert content[Index.DONE_STATUS.value].equals(DoneStatus.NOT_DONE.value);","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"        return event;","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":179}},{"path":"src/main/java/jackie/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import jackie.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" * A class that keeps track of the tasks in the form of ArrayList of jackie.task.Task objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * It contains methods to provide information and execute operations over the ArrayList stored.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    private ArrayList\u003cjackie.task.Task\u003e taskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private ArrayList\u003cjackie.task.Task\u003e previousList;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * Returns a TaskList instance using an ArrayList of jackie.task.Task objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A ArrayList of jackie.task.Task objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    public TaskList(ArrayList\u003cjackie.task.Task\u003e taskList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"        previousList \u003d taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * Returns a TaskList instance with an empty ArrayList of jackie.task.Task objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"        previousList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * Overrides the toString method to change the String representation of the TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"     * @return A String as the String representation of the TaskList in specified format.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        StringBuilder result \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"            String entry \u003d String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"                    i + 1, task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"            result.append(entry);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     * Returns the size of the ArrayList contained in the class instance.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     * @return An int object indicating the size of the current ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     * Returns a String representation of the ArrayList after being filtered by a LocalDate Object.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"     * @param dateFilter A LocalDate object used to filter the ArrayList of Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the ArrayList after being filtered by a LocalDate Object.","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"    public String listSchedule(LocalDate dateFilter) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"        // stream here","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d taskList.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"                .filter(ele -\u003e ele.hasSchedule()","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"                        \u0026\u0026 scheduleFormatChecker(ele, dateFilter))","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"        StringBuilder result \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"            Task task \u003d filteredTaskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"            String entry \u003d String.format(\"%d. %s \\n\",","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"                    i + 1, task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"            result.append(entry);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"    private boolean scheduleFormatChecker(jackie.task.Task task, LocalDate dateFilter) {","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"        return task.getTime().equals(dateFilter.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"     * Returns a String representation of the ArrayList after being filtered by a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"     * @param searchFilter A String used to filter the ArrayList of Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the ArrayList after being filtered by a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"    public String listFind(String searchFilter) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"        // stream here","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d this.taskList.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"                .filter(ele -\u003e ele.getContent().contains(searchFilter))","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"        StringBuilder result \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"        for (int i \u003d 0; i \u003c filteredTaskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"            Task task \u003d filteredTaskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"            String entry \u003d String.format(\"%d. %s \\n\",","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"                    i + 1, task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"            result.append(entry);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"     * Marks the specified Task in the ArrayList as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"     * @param index An int indicating the position of Task in the ArrayList that is to be marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"    public void doneTask(int index) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"        previousList \u003d taskList.stream().map(x -\u003e x).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"        Task holder \u003d (Task) taskList.get(index).getCopy();","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"        holder.doneTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"        taskList.add(index, holder);","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"     * Deletes the specified Task in the ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"     * @param index An int indicating the position of Task in the ArrayList to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"        previousList \u003d taskList.stream().map(x -\u003e x).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"        String holder \u003d taskList.get(index).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"        taskList.trimToSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"     * Adds the given Task to the ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"     * @param task A jackie.task.Task object that is to be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"    public void addTask(jackie.task.Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"        previousList \u003d taskList.stream().map(x -\u003e x).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"     * Returns a jackie.task.Task object specified by the index given from the ArrayList.","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"     * @param index An int indicating the position of Task in the ArrayList to be obtained.","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"     * @return A jackie.task.Task object specified by the index given from the ArrayList.","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"    public jackie.task.Task getTask(int index) {","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"     * Undos the last operation done and restores the previous taskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the undone operation is done.","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"    public boolean ifUndone() {","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"        if (!previousList.equals(taskList) \u0026\u0026 !ifStatusSame()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"            taskList \u003d previousList;","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"            return true;","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if all status of the tasks in both versions are same.","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"jackgugz"},"content":"     * @return a boolean indicating if all status of the tasks in both versions are same.","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"    private boolean ifStatusSame() {","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"        if (taskList.size() !\u003d previousList.size()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"            if (taskList.get(i).getStatus() !\u003d previousList.get(i).getStatus()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"                return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"        return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":185}},{"path":"src/main/java/jackie/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * A class that takes charge of interactions between the user and Jackie programme.","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" * A collection of methods are provided to have different behaviours in different scenarios.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     * Returns an Ui instance by initialising a scanner to track user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     * Reads the user input by the scanner.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * @return A String of user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * Prints a line.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * Prints the welcome interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        showLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        System.out.println(\"Heyllo! Jackie here\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        showLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * Prints the loading error interface.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        System.out.println(\"D: OH NOOOOO! I cannot locate the file!!\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     * Prints the error interface with the provided error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     * @param errMess A String containing the error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    public void showError(String errMess) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"        System.out.println(errMess);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     * Returns String complete task interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"     * @param task A jackie.task.Task object that was marked done.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    public String showDone(jackie.task.Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"        return \"Noice! I\u0027ve marked this task as done: \\n\" + task + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     * Returns String in case where List is to be shown but there is no tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"    public String emptyList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"        return \"Darling, you have nothing in your list though \\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"     * Returns String the full TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A TaskList that contains all the jackie.task.Task objects\u0027 information.","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"    public String showFullList(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"        return \"Darling, here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"     * Returns String the TaskList after being filtered by a date.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A TaskList that contains all the jackie.task.Task objects\u0027 information.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"     * @param dateFilter A LocalDate object that is used to filter the TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"    public String showScheduleList(TaskList taskList, LocalDate dateFilter) {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"Darling, here are the tasks with a schedule of %s:\\n\",","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"                dateFilter.toString()) + taskList.listSchedule(dateFilter);","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"     * Returns String the TaskList after being filtered by a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A TaskList that contains all the jackie.task.Task objects\u0027 information.","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"     * @param searchFilter A String object that is used to filter the TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"    public String showFindList(TaskList taskList, String searchFilter) {","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"Darling, here are the matching tasks(with %s) in your list:\\n\",","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"                searchFilter) + taskList.listFind(searchFilter);","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"     * Returns String the delete interface with information of the deleted task.","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"     * @param task A jackie.task.Task object that was deleted.","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"     * @param num A int object indicating number of objects left in the tasklist after deletion.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"    public String showDelete(jackie.task.Task task, int num) {","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"        return \"okie! I\u0027ve removed this annoying task: \\n\" + task + \"\\n\" + showNumOfTask(num);","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"     * Returns String the interface containing the number of objects in the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"     * @param num A int object indicating number of objects in the current tasklist.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"    public String showNumOfTask(int num) {","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"        return \"Now you have \" + num + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"     * Returns String the interface when a task is added to the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"     * @param task A jackie.task.Task object that is to be added.","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"     * @param num A int object indicating number of objects left in the tasklist after the addition.","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"    public String showAdd(jackie.task.Task task, int num) {","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"        return \"Gotcha my dear. I\u0027ve added this task for you: \\n\" + task","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"                + \"\\nNow you have \" + num + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"     * Returns String the exit interface.","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"    public String showFarewell() {","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"        scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"        return \"Bye bye. Love you\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"     * Returns String when undo command is executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"     * @return A String","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"    public String showUndo(boolean ifUndone, jackie.TaskList taskList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"        if (ifUndone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"            return \"Gotcha my dear! I have restored the previous version.\\n\" + taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"            return \"Dear there is no available version for me to restore to T.T\";","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":162}},{"path":"src/main/java/jackie/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for adding.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    private jackie.task.Task task;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     * Returns a AddCommand object with the information provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     * @param command A String containing information that can possibility be used to create an AddCommand object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    public AddCommand(String... command) throws jackie.JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"            throw new jackie.JackieException(\" D: OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        } else if (command[0].equals(\"todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            task \u003d new jackie.task.Todo(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        } else if (Arrays.asList(command).contains(\"/\") \u0026\u0026 command.length \u003c\u003d 3) {","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"            throw new jackie.JackieException(","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"                    \" D: HEY DEAR! Please enter a date after / following the task description\");","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        } else if (command[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"            task \u003d new jackie.task.Deadline(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"        } else if (command[0].equals(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            task \u003d new jackie.task.Event(command);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"            assert false;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"     * Executes the given add command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"     * D:","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if unable to locate/update the storage file.","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    public String execute(jackie.TaskList taskList, jackie.Ui ui, jackie.Storage storage)","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"            throws jackie.JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showAdd(task, taskList.size()));","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"        return ui.showAdd(task, taskList.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the add execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the add execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":67}},{"path":"src/main/java/jackie/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":" * An abstract class that requires the subclasses to implement methods of execute and isExit.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public abstract String execute(jackie.TaskList taskList, jackie.Ui ui, jackie.Storage storage)","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"            throws jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":12}},{"path":"src/main/java/jackie/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for deleting.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    private int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     * Returns a DeleteCommand object with the information provided.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     * @param command A String array containing information","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     *                that can possibly be used to create an DeleteCommand object.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    public DeleteCommand(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"        if (isDeleteOps(command)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"            index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: Would you specify the task for me my dear?\");","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a valid delete operation is entered.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * False otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     * @param input User input of the commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     * @return If the input contains a valid delete operations.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    public static boolean isDeleteOps(String... input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"        int length \u003d input.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"        if (length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"            Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"     * Executes the given delete command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if unable to locate/update the storage file.","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"    public String execute(jackie.TaskList taskList, jackie.Ui ui, jackie.Storage storage) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: oopsie!!! The specified task does not exit.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        jackie.task.Task holder \u003d taskList.getTask(index);","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showDelete(holder, taskList.size()));","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"        return ui.showDelete(holder, taskList.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the delete execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the delete execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":81}},{"path":"src/main/java/jackie/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import jackie.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import jackie.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import jackie.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for marking done.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    private int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     * Returns a DoneCommand object with the information provided.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     * @param command A String containing information that can possibility be used to create an DoneCommand object.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    public DoneCommand(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        if (isDoneOps(command)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: Would you specify the task for me my dear?\");","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a valid done operation is entered.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     * False otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     * @param input User input of the commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"     * @return If the input contains a valid done operations.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    public static boolean isDoneOps(String... input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"        int length \u003d input.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"        if (length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"            Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"     * Executes the given done command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if unable to locate/update the storage file.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: oopsie!!! The specified task does not exit.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"        taskList.doneTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showDone(taskList.getTask(index)));","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"        return ui.showDone(taskList.getTask(index));","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the done execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the done execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":84}},{"path":"src/main/java/jackie/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import jackie.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import jackie.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for exiting.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     * Executes the given exiting command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showFarewell());","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"        return ui.showFarewell();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the exit execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the exit execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":40}},{"path":"src/main/java/jackie/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import jackie.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import jackie.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import jackie.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for filtering the list with provided text filter.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    private String searchFilter;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     * Returns a FindCommand object with the information provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     * @param command A String containing information that can possibility be used to create an FindCommand object.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    public FindCommand(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        if (command.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"            throw new jackie.JackieException(\" D: OOPS!!! The description of a search cannot be empty.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"            searchFilter \u003d command[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     * Executes the given finding/filtering command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showFindList(taskList, searchFilter));","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        return ui.showFindList(taskList, searchFilter);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the finding execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the finding execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jackgugz":57}},{"path":"src/main/java/jackie/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import jackie.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import jackie.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import jackie.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command class.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for listing.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    private boolean isOps;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     * Returns a ListCommand object with the information provided.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     * @param command A String containing information that can possibility be used to create an ListCommand object.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    public ListCommand(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        if (isListOps(command)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"            // first element is the time","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"            this.localDate \u003d LocalDate.parse(command[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"            isOps \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            isOps \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a valid listing operation is entered.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * False otherwise.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"     * @param input User input of the commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"     * @return If the input contains a valid listing operations.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    public static boolean isListOps(String... input) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        int length \u003d input.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"        if (length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"            // guard clause","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"            // first element is the time","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"            LocalDate holder \u003d LocalDate.parse(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\" D: SORZ but I only understand date in yyyy-MM-dd format!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"     * Executes the given listing command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"            System.out.println(ui.emptyList());","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"            return ui.emptyList();","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"            if (isOps) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"                System.out.println(ui.showScheduleList(taskList, localDate));","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"                return ui.showScheduleList(taskList, localDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"                System.out.println(ui.showFullList(taskList));","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"                return ui.showFullList(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the listing execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the listing execution.","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":94}},{"path":"src/main/java/jackie/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import jackie.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import jackie.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import jackie.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Command Class.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Command for undoing operation.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     * Returns a UndoCommand object.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     * @param command A String array containing information","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     *                that can possibly be used to create an UndoCommand object.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @throws JackieException Will be thrown if information provided are insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    public UndoCommand(String... command) throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        if (!(command.length \u003d\u003d 1 \u0026\u0026 command[0].trim().equals(\"undo\"))) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\"D: Something wrong with this undo operation\");","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"     * Implements the execute method from Command superclass.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"     * Executes the given undo command accordingly by updating taskList and storage, interacting with ui.","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"     * Returns a String of system reply when given certain input under execution.","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     * @param taskList A jackie.TaskList object that contains an ArrayList of jackie.task.task object to be updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     * @param ui A jackie.Ui object that helps to perform interaction when the command is executed.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"     * @param storage A jackie.Storage object that helps to update the storage after the execution is done.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     * @return a String of system reply when given certain input under execution.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if unable to locate/update the storage file.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws jackie.JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        boolean ifUndone \u003d taskList.ifUndone();","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        System.out.println(ui.showUndo(ifUndone, taskList));","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        return ui.showUndo(ifUndone, taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     * Implements the isExit method from Command superclass.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * Returns a boolean indicating if the programme terminates after the undo execution.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if the programme terminates after the undo execution.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jackgugz":56}},{"path":"src/main/java/jackie/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Task with deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     * Returns a Deadline object using a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     * @param content A String containing information that is possibly enough to create a Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if the information in content is insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    public Deadline(String... content) throws jackie.JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        super(content);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"            // manipulate the array given to get the task time","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"            ArrayList\u003cString\u003e holder \u003d new ArrayList\u003c\u003e(Arrays.asList(content));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            holder.remove(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            holder.trimToSize();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"            int dateMarkIndex \u003d holder.indexOf(\"/\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"            String taskTime \u003d holder.get(dateMarkIndex + 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"            time \u003d taskTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"            this.localDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\" D: SORZ but I only understand date in yyyy-MM-dd format!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\" D: Pls add new deadline tasks in format of deadline task / yyyy-MM-dd!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"     * Returns the time factor of the Task in String form where applicable.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the time factor of the Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"    public \u003cT extends Task\u003e T getCopy() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"        String inputHolder \u003d \"deadline \" + this.getContent() + \" / \" + time;","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"        //noinspection unchecked","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        return (T) new Deadline(inputHolder.split(\" \"));","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the Deadline object in specified format.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"X\" : \" \", getContent(), getTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     * Implements the record abstract method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"     * @return A String of the Deadline object in specified format for starage purpose.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"    public String record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"D | %s | %s | %s\",","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"1\" : \"0\", getContent(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"     * Implements the getType method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the type of Deadline as a Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"    public String getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"        return \"D\";","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"     * Implements the hasSchedule method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if Deadline has a schedule.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"    public boolean hasSchedule() {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":100}},{"path":"src/main/java/jackie/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Task with time of occurrence.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     * Returns a Event object using a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     * @param content A String containing information that is possibly enough to create a Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if the information in content is insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    public Event(String... content) throws jackie.JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        super(content);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"            // manipulate the array given to get the task time","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"            ArrayList\u003cString\u003e holder \u003d new ArrayList\u003c\u003e(Arrays.asList(content));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            holder.remove(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"            holder.trimToSize();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"            int dateMarkIndex \u003d holder.indexOf(\"/\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"            String taskTime \u003d holder.get(dateMarkIndex + 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"            time \u003d taskTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"            this.localDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"            throw new jackie.JackieException(\" D: SORZ but I only understand date in yyyy-MM-dd format!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"            throw new JackieException(\" D: Pls add new event tasks in format of event task / yyyy-MM-dd!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"     * Returns the time factor of the Task in String form where applicable.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the time factor of the Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"    public \u003cT extends Task\u003e T getCopy() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"        String inputHolder \u003d \"event \" + this.getContent() + \" / \" + time;","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"        //noinspection unchecked","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        return (T) new Event(inputHolder.split(\" \"));","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the Event object in specified format.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"X\" : \" \", getContent(), getTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     * Implements the record abstract method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"     * @return A String of the Event object in specified format for starage purpose.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"    public String record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"E | %s | %s | %s\",","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"1\" : \"0\", getContent(), time);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"     * Implements the getType method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the type of Event as a Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"    public String getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"        return \"E\";","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"     * Implements the hasSchedule method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if Event has a schedule.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"    public boolean hasSchedule() {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":100}},{"path":"src/main/java/jackie/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * Abstract class that is extended by Deadline, Event and Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" * It contains methods to obtain/alter information about the Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"    private String content;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    private boolean ifCompleted;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"     * Initialises the Task with the given information.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"     * @param content A String that contains information that can possibly create a Task Object.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    Task(String... content) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        // manipulate the array given to get the task content","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"        ArrayList\u003cString\u003e holder \u003d new ArrayList\u003c\u003e(Arrays.asList(content));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        // remove the first element which is indicative of command type","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"        holder.remove(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"        holder.trimToSize();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        // dateMarkerIndex \u003d -1 if not found","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"        int dateMarkIndex \u003d holder.indexOf(\"/\");","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"        int contentEndIndex \u003d dateMarkIndex \u003d\u003d -1 ? holder.size() : dateMarkIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"        String taskContent \u003d holder.subList(0, contentEndIndex)","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"                .stream().reduce(\"\", (a, b) -\u003e a + \" \" + b).trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"        this.content \u003d taskContent;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"        ifCompleted \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"    public String getContent() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"        return content;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"        return ifCompleted;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"     * Sets the Task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    public void doneTask() {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"        ifCompleted \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the Task object in specified format.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"                ifCompleted ? \"x\" : \" \", content);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"    public abstract String record();","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"    public abstract boolean hasSchedule();","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"    public abstract String getTime();","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"    public abstract \u003cT extends Task\u003e T getCopy() throws JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jackgugz":71}},{"path":"src/main/java/jackie/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * A Class that extends the Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * It is specifically designed for a Task with time of occurrence.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":" * @author Gu Geng","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"     * Returns a Todo object using a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     * @param content A String containing information that is possibly enough to create a Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     * @throws jackie.JackieException Will be thrown if the information in content is insufficient/incorrect.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    public Todo(String... content) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"        super(content);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"     * Overrides the toString method.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"     * @return A String representation of the Todo object in specified format.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[T][%s] %s\",","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"X\" : \" \", getContent());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"     * Implements the record abstract method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"     * @return A String of the Todo object in specified format for starage purpose.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"    public String record() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"T | %s | %s\",","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"                getStatus() ? \"1\" : \"0\", getContent());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"     * Implements the getType method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the type of Todo as a Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"    public String getType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        return \"T\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"     * Returns the time factor of the Task in String form where applicable.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"     * @return A String indicating the time factor of the Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"        return \"null\";","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    public \u003cT extends Task\u003e T getCopy() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"        String inputHolder \u003d \"todo \" + this.getContent();","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        //noinspection unchecked","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        return (T) new Todo(inputHolder.split(\" \"));","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"     * Implements the hasSchedule method from Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"     * @return A boolean indicating if Todo has a schedule.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"    public boolean hasSchedule() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":78}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"42.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-spacing: 10;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: rgba(98, 252, 147,0.7); -fx-max-width: 1000; -fx-min-width: 0; -fx-max-height: 1000; -fx-min-height: 0;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"            \u003cFont name\u003d\"Century Schoolbook Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"40.0\" fitWidth\u003d\"40.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"jackie.MainWindow\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0026quot;/images/background.jpg\u0026quot;);\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jackgugz":19}},{"path":"src/test/java/jackie/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":12}},{"path":"src/test/java/jackie/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":12}},{"path":"src/test/java/jackie/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class UiTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    public void isExit_anyInput_false() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"        assertFalse(new AddCommand(\"todo holder\".split(\" \")).isExit());","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":15}},{"path":"src/test/java/jackie/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class CommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/command/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"import jackie.JackieException;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    public void deadline_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"        assertThrows(JackieException.class, () -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"            new Deadline(\"deadline holder /\".split(\" \"));","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"        });","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"    public void toString_normalInput_normalOutput() throws JackieException {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"        assertEquals(String.format(\"[D][%s] %s (by: %s)\", \" \", \"holder\", \"Mar 28 1998\"),","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"                new Deadline(\"deadline holder / 1998-03-28\".split(\" \")).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":23}},{"path":"src/test/java/jackie/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"src/test/java/jackie/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"package jackie.task;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jackgugz":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"invalid attempt","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"todo a todo jackie.task","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"deadline 1","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"deadline cs2103t ip /thur 2359","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"event 1","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"event sem1 /aug-nov","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"delete 10","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":19}}]
