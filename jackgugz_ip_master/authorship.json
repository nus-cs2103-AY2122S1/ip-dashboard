[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"public class Deadline extends  Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"    Deadline(String content) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"        super(content.substring(9, content.indexOf(\"/\")));","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"        this.time \u003d content.substring(content.indexOf(\"/\") + 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"        return this.time;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"                this.getStatus() ? \"X\" : \" \", this.getContent(), this.time);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":18}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":" * Executes commands from user input for record keeping of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":" * Exits the programme when \"bye\" is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a valid done operation is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"     * False otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"     * @param input User input of the commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"     * @return If the input contains a valid done operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    public static boolean isDoneOps(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"        int length \u003d input.length();","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"        if (length \u003c 6) {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"        if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"                Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"jackgugz"},"content":"                return true;","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jackgugz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jackgugz"},"content":"                return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"jackgugz"},"content":"     * Returns true if a valid delete operation is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"jackgugz"},"content":"     * False otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"jackgugz"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"jackgugz"},"content":"     * @param input User input of the commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"jackgugz"},"content":"     * @return If the input contains a valid done operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"jackgugz"},"content":"    public static boolean isDeleteOps(String input) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"jackgugz"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"jackgugz"},"content":"        int length \u003d input.length();","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jackgugz"},"content":"        if (length \u003c 8) {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jackgugz"},"content":"            return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jackgugz"},"content":"        if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"jackgugz"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"jackgugz"},"content":"                Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"jackgugz"},"content":"                return true;","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jackgugz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"jackgugz"},"content":"                return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jackgugz"},"content":"        return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jackgugz"},"content":"    ","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"jackgugz"},"content":"    public static enum Command {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jackgugz"},"content":"        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"), ","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"jackgugz"},"content":"        DONE(\"done\"), DELETE(\"delete\"), BYE(\"bye\"), LIST(\"list\");","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jackgugz"},"content":"        private String value;","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"jackgugz"},"content":"        private Command(String value) {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"jackgugz"},"content":"            this.value \u003d value;","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jackgugz"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"jackgugz"},"content":"     * Executes the main programme where Duke is activated to receive user input and perform corresponding operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"jackgugz"},"content":"     * Exits when \"bye\" is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"jackgugz"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"jackgugz"},"content":"     * @param args A String array from user input","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"jackgugz"},"content":"     * @throws DukeException Exception that is specific to Duke where invalid input is detected","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"jackgugz"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"jackgugz"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"jackgugz"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"jackgugz"},"content":"        + \"Heyllo! Jackie here\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"jackgugz"},"content":"        + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"jackgugz"},"content":"        + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"jackgugz"},"content":"        // Bye to check if bye is entered by the user and therefore to determine to terminate the programme.","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"jackgugz"},"content":"        boolean bye \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"jackgugz"},"content":"        // Executed to check if there is a valid operation that has been done in a cycle so to determine if to throw.","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"jackgugz"},"content":"        // DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"jackgugz"},"content":"        boolean executed \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"jackgugz"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"jackgugz"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"jackgugz"},"content":"        while (!bye) {","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"jackgugz"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"jackgugz"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"jackgugz"},"content":"                // Receives user input and obtains first word.","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"jackgugz"},"content":"                String temp \u003d myObj.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"jackgugz"},"content":"                String commandHolder \u003d temp.split(\" \", 2)[0];","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"jackgugz"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"jackgugz"},"content":"                for (Command c : Command.values()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"jackgugz"},"content":"                    ","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"jackgugz"},"content":"                    // Goes through the Command Enum to check any matches with valid commands","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"jackgugz"},"content":"                    if (c.value.equals(commandHolder)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"jackgugz"},"content":"                        switch (c) {","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"jackgugz"},"content":"                            case BYE:","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"jackgugz"},"content":"                                System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"jackgugz"},"content":"                                        + \"Bye bye. Love you\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"jackgugz"},"content":"                                        + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"jackgugz"},"content":"                                bye \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"jackgugz"},"content":"                            case LIST:","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"jackgugz"},"content":"                                System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"jackgugz"},"content":"                                        + \"Darling, here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"jackgugz"},"content":"                                for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"jackgugz"},"content":"                                    Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"jackgugz"},"content":"                                    String entry \u003d String.format(\"%d. %s\",","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"jackgugz"},"content":"                                            i+1, task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(entry);","lastModifiedDate":"2021-08-14"},{"lineNumber":121,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"jackgugz"},"content":"                                System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"jackgugz"},"content":"                                executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"jackgugz"},"content":"                            case DONE:","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"jackgugz"},"content":"                                if (isDoneOps(temp)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"jackgugz"},"content":"                                    int index \u003d Integer.parseInt(temp.substring(5));","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"jackgugz"},"content":"                                    if (index \u003e taskList.size())","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"jackgugz"},"content":"                                        throw new DukeException(\"☹ oopsie!!! The specified task does not exit.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"jackgugz"},"content":"                                    taskList.get(index - 1).doneTask();","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"jackgugz"},"content":"                                            + \"Noice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"jackgugz"},"content":"                                            + taskList.get(index - 1).toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"jackgugz"},"content":"                                            + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"jackgugz"},"content":"                                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"jackgugz"},"content":"                                    executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"jackgugz"},"content":"                                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(\"☹ Would you specify the task for me my dear?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"jackgugz"},"content":"                            case DELETE:","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"jackgugz"},"content":"                                if (isDeleteOps(temp)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"jackgugz"},"content":"                                    int index \u003d Integer.parseInt(temp.substring(7));","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"jackgugz"},"content":"                                    if (index \u003e taskList.size())","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"jackgugz"},"content":"                                        throw new DukeException(\"☹ oopsie!!! The specified task does not exit.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"jackgugz"},"content":"                                    String holder \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"jackgugz"},"content":"                                    taskList.remove(index - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"jackgugz"},"content":"                                    taskList.trimToSize();","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"jackgugz"},"content":"                                            + \"okie! I\u0027ve removed this annoying task: \\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"jackgugz"},"content":"                                            + holder","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"jackgugz"},"content":"                                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"jackgugz"},"content":"                                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"jackgugz"},"content":"                                    executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"jackgugz"},"content":"                                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(\"☹ Would you specify the task for me my dear?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"jackgugz"},"content":"                            case TODO:","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"jackgugz"},"content":"                                if (temp.trim().equals(\"todo\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"jackgugz"},"content":"                                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"jackgugz"},"content":"                                    Todo task \u003d new Todo(temp);","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"jackgugz"},"content":"                                    taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"jackgugz"},"content":"                                            + \"Gotcha my dear. I\u0027ve added this task for you: \\n\" + task.toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"jackgugz"},"content":"                                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"jackgugz"},"content":"                                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"jackgugz"},"content":"                                    executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"jackgugz"},"content":"                            case DEADLINE:","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"jackgugz"},"content":"                                if (temp.trim().equals(\"deadline\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"jackgugz"},"content":"                                            \" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"jackgugz"},"content":"                                } else if (temp.split(\"/\", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"jackgugz"},"content":"                                            \" ☹ OH MY DEAR!!! \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"jackgugz"},"content":"                                                    \"Please enter a time after / following the deadline description\");","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"jackgugz"},"content":"                                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"jackgugz"},"content":"                                    Deadline task \u003d new Deadline(temp);","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"jackgugz"},"content":"                                    taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"jackgugz"},"content":"                                            + \"Gotcha my dear. I\u0027ve added this task for you: \\n\" + task.toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"jackgugz"},"content":"                                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"jackgugz"},"content":"                                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"jackgugz"},"content":"                                    executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"jackgugz"},"content":"                            case EVENT:","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"jackgugz"},"content":"                                if (temp.trim().equals(\"event\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"jackgugz"},"content":"                                } else if (temp.split(\"/\", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"jackgugz"},"content":"                                    throw new DukeException(","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"jackgugz"},"content":"                                            \" ☹ OH MY DEAR!!! \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"jackgugz"},"content":"                                                    \"Please enter a date after / following the event description\");","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"jackgugz"},"content":"                                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"jackgugz"},"content":"                                    Event task \u003d new Event(temp);","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"jackgugz"},"content":"                                    taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"jackgugz"},"content":"                                    System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"jackgugz"},"content":"                                            + \"Gotcha my dear. I\u0027ve added this task for you: \\n\" + task.toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"jackgugz"},"content":"                                            + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"jackgugz"},"content":"                                            + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"jackgugz"},"content":"                                    executed \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"jackgugz"},"content":"                                }","lastModifiedDate":"2021-08-15"},{"lineNumber":211,"author":{"gitId":"jackgugz"},"content":"                                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":212,"author":{"gitId":"jackgugz"},"content":"                                ","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"jackgugz"},"content":"                        }","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"jackgugz"},"content":"                    } ","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"jackgugz"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"jackgugz"},"content":"                if (!executed) {","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"jackgugz"},"content":"                    throw new DukeException(\"☹ oopsie!!! I\u0027m sorry my dear but I can\u0027t do that for you\");","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"jackgugz"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"jackgugz"},"content":"                ","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"jackgugz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"jackgugz"},"content":"                System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":222,"author":{"gitId":"jackgugz"},"content":"                        + e.getMessage()","lastModifiedDate":"2021-08-15"},{"lineNumber":223,"author":{"gitId":"jackgugz"},"content":"                        + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":224,"author":{"gitId":"jackgugz"},"content":"                        + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":225,"author":{"gitId":"jackgugz"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":226,"author":{"gitId":"jackgugz"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jackgugz":225,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"    private String time;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"    Event(String content) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"        super(content.substring(6, content.indexOf(\"/\")));","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"        this.time \u003d content.substring(content.indexOf(\"/\") + 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"        return this.time;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"                this.getStatus() ? \"X\" : \" \", this.getContent(), this.time);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"    private String content;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"    private boolean status;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"    Task(String content) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"        this.status \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"    public String getContent() {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"        return this.content;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"        return this.status;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"    public void doneTask() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"        this.status \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jackgugz"},"content":"                this.status ? \"x\" : \" \", this.content);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jackgugz":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"    Todo(String content) {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"        super(content.substring(5));","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"        return String.format(\"[T][%s] %s\",","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"                this.getStatus() ? \"X\" : \" \", this.getContent());","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jackgugz"},"content":"invalid attempt","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jackgugz"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jackgugz"},"content":"todo a todo task","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jackgugz"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jackgugz"},"content":"deadline 1","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jackgugz"},"content":"deadline cs2103t ip /thur 2359","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jackgugz"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jackgugz"},"content":"event 1","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jackgugz"},"content":"event sem1 /aug-nov","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jackgugz"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jackgugz"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jackgugz"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jackgugz"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jackgugz"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"jackgugz"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jackgugz"},"content":"delete 10","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jackgugz"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jackgugz":19}}]
