[{"path":"src/main/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"T | 0 | run","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"T | 0 | book help","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"import command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"     * If fail, start with an empty TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     * @param filePath File path of the Storage txt file.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     * Runs the Duke program.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"    public void run() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"            } finally {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"jiayi1129":57}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import static parser.Parser.COMMAND_TODO;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import static parser.Parser.COMMAND_DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import static parser.Parser.COMMAND_EVENT;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"import task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"import task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"import task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"import task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"        TODO,","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"        EVENT","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"     * Usage Messages.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    public static final String USAGE_TODO \u003d String.format(\"Usage: %s \u003cdescription\u003e\", COMMAND_TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    public static final String USAGE_DEADLINE \u003d String.format(\"Usage: %s \u003cdescription\u003e%s\u003cdate\u003e \u003ctime (optional)\u003e\", COMMAND_DEADLINE, DeadlineTask.DELIMITER);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    public static final String USAGE_EVENT \u003d String.format(\"Usage: %s \u003cdescription\u003e%s\u003cdate\u003e \u003ctime (optional)\u003e\", COMMAND_EVENT, EventTask.DELIMITER);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    private final String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"    private final String delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    private final TaskType taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_SUCCESS \u003d \"Added task:\\n\" +","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"            \"%s\\n\" +","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"            \"Now you have %s task(s) in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    private final Map\u003cTaskType, String\u003e MESSAGE_USAGE_MAP \u003d Map.of(","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"            TaskType.TODO, USAGE_TODO,","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"            TaskType.DEADLINE, USAGE_DEADLINE,","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"            TaskType.EVENT, USAGE_EVENT","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"    );","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"    private final String ERROR_INVALID_FORMAT \u003d \"Invalid Format.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"     * @param command String command input by user.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter String delimiter between the commands in the command string input.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"     * @param taskType TaskType input.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    public AddCommand(String command, String delimiter, TaskType taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"        this.delimiter \u003d delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"        this.MESSAGE_USAGE \u003d MESSAGE_USAGE_MAP.get(taskType);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"        String[] commands \u003d command.split(delimiter, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"        // Creates task","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"        Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"            case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"                task \u003d new TodoTask(commands[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"                task \u003d DeadlineTask.getTaskFromCommandString(commands[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"            case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"                task \u003d EventTask.getTaskFromCommandString(commands[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"                throw new DukeException(DukeException.ERROR_UNEXPECTED);","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d ERROR_INVALID_FORMAT + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"jiayi1129"},"content":"        // Update the task list","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"jiayi1129"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"jiayi1129"},"content":"        // Tries to write to storage first","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"jiayi1129"},"content":"        // If failed, remove task from list, and throw error.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"jiayi1129"},"content":"            storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"jiayi1129"},"content":"            tasks.removeTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d e.getMessage() + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"jiayi1129"},"content":"        ui.print(String.format(MESSAGE_SUCCESS, task.toString(), tasks.length()));","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"jiayi1129"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":117}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"abstract public class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"     * @param tasks TaskList object.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"     * @param ui Ui object.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"     * @param storage Storage object.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException when command fails the execution.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     * Returns boolean indicator as to whether the current Command should exit the program or not.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"     * @return boolean indicating whether to exit the program or not.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    abstract public boolean isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":30}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import helpers.Helpers;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private final String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private final String delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_USAGE \u003d String.format(\"Usage: %s \u003cnumber\u003e\", Parser.COMMAND_DELETE);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_SUCCESS \u003d \"This task has been removed:\\n%s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for Delete Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"     * @param command String command input by user.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter String delimiter between the commands in the command string input.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    public DeleteCommand(String command, String delimiter) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        this.delimiter \u003d delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        String[] commands \u003d command.split(delimiter, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"        // Check if second input is an integer","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        boolean isInteger \u003d Helpers.isInteger(commands[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"        if (!isInteger) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        // Remove the task from the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"        int taskIndex \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"            task \u003d tasks.removeTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d e.getMessage() + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"        // Tries to write to storage first","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"        // If failed, add the task back to the list at the correct index.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"            storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"            tasks.addTask(task, taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d e.getMessage() + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"        ui.print(String.format(MESSAGE_SUCCESS, task.toString()));","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":75}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import helpers.Helpers;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private final String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private final String delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_USAGE \u003d String.format(\"Usage: %s \u003cnumber\u003e\", Parser.COMMAND_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_SUCCESS \u003d \"This task is marked as done:\\n%s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for Done Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"     * @param command String command input by user.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter String delimiter between the commands in the command string input.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    public DoneCommand(String command, String delimiter) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        this.delimiter \u003d delimiter;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        String[] commands \u003d command.split(delimiter, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"        // Check if second input is an integer","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        boolean isInteger \u003d Helpers.isInteger(commands[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"        if (!isInteger) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        // Mark the task in tasks list as done","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"        int taskIndex \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"            task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d e.getMessage() + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"        // Tries to write to storage first","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        // If failed, mark the task as not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"            storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"            task.markAsNotDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"            String errorMessage \u003d e.getMessage() + \"\\n\" + MESSAGE_USAGE;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"        ui.print(String.format(MESSAGE_SUCCESS, task.toString()));","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":76}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"     * Returns true.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"     * Exit the program.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"     * @return true","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":27}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private final String command;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    private final String delimiter;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_USAGE \u003d String.format(\"Usage: %s \u003cnumber\u003e\", Parser.COMMAND_FIND);","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private final String MESSAGE_SUCCESS \u003d \"Here are the matching tasks in your list:\\n%s\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    public FindCommand(String command, String delimiter) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"        this.delimiter \u003d delimiter;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"        String[] commands \u003d command.split(delimiter, 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"        if (commands.length \u003c 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(MESSAGE_USAGE);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"        String matchingTasks \u003d tasks.findTasksContainingString(commands[1]).toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"        ui.print(String.format(MESSAGE_SUCCESS, matchingTasks));","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":41}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    private static final String MESSAGE_LIST \u003d \"Here is the list of your tasks: \";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"        String message \u003d MESSAGE_LIST + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"        ui.print(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":23}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":" * Wrapper Exception to be used in program to catch and display expected errors.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"    public static final String ERROR_UNEXPECTED \u003d \"Error: Something unexpected happened. Please submit a bug report.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":17}},{"path":"src/main/java/helpers/Helpers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package helpers;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"public class Helpers {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"     * Utility function to test whether input string is an integer.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"     * @param input input String.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"     * @return returns true if input string can be parsed as an integer, else false.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"            return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":20}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"     * List of Command Strings.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"     * Error Messages.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    private static final String ERROR_UNKNOWN_COMMAND \u003d \"Unknown Command. See README for full list of commands.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"     * Returns the Command corresponding to the full String command input.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"     * String input examples:","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"     * bye","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     * list","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"     * todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"     * deadline return book /by 2021-10-15","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"     * deadline return book /by 2021-10-15 18:00","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"     * event book fest /at 2021-10-15","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"     * event book fest /at 2021-10-15 18:00","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     * done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"     * @param fullCommand Full String command input by user.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"     * @return Corresponding command from the input.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        // Split the fullCommand String to get the first command in the String.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"        String[] commands \u003d fullCommand.split(DELIMITER, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"        String firstCommand \u003d commands[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"        switch (firstCommand) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new AddCommand(fullCommand, DELIMITER, AddCommand.TaskType.TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new AddCommand(fullCommand, DELIMITER, AddCommand.TaskType.DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new AddCommand(fullCommand, DELIMITER, AddCommand.TaskType.EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new DoneCommand(fullCommand, DELIMITER);","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new DeleteCommand(fullCommand, DELIMITER);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            command \u003d new FindCommand(fullCommand, DELIMITER);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(ERROR_UNKNOWN_COMMAND);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"        return command;","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":89}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_SPLIT \u003d \" \\\\| \";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_TODO \u003d \"T\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_EVENT \u003d \"E\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DONE \u003d \"1\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_NOT_DONE \u003d \"0\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    private static final String ERROR_FAILED_PATH_CREATION \u003d \"Error: Failed to find/create necessary directories and file. Check your filepath and permissions.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"    private static final String ERROR_FAILED_LOAD_CORRUPTED_FILE \u003d \"Error: Failed to load tasks from file. Corrupted file or filepath.\\nWarning: File will be rewritten on next command.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    private static final String ERROR_FAILED_WRITE_CORRUPTED_FILE \u003d \"Error: Failed to write tasks to file. Corrupted file or filepath.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    private final String filepath;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"     * Loads all the task in the indicated filepath with the correct format.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"     * @return the ArrayList of Task objects.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException throws exceptions for when file and folders cannot be created or filepath is corrupted.","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        // Parse the file and get the tasks list","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"            // Start scanning the file, throws FileNotFoundException if file not found.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"            // File exists, scan the text file and create tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"                // Grab the next line of String in the text file.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"                String line \u003d myReader.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"                // While creating task from String, possibly corrupted file.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"                Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"                    task \u003d createTaskFromString(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"                    throw new DukeException(ERROR_FAILED_LOAD_CORRUPTED_FILE);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"                // Add successfully created task to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"            // Close the reader.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"            myReader.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"            // Failed to load file","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            // Check if path exists, else try to create the path.","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"            // If failed to create path, return false.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"            boolean result \u003d checkPathExistsElseCreate();","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"            // If failed to create the necessary directories and file, throw DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"            if (!result) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"                throw new DukeException(ERROR_FAILED_PATH_CREATION);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"     * Writes the ArrayList of tasks into the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"     * @param tasks ArrayList of Task objects.","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException throws exceptions for when file and folders cannot be created or filepath is corrupted.","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jiayi1129"},"content":"    public void writeTasksToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"jiayi1129"},"content":"        // Check if path exists, else try to create the path.","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"jiayi1129"},"content":"        // If failed to create path, return false.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"jiayi1129"},"content":"        boolean result \u003d checkPathExistsElseCreate();","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"jiayi1129"},"content":"        // If failed to create the necessary directories and file, throw DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"jiayi1129"},"content":"        if (!result) {","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(ERROR_FAILED_PATH_CREATION);","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"jiayi1129"},"content":"            FileWriter writer \u003d new FileWriter(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"jiayi1129"},"content":"            String fileString \u003d tasks.getFileString(DELIMITER, IDENTIFIER_DONE, IDENTIFIER_NOT_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"jiayi1129"},"content":"            writer.write(fileString);","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"jiayi1129"},"content":"            writer.flush();","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"jiayi1129"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"jiayi1129"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(ERROR_FAILED_WRITE_CORRUPTED_FILE);","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"jiayi1129"},"content":"     * Checks if path exists, else try to create the path.","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"jiayi1129"},"content":"     * If failed to create path, return false.","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"jiayi1129"},"content":"     * Returns true if successful, else false.","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"jiayi1129"},"content":"     * @return true if all files and folders required for filepath are created, else false.","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"jiayi1129"},"content":"    private boolean checkPathExistsElseCreate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"jiayi1129"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"jiayi1129"},"content":"        // handle the folder does not exist","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"jiayi1129"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"jiayi1129"},"content":"        if (parent \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"jiayi1129"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"jiayi1129"},"content":"        if (!parent.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"jiayi1129"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"jiayi1129"},"content":"                boolean result \u003d parent.mkdirs();","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"jiayi1129"},"content":"                if (!result) {","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"jiayi1129"},"content":"                    return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"jiayi1129"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"jiayi1129"},"content":"                return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"jiayi1129"},"content":"        // handle the file does not exist","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"jiayi1129"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"jiayi1129"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"jiayi1129"},"content":"                boolean result \u003d file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"jiayi1129"},"content":"                if (!result) {","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"jiayi1129"},"content":"                    return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"jiayi1129"},"content":"            } catch (IOException | SecurityException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"jiayi1129"},"content":"                return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"jiayi1129"},"content":"        // Reached the end of function.","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"jiayi1129"},"content":"        // Successfully created the directories and file required or","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"jiayi1129"},"content":"        // directory and file exists from the beginning.","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"jiayi1129"},"content":"        return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"jiayi1129"},"content":"     * Returns a task from a line of String.","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"jiayi1129"},"content":"     * @param taskLine the String for a task in the correct format.","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"jiayi1129"},"content":"     * @return Task object.","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"jiayi1129"},"content":"    private Task createTaskFromString(String taskLine) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"jiayi1129"},"content":"        // Split the line String to get the first task type in the String.","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"jiayi1129"},"content":"        String[] taskSplit \u003d taskLine.split(DELIMITER_SPLIT, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"jiayi1129"},"content":"        // Throws DukeException if task String is corrupted.","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"jiayi1129"},"content":"        if (taskSplit.length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"jiayi1129"},"content":"        String taskType \u003d taskSplit[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"jiayi1129"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"jiayi1129"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"jiayi1129"},"content":"        case IDENTIFIER_TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"jiayi1129"},"content":"            task \u003d TodoTask.getTaskFromStorageString(taskSplit[1], DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"jiayi1129"},"content":"        case IDENTIFIER_DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"jiayi1129"},"content":"            task \u003d DeadlineTask.getTaskFromStorageString(taskSplit[1], DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"jiayi1129"},"content":"        case IDENTIFIER_EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"jiayi1129"},"content":"            task \u003d EventTask.getTaskFromStorageString(taskSplit[1], DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"jiayi1129"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"jiayi1129"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"jiayi1129"},"content":"        return task;","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":202}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":" * The DeadlineTask class encapsulates a task that need to be done before a specific date/time.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private static final LocalTime DEFAULT_TIME \u003d LocalTime.parse(\"00:00\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter FORMATTER_DISPLAY_DATE \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter FORMATTER_DISPLAY_TIME \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter FORMATTER_SAVE_DATE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter FORMATTER_SAVE_TIME \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    public static final String DELIMITER \u003d \" /by \";","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_DATETIME \u003d \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    private DeadlineTask(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    private DeadlineTask(String description, boolean isDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"     * Returns a DeadlineTask from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"     * E.g. If passed in (\"return books /by 2021-10-15 18:00\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"     * this function returns a Deadline Task with description \"return books, and the correct date and time.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     * @param command Format should follow the example.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"     * @return DeadlineTask Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"    public static DeadlineTask getTaskFromCommandString(String command) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"            String[] commandSplit \u003d command.split(DELIMITER, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"            String[] dateTimeSplit \u003d commandSplit[1].split(DELIMITER_DATETIME, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            LocalTime time \u003d dateTimeSplit.length \u003c 2 ? DEFAULT_TIME : LocalTime.parse(dateTimeSplit[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"            return new DeadlineTask(commandSplit[0], date, time);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"     * Returns a DeadlineTask from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"     * E.g. If passed in (\"1 | return books | 2021-10-12 | 13:20\", \" \\\\| \", \"1\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"     * this function returns a done DeadlineTask with description \"return books\", and the correct date and time.","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"     * @param taskString Format should follow \u003cdone\u003e\u003cdelimiter\u003e\u003cdescription\u003e\u003cdelimiter\u003e\u003cdate\u003e\u003cdelimiter\u003e\u003ctime\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter  Delimiter separating the String into its formal parts.","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"     * @param done       Indicator for a done task.","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"     * @return DeadlineTask created from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException if String is of the wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"    public static DeadlineTask getTaskFromStorageString(String taskString, String delimiter, String done) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"            String[] taskSplit \u003d taskString.split(delimiter, 4);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"            boolean isDone \u003d taskSplit[0].equals(done);","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"            LocalDate date \u003d LocalDate.parse(taskSplit[2]);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            LocalTime time \u003d LocalTime.parse(taskSplit[3]);","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"            return new DeadlineTask(taskSplit[1], isDone, date, time);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"        return \"D\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"                + delimiter + date.format(FORMATTER_SAVE_DATE) + delimiter + time.format(FORMATTER_SAVE_TIME);","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(FORMATTER_DISPLAY_DATE) + \" \" + time.format(FORMATTER_DISPLAY_TIME) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":95}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":" * The EventTask class encapsulates a task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private static final LocalTime DEFAULT_TIME \u003d LocalTime.parse(\"00:00\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    public static final String DELIMITER \u003d \" /at \";","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_DATETIME \u003d \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    private EventTask(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    private EventTask(String description, boolean isDone, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"     * Returns a EventTask from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"     * E.g. If passed in (\"return books /at 2021-10-15 18:00\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"     * this function returns a EventTask Task with description \"return books, and the correct date and time.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     * @param command Format should follow the example.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"     * @return EventTask Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"    public static EventTask getTaskFromCommandString(String command) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"            String[] commandSplit \u003d command.split(DELIMITER, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"            String[] dateTimeSplit \u003d commandSplit[1].split(DELIMITER_DATETIME, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            LocalTime time \u003d dateTimeSplit.length \u003c 2 ? DEFAULT_TIME : LocalTime.parse(dateTimeSplit[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"            return new EventTask(commandSplit[0], date, time);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"     * Returns a EventTask from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"     * E.g. If passed in (\"1 | return books | 2021-10-12 | 13:20\", \" \\\\| \", \"1\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"     * this function returns a done EventTask with description \"return books\", and the correct date and time.","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"     * @param taskString Format should follow \u003cdone\u003e\u003cdelimiter\u003e\u003cdescription\u003e\u003cdelimiter\u003e\u003cdate\u003e\u003cdelimiter\u003e\u003ctime\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter  Delimiter separating the String into its formal parts.","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"     * @param done       Indicator for a done task.","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"     * @return EventTask created from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException if String is of the wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"    public static EventTask getTaskFromStorageString(String taskString, String delimiter, String done) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"            String[] taskSplit \u003d taskString.split(delimiter, 4);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"            boolean isDone \u003d taskSplit[0].equals(done);","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"            LocalDate date \u003d LocalDate.parse(taskSplit[2]);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            LocalTime time \u003d LocalTime.parse(taskSplit[3]);","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"            return new EventTask(taskSplit[1], isDone, date, time);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"        return \"E\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"                + delimiter + date.format(SAVE_DATE_FORMATTER) + delimiter + time.format(SAVE_TIME_FORMATTER);","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(dateFormatter) + \" \" + time.format(timeFormatter) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":95}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"    protected String description;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     * Gets the status of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"     * @return \"X\" for done or \" \" for not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"     * Marks the task as not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     * Returns task string to be written into file.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     * Checks if the description contains input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"     * @param string Input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"     * @return true if description contains input String, else false.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"    public boolean checkDescriptionContains(String string) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"        return description.contains(string);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"     * Get task string to be inputted into file.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"     * @return string in the respective task format.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"    abstract public String getTaskFileString(String delimiter, String done, String notDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":65}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    private final String ERROR_OUT_OF_INDEX \u003d \"Error: Task out of list. Use \u0027list\u0027 to check your task index.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for an empty TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"     * @param tasks Input tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"     * Returns the task at the taskIndex.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"     * @param taskIndex taskIndex starts the list from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"     * @return Task at taskIndex in the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException when taskIndex is bigger than length of list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public Task getTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"            return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(ERROR_OUT_OF_INDEX);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     * Adds task at end of the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"     * @param task Input task.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"     * Adds task to the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"     * @param task Input task.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"     * @param taskIndex taskIndex in the task list to add the task to.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"    public void addTask(Task task, int taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        tasks.add(taskIndex - 1, task);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"     * Removes and returns task at input taskIndex.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"     * @param taskIndex taskIndex starts the list from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"     * @return removed Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException when taskIndex is bigger than length of list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"    public Task removeTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"            return tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(ERROR_OUT_OF_INDEX);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"     * Removes input task from the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"     * @param task Input task.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"    public void removeTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"        tasks.remove(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"     * @return number of tasks in the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"    public int length() {","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"jiayi1129"},"content":"     * Returns the String representing the list of tasks to be written into the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter Input delimiter.","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"jiayi1129"},"content":"     * @param done Identifier for done.","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"jiayi1129"},"content":"     * @param notDone Identifier for not done.","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"jiayi1129"},"content":"     * @return String to be written into file.","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"jiayi1129"},"content":"    public String getFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"jiayi1129"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"jiayi1129"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"jiayi1129"},"content":"            String appendedString \u003d task.getTaskFileString(delimiter, done, notDone) + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"jiayi1129"},"content":"            builder.append(appendedString);","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"jiayi1129"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"jiayi1129"},"content":"     * Returns a new TaskList containing tasks with description containing input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"jiayi1129"},"content":"     * @param string Input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"jiayi1129"},"content":"     * @return new TaskList containing all tasks with description containing input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"jiayi1129"},"content":"    public TaskList findTasksContainingString(String string) {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"jiayi1129"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"jiayi1129"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"jiayi1129"},"content":"            if (task.checkDescriptionContains(string)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"jiayi1129"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"jiayi1129"},"content":"            };","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"jiayi1129"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"jiayi1129"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"jiayi1129"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"jiayi1129"},"content":"            builder.append(i + 1).append(\" \").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"jiayi1129"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":136}},{"path":"src/main/java/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":" * The TodoTask class encapsulates a task without any date/time attached to it.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    private TodoTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"     * Returns a TodoTask from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"     * E.g. If passed in (\"1 | read book\", \" \\\\| \", \"1\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"     * this function returns a done TodoTask with description \"read book\".","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"     * @param taskString Format should follow \u003cdone\u003e\u003cdelimiter\u003e\u003cdescription\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"     * @param delimiter  Delimiter separating the String into its formal parts.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"     * @param done       Indicator for a done task.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"     * @return TodoTask created from String.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException if String is of the wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    public static Task getTaskFromStorageString(String taskString, String delimiter, String done) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"            String[] taskSplit \u003d taskString.split(delimiter, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"            boolean isDone \u003d taskSplit[0].equals(done);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"            return new TodoTask(taskSplit[1], isDone);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"        return \"T\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":47}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"    private static final String MESSAGE_INTRO \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"    private static final String MESSAGE_OUTRO \u003d \"Bye. Come back soon!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    public Ui() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(MESSAGE_INTRO);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(MESSAGE_OUTRO);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    public void print(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(\"_____________________________________\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jiayi1129":39}},{"path":"src/test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"D | 0 | return book | 2021-10-15 | 00:00","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"D | 1 | return book | 2021-10-15 | 18:00","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"E | 0 | book fest | 2021-10-15 | 00:00","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":4}},{"path":"src/test/java/helpers/HelpersTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package helpers;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"public class HelpersTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    public void isInteger_validIntegerStrings_trueReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"        String[] validIntegerStrings \u003d { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"100\", \"19101011\" };","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"        for (String validIntegerString : validIntegerStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"            assertTrue(Helpers.isInteger(validIntegerString));","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    public void isInteger_invalidIntegerStrings_falseReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidIntegerStrings \u003d { \"\", \"todo\", \"123@#\", \"Er5\", \"1!\" };","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"        for (String invalidIntegerString : invalidIntegerStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"            assertFalse(Helpers.isInteger(invalidIntegerString));","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":26}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import command.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private static final String STORAGE_FILEPATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    public void parse_validCommands_commandsReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"        String[] validCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"                \"list\",","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"                \"todo read book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"                \"deadline return book /by 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"                \"deadline return book /by 2021-10-15 18:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"                \"event book fest /at 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"                \"event book fest /at 2021-10-15 18:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"                \"list\",","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"                \"done 3\",","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"                \"delete 5\",","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"                \"list\",","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"                \"find book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"                \"bye\"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"        Storage storage \u003d new Storage(STORAGE_FILEPATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"        for (String validCommand : validCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"                Command c \u003d Parser.parse(validCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"    public void parse_invalidCommands_exceptionThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"                \"hello world\",","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"                \"todotodo\",","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"                \"listlist\",","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"                \"deadline return book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"                \"deadline return book /by\",","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"                \"deadline return book /by 2021-18-06\",","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"                \"event book fest /at 2021-18-06\",","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"                \"done2\",","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"                \"find\",","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"                \"delete3\"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"        Storage storage \u003d new Storage(STORAGE_FILEPATH);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"        for (String command : invalidCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(exceptions.DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":71}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    public void load_invalidFilepath_exceptionThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"        final String invalidFilePath \u003d \"data\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"            new Storage(invalidFilePath).load();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"        });","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    public void writeTasksToFile_invalidFilepath_exceptionThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        final String invalidFilePath \u003d \"data\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"            new Storage(invalidFilePath).writeTasksToFile(new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"        });","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":31}},{"path":"src/test/java/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_SPLIT \u003d \" \\\\| \";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DONE \u003d \"1\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_validTaskStrings_taskReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        String[] validTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15 | 00:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"                \"1 | return book | 2021-10-15 | 18:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : validTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"                DeadlineTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_invalidTaskStrings_exceptionsThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"                \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"                \"return book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-18-15 | 25:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15 | 25:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : invalidTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"                DeadlineTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromCommandString_validCommands_taskReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        String[] validCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-10-15 18:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"        for (String command : validCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"                DeadlineTask.getTaskFromCommandString(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromCommandString_invalidCommands_exceptionsThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"                \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"                \"return book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by\",","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-18-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-18-15 18:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-10-15 29:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"                \"return book /by 2021-10-15 21:00:00:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"        for (String command : invalidCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"                DeadlineTask.getTaskFromCommandString(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":78}},{"path":"src/test/java/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"public class EventTaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_SPLIT \u003d \" \\\\| \";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DONE \u003d \"1\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_validTaskStrings_taskReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        String[] validTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15 | 00:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"                \"1 | return book | 2021-10-15 | 18:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : validTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"                EventTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_invalidTaskStrings_exceptionsThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"                \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"                \"return book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-18-15 | 25:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"                \"0 | return book | 2021-10-15 | 25:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : invalidTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"                EventTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromCommandString_validCommands_taskReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        String[] validCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-10-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-10-15 18:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"        for (String command : validCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"                EventTask.getTaskFromCommandString(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromCommandString_invalidCommands_exceptionsThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidCommands \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"                \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"                \"return book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at\",","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-18-15\",","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-18-15 18:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-10-15 29:00\",","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"                \"return book /at 2021-10-15 21:00:00:00\"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"        for (String command : invalidCommands) {","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"                EventTask.getTaskFromCommandString(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":78}},{"path":"src/test/java/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"public class TodoTaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    private static final String DELIMITER_SPLIT \u003d \" \\\\| \";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DONE \u003d \"1\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_validTaskStrings_taskReturned() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"        String[] validTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"            \"1 | read book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"            \"0 | do home work\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : validTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"                TodoTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    public void getTaskFromStorageString_invalidTaskStrings_exceptionsThrown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"        String[] invalidTaskStrings \u003d {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"                \"\",","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"                \"read book\",","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"                \"do |homework\",","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"                \"0 |\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"        };","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        for (String taskString : invalidTaskStrings) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"            assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"                TodoTask.getTaskFromStorageString(taskString, DELIMITER_SPLIT, IDENTIFIER_DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"            });","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiayi1129":42}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"D | 0 | return book | 2019-10-15 | 18:00","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"E | 0 | project meeting | 2019-10-15 | 18:00","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"T | 0 | borrow book","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"deadline return book /by 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"event project meeting /at 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"deadline return book /by 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"event project meeting /at 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"delete 7","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"delete 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"delete 8","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"done 8","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"done2","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"doneZo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"todos","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"done hello","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"deadline do stuff /by","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"event do things /at","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":23}}]
