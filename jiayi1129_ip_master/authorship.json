[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"D|1|return books|2021-10-12 13:20","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"E|1|marathon|2022-07-09 21:00","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"T|1|read book ","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"import utils.exceptions.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"import utils.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"     * Command Keywords.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    private static final String listString \u003d \"list\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    private static final String exitString \u003d \"bye\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private static final String doneString \u003d \"done\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private static final String todoString \u003d \"todo\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    private static final String deadlineString \u003d \"deadline\";","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private static final String eventString \u003d \"event\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    private static final String deadlineDelimiter \u003d \" /by \";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"    private static final String eventDelimiter \u003d \" /at \";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    private static final String deleteString \u003d \"delete\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"     * Templated Messages.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    private static final String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    private static final String introMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"    private static final String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    private static final String addedMessage \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    private static final String tasksListMessage \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    private static final String tasksStatusMessage \u003d \"Now you have %d task%s in the list\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    private static final String deleteMessage \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"     * Error Messages.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    private static final String unrecognizedCommand \u003d \"Oops! I\u0027m sorry but I don\u0027t know what that means.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"    private static final String taskOutOfList \u003d \"Oops! You do not have such a task!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    private static final String invalidFormatError \u003d \"Oops! The %s of a %s cannot be empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"     * Declare enums.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"    enum TaskType { TODO, DEADLINE, EVENT }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"    enum Field { DESCRIPTION, DATETIME }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"     * Declares mappings from enum types to their respective string representatives.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"    private static final Map\u003cTaskType, String\u003e taskTypeStringMap \u003d Map.of(","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            TaskType.TODO, \"todo\",","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            TaskType.DEADLINE, \"deadline\",","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"            TaskType.EVENT, \"event\"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"    );","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"    private static final Map\u003cField, String\u003e fieldStringMap \u003d Map.of(","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"            Field.DESCRIPTION, \"description\",","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"            Field.DATETIME, \"date\"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"    );","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"     * Declares the ArrayList to hold the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"    private static Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"        // Loads the existing data from Storage, else start with an empty tasks list","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"            System.out.println(DukeException.NOT_LOADED_WARNING);","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"        // Introduces the program.","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"        System.out.println(formatMessage(introMessage));","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"        // Creates a new Scanner object.","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"        // Continuously grabbing the user input and reacting to it.","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"        // Loop only ends when userInput is the exitString.","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"            // Grabs the user input.","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"            // Checks if userInput is equal to the exitString,","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"            // if so then print the exitMessage and exit the program, else react accordingly.","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"            if (userInput.equals(exitString)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"jiayi1129"},"content":"                System.out.println(formatMessage(exitMessage));","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"jiayi1129"},"content":"            // Reacts to userInput.","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"jiayi1129"},"content":"            System.out.println(formatMessage(react(userInput)));","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"jiayi1129"},"content":"     * Takes in the user input and reacts accordingly to specification.","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"jiayi1129"},"content":"     * @param userInput the user input string.","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"jiayi1129"},"content":"     * @return string of reaction.","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"jiayi1129"},"content":"    private static String react(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"jiayi1129"},"content":"        // Checks if input is \"\u003clistString\u003e\"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"jiayi1129"},"content":"        if (userInput.equals(listString)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"jiayi1129"},"content":"            return getTaskListString();","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"jiayi1129"},"content":"        // Splits the userInput by a space.","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"jiayi1129"},"content":"        String[] split \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"jiayi1129"},"content":"        // Checks if the format of the userInput is of \"\u003cdoneString\u003e \u003cint\u003e\".","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"jiayi1129"},"content":"        if (split.length \u003d\u003d 2 \u0026\u0026 split[0].equals(doneString) \u0026\u0026 isInteger(split[1])) {","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"jiayi1129"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"jiayi1129"},"content":"            if (index \u003c tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"jiayi1129"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"jiayi1129"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"jiayi1129"},"content":"                    Duke.storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"jiayi1129"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"jiayi1129"},"content":"                return formatTaskMessage(doneMessage, task);","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"jiayi1129"},"content":"            // Error: task out of list.","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"jiayi1129"},"content":"            return taskOutOfList;","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"jiayi1129"},"content":"        // Checks if the format of the userInput is of \"\u003cdeleteString\u003e \u003cint\u003e\".","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"jiayi1129"},"content":"        if (split.length \u003d\u003d 2 \u0026\u0026 split[0].equals(deleteString) \u0026\u0026 isInteger(split[1])) {","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"jiayi1129"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"jiayi1129"},"content":"            if (index \u003c tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"jiayi1129"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"jiayi1129"},"content":"                tasks.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"jiayi1129"},"content":"                    Duke.storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"jiayi1129"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"jiayi1129"},"content":"                return formatTaskMessage(deleteMessage, task);","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"jiayi1129"},"content":"            // Error: task out of list.","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"jiayi1129"},"content":"            return taskOutOfList;","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"jiayi1129"},"content":"        // Ensure format of string \"\u003ccommand\u003e \u003cstring\u003e\"","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"jiayi1129"},"content":"        // React according to user inputs.","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"jiayi1129"},"content":"        switch (split[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"jiayi1129"},"content":"            case (todoString):","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"jiayi1129"},"content":"                if (split.length \u003d\u003d 1 || split[1].equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"jiayi1129"},"content":"                    // Error: Todo no description.","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"jiayi1129"},"content":"                    return formatTaskErrorMessage(TaskType.TODO, Field.DESCRIPTION);","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"jiayi1129"},"content":"                Todo todo \u003d new Todo(split[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"jiayi1129"},"content":"                tasks.add(todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"jiayi1129"},"content":"                    Duke.storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"jiayi1129"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"jiayi1129"},"content":"                return formatTaskMessage(addedMessage, todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"jiayi1129"},"content":"            case (deadlineString):","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"jiayi1129"},"content":"                if (split.length \u003d\u003d 1 || split[1].equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"jiayi1129"},"content":"                    // Error: Deadline no description.","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"jiayi1129"},"content":"                    return formatTaskErrorMessage(TaskType.DEADLINE, Field.DESCRIPTION);","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"jiayi1129"},"content":"                String[] deadlineSplit \u003d split[1].split(deadlineDelimiter, 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"jiayi1129"},"content":"                if (deadlineSplit.length \u003d\u003d 1 || deadlineSplit[1].equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"jiayi1129"},"content":"                    // Error: Deadline no datetime.","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"jiayi1129"},"content":"                    return formatTaskErrorMessage(TaskType.DEADLINE, Field.DATETIME);","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"jiayi1129"},"content":"                Deadline deadline \u003d new Deadline(deadlineSplit[0], deadlineSplit[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"jiayi1129"},"content":"                tasks.add(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"jiayi1129"},"content":"                    Duke.storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"jiayi1129"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"jiayi1129"},"content":"                return formatTaskMessage(addedMessage, deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"jiayi1129"},"content":"            case (eventString):","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"jiayi1129"},"content":"                if (split.length \u003d\u003d 1 || split[1].equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"jiayi1129"},"content":"                    // Error: Event no description.","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"jiayi1129"},"content":"                    return formatTaskErrorMessage(TaskType.EVENT, Field.DESCRIPTION);","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"jiayi1129"},"content":"                String[] eventSplit \u003d split[1].split(eventDelimiter, 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"jiayi1129"},"content":"                if (eventSplit.length \u003d\u003d 1 || eventSplit[1].equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"jiayi1129"},"content":"                    // Error: Event no datetime.","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"jiayi1129"},"content":"                    return formatTaskErrorMessage(TaskType.EVENT, Field.DATETIME);","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"jiayi1129"},"content":"                Event event \u003d new Event(eventSplit[0], eventSplit[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"jiayi1129"},"content":"                tasks.add(event);","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"jiayi1129"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"jiayi1129"},"content":"                    Duke.storage.writeTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"jiayi1129"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"jiayi1129"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":204,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":205,"author":{"gitId":"jiayi1129"},"content":"                return formatTaskMessage(addedMessage, event);","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"jiayi1129"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"jiayi1129"},"content":"                // Error: Unrecognized command.","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"jiayi1129"},"content":"                return unrecognizedCommand;","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"jiayi1129"},"content":"     * Utility function to format the error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"jiayi1129"},"content":"     * @param taskType the input task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"jiayi1129"},"content":"     * @param field the input field type.","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"jiayi1129"},"content":"     * @return the formatted error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"jiayi1129"},"content":"    private static String formatTaskErrorMessage(TaskType taskType, Field field) {","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"jiayi1129"},"content":"        String message \u003d String.format(invalidFormatError, fieldStringMap.get(field), taskTypeStringMap.get(taskType));","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"jiayi1129"},"content":"        return message + \"\\n\" + formatUsageMessage(taskType);","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"jiayi1129"},"content":"     * Utility function to format the usage message based on task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"jiayi1129"},"content":"     * @param taskType the input task type.","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"jiayi1129"},"content":"     * @return string representing the usage: \"Usage: \u003cmessage\u003e\"","lastModifiedDate":"2021-08-18"},{"lineNumber":227,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"jiayi1129"},"content":"    private static String formatUsageMessage(TaskType taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"jiayi1129"},"content":"        String usage \u003d \"Usage: \";","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"jiayi1129"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"jiayi1129"},"content":"            case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"jiayi1129"},"content":"                usage +\u003d String.format(\"%s \u003ctask\u003e\", todoString);","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"jiayi1129"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"jiayi1129"},"content":"                usage +\u003d String.format(\"%s \u003ctask\u003e%s\u003cdate\u003e \u003ctime (optional)\u003e\", deadlineString, deadlineDelimiter);","lastModifiedDate":"2021-08-27"},{"lineNumber":236,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"jiayi1129"},"content":"            case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"jiayi1129"},"content":"                usage +\u003d String.format(\"%s \u003ctask\u003e%s\u003cdate\u003e \u003ctime (optional)\u003e\", eventString, eventDelimiter);","lastModifiedDate":"2021-08-27"},{"lineNumber":239,"author":{"gitId":"jiayi1129"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"jiayi1129"},"content":"        return usage;","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"jiayi1129"},"content":"     * Utility function to format the add task message.","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"jiayi1129"},"content":"     * @param message message attached before task.","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"jiayi1129"},"content":"     * @param task input task.","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"jiayi1129"},"content":"     * @return the formatted add task message.","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":250,"author":{"gitId":"jiayi1129"},"content":"    private static String formatTaskMessage(String message, Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"jiayi1129"},"content":"        return message + task.toString() + \"\\n\" + String.format(tasksStatusMessage, tasks.size(), tasks.size() \u003e 1 ? \"s\" : \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":252,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":254,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":255,"author":{"gitId":"jiayi1129"},"content":"     * Utility function to test whether input string is an integer.","lastModifiedDate":"2021-08-18"},{"lineNumber":256,"author":{"gitId":"jiayi1129"},"content":"     * @param input input String.","lastModifiedDate":"2021-08-18"},{"lineNumber":257,"author":{"gitId":"jiayi1129"},"content":"     * @return returns true if input string can be parsed as an integer, else false.","lastModifiedDate":"2021-08-18"},{"lineNumber":258,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":259,"author":{"gitId":"jiayi1129"},"content":"    private static Boolean isInteger(String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":260,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"jiayi1129"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"jiayi1129"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":263,"author":{"gitId":"jiayi1129"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":264,"author":{"gitId":"jiayi1129"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":265,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":266,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":267,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":268,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":269,"author":{"gitId":"jiayi1129"},"content":"     * Method to get the string of the tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":270,"author":{"gitId":"jiayi1129"},"content":"     * @return string with the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":271,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":272,"author":{"gitId":"jiayi1129"},"content":"    private static String getTaskListString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":273,"author":{"gitId":"jiayi1129"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-08-17"},{"lineNumber":274,"author":{"gitId":"jiayi1129"},"content":"        output.append(tasksListMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":275,"author":{"gitId":"jiayi1129"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":276,"author":{"gitId":"jiayi1129"},"content":"            output.append(i+1).append(\". \").append(tasks.get(i).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":277,"author":{"gitId":"jiayi1129"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":278,"author":{"gitId":"jiayi1129"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":279,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":280,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":281,"author":{"gitId":"jiayi1129"},"content":"        return output.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":282,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":283,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":284,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":285,"author":{"gitId":"jiayi1129"},"content":"     * Formats string before printing.","lastModifiedDate":"2021-08-17"},{"lineNumber":286,"author":{"gitId":"jiayi1129"},"content":"     * @param message string to be printed.","lastModifiedDate":"2021-08-17"},{"lineNumber":287,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":288,"author":{"gitId":"jiayi1129"},"content":"    private static String formatMessage(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":289,"author":{"gitId":"jiayi1129"},"content":"        return  \"_____________________________________\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":290,"author":{"gitId":"jiayi1129"},"content":"                message +                            \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":291,"author":{"gitId":"jiayi1129"},"content":"                \"_____________________________________\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"jiayi1129":289}},{"path":"src/main/java/utils/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"    public static final String NOT_LOADED_WARNING \u003d \"Warning: Failed to load from hard disk.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":10}},{"path":"src/main/java/utils/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"import utils.exceptions.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"import utils.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"    private static final String delimiter \u003d \"|\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private static final int delimiterLimit \u003d 4;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_TODO \u003d \"T\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"    private static final String IDENTIFIER_EVENT \u003d \"E\";","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"    private static final String DONE \u003d \"1\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"    private static final String NOT_DONE \u003d \"0\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    private static final String noPermissionsException \u003d \"User does not have permissions to create directories/file.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    private static final String failedSaveException \u003d \"Error: Failed to write tasks to file.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    private final String filepath;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"     * Loads all the task in the indicated filepath with the correct format.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"     * @return the ArrayList of Task objects.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException throws exceptions for when file and folders cannot be created or filepath is corrupted.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"        // Creates the file and folders for filepath, else throw DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"        createsFileAndFoldersForPath();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"        // Parse the file and get the tasks list","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jiayi1129"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"jiayi1129"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"jiayi1129"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"jiayi1129"},"content":"                String line \u003d myReader.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jiayi1129"},"content":"                Task task \u003d createTaskFromString(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jiayi1129"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jiayi1129"},"content":"            myReader.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"jiayi1129"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jiayi1129"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"jiayi1129"},"content":"     * Writes the ArrayList of tasks into the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"jiayi1129"},"content":"     * @param tasks ArrayList of Task objects.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException throws exceptions for when file and folders cannot be created or filepath is corrupted.","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"jiayi1129"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"jiayi1129"},"content":"        // Creates the file and folders for filepath, else throw DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jiayi1129"},"content":"        createsFileAndFoldersForPath();","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jiayi1129"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jiayi1129"},"content":"            FileWriter writer \u003d new FileWriter(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"jiayi1129"},"content":"            StringBuilder fileString \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"jiayi1129"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jiayi1129"},"content":"                String appendedString \u003d task.getTaskFileString(delimiter, DONE, NOT_DONE) + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"jiayi1129"},"content":"                fileString.append(appendedString);","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jiayi1129"},"content":"            writer.write(fileString.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jiayi1129"},"content":"            writer.flush();","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jiayi1129"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jiayi1129"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"jiayi1129"},"content":"            throw new DukeException(failedSaveException);","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"jiayi1129"},"content":"     * Creates the files and folders required.","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"jiayi1129"},"content":"     * @throws DukeException throws exceptions for when file and folders cannot be created or filepath is corrupted.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jiayi1129"},"content":"    private void createsFileAndFoldersForPath() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"jiayi1129"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"jiayi1129"},"content":"        // handle the folder does not exist","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"jiayi1129"},"content":"        File parent \u003d file.getParentFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"jiayi1129"},"content":"        if (!parent.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jiayi1129"},"content":"            boolean result \u003d parent.mkdirs();","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jiayi1129"},"content":"            if (!result) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jiayi1129"},"content":"                throw new DukeException(noPermissionsException);","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"jiayi1129"},"content":"        // handle the file does not exist","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"jiayi1129"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"jiayi1129"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"jiayi1129"},"content":"                boolean result \u003d file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"jiayi1129"},"content":"                if (!result) {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"jiayi1129"},"content":"                    throw new DukeException(noPermissionsException);","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"jiayi1129"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"jiayi1129"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"jiayi1129"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"jiayi1129"},"content":"     * Returns a task from a line of String.","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"jiayi1129"},"content":"     * @param line the String for a task in the correct format","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"jiayi1129"},"content":"     * @return Task object","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"jiayi1129"},"content":"    private Task createTaskFromString(String line) {","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"jiayi1129"},"content":"        String[] split \u003d line.split(\"\\\\\" + delimiter, delimiterLimit);","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"jiayi1129"},"content":"        String taskType \u003d split[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"jiayi1129"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"jiayi1129"},"content":"            case (IDENTIFIER_TODO):","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"jiayi1129"},"content":"                Task todo \u003d new Todo(split[2]);","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"jiayi1129"},"content":"                if (split[1].equals(DONE)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"jiayi1129"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"jiayi1129"},"content":"                return todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"jiayi1129"},"content":"            case (IDENTIFIER_DEADLINE):","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"jiayi1129"},"content":"                Deadline deadline \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"jiayi1129"},"content":"                if (split[1].equals(DONE)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"jiayi1129"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"jiayi1129"},"content":"                return deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"jiayi1129"},"content":"            case (IDENTIFIER_EVENT):","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"jiayi1129"},"content":"                Event event \u003d new Event(split[2], split[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"jiayi1129"},"content":"                if (split[1].equals(DONE)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"jiayi1129"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"jiayi1129"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"jiayi1129"},"content":"                return event;","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"jiayi1129"},"content":"        return null;","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":145}},{"path":"src/main/java/utils/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":" * The Deadline class encapsulates a task that need to be done before a specific date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private LocalTime time \u003d LocalTime.parse(\"00:00\");","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"        String[] datetime \u003d by.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"        date \u003d LocalDate.parse(datetime[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        if (datetime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"            time \u003d LocalTime.parse(datetime[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        return \"D\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description + delimiter + date.format(SAVE_DATE_FORMATTER) + \" \" + time.format(SAVE_TIME_FORMATTER);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(dateFormatter) + \" \" + time.format(timeFormatter) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":38}},{"path":"src/main/java/utils/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":" * The Deadline class encapsulates a task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    private static final DateTimeFormatter SAVE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    private LocalTime time \u003d LocalTime.parse(\"00:00\");","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"        String[] datetime \u003d at.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"        date \u003d LocalDate.parse(datetime[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"        if (datetime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"            time \u003d LocalTime.parse(datetime[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"        return \"E\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description + delimiter + date.format(SAVE_DATE_FORMATTER) + \" \" + time.format(SAVE_TIME_FORMATTER);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(dateFormatter) + \" \" + time.format(timeFormatter) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":38}},{"path":"src/main/java/utils/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"    protected String description;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"     * Constructor to create a new components.Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"     * By default created tasks are not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"     * @param description","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"     * Gets the status of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"     * @return \"X\" for done or \" \" for not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jiayi1129"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jiayi1129"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jiayi1129"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jiayi1129"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"jiayi1129"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jiayi1129"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jiayi1129"},"content":"     * Get task string to be inputted into file.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jiayi1129"},"content":"     * @return string in the format \u003ctask\u003e\u003cdelimiter\u003e\u003cdone\u003e\u003cdelimiter\u003e\u003cdatetime\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jiayi1129"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jiayi1129"},"content":"    abstract public String getTaskFileString(String delimiter, String done, String notDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"jiayi1129"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":45}},{"path":"src/main/java/utils/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"package utils.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":" * The Deadline class encapsulates a task without any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"    public String getTaskFileString(String delimiter, String done, String notDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"        return \"T\" + delimiter + (this.isDone ? done : notDone) + delimiter + this.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":21}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"T|1|read book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"D|0|return book|2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"E|0|project meeting|2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"T|1|join sports club","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"T|0|borrow book","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jiayi1129":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiayi1129"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jiayi1129"},"content":"deadline return book /by 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jiayi1129"},"content":"event project meeting /at 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jiayi1129"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jiayi1129"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jiayi1129"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jiayi1129"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jiayi1129"},"content":"deadline return book /by 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jiayi1129"},"content":"event project meeting /at 2019-10-15 18:00","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jiayi1129"},"content":"delete 7","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jiayi1129"},"content":"delete 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jiayi1129"},"content":"delete 8","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jiayi1129"},"content":"done 8","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jiayi1129"},"content":"done2","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jiayi1129"},"content":"doneZo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jiayi1129"},"content":"todos","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jiayi1129"},"content":"done hello","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jiayi1129"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jiayi1129"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jiayi1129"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jiayi1129"},"content":"deadline do stuff /by","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jiayi1129"},"content":"event do things /at","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jiayi1129"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jiayi1129":23}}]
