[{"path":"src/main/java/duke/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to add deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param deadline \u003ccode\u003eDeadline\u003c/code\u003e object","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public AddDeadlineCommand(Deadline deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        tasks.addTask(this.deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        ui.showAddedMessage(this.deadline, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":30}},{"path":"src/main/java/duke/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to add an event","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private final Event event;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eAddEventCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param event \u003ccode\u003eEvent\u003c/code\u003e object","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eAddEventCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        tasks.addTask(this.event);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        ui.showAddedMessage(this.event, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":30}},{"path":"src/main/java/duke/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to add a todo","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private final Todo todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eAddTodoCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param todo","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public AddTodoCommand(Todo todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eAddTodoCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        tasks.addTask(this.todo);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        ui.showAddedMessage(this.todo, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":30}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents a command to exit","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eByeCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Returns true if instanceof \u003ccode\u003eByeCommmand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @return true","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":27}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents a command. \u003ccode\u003eCommand\u003c/code\u003e is abstract and contains an \u003ccode\u003eexecute\u003c/code\u003e and \u003ccode\u003eisBye\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" * method","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"     * Executes the corresponding \u003ccode\u003eCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"     * Returns true if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e false otherwise","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"     * @return boolean if \u003ccode\u003eCommand\u003c/code\u003e is \u003ccode\u003eByeCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":23}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":" * Represents a \u003ccode\u003eDeadline\u003c/code\u003e type of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"     * @param deadline Date to do this task by","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    Deadline(String body, LocalDate deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        super(body, false);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"     * @param done Status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     * @param deadline Date to do task by","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    Deadline(String body, boolean done, LocalDate deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        super(body, done);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * Returns deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     * @return Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"     * Returns \u003ccode\u003eDeadline\u003c/code\u003e with done set to true","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"     * @return Done \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    Task setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"        return new Deadline(this.getBody(), true, this.deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"            return \"[D] [X]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"                    + this.getBody()","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"                    + \" (by: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"                    + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"                    + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"            return \"[D] [ ]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"                    + this.getBody()","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"                    + \" (by: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"                    + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"                    + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"itsyme":67}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to delete a task","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private final int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDeleteCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param index Index to be deleted","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eDeleteCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        if (this.index \u003e savedTasks.size() || this.index \u003c 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"            DukeException exception \u003d new DukeException(\"Number out of range!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"            System.out.println(exception);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"            Task removedTask \u003d savedTasks.get(this.index-1);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"            tasks.deleteTask(this.index-1);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"Alright! I\u0027ve removed this task:\\n\" + removedTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"            System.out.println(String.format(\"Now you have %d tasks left in the list!\", savedTasks.size()));","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":38}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to mark task as done","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private final int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDoneCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param index Index to be marked as done","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eDoneCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        if (this.index \u003e savedTasks.size() || this.index \u003c 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"            DukeException exception \u003d new DukeException(\"Number out of range!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"            System.out.println(exception);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"            Task oldTask \u003d savedTasks.get(this.index-1);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"            Task newTask \u003d oldTask.setDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"            tasks.replaceTask(this.index-1, newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents the main driver of \u003ccode\u003eDuke\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     * @param filePath File path to file storing tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"            this.tasks \u003d new TaskList(this.storage.loadSave());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"            this.ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     * Runs \u003ccode\u003eDuke\u003c/code\u003e program","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"                String fullCommand \u003d this.ui.getNextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"                this.storage.updateFile(this.tasks.getTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"                isExit \u003d command.isBye();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"                ui.showError(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"itsyme":45,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents an exception from Duke","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eDukeException\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"     * @param errorMessage Error message","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        return \"OOPS!! \" + this.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"itsyme":20}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" * Represents a \u003ccode\u003eEvent\u003c/code\u003e type of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     * @param date Date of task","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    Event(String body, LocalDate date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        super(body, false);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"     * @param done Status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"     * @param date Date of task","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"    Event(String body, boolean done, LocalDate date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        super(body, done);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"     * Returns date of \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * @return Date","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        return this.date;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"     * Returns \u003ccode\u003eEvent\u003c/code\u003e with done set to true","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"     * @return Done \u003ccode\u003eEvent\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    Task setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"        return new Event(this.getBody(), true, this.date);","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"            return \"[E] [X]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"                    + this.getBody()","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"                    + \" (at: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"                    + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"            return \"[E] [ ]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"                    + this.getBody()","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"                    + \" (at: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"                    + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"itsyme":66}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"    private final String sequence;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    public FindCommand(String sequence) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"        this.sequence \u003d sequence;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"        for (Task i : savedTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"            if (i.getBody().contains(this.sequence)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"                System.out.println(counter + \". \" + i);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"                counter++;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"itsyme":24}},{"path":"src/main/java/duke/GetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" * Represents a command to get all tasks on a specified date","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"public class GetCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eGetCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     * @param date","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    public GetCommand(LocalDate date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eGetCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        for (Task i : savedTasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"            if (i instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"                if (((Event) i).getDate().equals(this.date)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"                    System.out.println(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"                    counter++;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"            if (i instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"                if (((Deadline) i).getDeadline().equals(this.date)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"                    System.out.println(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"                    counter++;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"No tasks found!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":48}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents a command to list all tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     * Executes \u003ccode\u003eListCommand\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e containing saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e responsible for user interactions","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     * @param storage \u003ccode\u003eStorage\u003c/code\u003e responsible for saving tasks to drive","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d tasks.getTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        if (savedTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"No tasks in your list! Add one using todo, deadline or event!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        else {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"            for (int i \u003d 0; i \u003c savedTasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"                Task currTask \u003d savedTasks.get(i);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"                System.out.println(index + \". \" + currTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents \u003ccode\u003eParser\u003c/code\u003e object to parse user input","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"     * Returns corresponding \u003ccode\u003eCommand\u003c/code\u003e based on input supplied","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     * @param input User input","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * @return \u003ccode\u003eCommand\u003c/code\u003e object","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public static Command parse(String input) throws DukeException{","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"        String body \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        String date \u003d inputArr[inputArr.length-1];","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        boolean hasDate \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"            if (inputArr[i].equals(\"/by\") || inputArr[i].equals(\"/at\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"                hasDate \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"            else {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"                body +\u003d \" \" + inputArr[i];","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        String lowerCaseInput \u003d inputArr[0].toLowerCase();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        if (lowerCaseInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"            int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"            if (body.equals(\"\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Description of todo cannot be empty :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"            Todo todo \u003d new Todo(body);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"            return new AddTodoCommand(todo);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Deadline of deadline cannot be empty :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"            } else if (date.length() !\u003d 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Please enter a valid date (yyyy-mm-dd) :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"                String[] dateArr \u003d date.split(\"-\");","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"                int year \u003d Integer.parseInt(dateArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"                int month \u003d Integer.parseInt(dateArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"                int day \u003d Integer.parseInt(dateArr[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"                if (month \u003e 12 || day \u003e 31) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"                    DukeException exception \u003d new DukeException(\"Please enter a valid date (yyyy-mm-dd) :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"                    throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"                LocalDate newDate \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"                Deadline deadline \u003d new Deadline(body, newDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"                return new AddDeadlineCommand(deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"            if (!hasDate) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Date of event cannot be empty :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"            } else if (date.length() !\u003d 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Please enter a valid date (yyyy-mm-dd) :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"                String[] dateArr \u003d date.split(\"-\");","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"                int year \u003d Integer.parseInt(dateArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"                int month \u003d Integer.parseInt(dateArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"                int day \u003d Integer.parseInt(dateArr[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"                if (month \u003e 12 || day \u003e 31) {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"                    DukeException exception \u003d new DukeException(\"Please enter a valid date (yyyy-mm-dd) :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"                    throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"                LocalDate newDate \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"                Event event \u003d new Event(body, newDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"                return new AddEventCommand(event);","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"            int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"get\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"            String[] dateArr \u003d inputArr[1].split(\"-\");","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"            int year \u003d Integer.parseInt(dateArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"            int month \u003d Integer.parseInt(dateArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"            int day \u003d Integer.parseInt(dateArr[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"            if (month \u003e 12 || day \u003e 31) {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"                DukeException exception \u003d new DukeException(\"Please enter a valid date (yyyy-mm-dd) :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"                throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"            LocalDate newDate \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"            return new GetCommand(newDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"        } else if (lowerCaseInput.equals(\"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"            String matchString \u003d inputArr[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"            return new FindCommand(matchString);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"            DukeException exception \u003d new DukeException(\"I\u0027m sorry but I don\u0027t understand what that means :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"            throw exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":106}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":" * Represents a means to load and save files","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"     * Constructs \u003ccode\u003eStorage\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * @param filePath Path to file","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     * Loads a save file","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     * @return List of saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    public List\u003cTask\u003e loadSave() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        String[] filepathArr \u003d this.filePath.split(\"/\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"        File directory \u003d new File(filepathArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        File saveFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"            if (saveFile.createNewFile()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"                System.out.println(\"Save file created!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"                System.out.println(\"Save file found!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"            System.out.println(\"Error loading save file :(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"            Scanner sc2 \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"            while (sc2.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"                String nextLine \u003d sc2.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"                String[] splitLine \u003d nextLine.split(\"[|]\");","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"                if (splitLine.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"                    if (splitLine[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"                        savedTasks.add(new Todo(splitLine[2], false));","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"                    else {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"                        savedTasks.add(new Todo(splitLine[2], true));","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"                else if (splitLine.length \u003d\u003d 4){","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"                    String[] dateParameters \u003d splitLine[3].split(\"-\");","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"                    int day \u003d Integer.parseInt(dateParameters[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"                    int month \u003d Integer.parseInt(dateParameters[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"                    int year \u003d Integer.parseInt(dateParameters[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"                    LocalDate localDate \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"                    if (splitLine[0].equals(\"D\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"itsyme"},"content":"                        if (splitLine[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"itsyme"},"content":"                            savedTasks.add(new Deadline(splitLine[2],","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"                                    false,","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"                                    localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"                        }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"                        else {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"                            savedTasks.add(new Deadline(splitLine[2],","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"                                    true,","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"                                    localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"                        }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"                    else {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"                        if (splitLine[1].equals(\"0\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"                            savedTasks.add(new Event(splitLine[2],","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"                                    false,","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"                                    localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"                        }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"                        else {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"                            savedTasks.add(new Event(splitLine[2],","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"                                    true,","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"                                    localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"                        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"            sc2.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"        return savedTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"     * Updates save file","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"     * @param updatedTasks New list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"    public void updateFile(List\u003cTask\u003e updatedTasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"        for (Task i : updatedTasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"            String taskBody \u003d i.getBody();","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"            boolean isDone \u003d i.isDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"            if (i instanceof Todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"                if (!isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"T|0|\" + taskBody + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"T|1|\" + taskBody + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"itsyme"},"content":"            } else if (i instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"itsyme"},"content":"                LocalDate taskDeadline \u003d ((Deadline) i).getDeadline();","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"                if (!isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"D|0|\" + taskBody + \"|\" + taskDeadline + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"D|1|\" + taskBody + \"|\" + taskDeadline + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"                LocalDate taskDate \u003d ((Event) i).getDate();","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"                if (!isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"E|0|\" + taskBody + \"|\" + taskDate + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"                    fw.write(\"E|1|\" + taskBody + \"|\" + taskDate + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"        fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":135}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents a task","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"    private final String body;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     * Constructor of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    Task(String body){","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"        this.body \u003d body;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Constructor of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     * @param done Status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    Task(String body, boolean done) {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"        this.body \u003d body;","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"     * Returns body message","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"     * @return Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"    String getBody() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        return this.body;","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"     * Returns status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"     * @return Status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"    boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"     * Returns \u003ccode\u003eTask\u003c/code\u003e with status set to done","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"     * @return Done \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"    Task setDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"        return new Task(this.body, true);","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"            return \" [X] \" + this.body;","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"            return \" [ ] \" + this.body;","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"itsyme":62}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" * Represents collection of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"     * Constructs instance of \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * @param tasks List of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Returns list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     * @return List of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     * Adds task to list","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"     * @param task Task to add","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     * Replaces task at index","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"     * @param index Index of task to be replaced","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"     * @param task Task to replace with","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    public void replaceTask(int index, Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"            DukeException exception \u003d new DukeException(\"Number out of range!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"            System.out.println(exception);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"            this.tasks.set(index, task);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"     * Deletes task at index","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"     * @param index Index of task to be deleted","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"        if (index \u003e\u003d this.tasks.size() || index \u003c 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"            DukeException exception \u003d new DukeException(\"Number out of range!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"            System.out.println(exception);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":61}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Represents a \u003ccode\u003eTodo\u003c/code\u003e type of task","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    Todo (String body) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        super(body, false);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"     * @param body Body message","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"     * @param done Status of task","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"    Todo(String body, boolean done) {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        super(body, done);","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"     * Returns \u003ccode\u003eTodo\u003c/code\u003e with done set to true","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     * @return Done \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    Task setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        return new Todo(this.getBody(), true);","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        if (this.isDone()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"            return \"[T] [X]\" + this.getBody();","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"            return \"[T] [ ]\" + this.getBody();","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"itsyme":42}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" * Represents user interface","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    Scanner sc;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"     * Constructs an instance of \u003ccode\u003eUi\u003c/code\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * Prints welcome message","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Hello! I\u0027m Duke!\\nWhat can I do for you today?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"     * Scans next line","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"     * @return Scanned user input","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"    public String getNextLine() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"     * Prints exception message","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"     * @param e Exception","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"    public void showError(Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"     * Prints loading error","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Error loading save file :(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"     * Prints corresponding task added message","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"     * @param task Task to be printed","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"     * @param taskList Saved tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"    public void showAddedMessage(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"        List\u003cTask\u003e savedTasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"        System.out.println(\"Now you have \" + savedTasks.size() + \" tasks in the list!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"itsyme":65}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    void getDeadline() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"        Deadline deadline \u003d new Deadline(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"2021-08-22\", deadline.getDeadline().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        Deadline deadline \u003d new Deadline(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        Deadline deadlineDone \u003d new Deadline(\" Read Book\", true, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[D] [ ] Read Book (by: Aug 22 2021)\", deadline.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        assertEquals(deadlineDone.toString(), deadline.setDone().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        Deadline deadline \u003d new Deadline(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        Deadline deadlineDone \u003d new Deadline(\" Read Book\", true, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[D] [ ] Read Book (by: Aug 22 2021)\", deadline.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[D] [X] Read Book (by: Aug 22 2021)\", deadlineDone.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"itsyme":33}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    void getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"        Event event \u003d new Event(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"2021-08-22\", event.getDate().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        Event event \u003d new Event(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        Event eventDone \u003d new Event(\" Read Book\", true, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[E] [ ] Read Book (at: Aug 22 2021)\", event.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"        assertEquals(eventDone.toString(), event.setDone().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"    void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        LocalDate date \u003d LocalDate.of(2021, 8, 22);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        Event event \u003d new Event(\" Read Book\", date);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        Event eventDone \u003d new Event(\" Read Book\", true, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[E] [ ] Read Book (at: Aug 22 2021)\", event.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[E] [X] Read Book (at: Aug 22 2021)\", eventDone.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"itsyme":35}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"        Todo todo \u003d new Todo(\" Finish assignment\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"        Todo todoDone \u003d new Todo(\" Finish assignment\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        assertEquals(todoDone.toString(), todo.setDone().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[T] [X] Finish assignment\", todo.setDone().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        Todo todo \u003d new Todo(\" Finish assignment\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        Todo todoDone \u003d new Todo(\" Finish assignment\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[T] [ ] Finish assignment\", todo.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        assertEquals(\"[T] [X] Finish assignment\", todoDone.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"itsyme":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"todo Read Book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"deadline Return Book /by 2021-08-21","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"event CS2103 tutorial /at 2021-08-21","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"get 2021-08-21","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"find Book","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"itsyme":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"itsyme":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"itsyme":2,"-":36}}]
