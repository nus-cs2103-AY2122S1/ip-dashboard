[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" * Represents a Personal Assistant Chatbot that helps a person to keep track of tasks to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Duke Chatbot with a data storage file.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @param filePath The path of the data file.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            ui.showStartUpError(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * The main program.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @param args","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"     * Runs the Chatbot program.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"                Command c \u003d Parser.parse(fullCommand, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"                ui.showMessage(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lingshanng":57,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"     * Constructs a DukeException with given message.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * Concats this exception message with another exception message.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @param e The other Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @return A DukeException containing both exception messages.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    public DukeException concat(Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        return new DukeException(this.getMessage() + \" \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * The error message to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @return The error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        return \"∑(O_O;) Oh no!! \" + getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.command.DisplayCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":" * Represents a parser that makes sense of user input commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * Parses the user\u0027s input command.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The user\u0027s task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * @return A Command corresponding to the user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    public static Command parse(String fullCommand, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        String[] cmdWordDetails \u003d fullCommand.split(\" \", 2); // split into command and details","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        String cmdWord \u003d cmdWordDetails[0]; // get first word as command","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        String description \u003d cmdWordDetails.length \u003e 1 ? cmdWordDetails[1] : \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        switch (cmdWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"            return new DisplayCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.TODO, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.DEADLINE, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.EVENT, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            return new DoneCommand(validateTaskNumber(description, tasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            return new DeleteCommand(validateTaskNumber(description, tasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            return new FindCommand(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * Checks if input is a valid task number and returns task number if valid.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * If valid the task number is returned. Else a DukeException is thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"     * @return The task number as Integer if valid.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"    private static Integer validateTaskNumber(String input, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        Integer taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"            taskNum \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"You did not specify the task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"        int listLength \u003d tasks.getListSize();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"        if (listLength \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The operation cannot be performed as you have 0 tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getListSize()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The task number must be from 1 to \" + listLength + \".\");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"        return taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":" * Represents a User Interface that handles interactions with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * Constructs a User Interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Shows the message of an error on start up of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * @param e The exception thrown on start up.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    public void showStartUpError(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        System.out.println((new DukeException(\"Error starting up.\").concat(e)));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     * Shows a welcome message.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        System.out.println(\"Hello I\u0027m Duke :)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"     * Shows a divider line.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        String separator \u003d \"------------------------------------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        System.out.println(separator);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     * Reads the user\u0027s input command and returns it.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * @return The user\u0027s input command.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"     * Shows a message to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * @param message The message to be shown.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":67}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that adds a Task to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * The type of task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    TaskList.TaskType taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * The description of the task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    String taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * Constructs an add command with type of task and task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * @param taskType The type of task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of the task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    public AddCommand(TaskList.TaskType taskType, String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * Executes the add task command.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.addTask(taskType, taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"I\u0027ve added this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Now you have \" + tasks.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":59}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" * Represents a Command given by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * Executes the action for this command.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    /** Returns true if the command is an exit command */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * Returns true if the command causes program to exit.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * @return true if command is exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that deletes a Task from the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * The task number to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    private Integer taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Constructs a delete command with a task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public DeleteCommand(Integer taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Executes the delete task command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Ok, I\u0027ve deleted this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Now you have \" + tasks.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":52}},{"path":"src/main/java/duke/command/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that displays tasks in the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * Executes the display list command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        tasks.displayList(ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":31}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that marks a Task as Done.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * The task number to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    private Integer taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Constructs a done command with a task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public DoneCommand(Integer taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Executes the task done command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.markTaskDone(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Good work! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":51}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that exits the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * Executes the program exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @param ui The user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Bye bye! See you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * Returns true to exit the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @return true.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    private String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTask(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        ","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        if (matchingTasks.size() \u003d\u003d 0 ){","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            ui.showMessage(\"No matching tasks found for \u0027\" + keyword + \"\u0027. Try another keyword.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"I found these matching tasks in your list for \u0027\" + keyword + \"\u0027:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"            int num \u003d i+1;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            ui.showMessage((num + \".\" + task.toString()));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lingshanng":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Task need to be done before a specific date/time.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * The accepted format of date and time for the deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    private final String INPUT_PATTERN \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * The accepted format of date and time for the deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    private final String OUTPUT_PATTERN \u003d \"MMM dd yyyy, hh:mm a\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * The deadline date and time of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Deadline task with task description and deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of this deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @param by The deadline of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the deadline.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        if (by \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a deadline for the task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(INPUT_PATTERN);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The deadline date is invalid. Please follow this format: \" + INPUT_PATTERN);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * Returns the deadline date and time as a string to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     * @return String representation of the DateTime.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    private String getDateString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"        return by.format(DateTimeFormatter.ofPattern(OUTPUT_PATTERN)).replace(\"AM\", \"am\").replace(\"PM\", \"pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateString() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description,","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"                by.format(DateTimeFormatter.ofPattern(INPUT_PATTERN)));","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":82}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":" * Represents a Task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"     * The time at which the event occurs.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * Constructs an Event task with task description and time of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @param at The time of this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the event.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        if (at \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include when the event is at.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":52}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":" * Represents the storage of tasks to the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * The file path where the data file is.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    private java.nio.file.Path filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * Constructs a storage at the given path.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * @param path The file path where the data file is.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    public Storage(String path) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        this.filePath \u003d java.nio.file.Paths.get(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        initStorage();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * Initialises storage by creating a data file if it does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    private void initStorage() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            if (!java.nio.file.Files.exists(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"                java.nio.file.Files.createFile(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not initialise database. \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     * Writes over data file to save todo list contents to the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     * @param dataStrings","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    public void save(List\u003cString\u003e dataStrings) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"            // task saved as e.g. E|0|meeting|2pm","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            Files.write(filePath, dataStrings);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not save list to database. \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * Loads data file contents into a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     * @return A list of Tasks stored in data.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"            List\u003cString\u003e dataList \u003d Files.lines(filePath).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            for (String line : dataList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"                String[] details \u003d line.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"                String tag \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"                Boolean done \u003d details[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"                Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"                if (tag.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new ToDo(details[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"                } else if (tag.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new Deadline(details[2], details[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"                } else if (tag.equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new Event(details[2], details[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"                    throw new DukeException(\"Unknown tag \u0027\" + tag + \"\u0027.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"                if (done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"                todoList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"            return todoList;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not load database into todo list.\").concat(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":95}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":" * Represents a Task for the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"     * The task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * The state of this task being done.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Task with a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.isDone \u003d false; // task is initialised to be not done","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Returns an icon that represents the done state of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @return a status icon.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    /** Check if task description contains a string */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        // case insensitive","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        return toString().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     * The string representation of this task with the status icon and description.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"    public abstract String toDataString(String delimiter);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" * Represents a list of tasks to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * The todo list that stores tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    private ArrayList\u003cTask\u003e todoList;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * The types of tasks that this list contains.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        EVENT","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * Constructs a task list with no tasks in it.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     * Constructs a task list with the tasks given.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"     * @param tasks An array of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        this.todoList \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     * Prints this todo list in order.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    public void displayList(Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        ui.showMessage(\"Your task list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        for (int i \u003d 0; i \u003c todoList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d todoList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"            ui.showMessage((num + \".\" + task.toString()));","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"     * Add a task to this todo list.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"     * @param details The details of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     * @return The task added into the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    public Task addTask(TaskType taskType, String details) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"        if (taskType.equals(TaskType.TODO)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"            task \u003d new ToDo(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        } else if (taskType.equals(TaskType.DEADLINE)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"            int position \u003d details.indexOf(\"/by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            String description, by;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"            if (position \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"                description \u003d details.substring(0, position);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"                by \u003d details.substring(position + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"                throw new DukeException(\"Please indicate the deadline eg \\\"/by Sunday\\\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"            task \u003d new Deadline(description.trim(), by.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"        } else if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"            int position \u003d details.indexOf(\"/at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"            String description, at;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"            if (position \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"                description \u003d details.substring(0, position);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"                at \u003d details.substring(position + 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"                throw new DukeException(\"Please indicate the event time eg \\\"/at Mon 2-4pm\\\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"            task \u003d new Event(description.trim(), at.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"            // should not reach here","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Invalid task type.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"        todoList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lingshanng"},"content":"     * Mark a task with given task number as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number of the task to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lingshanng"},"content":"     * @return The task marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"lingshanng"},"content":"    public Task markTaskDone(Integer taskNum) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d todoList.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lingshanng"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"lingshanng"},"content":"     * Delete a task with given task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number of the task to be deleted from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"lingshanng"},"content":"     * @return The deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"lingshanng"},"content":"    public Task deleteTask(Integer taskNum) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d todoList.remove(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"lingshanng"},"content":"     * Finds tasks in the task list that matches a given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"lingshanng"},"content":"     * @param keyword The keyword that the user wants to search for.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"lingshanng"},"content":"     * @return A list of tasks that match the keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"lingshanng"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"lingshanng"},"content":"        if (keyword \u003d\u003d \"\") {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to enter a keyword.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"lingshanng"},"content":"        for (Task task : todoList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"lingshanng"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"lingshanng"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"lingshanng"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"lingshanng"},"content":"     * Convert this task list into data string format.","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"lingshanng"},"content":"     * @return A list of tasks in data string format.","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"lingshanng"},"content":"    public List\u003cString\u003e getListData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"lingshanng"},"content":"        return todoList.stream().map(task -\u003e task.toDataString(\"|\")).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"lingshanng"},"content":"     * Returns the size of this task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"lingshanng"},"content":"     * @return returns the size of this task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"lingshanng"},"content":"    public Integer getListSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"lingshanng"},"content":"        return todoList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":161}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":" * Represents a Task without any date/time attached to it.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the todo.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":37}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    public void parse_invalidCommandWord_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, Parser.parse(\"show\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Sorry, I don\u0027t know what that means.\", e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":19}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void addCommand_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            AddCommand cmd \u003d new AddCommand(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"            cmd.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":29}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void deleteCommand_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            DeleteCommand cmd \u003d new DeleteCommand(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            cmd.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":31}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Looks like you forgot to include a description of the deadline.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"                    e.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyBy_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"task\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Looks like you forgot to include a deadline for the task.\", e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    public void init_invalidDateTime_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"task\", \"2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! The deadline date is invalid. Please follow this format: dd-MM-yyyy HH:mm\",","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"                    e.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            Deadline deadline \u003d new Deadline(\"task\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[D][ ] task (by: Aug 25 2021, 02:30 pm)\", deadline.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"            Deadline deadline \u003d new Deadline(\"task\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"D|0|task|25-08-2021 14:30\", deadline.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":63}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"            new Event(\"\", \"2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Looks like you forgot to include a description of the event.\", e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyAt_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            new Event(\"task\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Looks like you forgot to include when the event is at.\", e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"            Event event \u003d new Event(\"task\", \"1-2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[E][ ] task (at: 1-2pm)\", event.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            Event event \u003d new Event(\"task\", \"1-2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"E|0|task|1-2pm\", event.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":51}},{"path":"src/test/java/duke/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    private final String STORAGE_PATH_STRING \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    private final Path STORAGE_PATH \u003d Paths.get(\"data/tasks.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public void init_createDataFile_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            new Storage(STORAGE_PATH_STRING);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            assertTrue(Files.exists(STORAGE_PATH));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public void save_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(STORAGE_PATH_STRING);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            List\u003cString\u003e dataStrings \u003d List.of(todo.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            assertDoesNotThrow(() -\u003e storage.save(dataStrings));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    public void load_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(STORAGE_PATH_STRING);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            Files.write(STORAGE_PATH, List.of(todo.toDataString(\"|\")));","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"            assertEquals(todo.toString(), tasks.get(0).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":65}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void addToDoTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new ToDo(\"task\").toString(), tasks.addTask(TaskList.TaskType.TODO, \"task\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public void addDeadlineTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new Deadline(\"task\", \"25-08-2021 14:30\").toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"                    tasks.addTask(TaskList.TaskType.DEADLINE, \"task /by 25-08-2021 14:30\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    public void addEventTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new Event(\"task\", \"1pm-2pm\").toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"                    tasks.addTask(TaskList.TaskType.EVENT, \"task /at 1pm-2pm\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    public void deleteTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            tasks.deleteTask(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    public void markTaskDone_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][ ] task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"            tasks.markTaskDone(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][X] task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"    public void findTask_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new ToDo(\"dummy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new ToDo(\"monday practice\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new Event(\"project meeting\", \"MON\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new Deadline(\"send money\", \"25-08-2021 14:30\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList(existingTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e matches \u003d tasks.findTask(\"mon\");","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"            assertEquals(3, matches.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":95}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"            new ToDo(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"∑(O_O;) Oh no!! Looks like you forgot to include a description of the todo.\", e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][ ] task\", todo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"T|0|task\", todo.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"deadline return book /by 25-08-2021 14:30","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"delete 3","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"delete 2","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"delete 1","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":13}}]
