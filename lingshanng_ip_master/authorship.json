[{"path":"app_data/commands.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"list | show your task list","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"todo \u003cTASK_DESCRIPTION\u003e | add a todo task","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"event \u003cTASK_DESCRIPTION\u003e /at \u003cTIME\u003e | add an event task which occurs at some time","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDATE_TIME\u003e | add task with a deadline to do by some date and time","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"done \u003cTASK_NUMBER\u003e | mark a task as done","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"delete \u003cTASK_NUMBER\u003e | delete a task","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"find \u003cKEY_WORD\u003e | find a task with a key word","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"bye | exits program","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"help | show available commands","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":":help | opens up user documentation window","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":10}},{"path":"app_data/helpDocumentation.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"Adding a todo task: todo","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"Adds a todo to the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"Format: todo  \u003cTASK_DESCRIPTION\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"todo read book","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"Output:","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"[T][ ] read book","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"Adding an event task: event","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"Adds an event task, which occurs at some time, to the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"Format: event \u003cTASK_DESCRIPTION\u003e /at \u003cTIME\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"event project meeting /at 2pm-4pm","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"Output:","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"[E][ ] project meeting (at: 2pm-4pm)","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"Adding a deadline task: deadline","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"Adds a task with a deadline to do by some date and time, to the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"Format: deadline \u003cTASK_DESCRIPTION\u003e /by \u003cDATE_TIME\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"deadline math assignment /by 05-09-2021 23:00 ","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"Output:","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"[D][ ] math assignment (by: Sep 05 2021, 11:00pm)","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"Show task list: list","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"Shows all tasks in the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"Format: list","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"Output:","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"Your task list:","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"1.[T][X] read book","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"2.[E][ ] project meeting (at: 2pm-4pm)","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"3.[D][ ] math assignment (by: Sep 05 2021, 11:00pm)","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"Marking a task as done: done","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"Marks a task with given task number as done.","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"Format: done \u003cTASK_NUMBER\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"done 2","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"Output:","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"[T][X] read book","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"Deleting a task: delete","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"Deletes a task with given task number from the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"Format: delete \u003cTASK_NUMBER\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"Example:","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"delete 3","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"--------------------------------------------------------------------","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"Exit program: bye","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"Exits this program session.","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"Format: bye","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":73}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    ","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lingshanng":16,"-":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     * Constructs a dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * @param text Text to show in dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @param img  Image to show in dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     * Returns a user dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     * @param text Text to show in user dialog.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * @param img  Image for user dialog.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * @return A user dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"     * Returns a duke dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * @param text Text to show in duke dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     * @param img  Image for duke dialog.","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     * @return A duke dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"    private void flip() {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":81}},{"path":"src/main/java/HelpWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class HelpWindow extends AnchorPane {","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    public static final String HELP_DOC \u003d \"app_data/helpDocumentation.txt\";","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    private Stage window;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    private Text helpText;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public HelpWindow() {","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            window \u003d new Stage();","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/HelpWindow.fxml\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            window.setScene(scene);","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"            window.setTitle(\"Help Documentation\");","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        helpText.setText(parseHelpDoc());","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    private String parseHelpDoc() {","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            java.nio.file.Path filePath \u003d java.nio.file.Paths.get(HELP_DOC);","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            result \u003d Files.readString(filePath);","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        return result;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     * Opens the help window.","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    public void show() {","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"        window.show();","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     * Check if the help window is opened.","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"     * @return true if the help window has been opened, false otherwise","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        return window.isShowing();","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     * Focuses on the opened help window.","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"    public void focus() {","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        window.requestFocus();","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":71}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * Initializes the main window with scroll pane and dialog boxes.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            DialogBox.getDukeDialog(\"Hello I\u0027m Duke :) What do you want to do today?\", dukeImage));","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     * Sets the duke object.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     * @param d Duke object.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"        Boolean isGuiResponse \u003d false;","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"        if (response.startsWith(\":\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"            isGuiResponse \u003d handleGuiResponse(response);","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"        if (!isGuiResponse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"            dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"        if (duke.hasExit()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"            CompletableFuture.delayedExecutor(2, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"    private boolean handleGuiResponse(String res) {","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"        if (res.equals(\":help\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"            handleHelp();","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"            return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"    public void handleHelp() {","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"            helpWindow.show();","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"            helpWindow.focus();","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":96}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" * Represents a Personal Assistant Chatbot that helps a person to keep track of tasks to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    private boolean hasExit;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Duke Chatbot with a data storage file.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            System.out.println(tasks.getListSize());","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * Returns Duke\u0027s response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            Command c \u003d Parser.parse(input, tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            res \u003d c.execute(tasks, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            hasExit \u003d c.isExit();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            res \u003d e.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        return res;","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * Checks if the user has given an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * @return True if an exit command was give, false otherwise.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"    public boolean hasExit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"        return hasExit;","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lingshanng":57,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"     * Constructs a DukeException with given message.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * Concats this exception message with another exception message.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param e The other Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @return A DukeException containing both exception messages.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    public DukeException concat(Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        return new DukeException(this.getMessage() + \" \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * The error message to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     * @return The error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        return \"(O_O;) Oh no!! \" + getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.command.DisplayCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"import duke.command.HelpWindowCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":" * Represents a parser that makes sense of user input commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Parses the user\u0027s input command.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * @param fullCommand The user\u0027s input command.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * @param tasks       The user\u0027s task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * @return A Command corresponding to the user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public static Command parse(String fullCommand, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        String[] cmdWordDetails \u003d fullCommand.split(\" \", 2); // split into command and details","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        String cmdWord \u003d cmdWordDetails[0]; // get first word as command","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        String description \u003d cmdWordDetails.length \u003e 1 ? cmdWordDetails[1] : \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        switch (cmdWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            return new DisplayCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.TODO, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.DEADLINE, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            return new AddCommand(TaskList.TaskType.EVENT, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            return new DoneCommand(validateTaskNumber(description, tasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            return new DeleteCommand(validateTaskNumber(description, tasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            return new FindCommand(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        case \"help\":","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        case \":help\":","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"            return new HelpWindowCommand();","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"     * Checks if input is a valid task number and returns task number if valid.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"     * If valid the task number is returned. Else a DukeException is thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     * @return The task number as Integer if valid.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    private static Integer validateTaskNumber(String input, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"        Integer taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"            taskNum \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"You did not specify the task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"        int listLength \u003d tasks.getListSize();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"        int taskIndex \u003d taskNum - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"        if (listLength \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The operation cannot be performed as you have 0 tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.getListSize()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The task number must be from 1 to \" + listLength + \".\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"        return taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":83}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that adds a Task to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * The type of task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    private final TaskList.TaskType taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * The description of the task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * Constructs an add command with type of task and task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @param taskType    The type of task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of the task to add to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    public AddCommand(TaskList.TaskType taskType, String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        this.taskDescription \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * Executes the add task command.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.addTask(taskType, taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"I\u0027ve added this task:\", task.toString(),","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"            \"Now you have \" + tasks.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Command given by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * Executes the action for this command.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * Returns true if the command causes program to exit.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * @return true if command is exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * Append multiple strings into one string separated by newline character.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    protected String formatOutput(String... outputs) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        return String.join(\"\\n\", outputs);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"     * Append multiple strings in an array into one string separated by newline character.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    protected String formatOutput(ArrayList\u003cString\u003e outputs) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        return String.join(\"\\n\", outputs);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":44}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that deletes a Task from the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * The task number to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    private final Integer taskNum;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * Constructs a delete command with a task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public DeleteCommand(Integer taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Executes the delete task command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.deleteTask(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"Ok, I\u0027ve deleted this task:\", task.toString(),","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            \"Now you have \" + tasks.getListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":51}},{"path":"src/main/java/duke/command/DisplayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that displays tasks in the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class DisplayCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * Executes the display list command.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        if (tasks.getListSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            return \"No tasks in your list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"Your task list:\", formatOutput(tasks.getTaskStrings()));","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that marks a Task as Done.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * The task number to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    private final Integer taskNum;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * Constructs a done command with a task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public DoneCommand(Integer taskNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Executes the task done command.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d tasks.markTaskDone(taskNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        storage.save(tasks.getListData());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"Good work! I\u0027ve marked this task as done:\", task.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":49}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that exits the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"     * Executes the program exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        return \"Bye bye! See you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * Returns true to exit the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @return true.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that Finds a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * The keyword to find.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Find command.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * @param keyword The keyword to find.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * Executes the Find command.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTask(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            return \"No matching tasks found for \u0027\" + keyword + \"\u0027. Try another keyword.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"            taskStrings.add(num + \".\" + task.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"I found these matching tasks in your list for \u0027\" + keyword + \"\u0027:\",","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"            formatOutput(taskStrings));","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lingshanng":60}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that displays tasks in the TaskList.","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * Executes the help command.","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        // show command list","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        String path \u003d \"app_data/commands.txt\";","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cString\u003e commandList;","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"            Path filePath \u003d java.nio.file.Paths.get(path);","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"            // read command from file","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"            // example:","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            // event \u003cTASK_DESCRIPTION\u003e /at \u003cTIME\u003e | add an event task which occurs at some time","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            commandList \u003d Files.lines(filePath).map(line -\u003e {","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"                String[] command \u003d line.split(\" \\\\| \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"                String res \u003d String.format(\"%-50s\\t%-50s\", command[0], command[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"                System.out.println(res);","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"                return res;","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            }).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not retrieve command list!\");","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"        return formatOutput(\"Commands:\", formatOutput(commandList));","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":56}},{"path":"src/main/java/duke/command/HelpWindowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":" * Represents a Command that displays tasks in the TaskList.","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class HelpWindowCommand extends Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * Executes the help window command.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * @param tasks   The task list to execute the command on.","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * @param storage The storage for the tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @return a string output.","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        return \":help\";","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * Returns false to continue the program.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * @return false.","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":32}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a Task need to be done before a specific date/time.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * The accepted format of date and time for the deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    private final String inputPattern \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * The accepted format of date and time for the deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    private final String outputPattern \u003d \"MMM dd yyyy, hh:mm a\";","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * The deadline date and time of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Deadline task with task description and deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of this deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * @param by          The deadline of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the deadline.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        if (by \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a deadline for the task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(inputPattern);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"            this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"The deadline date is invalid. Please follow this format: \" + inputPattern);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * Returns the deadline date and time as a string to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     * @return String representation of the DateTime.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    private String getDateString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"        return by.format(DateTimeFormatter.ofPattern(outputPattern)).replace(\"AM\", \"am\").replace(\"PM\", \"pm\");","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDateString() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description,","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"            by.format(DateTimeFormatter.ofPattern(inputPattern)));","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":84}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":" * Represents a Task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"     * The time at which the event occurs.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * Constructs an Event task with task description and time of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     * @param at          The time of this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the event.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"        if (at \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include when the event is at.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":54}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":" * Represents the storage of tasks to the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     * The file path where the data file is.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"    private final java.nio.file.Path filePath;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     * Constructs a storage at the given path.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * @param path The file path where the data file is.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    public Storage(String path) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        this.filePath \u003d java.nio.file.Paths.get(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        initStorage();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"     * Initialises storage by creating a data file if it does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"    private void initStorage() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            if (!java.nio.file.Files.exists(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"                java.nio.file.Files.createFile(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not initialise database. \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"     * Writes over data file to save todo list contents to the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * @param dataStrings","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    public void save(List\u003cString\u003e dataStrings) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            // task saved as e.g. E|0|meeting|2pm","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"            Files.write(filePath, dataStrings);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not save list to database. \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     * Loads data file contents into a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     * @return A list of Tasks stored in data.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"            List\u003cString\u003e dataList \u003d Files.lines(filePath).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"            for (String line : dataList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"                String[] details \u003d line.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"                assert details.length \u003e 2;","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"                String tag \u003d details[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"                Boolean done \u003d details[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"                Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"                if (tag.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new ToDo(details[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"                } else if (tag.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"                    assert details.length \u003d\u003d 4;","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new Deadline(details[2], details[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"                } else if (tag.equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"                    assert details.length \u003d\u003d 4;","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"                    task \u003d new Event(details[2], details[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"                    throw new DukeException(\"Unknown tag \u0027\" + tag + \"\u0027.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"                if (done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"                todoList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"            return todoList;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Could not load database into todo list.\").concat(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":100}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":" * Represents a Task for the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"     * The task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * The state of this task being done.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"     * Constructs a Task with a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.isDone \u003d false; // task is initialised to be not done","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Returns an icon that represents the done state of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @return a status icon.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"     * Check if task description contains a string","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        // case insensitive","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        return toString().toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     * The string representation of this task with the status icon and description.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    public abstract String toDataString(String delimiter);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":68}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":" * Represents a list of tasks to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"     * The todo list that stores tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"    private final ArrayList\u003cTask\u003e todoList;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"     * Constructs a task list with no tasks in it.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        this.todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"     * Constructs a task list with the tasks given.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"     * @param tasks An array of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"        this.todoList \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * Prints this todo list in order.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    public ArrayList\u003cString\u003e getTaskStrings() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        ArrayList\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        for (int i \u003d 0; i \u003c todoList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d todoList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            taskStrings.add(num + \".\" + task.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        return taskStrings;","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"     * Add a task to this todo list.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"     * @param details  The details of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"     * @return The task added into the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"    public Task addTask(TaskType taskType, String details) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"        if (taskType.equals(TaskType.TODO)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"            task \u003d new ToDo(details);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        } else if (taskType.equals(TaskType.DEADLINE)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"            TaskParams params \u003d getAdditionalDetail(details, \"/by\",","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"                \"Please indicate the deadline eg \\\"/by 09-09-2021 23:00\\\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"            task \u003d new Deadline(params.description, params.additional);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"        } else if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"            TaskParams params \u003d getAdditionalDetail(details, \"/at\",","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"                \"Please indicate the event time eg \\\"/at Mon 2-4pm\\\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"            task \u003d new Event(params.description, params.additional);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            // should not reach here","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Invalid task type.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"        todoList.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"    private TaskParams getAdditionalDetail(String fullDetails, String label, String errorMessage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"        int position \u003d fullDetails.indexOf(label);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"        if (position \u003c 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(errorMessage);","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"        String description \u003d fullDetails.substring(0, position).trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"        String additional \u003d fullDetails.substring(position + label.length()).trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"        return new TaskParams(description, additional);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"     * Mark a task with given task number as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number of the task to be marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"     * @return The task marked as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lingshanng"},"content":"    public Task markTaskDone(Integer taskNum) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lingshanng"},"content":"        assert todoList.size() \u003e 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d todoList.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lingshanng"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"lingshanng"},"content":"     * Delete a task with given task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"lingshanng"},"content":"     * @param taskNum The task number of the task to be deleted from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"lingshanng"},"content":"     * @return The deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"lingshanng"},"content":"    public Task deleteTask(Integer taskNum) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"lingshanng"},"content":"        assert todoList.size() \u003e 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"lingshanng"},"content":"        Task task \u003d todoList.remove(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"lingshanng"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"lingshanng"},"content":"     * Finds tasks in the task list that matches a given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"lingshanng"},"content":"     * @param keyword The keyword that the user wants to search for.","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"lingshanng"},"content":"     * @return A list of tasks that match the keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"lingshanng"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"lingshanng"},"content":"        if (keyword \u003d\u003d \"\") {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to enter a keyword.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"lingshanng"},"content":"        return todoList.stream().filter(task -\u003e task.contains(keyword)).collect(","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"lingshanng"},"content":"            Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"lingshanng"},"content":"     * Convert this task list into data string format.","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"lingshanng"},"content":"     * @return A list of tasks in data string format.","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"lingshanng"},"content":"    public List\u003cString\u003e getListData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"lingshanng"},"content":"        return todoList.stream().map(task -\u003e task.toDataString(\"|\")).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"lingshanng"},"content":"     * Returns the size of this task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"lingshanng"},"content":"     * @return returns the size of this task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"lingshanng"},"content":"    public Integer getListSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"lingshanng"},"content":"        return todoList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"lingshanng"},"content":"     * The types of tasks that this list contains.","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"lingshanng"},"content":"    public enum TaskType {","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"lingshanng"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"lingshanng"},"content":"    class TaskParams {","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"lingshanng"},"content":"        private final String description;","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"lingshanng"},"content":"        private final String additional;","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"lingshanng"},"content":"        public TaskParams(String d, String a) {","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"lingshanng"},"content":"            this.description \u003d d;","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"lingshanng"},"content":"            this.additional \u003d a;","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":171}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":" * Represents a Task without any date/time attached to it.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"     * Constructs a ToDo task.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"     * @param description The description of this todo.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"        if (description \u003d\u003d \"\") {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"            throw new DukeException(\"Looks like you forgot to include a description of the todo.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"     * Returns a string representation of this task to be written into data storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"     * @param delimiter The delimiter used by the storage to parse data fields.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"     * @return The data string representation of this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    public String toDataString(String delimiter) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        String tag \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        String done \u003d super.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        return String.join(delimiter, tag, done, super.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":26}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" type\u003d\"AnchorPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"      \u003cScrollPane prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"              \u003cText fx:id\u003d\"helpText\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"551.13671875\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"                  \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"lingshanng":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"80.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            \u003cFont name\u003d\"Consolas\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"lingshanng":30}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"    public void parse_invalidCommandWord_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, Parser.parse(\"show\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"(O_O;) Oh no!! Sorry, I don\u0027t know what that means.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":20}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void addCommand_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            AddCommand cmd \u003d new AddCommand(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            cmd.execute(tasks, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":28}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void deleteCommand_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            DeleteCommand cmd \u003d new DeleteCommand(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"            cmd.execute(tasks, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":30}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    private final String errorHeader \u003d \"(O_O;) Oh no!! \";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            assertEquals(errorHeader + \"Looks like you forgot to include a description of the deadline.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyBy_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"task\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"(O_O;) Oh no!! Looks like you forgot to include a deadline for the task.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public void init_invalidDateTime_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            new Deadline(\"task\", \"2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            assertEquals(errorHeader + \"The deadline date is invalid. Please follow this format: dd-MM-yyyy HH:mm\",","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"                e.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            Deadline deadline \u003d new Deadline(\"task\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[D][ ] task (by: Aug 25 2021, 02:30 pm)\", deadline.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            Deadline deadline \u003d new Deadline(\"task\", \"25-08-2021 14:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"D|0|task|25-08-2021 14:30\", deadline.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":65}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    private final String errorHeader \u003d \"(O_O;) Oh no!! \";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            new Event(\"\", \"2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            assertEquals(errorHeader + \"Looks like you forgot to include a description of the event.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyAt_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            new Event(\"task\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            assertEquals(errorHeader + \"Looks like you forgot to include when the event is at.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"            Event event \u003d new Event(\"task\", \"1-2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[E][ ] task (at: 1-2pm)\", event.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"            Event event \u003d new Event(\"task\", \"1-2pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"E|0|task|1-2pm\", event.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":54}},{"path":"src/test/java/duke/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"    private final String storagePathString \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"    private final Path storagePath \u003d Paths.get(\"data/tasks.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    public void init_createDataFile_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(storagePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            new Storage(storagePathString);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"            assertTrue(Files.exists(storagePath));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    public void save_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(storagePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(storagePathString);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            List\u003cString\u003e dataStrings \u003d List.of(todo.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"            assertDoesNotThrow(() -\u003e storage.save(dataStrings));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    public void load_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"            Files.deleteIfExists(storagePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"            Storage storage \u003d new Storage(storagePathString);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"            Files.write(storagePath, List.of(todo.toDataString(\"|\")));","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.load();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"            assertEquals(todo.toString(), tasks.get(0).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException | java.io.IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":66}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"    public void addToDoTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new ToDo(\"task\").toString(), tasks.addTask(TaskList.TaskType.TODO, \"task\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"    public void addDeadlineTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new Deadline(\"task\", \"25-08-2021 14:30\").toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"                tasks.addTask(TaskList.TaskType.DEADLINE, \"task /by 25-08-2021 14:30\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"    public void addEventTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"            assertEquals(new Event(\"task\", \"1pm-2pm\").toString(),","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lingshanng"},"content":"                tasks.addTask(TaskList.TaskType.EVENT, \"task /at 1pm-2pm\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lingshanng"},"content":"    public void deleteTask_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lingshanng"},"content":"            tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lingshanng"},"content":"            assertEquals(1, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"lingshanng"},"content":"            tasks.deleteTask(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"lingshanng"},"content":"            assertEquals(0, tasks.getListSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"lingshanng"},"content":"    public void markTaskDone_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"lingshanng"},"content":"            Task task \u003d tasks.addTask(TaskList.TaskType.TODO, \"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][ ] task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"lingshanng"},"content":"            tasks.markTaskDone(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][X] task\", task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lingshanng"},"content":"    public void findTask_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e existingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new ToDo(\"dummy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new ToDo(\"monday practice\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new Event(\"project meeting\", \"MON\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lingshanng"},"content":"            existingTasks.add(new Deadline(\"send money\", \"25-08-2021 14:30\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lingshanng"},"content":"            TaskList tasks \u003d new TaskList(existingTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lingshanng"},"content":"            ArrayList\u003cTask\u003e matches \u003d tasks.findTask(\"mon\");","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lingshanng"},"content":"            assertEquals(3, matches.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":96}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"    private final String errorHeader \u003d \"(O_O;) Oh no!! \";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lingshanng"},"content":"    public void init_emptyDescription_throwException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lingshanng"},"content":"            new ToDo(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lingshanng"},"content":"            assertEquals(errorHeader + \"Looks like you forgot to include a description of the todo.\", e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lingshanng"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"[T][ ] task\", todo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lingshanng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lingshanng"},"content":"    public void testDataString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lingshanng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"lingshanng"},"content":"            ToDo todo \u003d new ToDo(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lingshanng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lingshanng"},"content":"            assertEquals(\"T|0|task\", todo.toDataString(\"|\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lingshanng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lingshanng"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lingshanng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lingshanng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lingshanng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"lingshanng":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lingshanng"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lingshanng"},"content":"deadline return book /by 25-08-2021 14:30","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lingshanng"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lingshanng"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lingshanng"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lingshanng"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lingshanng"},"content":"delete 3","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lingshanng"},"content":"delete 2","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"lingshanng"},"content":"delete 1","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lingshanng"},"content":"list","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lingshanng"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lingshanng":13}}]
