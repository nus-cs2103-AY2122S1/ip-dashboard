[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Neha-5678":1,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"T/1/read book","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"D/1/return book/02/12/2019 18:00","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"T/1/play with sis","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Neha-5678":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" * Represents the task manager application Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"     * Creates an instance of the Duke class.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     * @param filePath Path of the file storing all the tasks on hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"     * Runs the Duke application and prompts users for input.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"            ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"            Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"            ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Neha-5678":44,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" * Parses the input given by the user for the task manager application to","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" * execute the necessary action.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"    private String input;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"     * Returns the command to be executed in response to the user\u0027s command.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"     * @param command Input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"     * @return","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public Command parse(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"        if(command.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"            return new ExitCommand(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        } else if(command.equals(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"            return new ListCommand(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        } else if(command.equals(\"blah\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"            return new BlahCommand(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        } else if(command.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"            String taskNumber \u003d command.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"            return new DoneCommand(taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        } else if(command.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"            String taskNumber \u003d command.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        } else if(command.split(\" \", 2)[0].equals(\"find\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"            String input \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"            return new FindCommand(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"        else {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"            return new AddCommand(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":40}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.io.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":" * Represents the hard disk/file that stores all the tasks in the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    private String path;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"     * Creates an object of the Storage class to store all tasks on the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"     * @param filePath Path of the file that stores all the tasks in the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"     * Loads the tasks on the hard drive into an ArrayList when the application restarts.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"     * @return Arraylist containing all the tasks in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"            String path \u003d \"data\" + File.separator + \"duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"            boolean hasDirectory \u003d Files.exists(Paths.get(\"data\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"            boolean hasFile \u003d Files.exists(Paths.get(\"data/duke.txt\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"            if(hasDirectory) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"                if(hasFile) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"                    getContent(\"data/duke.txt\", list);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"                    if(list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"                        System.out.println(\"There are no tasks\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"                    } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"                        //System.out.println(\"im here!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"                        printFile(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"                    File file \u003d new File(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"                File file \u003d new File(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"            return list;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"     * Gets all the tasks in the hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"     * @param filePath Path of the file that contains all the tasks in the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"     * @param list Arraylist that stores all the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"     * @throws DukeException1 If there is an error in creating a todo, event, deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    public void getContent(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException, DukeException1 {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"            String s \u003d scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"            /*System.out.println(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"            String[] st \u003d s.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"            for (int i \u003d 0; i \u003c st.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"                System.out.println(st[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"            }*/","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"                if(s.split(\"/\")[0].equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"                    ToDo todo \u003d new ToDo(s.split(\"/\")[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"                    list.add(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"                    if(s.split(\"/\")[1].equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"                        todo.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"                } else if(s.split(\"/\")[0].equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"                    Deadline deadline \u003d new Deadline(s.split(\"/\", 4)[2], s.split(\"/\", 4)[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"                    list.add(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"                    if(s.split(\"/\")[1].equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"                        deadline.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"                    Event event \u003d new Event(s.split(\"/\", 4)[2], s.split(\"/\", 4)[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"                    list.add(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"                    if(s.split(\"/\")[1].equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"                        event.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"            } catch (DukeException1 e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"     * Prints all tasks in the file when the application restarts.","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"     * @param path Path of the file containing all the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"    public void printFile(String path) throws FileNotFoundException {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"        while(scanner.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(scanner.nextLine());","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"     * Appends a task to the end of the file storing all the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"     * @param task Task to be appended to the end of the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"    public void appendToFile(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"            BufferedWriter write \u003d new BufferedWriter(new FileWriter(\"data/duke.txt\", true));","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"            write.append(task.storeTask());","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"            write.newLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"            write.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Neha-5678"},"content":"        }  catch(IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error occurred when appending task to file!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"     * Rewrites the entire file from the start.","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks The Arraylist storing all the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"Neha-5678"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Neha-5678"},"content":"            PrintWriter writer \u003d new PrintWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Neha-5678"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"Neha-5678"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"Neha-5678"},"content":"                //if (i !\u003d number) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Neha-5678"},"content":"                writer.println(task.storeTask());","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"Neha-5678"},"content":"                //writeToFile(\"data/duke.txt\", task.getType() + \" | \" + task.getDone() + \" | \" + task.getInfo());","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Neha-5678"},"content":"                //}","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Neha-5678"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"Neha-5678"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error occurred in rewriting entire file!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":161}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":" * Prints out the relevant messages and responds to user\u0027s inputs on the user interface","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    private String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * Prints out the error that has occurred.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"     * @param error Error that has occurred.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"     * Prints out the welcome message and asks the user to input his/her command.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        String message \u003d \"Hello! I\u0027m Duke \\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        /**if(size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"There are no tasks\");","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"            return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"im here!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"            printFile(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"            return nill;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        }*/","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"     * Prints out a horizontal dashed line on the user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\n______________________________________________________________\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"     * Reads the command or inputs entered by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d input;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        return this.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"     * Prints the list of tasks in the application when user asks for it.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"    public void respondToList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"        System.out.println((\"\\tHere are the tasks in your list:\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"\\t\" + Integer.toString(i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"     * Prints the tasks that has been completed by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"     * @param taskNumber Number of the task that has been completed in the list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"    public void respondToDone(ArrayList\u003cTask\u003e tasks, Integer taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \\n \\t \\t\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"                \" [\" + tasks.get(taskNumber - 1).getStatusIcon() + \"] \" + tasks.get(taskNumber - 1).getDescription());","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"     * Prints the task that has been deleted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"     * @param taskNumber Number of the task that has been completed in the list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    public void respondToDelete(ArrayList\u003cTask\u003e tasks, Integer taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task: \\n\\t\\t\" + tasks.get(taskNumber).toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"                \"\\n\\tNow you have \" + Integer.toString(tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"     * Prints the Todo task that has been created by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"     * @param todo The Todo task that has been created.","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"    public void respondToTodo(ArrayList\u003cTask\u003e tasks, ToDo todo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task: \" + \"\\n\\t\\t\" + todo.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"                \"\\n\\tNow you have \" + Integer.toString(tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"     * Prints the Event task that has been created by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"     * @param event The Event task that has been created.","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"    public void respondToEvent(ArrayList\u003cTask\u003e tasks, Event event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \" + \"\\n\\t\\t\" + event.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"                \"\\n\\tNow you have \" + Integer.toString(tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"     * Prints the Deadline task that has been created by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"     * @param tasks Collection of tasks in the task manager application.","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"     * @param deadline The Deadline task that has been created.","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"    public void respondToDeadline(ArrayList\u003cTask\u003e tasks, Deadline deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task: \" + \"\\n\\t\\t\" + deadline.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"                \"\\n\\tNow you have \" + Integer.toString(tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"     * Prints the response on the user interface to the blah input by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"    public void respondToBlah() {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"     * Prints the response on the user interface to the bye input by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"Neha-5678"},"content":"    public void respondToBye() {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"Neha-5678"},"content":"     * Prints the response on the user interface to the find input by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"Neha-5678"},"content":"    public void respondToFind(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Neha-5678"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"\\t\" + Integer.toString(i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":159}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    public AddCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"            if(command.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"                if(command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"                    ToDo todo \u003d new ToDo(command.split(\" \", 2)[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"                    ToDo todo \u003d new ToDo(command.split(\" \", 2)[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"                    tasks.addTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"                    ui.respondToTodo(tasks.getTasks(), todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"                    storage.appendToFile(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"            } else if(command.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"                if (command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"                    Deadline deadline \u003d new Deadline(command.split(\" \", 2)[0], \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"                    String description \u003d command.split(\" \", 2)[1].split(\" /\")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"                    String by \u003d command.split(\"/by \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"                    Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"                    tasks.addTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"                    ui.respondToDeadline(tasks.getTasks(), deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"                    storage.appendToFile(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"                if (command.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"                    Event event \u003d new Event(command.split(\" \", 2)[0], \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"                    String description \u003d command.split(\" \", 2)[1].split(\" /\")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"                    String at \u003d command.split(\"/at \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"                    Event event \u003d new Event(description, at);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"                    tasks.addTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"                    ui.respondToEvent(tasks.getTasks(), event);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"                    storage.appendToFile(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"        } catch (DukeException1 e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":64}},{"path":"src/main/java/duke/command/BlahCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class BlahCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    public BlahCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToBlah();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    public abstract Boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":10}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    String taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"        this.taskNumber \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"        Integer number \u003d Integer.valueOf(this.taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToDelete(tasks.getTasks(), number - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"        tasks.getTasks().remove(number - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"        storage.rewriteFile(tasks.getTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    String taskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    public DoneCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"        this.taskNumber \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"        Integer count \u003d Integer.valueOf(this.taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        tasks.getTask(count - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToDone(tasks.getTasks(), count);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"        storage.rewriteFile(tasks.getTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":25}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToBye();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    private String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"            if(tasks.getTask(i).getDescription().contains(command)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"                foundTasks.add(tasks.getTask(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToFind(foundTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        ui.respondToList(tasks.getTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":23}},{"path":"src/main/java/duke/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" * Exception that is thrown when a Deadline class cannot be created due to empty description provided by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"public class DeadlineException extends DukeException1 {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"     * Creates an object of the DeadlineException class.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    public DeadlineException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     * Gets the message to be printed in response to the error.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * @return String message in response to the error thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return \"\\tOOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":25}},{"path":"src/main/java/duke/exceptions/DukeException1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.lang.Exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" * Exception that is thrown when there are errors encountered in the Duke application.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"public class DukeException1 extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"     * Creates an object of the DukeException1 object","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    DukeException1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"        super();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     * Gets the message to be printed in response to the DukeException1 error.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * @return String message in response to the error thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return \"Error occurred!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    /**@Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        return \"OOPS!!!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }*/","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Neha-5678":30}},{"path":"src/main/java/duke/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":" * Exception that is thrown when an Event class cannot be created due to empty description provided by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class EventException extends DukeException1 {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"     * Creates an object of the EventException class.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    public EventException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"     * Gets the message to be printed in response to the error.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     * @return String message in response to the error thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        return \"\\tOOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":24}},{"path":"src/main/java/duke/exceptions/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" * Exception that is thrown when a Todo class cannot be created due to empty description provided by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"public class TodoException extends DukeException1 {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"     * Creates an object of the TodoException class.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    public TodoException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     * Gets the message to be printed in response to the error.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * @return String message in response to the error thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return \"\\tOOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":25}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DeadlineException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":" * Represent the task of type Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    private String by;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * Creates a Deadline task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"     * @param description Description of what the Deadline task is about.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"     * @param by Deadline by which the task should be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"     * @throws DeadlineException If the Deadline object cannot be created successfully due to empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    public Deadline(String description, String by) throws DeadlineException {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        if(description.equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"            throw new DeadlineException();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     * Gets the information of the task such as its description and deadline to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     * @return String that contains the information.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"        return getDescription() + \"/\" + this.by;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"     * Gets the type of the task and denotes it with a letter to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"     * @return The letter that indicates the type of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    public String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        return \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"     * Gets the date that the task must be completed by.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"     * @return LocalDate object denoting the deadline of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        String date \u003d by.split(\" \")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"        this.date \u003d LocalDate.parse(date.split(\"/\")[2] + \"-\"+ date.split(\"/\")[1] + \"-\" + date.split(\"/\")[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        return this.date;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"     * Gets the time by which the task must be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"     * @return LocalTime object denoting the time by which task must be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"        String time \u003d by.split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        this.time \u003d LocalTime.parse(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        return this.time;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"     * Stores the task in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"     * @return String denoting the Deadline task which will be stored in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"    public String storeTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"        return \"D/\" + getDone() + \"/\" + getDescription() + \"/\" + this.by;","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"     * @return String representation of the deadline task created.","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"                + \" \" + getTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Neha-5678":93}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DeadlineException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.EventException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":" * Represent the task of type Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    protected String at;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"     * Creates an Event task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"     * @param description Description of what the Event task is about.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     * @param at Time of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     * @throws DeadlineException If the Event object cannot be created successfully due to empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    public Event(String description, String at) throws EventException {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        if(description.equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"            throw new EventException();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     * Gets the information of the task such as its description and deadline to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"     * @return String that contains the information.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        return getDescription() + \"/\" + this.at;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"     * Gets the type of the task and denotes it with a letter to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"     * @return The letter that indicates the type of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    public String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        return \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"     * Gets the date of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"     * @return LocalDate object denoting the date of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        String date \u003d at.split(\" \")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        this.date \u003d LocalDate.parse(date.split(\"/\")[2] + \"-\"+ date.split(\"/\")[1] + \"-\" + date.split(\"/\")[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"        return this.date;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"     * Gets the start time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"     * @return LocalTime object denoting the end time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        String time \u003d at.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"        String startTime \u003d time.split(\"-\")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"        return this.startTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"     * Gets the end time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"     * @return LocalTime object denoting the end time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"        String time \u003d at.split(\" \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"        String endTime \u003d time.split(\"-\")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"        this.endTime \u003d LocalTime.parse(endTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"        return this.endTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"     * Stores the task in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"     * @return String denoting the Event task which will be stored in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"    public String storeTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"        return \"E/\" + getDone() + \"/\" + getDescription() + \"/\" + this.at;","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"     * @return String representation of the event task created.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"                + \" from \" + getStartTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \" to \"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"                + getEndTime().format(DateTimeFormatter.ofPattern(\"HH:mm\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Neha-5678":108}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":" * Represent a particular task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    protected Integer order;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"     * Creates a task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"     * @param description Description of what the task is about.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"        this.order \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     * @return String that describes what the task is about.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"     * Gets the information of the task such as its description to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     * @return String that contains the information.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    public abstract String getInfo();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"     * Gets the type of the task and denotes it with a letter to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"     * @return The letter that indicates the type of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"     * Gets the string indicating whether the task has been completed or not to be stored in hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"     * @return String indicating whether task has been completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"    public String getDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     * Gets the icon indicating whether task has been completed to be printed to the user interface.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"     * @return Icon indicating whether task has been completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"     * Mark the particular task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"     * Stores the task in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"     * @return String denoting the Task which will be stored in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"    public abstract String storeTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"     * @return String representation of the task created.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Neha-5678":90}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    public Integer getNumberOfTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    public void removeTask(Integer taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(\"IM IN REMOVING\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(this.tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        this.tasks.remove(taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        System.out.println(this.tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    public Task getTask(Integer taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        return this.tasks.get(taskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":34}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DeadlineException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.TodoException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" * Represent the task of type Todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"     * Creates an Todo task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"     * @param description Description of what the Todo task is about.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"     * @throws DeadlineException If the Todo object cannot be created successfully due to empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    public ToDo(String description) throws TodoException {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"        if(description.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"            throw new TodoException();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     * Gets the information of the task such as its description and deadline to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     * @return String that contains the information.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        return getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     * Gets the type of the task and denotes it with a letter to store in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     * @return The letter that indicates the type of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"    public String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        return \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"     * Stores the task in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"     * @return String denoting the Todo task which will be stored in the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    public String storeTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        return \"T/\" + getDone() + \"/\" + getDescription();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    };","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"     * Returns the String representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"     * @return String representation of the todo task created.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Neha-5678":60}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import duke.exceptions.DukeException1;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public void createToDoTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"            ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"            assertEquals(todo.toString(), \"[T][ ] read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        } catch(DukeException1 e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    public void createEventTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"            Event event \u003d new Event(\"project meeting\", \"01/12/2021 18:00-19:00\");","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"            assertEquals(event.toString(), \"[E][ ] project meeting(at: Dec 1 2021 from 18:00 to 19:00)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        } catch(DukeException1 e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"        //return book /by 02/12/2019 18:00","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        //[D][ ] return book(by: Dec 2 2019 18:00)","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        // project meeting /at 01/12/2021 18:00-19:00","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        //[E][ ] project meeting(at: Dec 1 2021 from 18:00 to 19:00)","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    public void createDeadlineTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"            Deadline deadline \u003d new Deadline(\"return book\", \"02/12/2021 18:00\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"            assertEquals(deadline.toString(), \"[D][ ] return book(by: Dec 2 2021 18:00)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"        } catch(DukeException1 e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Neha-5678":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"deadline return book /by sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Neha-5678":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Neha-5678":1,"-":20}}]
