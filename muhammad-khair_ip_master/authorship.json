[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"import service.ChatBot;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import service.TaskManager;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":" * Duke class.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":" * This class holds the main logic for Duke project (CS2103T\u0027s iP).","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":" * Duke is a task manager for users that love the command line interface.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":" * @author muhammad-khair, damithc","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    private final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    private final static String EXIT_KEY \u003d \"bye\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    private final ChatBot chatBot \u003d new ChatBot();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    private final TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * Driver function for main logic.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"     * @param args command line arguments fed","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"        duke.run();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"     * Runs the whole duke process.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"    public void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.print(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.info(\"Hello! I\u0027m Duke.\\n\\tWhat can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"        String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"        while (!userInput.equals(EXIT_KEY)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"            makeDecision(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"            userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"        scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.info(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"     * Makes a decision based on the user\u0027s input, and acts on it.","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"     * Some actions are listing tasks, marking them as done, creating and deleting tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input to process as commands for Duke","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"    public void makeDecision(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.list(taskManager.listTasks());","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"            } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"                String taskNumberString \u003d userInput.substring(4).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"                Task completedTask \u003d taskManager.markTaskAsDone(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.info(\"Nice! I\u0027ve marked this task as done:\\n\\t  \" + completedTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"muhammad-khair"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"muhammad-khair"},"content":"                String taskNumberString \u003d userInput.substring(6).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"muhammad-khair"},"content":"                Task deletedTask \u003d taskManager.deleteTask(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.info(\"Noted. I\u0027ve removed this task:\\n\\t  \" + deletedTask +","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"muhammad-khair"},"content":"                        \"\\n\\tNow you have \" + taskManager.getTaskListSize() +","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"muhammad-khair"},"content":"                        \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"muhammad-khair"},"content":"            } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"muhammad-khair"},"content":"                echoTaskCreation(taskManager.addToDoTask(userInput.substring(4)));","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"muhammad-khair"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"muhammad-khair"},"content":"                echoTaskCreation(taskManager.addEventTask(userInput.substring(5)));","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"muhammad-khair"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"muhammad-khair"},"content":"                echoTaskCreation(taskManager.addDeadlineTask(userInput.substring(8)));","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"muhammad-khair"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.error(\"Please ensure instruction follows specified format.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"muhammad-khair"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"muhammad-khair"},"content":"        } catch (DukeException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"muhammad-khair"},"content":"            chatBot.error(exception.getLocalizedMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"muhammad-khair"},"content":"     * Helper function that echos out completed task creation.","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"muhammad-khair"},"content":"     * @param task task which was just created","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"muhammad-khair"},"content":"    public void echoTaskCreation(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.info(\"Got it. I\u0027ve added this task:\\n\\t  \" + task + \"\\n\\tNow you have \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"muhammad-khair"},"content":"                taskManager.getTaskListSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":8,"muhammad-khair":99}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * DukeException class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This exception class helps manage exceptions generated by Tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"     * Constructor that uses its parent class\u0027s.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"     * @param message message associated to error face","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":18}},{"path":"src/main/java/service/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * DukeChatBot class.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":" * This class acts as a communicator to the user on the command line.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"public class ChatBot {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private final static String LINE_SPLIT \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"            \"___________________________________________________________________________\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"     * Displays the messaged wrapped with LINE_SPLIT.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"     * @param message message to display within LINE_SPLIT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    public void info(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(LINE_SPLIT);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(\u0027\\t\u0027 + message);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(LINE_SPLIT + \u0027\\n\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"     * Displays the strings in the input list all within one wrapping of LINE_SPLIT.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     * @param messageList list of string messages to display","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"    public void list(List\u003cString\u003e messageList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(LINE_SPLIT);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        for (String message: messageList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"            System.out.println(\u0027\\t\u0027 + message);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(LINE_SPLIT + \u0027\\n\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"     * Uses the default system\u0027s println method to output the message string.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"     * @param string string to print in standard format","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"    public void print(String string) {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(string);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"     * Generates the error template which is then displayed to the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"     * @param errorMessage error message to display","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"    public void error(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"        info(\"☹ Error: \" + errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":56}},{"path":"src/main/java/service/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"import task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"import utils.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"import utils.Instruction;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":" * Parser class.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":" * This class helps parse user input into Instructions for Duke to use with ease.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"public class Parser {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"     * Parses user input and provides an Instruction for Duke to use.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input to be parsed","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"     * @return instruction based on input fed","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if user input is of invalid format","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public Instruction parseUserInput(String userInput) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        userInput \u003d userInput.trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"            return new Instruction(Command.EMPTY);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"        String[] inputArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"        String inputCommand \u003d inputArray[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"        String[] strings \u003d new String[] {};","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"        int number \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"        Command command;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"        switch (inputCommand) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.BYE;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"            case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.LIST;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"            case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.DONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"                number \u003d parseToNumber(inputArray[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.DELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"                number \u003d parseToNumber(inputArray[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"                strings \u003d parseToString(inputArray[1], command);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"                strings \u003d parseToString(inputArray[1], command);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"                strings \u003d parseToString(inputArray[1], command);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"            default: // unknown parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.UNKNOWN;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"        return new Instruction(command, strings, number);","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"     * Parses the user parameters into a String array for use by Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"muhammad-khair"},"content":"     * @param userParams user parameters to parse","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command to be applied with","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"muhammad-khair"},"content":"     * @return a String array of parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userParams is of invalid format","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"muhammad-khair"},"content":"    public String[] parseToString(String userParams, Command command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"muhammad-khair"},"content":"        userParams \u003d userParams.trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"muhammad-khair"},"content":"        if (userParams.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"muhammad-khair"},"content":"        if (command.equals(Command.TODO)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"muhammad-khair"},"content":"            return new String[]{userParams};","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"muhammad-khair"},"content":"        String splitter \u003d \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"muhammad-khair"},"content":"        if (command.equals(Command.EVENT)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"muhammad-khair"},"content":"            splitter \u003d Event.SPLITTER;","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"muhammad-khair"},"content":"        if (command.equals(Command.DEADLINE)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"muhammad-khair"},"content":"            splitter \u003d Deadline.SPLITTER;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"muhammad-khair"},"content":"        String[] stringArray \u003d userParams.split(splitter);","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"muhammad-khair"},"content":"        String desc \u003d stringArray[0].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"muhammad-khair"},"content":"        String param \u003d stringArray[1].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"muhammad-khair"},"content":"        if (desc.isEmpty() || param.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"muhammad-khair"},"content":"        return new String[] {desc, param};","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"muhammad-khair"},"content":"     * Parses the string to an integer.","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"muhammad-khair"},"content":"     * @param userParams string to parse to integer","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"muhammad-khair"},"content":"     * @return an integer","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userParam cannot be parsed to an integer","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"muhammad-khair"},"content":"    public int parseToNumber(String userParams) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"muhammad-khair"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"muhammad-khair"},"content":"            return Integer.parseInt(userParams.trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"muhammad-khair"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":117}},{"path":"src/main/java/service/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"import task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"import task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"import task.Todo;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":" * TaskManager class.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":" * This class acts as the manager of tasks held by the Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    private final static int MAX_STORAGE \u003d 100;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    private final List\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"     * Gets the current number of tasks stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"     * @return number of tasks stored currently","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"        return TASK_LIST.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"     * @param newTask task to save","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     * @return saved task","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if task cannot be saved, due to full capacity of task list","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    public Task addTask(Task newTask) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.size() \u003d\u003d MAX_STORAGE) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Unable to add task as list is full.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"        TASK_LIST.add(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"        return newTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a Todo Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input with parameters for a Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"     * @return Todo Task saved","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if parsing is incorrect, task is not present,","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"     * or task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"    public Task addToDoTask(String userInput) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"        String description \u003d userInput.trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Task description cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"        return addTask(todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"     * Adds an Event Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input with parameters for a Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"     * @return Event Task saved","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if parsing is incorrect, task is not present,","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"     * or task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"muhammad-khair"},"content":"    public Task addEventTask(String userInput) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"muhammad-khair"},"content":"        String[] parameterArray \u003d splitUserInput(Event.SPLITTER, userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"muhammad-khair"},"content":"        Event event \u003d new Event(parameterArray[0], parameterArray[1]); // desc, timing","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"muhammad-khair"},"content":"        return addTask(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a Deadline Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input with parameters for a Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"muhammad-khair"},"content":"     * @return Deadline Task saved","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if parsing is incorrect, task is not present,","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"muhammad-khair"},"content":"     * or task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"muhammad-khair"},"content":"    public Task addDeadlineTask(String userInput) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"muhammad-khair"},"content":"        String[] parameterArray \u003d splitUserInput(Deadline.SPLITTER, userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"muhammad-khair"},"content":"        Deadline deadline \u003d new Deadline(parameterArray[0], parameterArray[1]); // desc, by","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"muhammad-khair"},"content":"        return addTask(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"muhammad-khair"},"content":"     * Splits the user input based on the splitKey into a String array.","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"muhammad-khair"},"content":"     * @param splitKey key String to split userInput with","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input to parse into the relevant parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"muhammad-khair"},"content":"     * @return String array containing description of Task as well as other parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if splitKey is not present in userInput,","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"muhammad-khair"},"content":"     * or if either parameter is empty","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"muhammad-khair"},"content":"    public String[] splitUserInput(String splitKey, String userInput)","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"muhammad-khair"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"muhammad-khair"},"content":"        if (!userInput.contains(splitKey)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Missing key \u0027\" + splitKey + \"\u0027 in command.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"muhammad-khair"},"content":"        String[] inputParts \u003d userInput.split(splitKey);","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"muhammad-khair"},"content":"        if (inputParts.length !\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Ensure input has both parameters for task.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"muhammad-khair"},"content":"        String description \u003d inputParts[0].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"muhammad-khair"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Task description cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"muhammad-khair"},"content":"        String split \u003d inputParts[1].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"muhammad-khair"},"content":"        if (split.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Parameter after \u0027\" + splitKey + \"\u0027 cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"muhammad-khair"},"content":"        return new String[] {description, split};","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"muhammad-khair"},"content":"     * Marks a Task completed based on the input Task number fed as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumberString String format of the Task number to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"muhammad-khair"},"content":"     * @return completed Task","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if String cannot be parsed into an integer or","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"muhammad-khair"},"content":"     * the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"muhammad-khair"},"content":"    public Task markTaskAsDone(String taskNumberString) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"muhammad-khair"},"content":"        Task selectedTask \u003d getTaskFromNumberString(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"muhammad-khair"},"content":"        selectedTask.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"muhammad-khair"},"content":"        return selectedTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"muhammad-khair"},"content":"     * Deletes a Task based on the input Task number fed as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumberString String format of the Task number to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"muhammad-khair"},"content":"     * @return Task to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if String cannot be parsed into an integer or","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"muhammad-khair"},"content":"     * the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"muhammad-khair"},"content":"    public Task deleteTask(String taskNumberString) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"muhammad-khair"},"content":"        Task selectedTask \u003d getTaskFromNumberString(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"muhammad-khair"},"content":"        TASK_LIST.remove(selectedTask); // remove shifts tasks to the right backwards","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"muhammad-khair"},"content":"        return selectedTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"muhammad-khair"},"content":"     * Gets the Task based on the input Task number fed as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumberString String format of the Task number to obtain","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"muhammad-khair"},"content":"     * @return associated Task","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if String cannot be parsed into an integer or","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"muhammad-khair"},"content":"     * the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"muhammad-khair"},"content":"    public Task getTaskFromNumberString(String taskNumberString) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Unable to perform action as list is empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"muhammad-khair"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"muhammad-khair"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"muhammad-khair"},"content":"            taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"muhammad-khair"},"content":"            if (taskNumber \u003c 0 || TASK_LIST.size() \u003c taskNumber) {","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"muhammad-khair"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"muhammad-khair"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"muhammad-khair"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"\u0027\" + taskNumberString + \"\u0027 is not an integer.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"muhammad-khair"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(\"Task number \u0027\" + taskNumberString + \"\u0027 is invalid.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"muhammad-khair"},"content":"        return TASK_LIST.get(taskNumber - 1); // shift to 0-indexing","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"muhammad-khair"},"content":"     * Provides the Tasks in a formatted List of Strings, to be fed to a text printer.","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted tasks in a list of strings","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"muhammad-khair"},"content":"    public List\u003cString\u003e listTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"muhammad-khair"},"content":"        List\u003cString\u003e taskManagerStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"muhammad-khair"},"content":"        taskManagerStringList.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"muhammad-khair"},"content":"        for (int idx \u003d 0; idx \u003c TASK_LIST.size(); idx ++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"muhammad-khair"},"content":"            Task task \u003d TASK_LIST.get(idx);","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"muhammad-khair"},"content":"            int taskNumber \u003d idx + 1; // shift to 1-indexing","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"muhammad-khair"},"content":"            taskManagerStringList.add(String.format(\"%d. %s\", taskNumber, task));","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"muhammad-khair"},"content":"            taskManagerStringList.add(\"-- Empty --\");","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"muhammad-khair"},"content":"        return taskManagerStringList;","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":200}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is a Task that has a \u0027by\u0027 datetime String.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public final static String SPLITTER \u003d \"/by\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return by;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     * Provides a formatted String of the \u0027by\u0027 field.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted String for field \u0027by\u0027","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public String getFormattedBy() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        return \" (\" + SPLITTER.substring(1)  + \": \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"        return \"[D]\" + super.toString() + getFormattedBy();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is a Task that has an \u0027at\u0027 datetime String.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public final static String SPLITTER \u003d \"/at\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public void setAt(String timing) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        this.at \u003d timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     * Provides a formatted String of the \u0027at\u0027 field.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted String for field \u0027at\u0027","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public String getFormattedAt() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        return \" (\" + SPLITTER.substring(1) + \": \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"        return \"[E]\" + super.toString() + getFormattedAt();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Task class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This abstract class acts as a base for all tasks handled by Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     * Sets isDone to true.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"        setDone(true);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"     * Generates a String icon whether task class is done or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"     * @return String icon based on done status","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":55}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Todo class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is the simplest Task which only has a description.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":18}},{"path":"src/main/java/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package utils;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Command enum class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This enum class is used by the service.Parser and helps direct the service.TaskManager to the right operations.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" * They follow the user inputs used to trigger such commands.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"public enum Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    BYE,","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"    LIST,","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    DONE,","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"    DELETE,","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    TODO,","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    EVENT,","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    UNKNOWN,","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"    EMPTY;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":19}},{"path":"src/main/java/utils/Instruction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package utils;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Instruction class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is the product from Parser, which is then used by Duke and TaskManager.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Instruction {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    private Command command;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private String[] strings;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    private int number;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"    public Instruction(Command command, String[] strings, int number) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"        this.strings \u003d strings;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"        this.number \u003d number;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"    public Instruction(Command command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        this.strings \u003d new String[] {};","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"        this.number \u003d -1;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public void setCommand(Command command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"    public String[] getStrings() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"        return strings;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"    public void setStrings(String[] strings) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"        this.strings \u003d strings;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"    public int getNumber() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"        return number;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"    public void setNumber(int number) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"        this.number \u003d number;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":14}},{"path":"text-ui-test/input_exception.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"junk","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"blegh","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"todo create errors","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"done -3","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"event test /at 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"event test /at","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"event /at run","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"deadline test /by","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"deadline /by 4","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"todo make more","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"delete -3","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"REM delete outputs from previous run","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"if exist ACTUAL_EXCEPTION.TXT del ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"REM --- TEST NORMAL INPUTS ---","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"REM --- TEST INPUTS THAT GIVE RISE TO EXCEPTIONS/ERROR MESSAGES ---","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"REM run the program, feed commands from input_exception.txt file and redirect the output to the ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"java -classpath ..\\bin Duke \u003c input_exception.txt \u003e ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"FC ACTUAL_EXCEPTION.TXT EXPECTED_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"-":20,"muhammad-khair":11}}]
