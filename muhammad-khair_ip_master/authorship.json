[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"import service.ChatBot;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import service.Parser;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import service.TaskManager;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"import utils.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":" * Duke class.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":" * This class holds the main logic for Duke project (CS2103T\u0027s iP).","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":" * Duke is a task manager for users that love the command line interface.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":" * @author muhammad-khair, damithc","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    private final TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"    private final ChatBot chatBot \u003d new ChatBot();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"     * Driver function for main logic.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"     * @param args command line arguments fed","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"        duke.run();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"     * Runs the whole Duke process.","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"     * Consists of (1) scanning input and parsing it to a","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"     * Command, (2) parsing the inputs in the format required by the Command and (3)","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"     * executing the Commanding and returning a String output to be printed to console.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"    public void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"        String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"        String output;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"        Command command \u003d Command.parseFromInput(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"        while (!command.equals(Command.BYE)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"                output \u003d parser.execute(command, userInput, taskManager);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.info(output);","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"            } catch (DukeException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"                chatBot.error(exception.getLocalizedMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"            } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"                userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"                command \u003d Command.parseFromInput(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"        scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"        chatBot.exit();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"muhammad-khair":60}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * DukeException class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This exception class helps manage exceptions generated by Tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"     * Constructor that uses its parent class\u0027s.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"     * @param message message associated to error face","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":18}},{"path":"src/main/java/service/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * DukeChatBot class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class acts as a communicator to the user on the command line.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class ChatBot {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    private final static String LOGO \u003d \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"            \" /$$   /$$  /$$$$$$  /$$     /$$ /$$   /$$\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$  /$$/ /$$__  $$|  $$   /$$/| $$  | $$\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$ /$$/ | $$  \\\\ $$ \\\\  $$ /$$/ | $$  | $$\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$$$$/  | $$$$$$$$  \\\\  $$$$/  | $$  | $$\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$  $$  | $$__  $$   \\\\  $$/   | $$  | $$\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$\\\\  $$ | $$  | $$    | $$    | $$  | $$\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"            \"| $$ \\\\  $$| $$  | $$    | $$    |  $$$$$$/\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"            \"|__/  \\\\__/|__/  |__/    |__/     \\\\______/ \\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    private final static String LINE_SPLIT \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"            \"___________________________________________________________________________\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    private final static String GREETING \u003d \"Hello!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"            \"I\u0027m Kayu, your alternative personal task management to Duke!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    private final static String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * Prints a greeting when program is first booted up.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        print(LOGO);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"        info(GREETING);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"     * Prints a closing statement before program terminates.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"    public void exit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"        info(BYE);","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"     * Displays the messaged wrapped with LINE_SPLIT.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"     * @param message message to display within LINE_SPLIT","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"    public void info(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"        print(LINE_SPLIT + \u0027\\n\u0027 + message + \u0027\\n\u0027 + LINE_SPLIT + \u0027\\n\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"     * Uses the default system\u0027s println method to output the message string.","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"     * @param string string to print in standard format","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"    public void print(String string) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"        System.out.println(string);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"     * Generates the error template which is then displayed to the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"     * @param errorMessage error message to display","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"    public void error(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"        info(\"☹ Error: \" + errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":70}},{"path":"src/main/java/service/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"import task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"import utils.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":" * Parser class.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":" * This class helps parse user input into Instructions for Duke to use with ease.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"public class Parser {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    // Error message formats.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"    private static final String EMPTY_COMMAND_ERROR_MESSAGE \u003d \"Instruction cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    private static final String NOT_AN_INTEGER_ERROR_MESSAGE \u003d \"\u0027%s\u0027 is not an integer.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"    private static final String UNKNOWN_COMMAND_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"            \"Instruction does not follows specified format.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    private static final String EMPTY_PARAM_TO_COMMAND_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"            \"Command \u0027%s\u0027 requires parameters to execute.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"    private static final String IMPROPER_FORMATTED_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"            \"Command \u0027%s\u0027 is not formatted properly with key \u0027%s\u0027\";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"     * This method parses the inputs according to the command specified,","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"     * and then executes the command using the taskManager. An output message will","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     * be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command order to execute","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input to parse for execution","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskManager executor of tasks based on commands and parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"     * @return output String message from taskManager after execution","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userInput is of invalid format,","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"     * or taskManager is unable to execute command","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public String execute(Command command, String userInput, TaskManager taskManager)","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"        assert (!command.equals(Command.BYE));","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"            case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.getTaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"            case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.updateTaskAsDone(parseToNumber(userInput, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"            case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.deleteTask(parseToNumber(userInput, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"            case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.addToDoTask(parseToString(userInput, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"            case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.addEventTask(parseToStringArray(userInput, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"                return taskManager.addDeadlineTask(parseToStringArray(userInput, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"            case EMPTY:","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"                throw new DukeException(EMPTY_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"            default: // INVALID","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"                throw new DukeException(UNKNOWN_COMMAND_ERROR_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"     * Returns the parameters of a user input based on command.","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command to be executed with specified arrangement of parameters","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"     * @return parameter String","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if there are no parameters for the command","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"    public String extractParameter(String userInput, Command command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"muhammad-khair"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"muhammad-khair"},"content":"            String[] parameters \u003d userInput.split(\" \", 2); // split on first occurrence","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"muhammad-khair"},"content":"            return parameters[1].trim(); // grab second word onwards","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"muhammad-khair"},"content":"        } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(EMPTY_PARAM_TO_COMMAND_ERROR_MESSAGE, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"muhammad-khair"},"content":"     * Parses the user\u0027s input to return a String parameter for the command.","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command to be executed with specified arrangement of parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"muhammad-khair"},"content":"     * @return a String parameter","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userInput is of invalid format","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"muhammad-khair"},"content":"    public String parseToString(String userInput, Command command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"muhammad-khair"},"content":"        String userParam \u003d extractParameter(userInput, command);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"muhammad-khair"},"content":"        if (userParam.isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(EMPTY_PARAM_TO_COMMAND_ERROR_MESSAGE, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"muhammad-khair"},"content":"        return userParam;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"muhammad-khair"},"content":"     * Parses the user\u0027s input to return a String array for the command.","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command to be executed with specified arrangement of parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"muhammad-khair"},"content":"     * @return a String array of parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userInput is of invalid format","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"muhammad-khair"},"content":"    public String[] parseToStringArray(String userInput, Command command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"muhammad-khair"},"content":"        String userParams \u003d extractParameter(userInput, command);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"muhammad-khair"},"content":"        String key \u003d \"/\";","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"muhammad-khair"},"content":"        if (command.equals(Command.EVENT)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"muhammad-khair"},"content":"            key +\u003d Event.SPLIT_WORD;","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"muhammad-khair"},"content":"        } else if (command.equals(Command.DEADLINE)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"muhammad-khair"},"content":"            key +\u003d Deadline.SPLIT_WORD;","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"muhammad-khair"},"content":"        String[] parameters \u003d userParams.split(key, 0); // pattern applied many times as possible","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"muhammad-khair"},"content":"        if (parameters.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(IMPROPER_FORMATTED_ERROR_MESSAGE, command, key));","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"muhammad-khair"},"content":"        } else if (parameters[0].isBlank() || parameters[1].isBlank()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(EMPTY_PARAM_TO_COMMAND_ERROR_MESSAGE, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"muhammad-khair"},"content":"        return new String[] {parameters[0].trim(), parameters[1].trim()}; // desc, detail","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"muhammad-khair"},"content":"     * Parses the user\u0027s input to return a String array for the command.","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"muhammad-khair"},"content":"     * @param userInput user input","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"muhammad-khair"},"content":"     * @param command command to be executed with specified arrangement of parameters","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"muhammad-khair"},"content":"     * @return an integer parameter","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if userInput is of invalid format","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"muhammad-khair"},"content":"    public int parseToNumber(String userInput, Command command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"muhammad-khair"},"content":"        String userParam \u003d extractParameter(userInput, command);","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"muhammad-khair"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"muhammad-khair"},"content":"            return Integer.parseInt(userParam);","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"muhammad-khair"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(NOT_AN_INTEGER_ERROR_MESSAGE, userParam));","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":140}},{"path":"src/main/java/service/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package service;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"import task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"import task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"import task.Todo;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":" * TaskManager class.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":" * This class acts as the manager of tasks held by the Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    // Error message formats.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    private static final String INVALID_TASK_ERROR_MESSAGE \u003d \"Task number \u0027%d\u0027 is invalid.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    private static final String FULL_CAPACITY_ERROR_MESSAGE \u003d \"Unable to execute as list is full.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"    private static final String EMPTY_LIST_ERROR_MESSAGE \u003d \"Unable to execute as list is empty.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"    // Output message formats.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"List is empty, try adding some tasks first.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"    private static final String TASK_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t%s\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    private static final String TASK_LIST_CONTENTS \u003d \"Here are the task(s) in your list:\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"    private static final String TASK_DELETED_MESSAGE \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"            \"Noted. I\u0027ve removed this task:\\n\\t%s\\nNow you have %d task(s) in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"    private static final String CREATE_TODO_MESSAGE \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"            \"Got it. I\u0027ve added this TODO task:\\n\\t%s\\nNow you have %d task(s) in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    private static final String CREATE_EVENT_MESSAGE \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"            \"Got it. I\u0027ve added this EVENT task:\\n\\t%s\\nNow you have %d task(s) in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    private static final String CREATE_DEADLINE_MESSAGE \u003d","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"            \"Got it. I\u0027ve added this DEADLINE task:\\n\\t%s\\nNow you have %d task(s) in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    private final static int MAX_STORAGE \u003d 100;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    private final List\u003cTask\u003e TASK_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"     * Gets the current number of tasks stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"     * @return number of tasks stored currently","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"        return TASK_LIST.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a task to the task list. Returns saved task.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"     * @param newTask task to save","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"     * @return saved task","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if task cannot be saved, due to full capacity of task list","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"muhammad-khair"},"content":"    public Task addTask(Task newTask) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.size() \u003d\u003d MAX_STORAGE) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(FULL_CAPACITY_ERROR_MESSAGE);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"muhammad-khair"},"content":"        TASK_LIST.add(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"muhammad-khair"},"content":"        return newTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a Todo Task, returns an output message.","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"muhammad-khair"},"content":"     * @param userParams user input with parameters for a Todo","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"muhammad-khair"},"content":"     * @return String message of successful creation of Todo","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"muhammad-khair"},"content":"    public String addToDoTask(String userParams) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"muhammad-khair"},"content":"        assert (!userParams.isBlank());","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"muhammad-khair"},"content":"        Todo todo \u003d new Todo(userParams); // desc","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"muhammad-khair"},"content":"        Task task \u003d addTask(todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"muhammad-khair"},"content":"        return String.format(CREATE_TODO_MESSAGE, task, getTaskListSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"muhammad-khair"},"content":"     * Adds an Event Task, returns an output message.","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"muhammad-khair"},"content":"     * @param userParams user input with parameters for a Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"muhammad-khair"},"content":"     * @return String message of successful creation of Event","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"muhammad-khair"},"content":"    public String addEventTask(String[] userParams) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"muhammad-khair"},"content":"        assert (userParams.length \u003d\u003d 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"muhammad-khair"},"content":"        Event event \u003d new Event(userParams[0], userParams[1]); // desc, timing","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"muhammad-khair"},"content":"        Task task \u003d addTask(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"muhammad-khair"},"content":"        return String.format(CREATE_EVENT_MESSAGE, task, getTaskListSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"muhammad-khair"},"content":"     * Adds a Deadline Task, returns an output message.","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"muhammad-khair"},"content":"     * @param userParams user input with parameters for a Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"muhammad-khair"},"content":"     * @return String message of successful creation of Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if task list is full","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"muhammad-khair"},"content":"    public String addDeadlineTask(String[] userParams) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"muhammad-khair"},"content":"        assert (userParams.length \u003d\u003d 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"muhammad-khair"},"content":"        Deadline deadline \u003d new Deadline(userParams[0], userParams[1]); // desc, by","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"muhammad-khair"},"content":"        Task task \u003d addTask(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"muhammad-khair"},"content":"        return String.format(CREATE_DEADLINE_MESSAGE, task, getTaskListSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"muhammad-khair"},"content":"     * Update a Task completed based on the input Task number fed as a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"muhammad-khair"},"content":"     * Provides an output message on return.","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumber String format of the Task number to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"muhammad-khair"},"content":"     * @return String message of successful completion marking of Task","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"muhammad-khair"},"content":"    public String updateTaskAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"muhammad-khair"},"content":"        Task selectedTask \u003d getTaskFromNumberString(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"muhammad-khair"},"content":"        selectedTask.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"muhammad-khair"},"content":"        return String.format(TASK_DONE_MESSAGE, selectedTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"muhammad-khair"},"content":"     * Deletes a Task based on the input Task number fed as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"muhammad-khair"},"content":"     * Provides an output message on return.","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumber String format of the Task number to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"muhammad-khair"},"content":"     * @return String message of successful deletion of Task","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"muhammad-khair"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"muhammad-khair"},"content":"        Task selectedTask \u003d getTaskFromNumberString(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"muhammad-khair"},"content":"        TASK_LIST.remove(selectedTask); // remove shifts tasks to the right backwards","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"muhammad-khair"},"content":"        return String.format(TASK_DELETED_MESSAGE, selectedTask, getTaskListSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"muhammad-khair"},"content":"     * Gets the Task based on the input Task number fed as a String.","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"muhammad-khair"},"content":"     * @param taskNumber String format of the Task number to obtain","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"muhammad-khair"},"content":"     * @return associated Task","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"muhammad-khair"},"content":"     * @throws DukeException if the Task List is empty or the Task number is not valid","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"muhammad-khair"},"content":"    public Task getTaskFromNumberString(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(EMPTY_LIST_ERROR_MESSAGE);","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"muhammad-khair"},"content":"        if (taskNumber \u003c\u003d 0 || TASK_LIST.size() \u003c taskNumber) {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"muhammad-khair"},"content":"            throw new DukeException(String.format(INVALID_TASK_ERROR_MESSAGE, taskNumber));","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"muhammad-khair"},"content":"        return TASK_LIST.get(taskNumber - 1); // shift to 0-indexing","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"muhammad-khair"},"content":"     * Provides the Tasks in a formatted String, to be fed to a text printer.","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted tasks in String","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"muhammad-khair"},"content":"    public String getTaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"muhammad-khair"},"content":"        if (TASK_LIST.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"muhammad-khair"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"muhammad-khair"},"content":"        StringBuilder tasksAsString \u003d new StringBuilder(TASK_LIST_CONTENTS);","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"muhammad-khair"},"content":"        for (int idx \u003d 0; idx \u003c TASK_LIST.size(); idx ++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"muhammad-khair"},"content":"            tasksAsString.append(String.format(\"\\n\\t%d. %s\", idx + 1, TASK_LIST.get(idx)));","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"muhammad-khair"},"content":"        return tasksAsString.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":170}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is a Task that has a \u0027by\u0027 datetime String.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public final static String SPLIT_WORD \u003d \"by\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return by;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     * Provides a formatted String of the \u0027by\u0027 field.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted String for field \u0027by\u0027","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public String getFormattedBy() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        return \" (\" + SPLIT_WORD  + \": \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"        return \"[D]\" + super.toString() + getFormattedBy();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is a Task that has an \u0027at\u0027 datetime String.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public final static String SPLIT_WORD \u003d \"at\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public void setAt(String timing) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        this.at \u003d timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"     * Provides a formatted String of the \u0027at\u0027 field.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"     * @return formatted String for field \u0027at\u0027","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"    public String getFormattedAt() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"        return \" (\" + SPLIT_WORD + \": \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"        return \"[E]\" + super.toString() + getFormattedAt();","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":40}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Task class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This abstract class acts as a base for all tasks handled by Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"        return description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     * Sets isDone to true.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"        setDone(true);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"     * Generates a String icon whether task class is done or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"     * @return String icon based on done status","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"muhammad-khair"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":55}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Todo class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This class is the simplest Task which only has a description.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":18}},{"path":"src/main/java/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"package utils;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":" * Command enum class.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":" * This enum class is used by the service.Parser and helps direct the TaskManager","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":" * to the right operations. They follow the user inputs used to trigger such commands.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"public enum Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"    EMPTY(\"\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"    INVALID(\"\\0\"); // dummy value","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"    private final String text;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"    Command(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"muhammad-khair"},"content":"        this.text \u003d text;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"        return this.text;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"muhammad-khair"},"content":"     * Provides a Command from the source string, only examines the first word in source.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"muhammad-khair"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"muhammad-khair"},"content":"     * @param input source string to obtain command","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"muhammad-khair"},"content":"     * @return associate Command, else INVALID as default","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"muhammad-khair"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"muhammad-khair"},"content":"    public static Command parseFromInput(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"muhammad-khair"},"content":"        String[] instructionArray \u003d input.split(\" \", 2); // split first word","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"muhammad-khair"},"content":"        String instruction \u003d instructionArray[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"muhammad-khair"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"muhammad-khair"},"content":"            if (instruction.equals(command.text)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"muhammad-khair"},"content":"                return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"muhammad-khair"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"muhammad-khair"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"muhammad-khair"},"content":"        return Command.INVALID; // default","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"muhammad-khair"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"muhammad-khair"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":14}},{"path":"text-ui-test/input_exception.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"muhammad-khair"},"content":"junk","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"muhammad-khair"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"muhammad-khair"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"todo create errors","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"muhammad-khair"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"done -3","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"event test /at 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"muhammad-khair"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"muhammad-khair"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"muhammad-khair"},"content":"event test /at","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"muhammad-khair"},"content":"event /at run","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"muhammad-khair"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"muhammad-khair"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"muhammad-khair"},"content":"deadline test /by","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"muhammad-khair"},"content":"deadline /by 4","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"muhammad-khair"},"content":"todo make more","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"delete -3","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"muhammad-khair"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"muhammad-khair"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"muhammad-khair"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"muhammad-khair":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"muhammad-khair"},"content":"REM delete outputs from previous run","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"muhammad-khair"},"content":"if exist ACTUAL_EXCEPTION.TXT del ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"muhammad-khair"},"content":"REM --- TEST NORMAL INPUTS ---","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"muhammad-khair"},"content":"REM --- TEST INPUTS THAT GIVE RISE TO EXCEPTIONS/ERROR MESSAGES ---","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"muhammad-khair"},"content":"REM run the program, feed commands from input_exception.txt file and redirect the output to the ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"muhammad-khair"},"content":"java -classpath ..\\bin Duke \u003c input_exception.txt \u003e ACTUAL_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"muhammad-khair"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"muhammad-khair"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"muhammad-khair"},"content":"FC ACTUAL_EXCEPTION.TXT EXPECTED_EXCEPTION.TXT","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"-":20,"muhammad-khair":11}}]
