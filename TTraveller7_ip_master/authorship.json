[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":34,"TTraveller7":9}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.command.ICommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":" * Wrapper of Duke\u0027s implementation.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":" * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    private boolean isExit;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"     * Initializes duke with default data save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    public Duke(boolean useGui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"        ui \u003d new Ui(useGui);","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"            storage.initialize();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"     * Initializes duke with given data save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"     * @param pathStr string of save path, ending with the name of save file","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    public Duke(String pathStr, boolean useGui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        ui \u003d new Ui(useGui);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            storage.initialize(pathStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"     * Starts interacting with user. Exit the loop when detecting {@link duke.Parser#WORD_EXIT Parser.WORD_EXIT}.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"    public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"            if (!storage.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"                taskList.load(storage.getFileContents());","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"        // Echo loop till exit word is entered","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"                if (userInput.contains(\"|\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.PIPE_SYMBOL);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"                ICommand c \u003d Parser.parse(userInput, taskList.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"                c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"                this.isExit \u003d c.isExit();","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"                Ui.printErrorMessage(e, userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"     * Starts interacting with user. Exit the loop when detecting {@link duke.Parser#WORD_EXIT Parser.WORD_EXIT}.","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"            if (userInput.contains(\"|\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.PIPE_SYMBOL);","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"            ICommand c \u003d Parser.parse(userInput, taskList.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"            c.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e, userInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"        return Ui.getResponse();","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"        new Duke(false).run();","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TTraveller7":107,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":" * Signals that an exception has occurred during runtime.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":" * Any exception during runtime will be converted to DukeException, resulting an error message to System.out.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    public ExceptionType type;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a DukeException with type of that exception.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"     * @param type Type of exception","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    public DukeException(ExceptionType type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        super(errorTypeToMessage(type));","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a DukeException with the type of that exception and additional information describing it.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"     * @param type type of exception","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"     * @param otherMessage additional information describing the exception","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    public DukeException(ExceptionType type, String otherMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        super(errorTypeToMessage(type) + \" \" + otherMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    private static String errorTypeToMessage(ExceptionType type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        switch (type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            return \"index out of range\";","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        case MISSING_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"            return \"missing operand\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        case DDL_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"            return \"missing keyword \" + Parser.WORD_DEADLINE_BY;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        case EVENT_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            return \"missing keyword \" + Parser.WORD_EVENT_AT;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"            return \"invalid command\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"            return \"invalid operand\";","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        case PIPE_SYMBOL:","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"            return \"OOPS!!! Duke cannot identify the symbol \\\"|\\\". Please do not include it \" +","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"                    \"within your input :)\";","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_READ:","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"            return \"Failed to read from file\";","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_WRITE:","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"            return \"Failed to write to file\";","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"            return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"TTraveller7":55}},{"path":"src/main/java/duke/ExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":" * Represents types of {@link duke.DukeException DukeException}.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"public enum ExceptionType {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"    INDEX_OUT_OF_BOUND, MISSING_OPERAND, DDL_MISSING_KEYWORD, EVENT_MISSING_KEYWORD, INVALID_COMMAND, INVALID_OPERAND,","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    PIPE_SYMBOL,","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    FAIL_TO_READ, FAIL_TO_WRITE, FAIL_TO_CREATE_FILE,","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    OTHERS","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    private Duke duke \u003d new Duke(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import java.util.List;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to parse user command and saved contents.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    // Constant words","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EXIT       \u003d \"bye\";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_LIST       \u003d \"list\";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DELETE_ALL \u003d \"deleteall\";","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DONE       \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DELETE     \u003d \"delete\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_FIND       \u003d \"find\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_TODO        \u003d \"todo\";","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DEADLINE    \u003d \"deadline\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DEADLINE_BY \u003d \"/by\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EVENT       \u003d \"event\";","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EVENT_AT    \u003d \"/at\";","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"    protected static final String DIVIDER_WORD \u003d \" \\\\| \";","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     * Convert user input to {@link duke.command ICommand}.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"     * @param s user command","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"     * @param listSize size of current task list","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"     * @return command for duke to execute","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if user command is missing operand or invalid","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    public static ICommand parse(String s, int listSize) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        // Remove all leading and trailing whitespaces","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        s \u003d s.strip();","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        String[] strArr \u003d s.split(\" \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        if (strArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            switch (strArr[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"                case WORD_EXIT:","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"                    return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"                case WORD_LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"                    return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DELETE_ALL:","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"                    return new DeleteAllCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DELETE:","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"                case WORD_FIND:","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"                case WORD_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"                case WORD_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"                default:","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"            switch (strArr[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"                    return new DoneCommand(tryParse_DoneOrDelete(strArr[1], listSize));","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DELETE:","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"                    return new DeleteCommand(tryParse_DoneOrDelete(strArr[1], listSize));","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"                case WORD_FIND:","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"                    return new FindCommand(strArr[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"                case WORD_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"                    return new AddCommand(strArr);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"                case WORD_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"                    return new AddCommand(tryParse_Deadline(strArr[1]));","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"                case WORD_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                    return new AddCommand(tryParse_Event(strArr[1]));","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"                default:","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"    private static int tryParse_DoneOrDelete(String s, int listSize) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"            int taskIndex \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"                return taskIndex;","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.INVALID_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"     * Parses deadline command to description and due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"     * @param s deadline command","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"     * @return An string array of length 2, with the first element being description and the second being due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"    private static String[] tryParse_Deadline(String s) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"        s \u003d s.strip();","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"        List\u003cString\u003e strList \u003d Arrays.asList(s.split(\" \"));","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"        if (strList.contains(WORD_DEADLINE_BY)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"            int i \u003d strList.indexOf(WORD_DEADLINE_BY);","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"            if (i \u003d\u003d 0 || i \u003d\u003d strList.size() - 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"            return new String[]{\"deadline\",","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"                    s.split(WORD_DEADLINE_BY, 2)[0].strip(),","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"                    s.split(WORD_DEADLINE_BY, 2)[1].strip(),","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"            };","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.DDL_MISSING_KEYWORD);","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"     * Parses event command to description and time period.","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"     * @param s event command","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"     * @return An string array of length 3, with the second element being description and the third being time period.","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"    private static String[] tryParse_Event(String s) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"        s \u003d s.strip();","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"        List\u003cString\u003e strList \u003d Arrays.asList(s.split(\" \"));","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"        if (strList.contains(WORD_EVENT_AT)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"            int i \u003d strList.indexOf(WORD_EVENT_AT);","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"            if (i \u003d\u003d 0 || i \u003d\u003d strList.size() - 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"            return new String[]{\"event\",","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"                    s.split(WORD_EVENT_AT, 2)[0].strip(),","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"                    s.split(WORD_EVENT_AT, 2)[1].strip(),","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"            };","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.EVENT_MISSING_KEYWORD);","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"     * Converts save data string to task.","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"     * @see Task#populateSaveData()","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"     * @param s save data string","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"     * @return a new task constructs based on the given string","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if the string is not aligned with save data format","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"    public static Task fileContentsToTask(String s) throws DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"        String[] arr \u003d s.split(DIVIDER_WORD, 4);","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"TTraveller7"},"content":"        boolean isDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"TTraveller7"},"content":"        switch (arr[0]) {","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"TTraveller7"},"content":"            case \"T\":","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"TTraveller7"},"content":"                return new ToDo(arr[2], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"TTraveller7"},"content":"            case \"D\":","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"TTraveller7"},"content":"                return new Deadline(arr[2], arr[3], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"TTraveller7"},"content":"            case \"E\":","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"TTraveller7"},"content":"                return new Event(arr[2], arr[3], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"TTraveller7"},"content":"            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.FAIL_TO_WRITE, \"Unknown symbol in file.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":157}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to create local file and perform I/O operations with it.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    // About save file","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    private static final String[] SAVE_DIRECTORY \u003d new String[] {\"data\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    private static final String SAVE_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    private static Path savePath;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    private boolean initialized;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    public Storage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        this.initialized \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * Initializes save path with default save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to create file","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    protected void initialize() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"            Path path \u003d Arrays.stream(SAVE_DIRECTORY)","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"                    .map(Paths::get)","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"                    .reduce(Paths.get(\"\"), Path::resolve)","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"                    .resolve(SAVE_FILENAME);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"                Path p \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"                for (String s : SAVE_DIRECTORY) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"                    p \u003d p.resolve(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"                    if (!Files.exists(p))","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"                        Files.createDirectory(p);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"                if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"                    Files.createFile(path);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"            savePath \u003d path;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"            this.initialized \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_CREATE_FILE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"     * Initializes save path with given save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"     * @param pathStr string of given path, ending with save file name","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to create file","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"    protected void initialize(String pathStr) throws DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"            Path path \u003d Paths.get(pathStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"                Path p \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"                Iterator\u003cPath\u003e iterator \u003d p.iterator();","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"                while (iterator.hasNext()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                    p \u003d p.resolve(iterator.next());","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"                    if (!p.equals(path) \u0026\u0026 !Files.exists(p))","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"                        Files.createDirectory(p);","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"                if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"                    Files.createFile(path);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"            savePath \u003d path;","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"            this.initialized \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_CREATE_FILE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"     * Appends a line of text to the end of save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"     * @param textToWrite text to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"    public void writeLine(String textToWrite) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"            FileWriter fileWriter \u003d new FileWriter(savePath.toFile(), true);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"            fileWriter.write(textToWrite);","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"     * Remove a line of text in save file","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"     * @param lineIndex index of line to remove","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"    public void removeLine(int lineIndex) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"            List\u003cString\u003e originalContent \u003d Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"            originalContent.remove(lineIndex);","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"            Files.write(savePath, originalContent);","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"     * Remove all contents in save file","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"    public void removeAll() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"            Files.write(savePath, new ArrayList\u003cString\u003e());","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"     * Change a line in save file","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"     * @param lineIndex index of line to change","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"     * @param textToWrite new text at the line","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"    public void setLine(int lineIndex, String textToWrite) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"            List\u003cString\u003e originalContent \u003d Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"            originalContent.set(lineIndex, textToWrite);","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"TTraveller7"},"content":"            Files.write(savePath, originalContent);","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"TTraveller7"},"content":"     * Checks if save file is empty.","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"TTraveller7"},"content":"     * @return true if save file is empty, false otherwise","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to read from save file","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"TTraveller7"},"content":"    protected boolean isEmpty() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"TTraveller7"},"content":"            return Files.readString(savePath).isEmpty();","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_READ, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"TTraveller7"},"content":"     * Reads all lines from save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"TTraveller7"},"content":"     * @return the lines from save file as a list","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to read from save file","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"TTraveller7"},"content":"    protected List\u003cString\u003e getFileContents() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"TTraveller7"},"content":"            return Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_READ, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":178}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" * Contains the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"public class TaskList extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"     * Takes a list of save data string, convert them to tasks and add them into list.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"     * @param list lines of save data as list","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    protected void load(List\u003cString\u003e list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        for(String s : list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"                super.add(Parser.fileContentsToTask(s));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    public void deleteAll() {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        super.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":31}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"public class AddCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    private Task task;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    private static final String WORD_TODO     \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    private static final String WORD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    private static final String WORD_EVENT    \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    public AddCommand(String[] strArr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        switch (strArr[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"            case WORD_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"                task \u003d new ToDo(strArr[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"            case WORD_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"                task \u003d new Deadline(strArr[1], strArr[2]);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"            case WORD_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"                task \u003d new Event(strArr[1], strArr[2]);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        Ui.printNewTask(task.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        Ui.printTaskCount(taskList.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        storage.writeLine(task.populateSaveData() + System.lineSeparator());","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"            return ((AddCommand) o).task.equals(this.task);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":51}},{"path":"src/main/java/duke/command/DeleteAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"public class DeleteAllCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"        taskList.deleteAll();","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        storage.removeAll();","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        Ui.printRemoveAll();","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        return o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"public class DeleteCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    private int lineIndex;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public DeleteCommand(int lineIndex) {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        this.lineIndex \u003d lineIndex;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        storage.removeLine(lineIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        Ui.printRemoveTask(taskList.get(lineIndex).toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        taskList.remove(lineIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        Ui.printTaskCount(taskList.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            return ((DeleteCommand) o).lineIndex \u003d\u003d this.lineIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":37}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"public class DoneCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    private int lineIndex;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    public DoneCommand(int lineIndex) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        this.lineIndex \u003d lineIndex;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        Task task \u003d taskList.get(lineIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        storage.setLine(lineIndex, task.populateSaveData());","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        task.setStatus(true);","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        Ui.printMarkDone(task.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"            return ((DoneCommand) o).lineIndex \u003d\u003d this.lineIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":38}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class ExitCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        return true;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        return o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass();","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"public class FindCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    private String keyWord;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public FindCommand(String keyWord) {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        Ui.printFoundTasks(taskList.stream()","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"                .filter(t -\u003e t.getDescription().contains(keyWord))","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"                .map(Task::toString)","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"                .toArray(String[]::new)","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"            return ((FindCommand) o).keyWord.equals(this.keyWord);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":38}},{"path":"src/main/java/duke/command/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"public interface ICommand {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList t, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit();","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":12}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class ListCommand implements ICommand{","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"        Ui.printList(taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        return o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass();","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"TTraveller7":22}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    private boolean hasDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a deadline instance with description and due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"     * @param by due time. If given string is in format xxxx-xx-xx(x is number), a LocalDate instance will be created to","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"     *          store the date","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"            date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a deadline instance with description, due time and task status.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"     * @param by due time. If given string is in format xxxx-xx-xx(x is number), a LocalDate instance will be created to","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"     *          store the date","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"     * @param isDone task status","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"            date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"        return \"D | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"            if (d.isDone \u003d\u003d this.isDone \u0026\u0026 d.description.equals(this.description)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"                if (this.hasDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"                    return d.hasDate \u0026\u0026 this.date.equals(d.date);","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"                } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"                    return !d.hasDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"                (hasDate ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : by) + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":77}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    protected String period;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"    public Event(String description, String period) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public Event(String description, String period, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + this.period;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"            return ((Event) o).isDone \u003d\u003d this.isDone","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"                    \u0026\u0026 ((Event) o).description.equals(this.description)","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"                    \u0026\u0026 ((Event) o).period.equals(this.period);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + period + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"     * Convert the task into a string to store in local file.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"     * The fields are divide by \"|\"; second parameter is 1 if the task is done, 0 otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * @see duke.Parser#fileContentsToTask(String)","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     * @return a string to store in local file that represents the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        return this.description;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":47}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        return \"T | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    public boolean equals(Object o){","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        if (o \u003d\u003d this) return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        if (o !\u003d null \u0026\u0026 o.getClass() \u003d\u003d this.getClass()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"            return ((ToDo) o).isDone \u003d\u003d this.isDone","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"                    \u0026\u0026 ((ToDo) o).description.equals(this.description);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":32}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"    private void flip() {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"        db.flip();","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"        if (duke.isExit()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"            ((Stage) getScene().getWindow()).close();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":58}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to interact with user.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    // Constant Strings","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    protected static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    protected static final String LEFT_INDENT \u003d \"    \";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    private static ArrayList\u003cString\u003e log;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    private static boolean useGui;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public Ui(boolean useGui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        Ui.useGui \u003d useGui;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        if (useGui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"            log \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"     * Read next line of user command from System.in.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"     * @return next line of user command as string","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"    protected static void printWithIndent(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        if (!useGui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"            System.out.println(LEFT_INDENT + s);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"            log.add(s);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"    public static void printDividerLine() {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"        // print logo","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"        // print welcome words","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"What can I do for you?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent((i+1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"    public static void printTaskCount(int listSize) {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(getTaskCountString(listSize));","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"    public static void printFoundTasks(String[] tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"                printWithIndent((i + 1) + \".\" + tasks[i]);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"There is no matching task in your list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"    public static void printNewTask(String taskStr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"    public static void printRemoveTask(String taskStr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"    public static void printRemoveAll() {","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Noted. I\u0027ve removed all tasks from list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"    public static void printMarkDone(String taskStr) {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"     * Prints an error message based on exception type of DukeException.","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"     * @param e exception to print","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"     * @param userInput the lastest user command before exception happens","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"    public static void printErrorMessage(DukeException e, String userInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"        switch (e.type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"        case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"        case MISSING_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(userInput + \": \" + e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"        case DDL_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage() + \". Correct format is:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"deadline {description} /by {due time}\");","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Example: deadline return book /by Sunday\");","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"        case EVENT_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage() + \". Correct format is:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"event {description} /at {time period}\");","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Example: event project meeting /at Mon 2-4pm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"        case PIPE_SYMBOL:","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_READ:","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_WRITE:","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"     * Prints an error message based on exception type of DukeException.","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"     * @param e exception to print","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"TTraveller7"},"content":"    public static void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"TTraveller7"},"content":"        printErrorMessage(e, \"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"TTraveller7"},"content":"    protected static String getTaskCountString(int listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"TTraveller7"},"content":"        return \"Now you have \" + listSize + \" task\" + (listSize \u003c\u003d 1 ? \"\" : \"s\")","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"TTraveller7"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"TTraveller7"},"content":"    public static String getResponse() {","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"TTraveller7"},"content":"        String s \u003d log.stream().reduce(\"\", (result, str) -\u003e result + \" \" + str);","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"TTraveller7"},"content":"        log.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"TTraveller7"},"content":"        return s;","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":160}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    public void constructor_validDate_dateReturned() {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        Deadline ddl \u003d new Deadline(\"des\", date.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][ ] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 0 | des | \" + date.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        ddl \u003d new Deadline(\"des\", date.toString(), true);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][X] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 1 | des | \" + date.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        ddl \u003d new Deadline(\"des\", date.toString(), false);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][ ] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 0 | des | \" + date.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    public void equals_validDate_test() {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(new Deadline(\"des\", date.toString()), new Deadline(\"des\", date.toString()));","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(new Deadline(\"des\", date.toString(), true), new Deadline(\"des\", date.toString(), true));","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        assertNotEquals(new Deadline(\"des\", date.toString()), new Deadline(\"de\", date.toString()));","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        assertNotEquals(new Deadline(\"des\", date.toString()), new Deadline(\"des\", date.minusDays(1L).toString()));","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        assertNotEquals(new Deadline(\"des\", date.toString(), true), new Deadline(\"de\", date.toString(), true));","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        assertNotEquals(new Deadline(\"des\", date.toString(), true), new Deadline(\"des\", date.toString(), false));","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        assertNotEquals(new Deadline(\"des\", date.toString(), false), new Deadline(\"des\", date.minusDays(1L).toString(), false));","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":41}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public void parse_validInputs_commandReturned() throws Exception{","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\" bye  \", 1), new ExitCommand());","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"list\", 1), new ListCommand());","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"todo a\", 1), new AddCommand(new String[]{\"todo\", \"a\"}));","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"deadline   a  /by    b\", 1), new AddCommand(new String[]{\"deadline\", \"a\", \"b\"}));","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"event a /at b\", 1), new AddCommand(new String[]{\"event\", \"a\", \"b\"}));","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"delete 10000\", 10000), new DeleteCommand(9999));","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.parse(\"done 20000\", 20000), new DoneCommand(19999));","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public void parse_invalidInputs_exceptionThrown() {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"bye s\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"list a\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"todo\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"deadline  /by s\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"event a /by b\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"delete -1\", 0);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            Parser.parse(\"done 2\", 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"TTraveller7":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"todo read book |","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"read book","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"todo","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"event","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"deadline watch video","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"deadline watch video /by","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"event read book","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"event read book /at","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"bye","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TTraveller7":10}}]
