[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"D | 0 | a | b","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"D | 0 | d | 1","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"D | 0 | d | null","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"T | 0 | a","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"T | 0 | asasda\\","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"E | 0 | asdaskd | asda","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"D | 0 | asdad | asdkja","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":" * Wrapper of Duke\u0027s implementation.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":" * Duke is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"     * Initializes duke with default data save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"            storage.initialize();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * Initializes duke with given data save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     * @param pathStr string of save path, ending with the name of save file","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    public Duke(String pathStr) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"            storage.initialize(pathStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"     * Starts interacting with user. Exit the loop when detecting {@link duke.Parser#WORD_EXIT Parser.WORD_EXIT}.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"    public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"            if (!storage.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"                taskList.load(storage.getFileContents());","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"        // Echo loop till exit word is entered","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"            String userInput \u003d ui.readCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"                if (userInput.contains(\"|\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.PIPE_SYMBOL);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"                DukeAction dukeAction \u003d Parser.stringToDukeAction(userInput, taskList.size());","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"                switch (dukeAction) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                case EXIT:","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"                    Ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"                    isExit \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"                case PRINT_LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"                    Ui.printList(taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"                case MARK_DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"                    onTaskDone(Parser.parseMarkString(userInput));","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"                    onTaskRemoved(Parser.parseDeleteString(userInput));","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"                case FIND:","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"                    onFindTask(Parser.parseFindString(userInput));","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"                case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"                    ToDo toDo \u003d new ToDo(userInput.substring(5));","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"                    onNewTaskAdded(toDo);","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"                    String[] strArr \u003d Parser.parseDeadlineString(userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"                    Deadline deadline \u003d new Deadline(strArr[0], strArr[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"                    onNewTaskAdded(deadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"                case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"                    String[] strArr_ \u003d Parser.parseEventString(userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"                    Event event \u003d new Event(strArr_[0], strArr_[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"                    onNewTaskAdded(event);","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"                Ui.printErrorMessage(e, userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"                Ui.printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"    // Handlers","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"    private void onFindTask(String keyWord) {","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"        Ui.printFoundTasks(taskList.stream()","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"                .filter(t -\u003e t.getDescription().contains(keyWord))","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"                .map(Task::toString)","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"                .toArray(String[]::new)","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"    private \u003cT extends Task\u003e void onNewTaskAdded(T t) throws DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"        taskList.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"        Ui.printNewTask(t.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"        Ui.printTaskCount(taskList.size());","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"        storage.writeLine(t.populateSaveData() + System.lineSeparator());","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"    private void onTaskRemoved(int index) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"        storage.removeLine(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"        Ui.printRemoveTask(taskList.get(index).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"        Ui.printTaskCount(taskList.size());","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"    private void onTaskDone(int index) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"        storage.setLine(index, task.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"        task.setStatus(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"        Ui.printMarkDone(task.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TTraveller7":143,"-":2}},{"path":"src/main/java/duke/DukeAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":" * Representation of valid command types.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"public enum DukeAction {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"    EXIT, PRINT_LIST, MARK_DONE, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":8}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":" * Signals that an exception has occurred during runtime.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":" * Any exception during runtime will be converted to DukeException, resulting an error message to System.out.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    protected ExceptionType type;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a DukeException with type of that exception.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"     * @param type Type of exception","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    public DukeException(ExceptionType type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        super(errorTypeToMessage(type));","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a DukeException with the type of that exception and additional information describing it.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"     * @param type type of exception","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"     * @param otherMessage additional information describing the exception","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    public DukeException(ExceptionType type, String otherMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        super(errorTypeToMessage(type) + \" \" + otherMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    private static String errorTypeToMessage(ExceptionType type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        switch (type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            return \"index out of range\";","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        case MISSING_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"            return \"missing operand\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"        case DDL_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"            return \"missing keyword\" + Parser.WORD_DEADLINE_BY;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        case EVENT_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            return \"missing keyword\" + Parser.WORD_EVENT_AT;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"            return \"invalid command\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"            return \"invalid operand\";","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        case PIPE_SYMBOL:","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"            return \"OOPS!!! Duke cannot identify the symbol \\\"|\\\". Please do not include it \" +","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"                    \"within your input :)\";","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_READ:","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"            return \"Failed to read from file\";","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_WRITE:","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"            return \"Failed to write to file\";","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"            return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"TTraveller7":55}},{"path":"src/main/java/duke/ExceptionType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":" * Represents types of {@link duke.DukeException DukeException}.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"public enum ExceptionType {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"    INDEX_OUT_OF_BOUND, MISSING_OPERAND, DDL_MISSING_KEYWORD, EVENT_MISSING_KEYWORD, INVALID_COMMAND, INVALID_OPERAND,","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    PIPE_SYMBOL,","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    FAIL_TO_READ, FAIL_TO_WRITE, FAIL_TO_CREATE_FILE,","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    OTHERS","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to parse user command and saved contents.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    // Constant words","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_LIST \u003d \"list\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_MARK \u003d \"done \";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_TODO \u003d \"todo \";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DEADLINE \u003d \"deadline \";","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DEADLINE_BY \u003d \" /by \";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EVENT \u003d \"event \";","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_EVENT_AT \u003d \" /at \";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_DELETE \u003d \"delete \";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    protected static final String DIVIDER_WORD \u003d \" \\\\| \";","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    protected static final String WORD_FIND \u003d \"find \";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"     * Convert user command to {@link duke.DukeAction DukeAction}.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"     * @param s user command","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"     * @param listSize size of current task list","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"     * @return type of duke action","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if user command is missing operand or invalid","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    public static DukeAction stringToDukeAction(String s, int listSize) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        // Remove all leading whitespaces","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        s \u003d s.stripLeading();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        if (s.equals(WORD_EXIT)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.EXIT;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        else if (s.equals(WORD_LIST)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.PRINT_LIST;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        else if (isFind(s)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.FIND;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        else if (isMarkDown(s, listSize)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.MARK_DONE;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        else if (isDelete(s, listSize)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.DELETE;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"        else if (isToDo(s)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"                return DukeAction.TODO;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"        else if (isDeadline(s)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.DEADLINE;","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"        else if (isEvent(s)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"            return DukeAction.EVENT;","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"            throw Arrays.asList(new String[] {\"todo\", \"done\", \"event\", \"delete\", \"deadline\", \"find\"})","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"                    .contains(s)","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"                    ? new DukeException(ExceptionType.MISSING_OPERAND)","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"                    : new DukeException(ExceptionType.INVALID_COMMAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isFind(String s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"        if (s.equals(WORD_FIND)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"        return s.length() \u003e WORD_FIND.length() \u0026\u0026 s.startsWith(WORD_FIND);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isMarkDown(String s, int listSize) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"        if (s.equals(WORD_MARK)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"        if (s.length() \u003e WORD_MARK.length() \u0026\u0026 s.startsWith(WORD_MARK)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"                int taskIndex \u003d parseMarkString(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"                    return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"                } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.INVALID_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isDelete(String s, int listSize) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"        if (s.length() \u003e WORD_DELETE.length() \u0026\u0026 s.startsWith(WORD_DELETE)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"                int taskIndex \u003d parseDeleteString(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"                if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"                    return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"                else {","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.INDEX_OUT_OF_BOUND);","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.INVALID_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isToDo(String s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"        if (s.startsWith(WORD_TODO)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"            if (s.length() \u003c\u003d WORD_TODO.length()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"                return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isDeadline(String s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"        if (s.startsWith(WORD_DEADLINE)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"            if (s.length() \u003c\u003d WORD_DEADLINE.length()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"            } else if (s.contains(WORD_DEADLINE_BY)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"                String[] strArr \u003d parseDeadlineString(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"                if (strArr.length \u003d\u003d 2 \u0026\u0026 !strArr[0].equals(\"\") \u0026\u0026 !strArr[1].equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"                    return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"                } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.DDL_MISSING_KEYWORD);","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"    private static boolean isEvent(String s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"        if (s.startsWith(WORD_EVENT)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"            if (s.length() \u003c\u003d WORD_EVENT.length()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"            } else if (s.contains(WORD_EVENT_AT)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"                String[] strArr \u003d parseEventString(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"                if (strArr.length \u003d\u003d 2 \u0026\u0026 !strArr[0].equals(\"\") \u0026\u0026 !strArr[1].equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"TTraveller7"},"content":"                    return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"TTraveller7"},"content":"                } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"TTraveller7"},"content":"                    throw new DukeException(ExceptionType.MISSING_OPERAND);","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"TTraveller7"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.EVENT_MISSING_KEYWORD);","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"TTraveller7"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"TTraveller7"},"content":"     * Parses find command to get keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"TTraveller7"},"content":"     * @param s find command","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"TTraveller7"},"content":"     * @return keyword as string","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"TTraveller7"},"content":"    protected static String parseFindString(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"TTraveller7"},"content":"        return s.substring(WORD_FIND.length());","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"TTraveller7"},"content":"     * Parses deadline command to description and due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"TTraveller7"},"content":"     * @param s deadline command","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"TTraveller7"},"content":"     * @return An string array of length 2, with the first element being description and the second being due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"TTraveller7"},"content":"    protected static String[] parseDeadlineString(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"TTraveller7"},"content":"        return s.substring(WORD_DEADLINE.length()).split(WORD_DEADLINE_BY, 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"TTraveller7"},"content":"     * Parses event command to description and time period.","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"TTraveller7"},"content":"     * @param s event command","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"TTraveller7"},"content":"     * @return An string array of length 2, with the first element being description and the second being time period.","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"TTraveller7"},"content":"    protected static String[] parseEventString(String s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":180,"author":{"gitId":"TTraveller7"},"content":"        return s.substring(WORD_EVENT.length()).split(WORD_EVENT_AT, 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":183,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"TTraveller7"},"content":"     * Parses mark command to index of task to mark as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"TTraveller7"},"content":"     * @param s mark command","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"TTraveller7"},"content":"     * @return index of task to mark as done","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"TTraveller7"},"content":"    protected static int parseMarkString(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"TTraveller7"},"content":"        return Integer.parseInt(s.substring(WORD_MARK.length())) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":190,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"TTraveller7"},"content":"     * Parses delete command to index of task to remove.","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"TTraveller7"},"content":"     * @param s delete command","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"TTraveller7"},"content":"     * @return index of task to remove","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"TTraveller7"},"content":"    protected static int parseDeleteString(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"TTraveller7"},"content":"        return Integer.parseInt(s.substring(WORD_DELETE.length())) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":202,"author":{"gitId":"TTraveller7"},"content":"     * Converts save data string to task.","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"TTraveller7"},"content":"     * @see Task#populateSaveData()","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"TTraveller7"},"content":"     * @param s save data string","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"TTraveller7"},"content":"     * @return a new task constructs based on the given string","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if the string is not aligned with save data format","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"TTraveller7"},"content":"    public static Task fileContentsToTask(String s) throws DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"TTraveller7"},"content":"        String[] arr \u003d s.split(DIVIDER_WORD, 4);","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"TTraveller7"},"content":"        boolean isDone \u003d arr[1].equals(\"1\");","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"TTraveller7"},"content":"        switch (arr[0]) {","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"TTraveller7"},"content":"            case \"T\":","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"TTraveller7"},"content":"                return new ToDo(arr[2], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"TTraveller7"},"content":"            case \"D\":","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"TTraveller7"},"content":"                return new Deadline(arr[2], arr[3], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"TTraveller7"},"content":"            case \"E\":","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"TTraveller7"},"content":"                return new Event(arr[2], arr[3], isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"TTraveller7"},"content":"            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"TTraveller7"},"content":"                throw new DukeException(ExceptionType.FAIL_TO_WRITE, \"Unknown symbol in file.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":221,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":222}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to create local file and perform I/O operations with it.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    // About save file","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    private static final String[] SAVE_DIRECTORY \u003d new String[] {\"data\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    private static final String SAVE_FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    private static Path savePath;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    private boolean initialized;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    public Storage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        this.initialized \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * Initializes save path with default save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to create file","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    protected void initialize() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"            Path path \u003d Arrays.stream(SAVE_DIRECTORY)","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"                    .map(Paths::get)","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"                    .reduce(Paths.get(\"\"), Path::resolve)","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"                    .resolve(SAVE_FILENAME);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"                Path p \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"                for (String s : SAVE_DIRECTORY) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"                    p \u003d p.resolve(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"                    if (!Files.exists(p))","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"                        Files.createDirectory(p);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"                if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"                    Files.createFile(path);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"            savePath \u003d path;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"            this.initialized \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_CREATE_FILE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"     * Initializes save path with given save path.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"     * @param pathStr string of given path, ending with save file name","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to create file","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"    protected void initialize(String pathStr) throws DukeException{","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"            Path path \u003d Paths.get(pathStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"                Path p \u003d Paths.get(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"                Iterator\u003cPath\u003e iterator \u003d p.iterator();","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"                while (iterator.hasNext()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                    p \u003d p.resolve(iterator.next());","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"                    if (!p.equals(path) \u0026\u0026 !Files.exists(p))","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"                        Files.createDirectory(p);","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"                if (!Files.exists(path)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"                    Files.createFile(path);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"            savePath \u003d path;","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"            this.initialized \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_CREATE_FILE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"     * Appends a line of text to the end of save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"     * @param textToWrite text to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"    protected void writeLine(String textToWrite) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"            FileWriter fileWriter \u003d new FileWriter(savePath.toFile(), true);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"            fileWriter.write(textToWrite);","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"     * Remove a line of text in save file","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"     * @param lineIndex index of line to remove","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"    protected void removeLine(int lineIndex) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"            List\u003cString\u003e originalContent \u003d Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"            originalContent.remove(lineIndex);","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"            Files.write(savePath, originalContent);","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"     * Change a line in save file","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"     * @param lineIndex index of line to change","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"     * @param textToWrite new text at the line","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to write to save file","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"    protected void setLine(int lineIndex, String textToWrite) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return;","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"            List\u003cString\u003e originalContent \u003d Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"            originalContent.set(lineIndex, textToWrite);","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"            Files.write(savePath, originalContent);","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_WRITE, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"TTraveller7"},"content":"     * Checks if save file is empty.","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"TTraveller7"},"content":"     * @return true if save file is empty, false otherwise","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to read from save file","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"TTraveller7"},"content":"    protected boolean isEmpty() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"TTraveller7"},"content":"            return Files.readString(savePath).isEmpty();","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_READ, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"TTraveller7"},"content":"     * Reads all lines from save file.","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"TTraveller7"},"content":"     * @return the lines from save file as a list","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"TTraveller7"},"content":"     * @throws DukeException if failed to read from save file","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"TTraveller7"},"content":"    protected List\u003cString\u003e getFileContents() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"TTraveller7"},"content":"        if (!this.initialized) return new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"TTraveller7"},"content":"            return Files.readAllLines(savePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"TTraveller7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"TTraveller7"},"content":"            throw new DukeException(ExceptionType.FAIL_TO_READ, e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":165}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":" * Contains the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"public class TaskList extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"     * Takes a list of save data string, convert them to tasks and add them into list.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"     * @param list lines of save data as list","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    protected void load(List\u003cString\u003e list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        for(String s : list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"                super.add(Parser.fileContentsToTask(s));","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":" * Provides methods to interact with user.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    // Constant Strings","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    protected static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    protected static final String LEFT_INDENT \u003d \"    \";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    public Ui() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"     * Read next line of user command from System.in.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"     * @return next line of user command as string","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    protected String readCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"    protected static void printWithIndent(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        System.out.println(LEFT_INDENT + s);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"    protected static void printDividerLine() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        System.out.println(LEFT_INDENT + HORIZONTAL_LINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    protected static void printWelcomeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        // print logo","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        // print welcome words","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"What can I do for you?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"    protected static void printGoodbyeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"    protected static void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent((i+1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"TTraveller7"},"content":"    protected static void printTaskCount(int listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(getTaskCountString(listSize));","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"TTraveller7"},"content":"    protected static void printFoundTasks(String[] tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"TTraveller7"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"TTraveller7"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"TTraveller7"},"content":"                printWithIndent((i + 1) + \".\" + tasks[i]);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"TTraveller7"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"TTraveller7"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"There is no matching task in your list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"TTraveller7"},"content":"    protected static void printNewTask(String taskStr) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"TTraveller7"},"content":"    protected static void printRemoveTask(String taskStr) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"TTraveller7"},"content":"        printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"TTraveller7"},"content":"    protected static void printMarkDone(String taskStr) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"TTraveller7"},"content":"        Ui.printWithIndent(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"TTraveller7"},"content":"        Ui.printWithIndent(\"  \" + taskStr);","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"TTraveller7"},"content":"     * Prints an error message based on exception type of DukeException.","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"TTraveller7"},"content":"     * @param e exception to print","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"TTraveller7"},"content":"     * @param userInput the lastest user command before exception happens","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"TTraveller7"},"content":"    protected static void printErrorMessage(DukeException e, String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"TTraveller7"},"content":"        switch (e.type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"TTraveller7"},"content":"        case INDEX_OUT_OF_BOUND:","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"TTraveller7"},"content":"        case INVALID_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"TTraveller7"},"content":"        case MISSING_OPERAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(userInput + \": \" + e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"TTraveller7"},"content":"        case DDL_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage() + \". Correct format is:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"deadline {description} /by {due time}\");","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Example: deadline return book /by Sunday\");","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"TTraveller7"},"content":"        case EVENT_MISSING_KEYWORD:","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage() + \". Correct format is:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"event {description} /at {time period}\");","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(\"Example: event project meeting /at Mon 2-4pm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"TTraveller7"},"content":"        case PIPE_SYMBOL:","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_READ:","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"TTraveller7"},"content":"        case FAIL_TO_WRITE:","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"TTraveller7"},"content":"            printWithIndent(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"TTraveller7"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"TTraveller7"},"content":"     * Prints an error message based on exception type of DukeException.","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"TTraveller7"},"content":"     * @param e exception to print","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"TTraveller7"},"content":"    protected static void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"TTraveller7"},"content":"        printErrorMessage(e, \"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"TTraveller7"},"content":"    protected static String getTaskCountString(int listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"TTraveller7"},"content":"        return \"Now you have \" + listSize + \" tasks in the list.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":136}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    private boolean hasDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a deadline instance with description and due time.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"     * @param by due time. If given string is in format xxxx-xx-xx(x is number), a LocalDate instance will be created to","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"     *          store the date","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"            date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"     * Constructs a deadline instance with description, due time and task status.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"     * @param by due time. If given string is in format xxxx-xx-xx(x is number), a LocalDate instance will be created to","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"     *          store the date","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"     * @param isDone task status","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"            date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"            hasDate \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TTraveller7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TTraveller7"},"content":"                (hasDate ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : by) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"TTraveller7"},"content":"        return \"D | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    protected String period;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"    public Event(String description, String period) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public Event(String description, String period, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        this.period \u003d period;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + period + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        return \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.description + \" | \" + this.period;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"     * Convert the task into a string to store in local file.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"     * The fields are divide by \"|\"; second parameter is 1 if the task is done, 0 otherwise.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"     * @see duke.Parser#fileContentsToTask(String)","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"     * @return a string to store in local file that represents the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        return this.description;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":47}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"    public String populateSaveData() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        return \"T | \" + (this.isDone ? 1 : 0) + \" | \" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TTraveller7":21}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"    public void constructor_validDate_dateReturned() {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        Deadline ddl \u003d new Deadline(\"des\", date.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][ ] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 0 | des | 2021-09-01\");","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        ddl \u003d new Deadline(\"des\", date.toString(), true);","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][X] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 1 | des | 2021-09-01\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"        ddl \u003d new Deadline(\"des\", date.toString(), false);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.toString(), \"[D][ ] des (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(ddl.populateSaveData(), \"D | 0 | des | 2021-09-01\");","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":26}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeAction;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"TTraveller7"},"content":"    public void stringToDukeAction_validInputs_actionTypeReturned() throws Exception{","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\" bye\", 1), DukeAction.EXIT);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"list\", 1), DukeAction.PRINT_LIST);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"todo a\", 1), DukeAction.TODO);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"deadline a /by b\", 1), DukeAction.DEADLINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"event a /at b\", 1), DukeAction.EVENT);","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"delete 10000\", 10000), DukeAction.DELETE);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"TTraveller7"},"content":"        assertEquals(Parser.stringToDukeAction(\"done 10000\", 10000), DukeAction.MARK_DONE);","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"TTraveller7"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"TTraveller7"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"TTraveller7"},"content":"    public void stringToDukeAction_invalidInputs_exceptionThrown() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"bye s\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"list a\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"todo\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"deadline  /by s\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"event a /by b\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"delete -1\", 0);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"TTraveller7"},"content":"        assertThrows(DukeException.class, () -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"TTraveller7"},"content":"            Parser.stringToDukeAction(\"done 2\", 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"TTraveller7"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"TTraveller7"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"TTraveller7"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"TTraveller7":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TTraveller7"},"content":"todo read book |","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TTraveller7"},"content":"read book","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TTraveller7"},"content":"todo","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TTraveller7"},"content":"deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TTraveller7"},"content":"event","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TTraveller7"},"content":"deadline watch video","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TTraveller7"},"content":"deadline watch video /by","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TTraveller7"},"content":"event read book","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TTraveller7"},"content":"event read book /at","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TTraveller7"},"content":"bye","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TTraveller7":10}}]
