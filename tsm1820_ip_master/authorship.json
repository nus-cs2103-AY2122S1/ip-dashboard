[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsm1820"},"content":"import java.sql.SQLOutput;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"tsm1820"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"tsm1820"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"tsm1820"},"content":"import static java.lang.Integer.*;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"tsm1820"},"content":"    enum Category {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tsm1820"},"content":"        TODO,","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"tsm1820"},"content":"        EVENT,","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"tsm1820"},"content":"        DEADLINE","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"tsm1820"},"content":"    public class Display {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"tsm1820"},"content":"        /** Boolean variable to exit the program */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"tsm1820"},"content":"        private boolean bye \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"tsm1820"},"content":"       /** ArrayList to store all tasks */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"tsm1820"},"content":"        private ArrayList\u003cTaskList\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"tsm1820"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"tsm1820"},"content":"         * Method to return the initial default greeting","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"tsm1820"},"content":"         * @return The initial String greeting","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"tsm1820"},"content":"        public String initGreeting() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"tsm1820"},"content":"            return \"_____________________________________________________________________\" + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"tsm1820"},"content":"                    + \"    Hi! I\u0027m Muts!\" + \"\\n\" + \"    Just a little intro : I\u0027m not a bot, I am as real as any of your human friends!\"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"tsm1820"},"content":"                    + \"\\n\" + \"    How can I help to make your day as amazing as you are?\" + \"\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"tsm1820"},"content":"                    + \"_____________________________________________________________________\";","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"tsm1820"},"content":"         * Execution method to take input and execute the rest","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"tsm1820"},"content":"         * of the program flow based on the input","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"tsm1820"},"content":"         * @throws DukeException","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"tsm1820"},"content":"        public void execInput() throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"tsm1820"},"content":"            System.out.println(initGreeting());","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"tsm1820"},"content":"            while (!bye) {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"tsm1820"},"content":"                String inp \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"tsm1820"},"content":"                if (inp.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"tsm1820"},"content":"                    for (int j \u003d 0; j \u003c arr.size(); j++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"    \" + (j + 1) + \". \" + arr.get(j).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"tsm1820"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"tsm1820"},"content":"                    String newInp \u003d inp.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"tsm1820"},"content":"                    if (newInp.equals(\"todo\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"tsm1820"},"content":"                        throw new TodoException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"tsm1820"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"tsm1820"},"content":"                        TaskList t \u003d new TaskList(inp, Category.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"tsm1820"},"content":"                        arr.add(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"        \" + t.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"    Now you have \" + arr.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"tsm1820"},"content":"                        System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"tsm1820"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"tsm1820"},"content":"                    TaskList t \u003d new TaskList(inp, Category.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"tsm1820"},"content":"                    arr.add(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"        \" + t.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Now you have \" + arr.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.startsWith(\"event \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"tsm1820"},"content":"                    TaskList t \u003d new TaskList(inp, Category.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"tsm1820"},"content":"                    arr.add(t);","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"        \" + t.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Now you have \" + arr.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.startsWith(\"done \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"tsm1820"},"content":"                    int ind \u003d Integer.parseInt((inp.split(\"\\\\s\"))[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"tsm1820"},"content":"                    arr.get(ind).markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"        \" + arr.get(ind).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"tsm1820"},"content":"                    int ind \u003d Integer.parseInt((inp.split(\"\\\\s\"))[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"        \" + arr.get(ind).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"tsm1820"},"content":"                    arr.remove(ind);","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Now you have \" + arr.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"tsm1820"},"content":"                } else if (inp.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"    Bye. Hope to see you again soon! Just a little reminder : YOU ARE AWESOME :))\");","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"tsm1820"},"content":"                    System.out.println(\"_____________________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"tsm1820"},"content":"                    bye \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"tsm1820"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"tsm1820"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"tsm1820"},"content":"                    throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"tsm1820"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"tsm1820"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"tsm1820"},"content":"    public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"tsm1820"},"content":"        /** The content of the task */","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"tsm1820"},"content":"        private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"tsm1820"},"content":"        /** Boolean value storing whether the task is done */","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"tsm1820"},"content":"        private Boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"tsm1820"},"content":"        /** The category of the task in Enum */","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"tsm1820"},"content":"        private Category cat;","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"tsm1820"},"content":"         * Constructor for various tasks in the TaskList","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"tsm1820"},"content":"         * @param description The content of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"tsm1820"},"content":"         * @param cat The category of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"tsm1820"},"content":"        public TaskList(String description, Category cat) {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"tsm1820"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"tsm1820"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"tsm1820"},"content":"            this.cat \u003d cat;","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"tsm1820"},"content":"         * Method to mark a task in the list as done","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"tsm1820"},"content":"        public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"tsm1820"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"tsm1820"},"content":"         * Method to extract the task content from the entire task String","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"tsm1820"},"content":"         * @return The actual content of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"tsm1820"},"content":"        public String getTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"tsm1820"},"content":"                String desc \u003d ((description.split(\"\\\\s\",2)[1]).split(\"/\"))[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"tsm1820"},"content":"                return desc;","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"tsm1820"},"content":"         * Method to extract the timelines from the deadline and event task categories","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"tsm1820"},"content":"         * @return The time the task needs to be done by","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"tsm1820"},"content":"        public String getTime() {","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"tsm1820"},"content":"            String atByTime \u003d ((description.split(\"\\\\s\",2)[1]).split(\"/\"))[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"tsm1820"},"content":"            String time \u003d atByTime.split(\"\\\\s\", 2)[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"tsm1820"},"content":"            return time;","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"tsm1820"},"content":"         * Method to change the status of the task icon depending on","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"tsm1820"},"content":"         * whether the task is done or not","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"tsm1820"},"content":"         * @return The status icon of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"tsm1820"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"tsm1820"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"tsm1820"},"content":"        /**","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"tsm1820"},"content":"         * Method to custom print the task based on category","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"tsm1820"},"content":"         * @return String comprising the type and content of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"tsm1820"},"content":"         */","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"tsm1820"},"content":"        public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"tsm1820"},"content":"            if (this.cat \u003d\u003d Category.TODO) {","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"tsm1820"},"content":"                return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + getTask();","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"tsm1820"},"content":"            } else if (this.cat \u003d\u003d Category.DEADLINE) {","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"tsm1820"},"content":"                return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + getTask() + \" (by: \" + this.getTime() + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"tsm1820"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"tsm1820"},"content":"                return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + getTask() + \" (at: \" + this.getTime() + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"tsm1820"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"tsm1820"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"tsm1820"},"content":"    public Display disp(){","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"tsm1820"},"content":"        return new Display();","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"tsm1820"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"tsm1820"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"tsm1820"},"content":"        Display ob \u003d new Duke().disp();","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"tsm1820"},"content":"        ob.execInput();","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tsm1820":187,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsm1820"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"tsm1820"},"content":"    public DukeException(String e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"tsm1820"},"content":"        super(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tsm1820"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tsm1820":5}},{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsm1820"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"tsm1820"},"content":"    public InvalidInputException(String e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"tsm1820"},"content":"        super(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tsm1820"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tsm1820":5}},{"path":"src/main/java/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tsm1820"},"content":"public class TodoException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"tsm1820"},"content":"    public TodoException(String e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"tsm1820"},"content":"        super(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tsm1820"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tsm1820"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tsm1820":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tsm1820"},"content":"deadline module homework /by 18th September","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"tsm1820"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"tsm1820"},"content":"event concert /at 6th November 9pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"tsm1820"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"tsm1820"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"tsm1820"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"tsm1820"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"tsm1820"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"tsm1820"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"tsm1820"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"tsm1820":10}}]
