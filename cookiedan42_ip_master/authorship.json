[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cookiedan42":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cookiedan42":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"# Quick start","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"1. Download the latest `Duke.jar` from [here](https://github.com/cookiedan42/ip/releases).","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"1. Copy the file to the folder you want to use as the home folder for your Duke task manager.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"1. Double-click the file to start the app. A gui similar to this will be shown  ","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"   ![UI demo image](Ui.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"1. Type `list` to view sample data ","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"1. Type `help` to view version-specific built-in guide","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"# Features","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"## Adding a new Task to the list","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"### Adding a simple task : `todo`","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"Add a task with only a name  ","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"Format : `todo TASK_NAME`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"Examples :  ","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"* `todo write documentation`","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"* `todo eat lunch`","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"  ","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"### Adding a task with a deadline : `deadline`","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"Add a task with a name, and a deadline  ","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"Format : `deadline TASK_NAME /by DEADLINE`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"Formatting the deadline as YYYY-MM-DD will display a countdown to that date in the task display  ","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"Examples :","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"* `deadline write documentation /by release day`","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"* `deadline buy christmas gifts /by 2021-12-25`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":" ","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"### Adding a task with a start and end : `event`","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"Add a task with a name, and a start-end time  ","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"Format : `event TASK_NAME /at START_END`","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"Examples :","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"* `event write code /at start of module to release day`","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"* `event celebrate christmas /at 2021-12-25 00:01 to 2021-12-25 23:59`","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"## Modifying a Task","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"Delete a task from the list ","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"Format : `delete TASK_NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"* Delete the task with the specified `TASK_NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"* The `TASK_NUMBER` is the number shown before the task name in the list.  ","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"Examples :","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"* `delete 1` deletes the task with `TASK_NUMBER` 1","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"### Marking a task as complete : `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"Mark a task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"Format : `done TASK_NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"* Mark as done the task with the specified `TASK_NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"* The `TASK_NUMBER` is the number shown before the task name in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"Examples :","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"* `done 1` marks the task with `TASK_NUMBER` 1 as done","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"## Displaying information","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"### Displaying help : `help`","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"Shows built-in help  ","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"Format : `help [Command Name]`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"* `help` displays an overview of the available commands  ","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"* Optional argument of `Command Name` to specify the command to get help for","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"Examples :  ","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"* `help` displays an overview of the available commands","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"* `help todo` displays in depth help for the todo command","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"Display all tasks in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"Format : `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"### Searching for a task by keyphrase : `find`","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"Search for a task","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"Format : `find KEY_PHRASE`","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"Examples :","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"* `find christmas` displays all stored tasks that have \u0027christmas\u0027 in their name","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"## Exiting program","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"### Exiting program : `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"Exit the program  ","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"Format : `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"Adapted from [AB3 documentation](https://se-education.org/addressbook-level3/UserGuide.html#viewing-help--help)  ","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"cookiedan42":68,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeExitException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":" * Main class for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    private TaskArrayList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    private Path storagePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     * Creates a Duke instance.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"        storagePath \u003d Paths.get(\".\", \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"            this.taskList \u003d Storage.load(storagePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"            this.taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"     * Gets the response for a given user command input.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"     * @param userInput command typed by user","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"     * @return Message to print on screen for user","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeExitException when response is an exit signal, caught by caller to prepare teardown","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    public String getResponse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"            return parser.run(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeExitException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"            throw e;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"            throw e;","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"        } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"            Storage.dump(taskList, storagePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cookiedan42":49,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandBye;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandDeadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandDelete;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandEvent;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandFind;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandHelp;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandList;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandTodo;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":" * Parser to parse user commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    private TaskArrayList taskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     * Constructor for Parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"     * @param taskList TaskArrayList object to work with","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    Parser(TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"     * Runs a user input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"     * @param userInput String keyed in by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"     * @return isExit, true if duke should exit after this command.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeException if unable to run argument.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"    public String run(String userInput) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"        String[] cmdArgsArr \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"        // switch case to split by command","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"        switch (cmdArgsArr[0]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"        case (\"bye\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"            return new CommandBye(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"            return new CommandDeadline(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"            return new CommandDelete(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"        case (\"done\"):","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"            return new CommandDone(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"        case (\"event\"):","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"            return new CommandEvent(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        case (\"find\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"            return new CommandFind(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        case (\"help\"):","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"            return new CommandHelp(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"        case (\"list\"):","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"            return new CommandList(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"            return new CommandTodo(cmdArgsArr, taskList).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(\"Unrecognised Command\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"                    + new CommandHelp(cmdArgsArr, taskList).run());","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"cookiedan42":66}},{"path":"src/main/java/duke/TaskArrayList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandDelete;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandDone;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import duke.commands.CommandFind;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":" * Array List of Task objects.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"public class TaskArrayList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    public static final String DELETE_USAGE_TEXT \u003d CommandDelete.HELP_USAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    public static final String DONE_USAGE_TEXT \u003d CommandDone.HELP_USAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    public static final String FIND_USAGE_TEXT \u003d CommandFind.HELP_USAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    public TaskArrayList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"        super();","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"     * @param task Task object to add.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"     * @return addition message String.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        this.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        return task.addMsg() + \"\\n\" + this.announceNewLength();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"     * Checks if the provided task number exists in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"     * @param taskNo Task number to check","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"     * @return true if there is a task with that task number in the list","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"    private boolean isValidTaskNo(int taskNo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        return taskNo \u003c\u003d this.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"     * Marks the given task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"     * @param taskNo task number to mark as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"     * @return removal message String.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeException when invalid task number provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"    public String deleteTask(int taskNo) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        if (!isValidTaskNo(taskNo)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(String.format(\"task %d not found\", taskNo));","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"        int taskIndex \u003d taskNo - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        String toDel \u003d this.get(taskIndex).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"        this.remove(taskIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"        return \"removed : \" + toDel + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"                + this.announceNewLength();","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"     * Generates the message to print when tasklist length changes.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"     * @return You now have X task(s) in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"    private String announceNewLength() {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"        return String.format(\"Now you have %d %s in the list.\", this.size(), this.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"     * Enumerates members for printing.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"     * @return String[] of \"X. taskname\"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"    public String enumerate() {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"        for (Task task : this) {","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"            out.append(String.format(\"%d. %s\\n\", taskIndex + 1, task.toString()));","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"        return out.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"cookiedan42"},"content":"     * Find all tasks that contain the searchTerm.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"     * enumerate but only include if task string contains search term","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"cookiedan42"},"content":"     * use absolute task number so delete and done commands can reference this result","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"cookiedan42"},"content":"     * @param searchTerm term to find in task names","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"cookiedan42"},"content":"     * @return String[] of tasks of \"X. taskname\"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"cookiedan42"},"content":"    public String find(String searchTerm) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"cookiedan42"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"cookiedan42"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"cookiedan42"},"content":"        for (Task task : this) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"cookiedan42"},"content":"            if (task.toString().contains(searchTerm)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"cookiedan42"},"content":"                out.append(String.format(\"%d. %s\\n\", taskIndex + 1, task.toString()));","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"cookiedan42"},"content":"            taskIndex++;","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"cookiedan42"},"content":"        return out.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"cookiedan42"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"cookiedan42"},"content":"     * @param taskNo task number to mark","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"cookiedan42"},"content":"     * @return mark done message String","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeException when invalid task number provided","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"cookiedan42"},"content":"    public String markDone(int taskNo) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"cookiedan42"},"content":"        if (!this.isValidTaskNo(taskNo)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(String.format(\"task %d not found\", taskNo));","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"cookiedan42"},"content":"        int taskIndex \u003d taskNo - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"cookiedan42"},"content":"        assert this.get(taskIndex) instanceof Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"cookiedan42"},"content":"        this.get(taskIndex).markDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"cookiedan42"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"cookiedan42"},"content":"                + this.get(taskIndex).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"cookiedan42":126}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" * Abstract base class for commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"abstract class Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    public static String HELP_DESCRIPTION;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static String HELP_USAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    protected String[] cmdArgsArr;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    protected TaskArrayList taskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"     * Sets up a command using the command, arguments and task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"     * @param cmdArgsArr String array of command , optional 2nd member arguments","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     * @param taskList   list of tasks stored by Duke","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    public Command(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"        this.cmdArgsArr \u003d cmdArgsArr;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"     * Tests if cmdArgs has the wrong length.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"     * @param desiredValue length of array {cmd,args}","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     * @return True if length does not match desired value","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    protected boolean hasWrongArgumentCount (int desiredValue) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        return !(cmdArgsArr.length \u003d\u003d desiredValue);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"     * Tests if arguments contain the desired marker.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"     * @param marker String that precedes an argument","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"     * @return True if the desired marker is missing","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"    protected boolean isMissingArgument (String marker) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"        assert cmdArgsArr.length \u003d\u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"        return cmdArgsArr[1].split(marker, 2).length !\u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"    protected boolean isNotNumericArgument (String arg) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"        return !arg.matches(\"[0-9]+\");","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"     * Runs the command.","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"     * @return String to print on the chatbot","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"    public abstract String run() throws DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":60}},{"path":"src/main/java/duke/commands/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeExitException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"bye\".","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Gracefully terminate the program\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: bye\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    public CommandBye(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        throw new DukeExitException(\"BYE\");","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":32}},{"path":"src/main/java/duke/commands/CommandDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"deadline\".","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"public class CommandDeadline extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Add a new deadline task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: deadline task_name \u003c/by end_time\u003e\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"            + \"\\ttask_name\\tname of the task to add\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"            + \"\\t /by end_time\\tdeadline of the deadline task\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    public CommandDeadline(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT) || isMissingArgument(\"/by\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        String[] nameByPair \u003d cmdArgsArr[1].split(\"/by\", 2);","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        Task toAdd \u003d new Deadline(nameByPair[0], nameByPair[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        return taskList.addTask(toAdd);","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":38}},{"path":"src/main/java/duke/commands/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"delete\".","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Delete a task from the list\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: delete task_number\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            + \"\\ttask_number\\ttask number of the task to delete\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    public CommandDelete(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT) || isNotNumericArgument(cmdArgsArr[1])) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        return taskList.deleteTask(Integer.parseInt(cmdArgsArr[1]));","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":32}},{"path":"src/main/java/duke/commands/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"done\".","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"public class CommandDone extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Mark a task as done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: done task_number\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"            + \"\\ttask_number\\ttask number of the task to mark as done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    public CommandDone(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT) || isNotNumericArgument(cmdArgsArr[1])) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        return taskList.markDone(Integer.parseInt(cmdArgsArr[1]));","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":33}},{"path":"src/main/java/duke/commands/CommandEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"event\".","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"public class CommandEvent extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Add a new event task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: event task_name \u003c/at event_time\u003e\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"            + \"\\ttask_name\\tname of the task to add\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"            + \"\\t /at event_time\\ttime that event occurs at\";","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    public CommandEvent(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT) || isMissingArgument(\"/at\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"        String[] nameAtPair \u003d cmdArgsArr[1].split(\"/at\", 2);","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"        Task toAdd \u003d new Event(nameAtPair[0], nameAtPair[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        return taskList.addTask(toAdd);","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":36}},{"path":"src/main/java/duke/commands/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"find\".","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Find matching tasks from the list using a keyphrase\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: find keyphrase\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            + \"\\tkeyphrase\\tkeyphrase to search for among tasks\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    public CommandFind(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        return taskList.find(cmdArgsArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":31}},{"path":"src/main/java/duke/commands/CommandHelp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"help\".","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"public class CommandHelp extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Provide help information for Duke commands\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: Help [command]\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            + \"Options:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"            + \"\\tCommand (optional) - displays help information on that command\";","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    public CommandHelp(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        return CommandHelp.parse(cmdArgsArr);","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"     * Parses the help command arguments and return appropriate response.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"     * @param cmdArgsArr 2 member String array containing [command, arguments]","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     * @return relevant help message","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    public static String parse(String[] cmdArgsArr) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        //if no args --\u003e return all Helps","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        if (cmdArgsArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"            return CommandHelp.getAllHelp();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"        switch (cmdArgsArr[1]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        case (\"bye\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"            return CommandBye.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"            return CommandDelete.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"        case (\"done\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"            return CommandDone.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"        case (\"find\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"            return CommandFind.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"        case (\"help\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"            return CommandHelp.HELP_USAGE;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"        case (\"list\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"            return CommandList.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"            return CommandTodo.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"            return CommandDeadline.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"        case (\"event\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"            return CommandEvent.HELP_USAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"            // invalid data defaults to base help","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(CommandHelp.getAllHelp());","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"     * Overview of valid commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"     * @return String of valid commands and brief description","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"    private static String getAllHelp() {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"        return \"\"","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"                + CommandBye.HELP_COMMAND + \"\\t\\t\" + CommandBye.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"                + CommandDelete.HELP_COMMAND + \"\\t\" + CommandDelete.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"                + CommandDone.HELP_COMMAND + \"\\t\" + CommandDone.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"                + CommandFind.HELP_COMMAND + \"\\t\\t\" + CommandFind.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"                + CommandHelp.HELP_COMMAND + \"\\t\\t\" + CommandHelp.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"                + CommandList.HELP_COMMAND + \"\\t\\t\" + CommandList.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"                + CommandTodo.HELP_COMMAND + \"\\t\\t\" + CommandTodo.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"                + CommandDeadline.HELP_COMMAND + \"\\t\" + CommandDeadline.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"                + CommandEvent.HELP_COMMAND + \"\\t\" + CommandEvent.HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"                + \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":85}},{"path":"src/main/java/duke/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"list\".","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"public class CommandList extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"List out all tracked tasks\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: list\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    public CommandList(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        return taskList.enumerate();","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":30}},{"path":"src/main/java/duke/commands/CommandTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":" * Command to execute when user types \"todo\".","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"public class CommandTodo extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_DESCRIPTION \u003d \"Add a new todo task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    public static final String HELP_USAGE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            \"Usage: todo task_name\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"            + HELP_DESCRIPTION + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"            + \"\\ttask_name\\tname of the task to add\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    private static final int REQUIRED_ARG_COUNT \u003d 2;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    public CommandTodo(String[] cmdArgsArr, TaskArrayList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"        super(cmdArgsArr, taskList);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        if (hasWrongArgumentCount(REQUIRED_ARG_COUNT)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeException(HELP_USAGE);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        Task toAdd \u003d new Todo(cmdArgsArr[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"        return taskList.addTask(toAdd);","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":34}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * General Exception for Duke related issues.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"     * Constructor for Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"     * @param message error message to return.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cookiedan42":15}},{"path":"src/main/java/duke/exceptions/DukeExitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * Exception raised when duke should exit.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"public class DukeExitException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"     * Constructor for DukeReadSaveException.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"     * @param message error message to return.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public DukeExitException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"        super(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":15}},{"path":"src/main/java/duke/exceptions/DukeReadSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * Exception raised when unable to read save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"public class DukeReadSaveException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"     * Constructor for DukeReadSaveException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"     * @param message error message to return.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    public DukeReadSaveException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"cookiedan42":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":" * DialogBox containing the userName and the dialog of the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    private Label userName;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    private DialogBox(String userNameText, String text) {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"        userName.setText(userNameText);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"     * Creates a DialogBox for the user\u0027s text.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"     * @param userName name of the user","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"     * @param text text that should be associated with the user","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"     * @return DialogBox representing the user\u0027s half of the conversation","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"    public static DialogBox getUserDialog(String userName, String text) {","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"        DialogBox db \u003d new DialogBox(userName, text);","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"        db.getStyleClass().add(\"userBox\");","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"     * Creates a DialogBox for Duke\u0027s dialog under normal operation.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"     * @param userName name of the bot","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"     * @param text text that the bot replied with","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"     * @return DialogBox representing bot\u0027s half of the conversation","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"    public static DialogBox getDukeDialog(String userName, String text) {","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"        var db \u003d new DialogBox(userName, text);","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"        db.getStyleClass().add(\"dukeBox\");","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"     * Creates a DialogBox for Duke\u0027s dialog when there is an error.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"     * @param userName name of the bot","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"     * @param text text that the bot replied with","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"     * @return DialogBox representing bot\u0027s half of the conversation","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"    public static DialogBox getDukeDialogError(String userName, String text) {","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"        var db \u003d new DialogBox(userName, text);","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"        db.getStyleClass().add(\"dukeBoxError\");","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"        db.flip();","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":87}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":" * A launcher class to start the bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"cookiedan42":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeExitException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     * Initialize the window with welcome dialog.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        displayWelcomeDialog();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"     * Sets the duke backend to use for this front end instance.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"     * @param d Duke backend object to use","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"            String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"            makeDialogBox(input, response);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeExitException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"            String response \u003d \"Bye bye!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"            makeDialogBoxError(input, response);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"            makeDialogBoxError(input, e.getMessage());","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"     * Format user dialog and duke response.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"     * @param input    user input String","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"     * @param response duke response String","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"    private void makeDialogBox(String input, String response) {","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"        DialogBox userBox \u003d DialogBox.getUserDialog(\"User\", input);","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"        DialogBox dukeBox \u003d DialogBox.getDukeDialog(\"Duke\", response);","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"        dialogContainer.getChildren().addAll(userBox, dukeBox);","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"    private void makeDialogBoxError(String input, String response) {","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"        DialogBox userBox \u003d DialogBox.getUserDialog(\"User\", input);","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"        DialogBox dukeBox \u003d DialogBox.getDukeDialogError(\"Duke\", response);","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"        dialogContainer.getChildren().addAll(userBox, dukeBox);","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"    private void displayWelcomeDialog() {","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"cookiedan42"},"content":"        String welcomeMessage \u003d \"Welcome to Duke\\nType list to see all current tasks\\nType help for help\";","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"cookiedan42"},"content":"        DialogBox dukeBox \u003d DialogBox.getDukeDialog(\"Duke\", welcomeMessage);","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"        dialogContainer.getChildren().addAll(dukeBox);","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":92}},{"path":"src/main/java/duke/storage/SaveParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeReadSaveException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":" * Parser class to create Task objects from string commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"public class SaveParser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    private static final DukeReadSaveException MISSING_ARG_EXCEPTION \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"            new DukeReadSaveException(\"missing argument in save\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    private static final String NAME_KEY \u003d \"\\tName\";","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    private static final String DONE_KEY \u003d \"\\tDone\";","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    private static final String AT_KEY \u003d \"\\tAt\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    private static final String BY_KEY \u003d \"\\tBy\";","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"     * Constructs a Save parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"     * @param scanner scanner object that is reading the save file","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    SaveParser(Scanner scanner) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"     * Tests if file has next line.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"     * @return true if next line present.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"        return this.scanner.hasNextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"     * Extracts next task from save file and return it as object.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"     * @return new task from save file","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"     * @throws DukeReadSaveException if there is an invalid task","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"    public Task getNextTask() throws DukeReadSaveException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"        String[] taskType \u003d this.scanner.nextLine().split(\":\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"        if (!taskType[0].equals(\"Task\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeReadSaveException(\"Invalid Task\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        switch (taskType[1]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"            return parseTodo();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"            return parseDeadline();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"        case (\"event\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"            return parseEvent();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"            throw new DukeReadSaveException(\"Invalid Task name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"     * Test if next line of savefile is the start of a new task block.","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"     * @return true if next line of savefile is the start of a new task block","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"    private boolean nextLineIsANewTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"        return this.scanner.hasNext(\"(Task:).*\");","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"     * Parse the next line of the savefile and extract Key:Value as a 2 member string array.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"     * @return Pair of [Key,Value]","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"    private String[] getNextKeyValuePair() {","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"        return this.scanner.nextLine().split(\":\", 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"     * Create a checklist of arguments to mark found.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"     * @param args String vargs of the keys to add to checklist","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"cookiedan42"},"content":"     * @return HashMap checklist of (String Key, Boolean found)","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"    private HashMap\u003cString, Boolean\u003e createArgumentCheckList(String... args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"cookiedan42"},"content":"        HashMap\u003cString, Boolean\u003e checkList \u003d new HashMap\u003cString, Boolean\u003e(args.length);","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"cookiedan42"},"content":"        for (String arg : args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"cookiedan42"},"content":"            checkList.put(arg, false);","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"cookiedan42"},"content":"        return checkList;","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"cookiedan42"},"content":"    private Todo parseTodo() throws DukeReadSaveException {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"cookiedan42"},"content":"        HashMap\u003cString, Boolean\u003e argsFound \u003d createArgumentCheckList(NAME_KEY, DONE_KEY);","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"cookiedan42"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"cookiedan42"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"cookiedan42"},"content":"        while (this.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"cookiedan42"},"content":"            if (nextLineIsANewTask()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"cookiedan42"},"content":"                //break if next line is the start of a new task","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"cookiedan42"},"content":"            String[] keyValuePair \u003d this.getNextKeyValuePair();","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"cookiedan42"},"content":"            switch (keyValuePair[0]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"cookiedan42"},"content":"            case (NAME_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"cookiedan42"},"content":"                name \u003d keyValuePair[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"cookiedan42"},"content":"            case (DONE_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"cookiedan42"},"content":"                isDone \u003d Boolean.parseBoolean(keyValuePair[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"cookiedan42"},"content":"            default:","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"cookiedan42"},"content":"                // invalid line","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"cookiedan42"},"content":"            if (argsFound.containsKey(keyValuePair[0])) {","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"cookiedan42"},"content":"                assert keyValuePair.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"cookiedan42"},"content":"                argsFound.put(keyValuePair[0], true);","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"cookiedan42"},"content":"        if (argsFound.containsValue(false)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"cookiedan42"},"content":"            throw MISSING_ARG_EXCEPTION;","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"cookiedan42"},"content":"        return new Todo(name, isDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"cookiedan42"},"content":"    private Deadline parseDeadline() throws DukeReadSaveException {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"cookiedan42"},"content":"        HashMap\u003cString, Boolean\u003e argsFound \u003d createArgumentCheckList(NAME_KEY, DONE_KEY, BY_KEY);","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"cookiedan42"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"cookiedan42"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"cookiedan42"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"cookiedan42"},"content":"        while (this.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"cookiedan42"},"content":"            if (nextLineIsANewTask()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"cookiedan42"},"content":"                //break if next line is the start of a new task","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"cookiedan42"},"content":"            String[] keyValuePair \u003d this.getNextKeyValuePair();","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"cookiedan42"},"content":"            switch (keyValuePair[0]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"cookiedan42"},"content":"            case (NAME_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"cookiedan42"},"content":"                name \u003d keyValuePair[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"cookiedan42"},"content":"            case (DONE_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"cookiedan42"},"content":"                isDone \u003d Boolean.parseBoolean(keyValuePair[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"cookiedan42"},"content":"            case (BY_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"cookiedan42"},"content":"                by \u003d keyValuePair[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"cookiedan42"},"content":"            default:","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"cookiedan42"},"content":"                // invalid line","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"cookiedan42"},"content":"            if (argsFound.containsKey(keyValuePair[0])) {","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"cookiedan42"},"content":"                assert keyValuePair.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"cookiedan42"},"content":"                argsFound.put(keyValuePair[0], true);","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"cookiedan42"},"content":"        if (argsFound.containsValue(false)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"cookiedan42"},"content":"            throw MISSING_ARG_EXCEPTION;","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"cookiedan42"},"content":"        return new Deadline(name, isDone, by);","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"cookiedan42"},"content":"    private Event parseEvent() throws DukeReadSaveException {","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"cookiedan42"},"content":"        HashMap\u003cString, Boolean\u003e argsFound \u003d createArgumentCheckList(NAME_KEY, DONE_KEY, AT_KEY);","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"cookiedan42"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"cookiedan42"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"cookiedan42"},"content":"        String at \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"cookiedan42"},"content":"        while (this.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"cookiedan42"},"content":"            if (nextLineIsANewTask()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"cookiedan42"},"content":"                //break if next line is the start of a new task","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"cookiedan42"},"content":"            String[] keyValuePair \u003d this.getNextKeyValuePair();","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"cookiedan42"},"content":"            switch (keyValuePair[0]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"cookiedan42"},"content":"            case (NAME_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"cookiedan42"},"content":"                name \u003d keyValuePair[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":182,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"cookiedan42"},"content":"            case (DONE_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"cookiedan42"},"content":"                isDone \u003d Boolean.parseBoolean(keyValuePair[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"cookiedan42"},"content":"            case (AT_KEY):","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"cookiedan42"},"content":"                at \u003d keyValuePair[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"cookiedan42"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"cookiedan42"},"content":"            default:","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"cookiedan42"},"content":"                // invalid line","lastModifiedDate":"2021-09-03"},{"lineNumber":191,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"cookiedan42"},"content":"            if (argsFound.containsKey(keyValuePair[0])) {","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"cookiedan42"},"content":"                assert keyValuePair.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":194,"author":{"gitId":"cookiedan42"},"content":"                argsFound.put(keyValuePair[0], true);","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"cookiedan42"},"content":"        if (argsFound.containsValue(false)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":198,"author":{"gitId":"cookiedan42"},"content":"            throw MISSING_ARG_EXCEPTION;","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"cookiedan42"},"content":"        return new Event(name, isDone, at);","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":202,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"cookiedan42":202}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.TaskArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeReadSaveException;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":" * Class to handle reading and writing the save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     * Creates store file if required.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"     * @param path path to store file","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    public static void createStore(Path path) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        if (Files.exists(path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"            writeTutorial(path);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"            System.out.println(\"failed to make store : \" + e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"     * Loads store file as a TaskArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"     * @param path path to store file","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"     * @return TaskArrayList of stored tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    public static TaskArrayList load(Path path) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"        createStore(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"        assert Files.exists(path); // path file must exist","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"        Scanner sc \u003d new Scanner(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"        SaveParser saveParser \u003d new SaveParser(sc);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"        while (saveParser.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"                taskList.add(saveParser.getNextTask());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"            } catch (DukeReadSaveException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"                // skip corrupted save block","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"     * Dumps a taskList to a store file.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"     * @param taskList duke.TaskArrayList to store","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"     * @param path location to store taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"    public static void dump(TaskArrayList taskList, Path path) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"        createStore(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"        assert Files.exists(path); // path file must exist","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"        ArrayList\u003cString\u003e strings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"            strings.add(task.serialize());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"            Files.write(path, strings);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"            System.out.println(\"error writing data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"     * Dump a preset tutorial set of tasks to the savefile.","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"     * @param path path to the savefile","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"    public static void writeTutorial(Path path) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"        assert Files.exists(path); // path file must exist","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList tl \u003d new TaskArrayList();","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"cookiedan42"},"content":"        tl.addTask(new Todo(\"Check out the help file by typing help\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"cookiedan42"},"content":"        tl.addTask(new Deadline(\"Delete these tutorial tasks\", \"before you start using Duke\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"        dump(tl, path);","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"cookiedan42":97}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":" * Deadline task for tasks that have an end date.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"    private String by;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    private LocalDate byDate;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"     * Default constructor for a new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"     * @param by   deadline for deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"        this(name, false, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"     * Full constructor with all fields exposed.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"     * @param done boolean state of task done","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"     * @param by   deadline for deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    public Deadline(String name, boolean done, String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"        super(name, done);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"            this.byDate \u003d LocalDate.parse(by.strip());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"            this.byDate \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"    public String serialize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"        return \"Task:deadline\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tName:%s\\n\", this.name)","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tDone:%s\\n\", this.isTaskDone)","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tBy:%s\\n\", this.by);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        String out \u003d \"[D]\" + (this.isTaskDone ? \"[X] \" : \"[ ] \")","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"                + this.name;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"        out +\u003d this.byDate \u003d\u003d null","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"                ? String.format(\"(by: %s)\", this.by)","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"                : String.format(\"(by: %d days left)\", LocalDate.now().until(this.byDate, ChronoUnit.DAYS));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        return out;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"cookiedan42":59}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * Event task for tasks that have a start and end time.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"    private String at;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"     * Default constructor for a new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"     * @param at time of event","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"        this(name, false, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     * Full constructor with all fields exposed.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"     * @param done boolean state of task done","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"     * @param at time of event","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    public Event(String name, boolean done, String at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        super(name, done);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    public String serialize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"        return \"Task:event\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tName:%s\\n\", this.name)","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tDone:%s\\n\", this.isTaskDone)","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tAt:%s\\n\", this.at);","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        return \"[E]\" + (this.isTaskDone ? \"[X] \" : \"[ ] \")","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"                + this.name","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"(at: %s)\", this.at);","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"cookiedan42":45}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * Abstract base task created by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"    protected String name;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"    protected boolean isTaskDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     * Default constructor for a new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"        this(name, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     * Full constructor with all fields exposed.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"     * @param isTaskDone done state","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    public Task(String name, boolean isTaskDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        this.isTaskDone \u003d isTaskDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"     * Generates the message printed when this task is added.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"     * @return added: task name","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    public String addMsg() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        return \"added: \" + this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"     * Sets this task status to done.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"     * Gets the name for this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"     * @return task name","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        return this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"        return isTaskDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"     * Returns json-like representation of object data.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"     * @return String representation of data","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"    public abstract String serialize();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"    // newline is the only? reliable way to divide data without escape characters","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"        return (this.isTaskDone ? \"[X] \" : \"[ ] \")","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"                + this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"cookiedan42":75}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":" * Todo class for tasks that have no time element.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"     * Default constructor for a new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"        this(name, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"     * Full constructor with all fields exposed.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"     * @param name task name","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"     * @param done state of task done","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    public Todo(String name, boolean done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        super(name, done);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    public String serialize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        return \"Task:todo\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tName:%s\\n\", this.name)","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"                + String.format(\"\\tDone:%s\\n\", this.isTaskDone);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        return \"[T]\" + (this.isTaskDone ? \"[X] \" : \"[ ] \")","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"                + this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"cookiedan42":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/DialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"              \u003cLabel fx:id\u003d\"userName\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"TOP_LEFT\" layoutY\u003d\"558.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"            \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"cookiedan42":23}},{"path":"src/test/java/duke/TaskArrayListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"class TaskArrayListTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"    void addTask_increaseSize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"ok\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    void deleteTask_decreaseSize() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"ok\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    void markDone() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"ok\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"        assertFalse(taskList.get(0).isTaskDone());","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"        taskList.markDone(1);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"        assertTrue(taskList.get(0).isTaskDone());","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"    void enumerate() {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"1. [T][ ] ok\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"                + \"2. [T][ ] ok\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"ok\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"ok\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"                testString,","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"                taskList.enumerate()","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"    void find() {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"1. [T][ ] include\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"                + \"3. [T][ ] include\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"        TaskArrayList taskList \u003d new TaskArrayList();","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"include\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"exclude\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"        taskList.addTask(new Todo(\"include\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"                testString,","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"                taskList.find(\"in\")","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"cookiedan42":73}},{"path":"src/test/java/duke/storage/SaveParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"import duke.exceptions.DukeReadSaveException;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"class SaveParserTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"    void hasNextLine_matchScanner() {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(\"line1\\nline2\");","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"            assertEquals(s.hasNextLine(), parser.hasNextLine());","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"            s.next();","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"    void getNextTask_Todo() throws DukeReadSaveException {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"Task:todo\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:todoName\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        Task todoTask \u003d new Todo(\"todoName\", true);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(testString);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(todoTask.toString(), parser.getNextTask().toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    void getNextTask_Deadline() throws DukeReadSaveException {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"Task:deadline\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:todoName\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tBy:Right Now\";","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"        Task todoTask \u003d new Deadline(\"todoName\", true, \"Right Now\");","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(testString);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(todoTask.toString(), parser.getNextTask().toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"cookiedan42"},"content":"    void getNextTask_Event() throws DukeReadSaveException {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"Task:event\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:todoName\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tAt:Right Now\";","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"cookiedan42"},"content":"        Task todoTask \u003d new Event(\"todoName\", true, \"Right Now\");","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(testString);","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(todoTask.toString(), parser.getNextTask().toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"cookiedan42"},"content":"    void getNextTask_EmptyLine_Exception() {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"Task:todo\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:todoName\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"cookiedan42"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"cookiedan42"},"content":"                + \"Task:todo\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"cookiedan42"},"content":"        Task todoTask \u003d new Todo(\"todoName\", true);","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(testString);","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"cookiedan42"},"content":"        boolean caught \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"cookiedan42"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"cookiedan42"},"content":"            assertEquals(todoTask.toString(), parser.getNextTask().toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"cookiedan42"},"content":"        } catch (DukeReadSaveException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"cookiedan42"},"content":"            caught \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"cookiedan42"},"content":"        assertTrue(caught);","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"cookiedan42"},"content":"    void getNextTask_EmptyMiddleLine_ValidData() throws DukeReadSaveException {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"Task:todo\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:todoName\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"cookiedan42"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"cookiedan42"},"content":"        Task todoTask \u003d new Todo(\"todoName\", true);","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"cookiedan42"},"content":"        Scanner s \u003d new Scanner(testString);","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"cookiedan42"},"content":"        SaveParser parser \u003d new SaveParser(s);","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(todoTask.toString(), parser.getNextTask().toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"cookiedan42":103}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"class DeadlineTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    void serialize_sequence() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"        String serial \u003d \"Task:deadline\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:NAME\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tBy:BY\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"        Task deadline \u003d new Deadline(\"NAME\", true, \"BY\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"                serial,","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"                deadline.serialize()","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    void testToString_done() {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        String toString \u003d \"[D][X] NAME(by: BY)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        Task deadline \u003d new Deadline(\"NAME\", true, \"BY\");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"                toString,","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"                deadline.toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    void testToString_notDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        String toString \u003d \"[D][ ] NAME(by: BY)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"        Task deadline \u003d new Deadline(\"NAME\", false, \"BY\");","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"                toString,","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"                deadline.toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"cookiedan42":43}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"class EventTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    void serialize_sequence() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"        String serial \u003d \"Task:event\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tName:NAME\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tDone:true\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"                + \"\\tAt:AT\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"        Task event \u003d new Event(\"NAME\", true, \"AT\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"                serial.toString(),","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"                event.serialize().toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"    void testToString_done() {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"        String toString \u003d \"[E][X] NAME(at: AT)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        Task event \u003d new Event(\"NAME\", true, \"AT\");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"                toString,","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"                event.toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"    void testToString_notDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        String toString \u003d \"[E][ ] NAME(at: AT)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"        Task event \u003d new Event(\"NAME\", false, \"AT\");","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"                toString,","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"                event.toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"cookiedan42":43}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"cookiedan42"},"content":"class TaskTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"cookiedan42"},"content":"    class ConcreteTask extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"cookiedan42"},"content":"        ConcreteTask(String name, boolean isTaskDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"cookiedan42"},"content":"            super(name, isTaskDone);","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cookiedan42"},"content":"        public String serialize() {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cookiedan42"},"content":"            return \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"cookiedan42"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cookiedan42"},"content":"    void addMsg() {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"added: name\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"cookiedan42"},"content":"        Task task \u003d new ConcreteTask(\"name\", false);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cookiedan42"},"content":"                testString,","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cookiedan42"},"content":"                task.addMsg()","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cookiedan42"},"content":"    void markDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cookiedan42"},"content":"        Task task \u003d new ConcreteTask(\"name\", false);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cookiedan42"},"content":"        task.markDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cookiedan42"},"content":"        assertTrue(task.isTaskDone());","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"cookiedan42"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"cookiedan42"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"cookiedan42"},"content":"    void testToString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cookiedan42"},"content":"        String testString \u003d \"[ ] name\";","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cookiedan42"},"content":"        Task task \u003d new ConcreteTask(\"name\", false);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"cookiedan42"},"content":"        assertEquals(","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"cookiedan42"},"content":"                testString,","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"cookiedan42"},"content":"                task.toString()","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"cookiedan42"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"cookiedan42"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"cookiedan42"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"cookiedan42":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cookiedan42"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"cookiedan42"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"cookiedan42"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"cookiedan42"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"cookiedan42"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"cookiedan42"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"cookiedan42"},"content":"list","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cookiedan42":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"cookiedan42"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cookiedan42":1,"-":20}}]
