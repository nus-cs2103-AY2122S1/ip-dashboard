[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"# DukePro","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"\u003e Made with a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. ","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"### What can DukePro do?","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"DukePro is your companion to free your mind of having to remember things you need to do! It\u0027s:","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"- Text-Based","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"- Easy to learn and use","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"- **_VERY_** efficient and handy!","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"### How to set up DukePro?","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"Follow these steps to get your own DukePro:","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"1. Download it from [here](https://github.com/janjanchen/ip). ","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"2. Run it. ","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"3. Add your tasks. ","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"4. ~~Manage~~ **Let _DukePro_ manage** your tasks for you! :wink:","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"**Features**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"- [X] Manages Todo Lists","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"- [X] Manages Deadlines","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"- [X] Manages Events","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"- [X] Save, Delete, Filters and many more!","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"- [ ] More features to be added","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"### Code SneakPeaks","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"This is the code in DukePro that can be found in its `Task` class:","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"```java","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":" * A Parent class for the different types of input to the Task List.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"public class Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"   protected String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"   protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    * A public constructor to create a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"    * @param description The description of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"   public Task(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"      this.description \u003d description;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"      this.isDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    * Returns the string representation of the task\u0027s status.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"    * @return the string representation of the task\u0027s status.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"   public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"      return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"    * Marks the task as completed.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"   public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"      this.isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"    * Returns the string representation of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"    * @return the string representation of the task.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"   @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"   public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"      return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"    * Returns the string representation of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"    * to be saved into the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"    * @return the string representation of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"    * to be saved into the file.","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"   public String toStore() {","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"      return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"   }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"janjanchen":77,"-":5}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"[T][ ] hw","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"[D][ ] wpork --(by: 2021-12-23)","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":2}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":" * A Task that can be added to the Task List","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":" * which has a deadline date after the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a Deadline Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"     * @param by The date of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"                + \"--(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"     * deadline to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"     *         deadline to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    public String toStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"        return \"[D]\" + super.toString() + \"--(by: \" + by + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"janjanchen":46}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":" * A Bot that keeps track of the user\u0027s task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":" * Task List can take in three types of tasks:","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" * 1. Todo","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":" * 2. Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":" * 3. Event","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":" * Task List is saved into a File called duke.txt in the computer.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    private Recieve recieve;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to initialize a session with Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"     * @param filePath The given string for the path of the file where the","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"     *                 task list of the user is saved into.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"     * @throws IOException Thrown when the file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"            parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"            recieve \u003d new Recieve(parser);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"Creating new file... Please try again!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"     * Main method for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"     * @param args Ignored and unused command line arguments.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"     * @throws IOException Thrown when the file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"        String dukeFile \u003d \"duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"        Duke duke \u003d new Duke(dukeFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"        duke.recieve.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":55,"-":2}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * A Parent class for Exceptions thrown in Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"     * A public constructor for Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"     * @param str The error message that is passed from the main code.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"        // calling the constructor of parent Exception","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of Duke Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"        return getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"janjanchen":26}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * A Task that can be added to the Task List","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" * which has more details after the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create an Event Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"     * @param at The details of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        return \"[E]\" + super.toString() + \"--(at: \" + at + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"     * event to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"     *         event to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    public String toStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"        return \"[E]\" + super.toString() + \"--(at: \" + at + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"janjanchen":40}},{"path":"src/main/java/Duke/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":" * An exception thrown in Duke when","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * the format of the user\u0027s input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"public class InvalidFormatException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"     * A public constructor for Invalid Format Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"     * @param str The error message that is passed from the main code.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    public InvalidFormatException(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"        // calling the constructor of parent Exception","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of Invalid Format Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of Invalid Format Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"        return getMessage() ;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"janjanchen":25}},{"path":"src/main/java/Duke/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * An exception thrown in Duke when","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" * the index of the task from the Task List is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class InvalidTaskIndexException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"     * A public constructor for Invalid Task Index Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"     * @param str The error message that is passed from the main code.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    public InvalidTaskIndexException(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        // calling the constructor of parent Exception","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of Invalid Task Index Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of Invalid Task Index Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"        return getMessage() ;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"janjanchen":26}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" * A Parser that deals with the user commands on the Task List.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a parser that takes in a TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"     * and a file of which the TaskList is stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"     * @param tasks The task list of the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     * @param storage The file where the task list is stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    public Parser(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"//    public ArrayList\u003cDuke.Task\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"//        return this.tasks.inArrayList();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"//    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"//","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"//    public String getFilePath() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"//        return this.storage.getPath();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"//    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"     * Returns the storage where the task list is saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"     * @return The storage where the task list is saved","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"        return this.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"     * Ends the user\u0027s session with Duke with a farewell message.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"    public void endSession() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"     * Filtes the tasks that includes the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"     * @param input The keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"     * @throws InvalidFormatException Thrown when the format of the query is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"    public void find(String input) throws InvalidFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"        if (input.length() \u003e 5) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"            String keyword \u003d input.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"            ArrayList\u003cTask\u003e full \u003d tasks.inArrayList();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"            ArrayList\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"            int len \u003d tasks.arrSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"                if (full.get(i).toString().contains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"                    filtered.add(full.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"            if (filtered.size() \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"                System.out.println(\"There are no matching results!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"                int len2 \u003d filtered.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"                System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"                for (int i \u003d 1; i \u003c len2 + 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"                    System.out.println(i + \". \" + filtered.get(i - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"            throw new InvalidFormatException(\"Please specify the keyword to be searched!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"     * Marks a specified task as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"     * @param input The task index.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"     * @throws InvalidTaskIndexException Thrown when the task index is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"    public void done(String input) throws InvalidTaskIndexException {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"        if (input.length() \u003e 5 \u0026\u0026 Character.isDigit(input.charAt(5))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"                int pos \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"                if (pos \u003c 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidTaskIndexException(\"Duke.Task list index starts from 1!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"                else if (pos \u003c tasks.arrSize()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"                    tasks.markDone(pos);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"                        storage.writeToFile(tasks.inArrayList());","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"                else {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidTaskIndexException(\"There are only \" + pos + \" tasks!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidTaskIndexException(\"A task index should only contain numbers!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"            throw new InvalidTaskIndexException(\"Please specify the task index to be marked as done!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"     * @param input The details of the user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"     * @throws InvalidFormatException Thrown when the input format is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"     * @throws DukeException Thrown when Duke encounters errors.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"     * @throws InvalidTaskIndexException Thrown when the task index is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"    public void add(String input) throws InvalidFormatException, DukeException, InvalidTaskIndexException {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"        if (input.startsWith(\"todo \") || input.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"            if (input.length() \u003e 5 ) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"                tasks.addTodo(input.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"                    storage.writeToFile(tasks.inArrayList());","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"                    System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidFormatException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"        else if (input.startsWith(\"deadline \") || input.equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"            if (!input.contains(\" /by \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidFormatException(\"OOPS!! To add a Duke.Deadline, \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"                        \"type -\u003e deadline \u003cDescription\u003e /by \u003cdeadline\u003e!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"            if (input.length() \u003e 12 \u0026\u0026 input.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"janjanchen"},"content":"                String[] spl \u003d input.substring(9).split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"                if (spl[0].length() \u003c 2 || spl[1].length() \u003c 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidFormatException(\"☹ OOPS!!! The descriptions of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"janjanchen"},"content":"                else {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"janjanchen"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"janjanchen"},"content":"                        LocalDate date \u003d LocalDate.parse(spl[1].substring(3));","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"janjanchen"},"content":"                        if (date.isBefore(LocalDate.now())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"janjanchen"},"content":"                            throw new DukeException(\"The deadline was in the past!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"janjanchen"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"janjanchen"},"content":"                            tasks.addDeadline(spl[0], date);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"janjanchen"},"content":"                            storage.writeToFile(tasks.inArrayList());","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"janjanchen"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"janjanchen"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"janjanchen"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"janjanchen"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"janjanchen"},"content":"                        System.out.println(\"Please enter the date in the format of yyyy-mm-dd!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"janjanchen"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"janjanchen"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidFormatException(\"☹ OOPS!!! The descriptions of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"janjanchen"},"content":"        else if (input.startsWith(\"event \") || input.equals(\"event\") ) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"janjanchen"},"content":"            if (!input.contains(\" /at \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidTaskIndexException(\"OOPS!! To add an Duke.Event, \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"janjanchen"},"content":"                        \"type -\u003e event \u003cDescription\u003e /at \u003cdetails\u003e!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"janjanchen"},"content":"            if (input.length() \u003e 9 \u0026\u0026 input.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"janjanchen"},"content":"                String[] spl \u003d input.substring(6).split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"janjanchen"},"content":"                if (spl[0].length() \u003c 2 || spl[1].length() \u003c 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidFormatException(\"☹ OOPS!!! The descriptions of an event cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"janjanchen"},"content":"                else {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"janjanchen"},"content":"                    tasks.addEvent(spl[0], spl[1].substring(3));","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"janjanchen"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"janjanchen"},"content":"                        storage.writeToFile(tasks.inArrayList());","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"janjanchen"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"janjanchen"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"janjanchen"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"janjanchen"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidFormatException(\"☹ OOPS!!! The descriptions of an event cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"janjanchen"},"content":"        else {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"janjanchen"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"janjanchen"},"content":"     * Deletes a specified task from the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"janjanchen"},"content":"     * @param input The task index.","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"janjanchen"},"content":"     * @throws InvalidTaskIndexException Thrown when the task index is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"janjanchen"},"content":"    public void delete(String input) throws InvalidTaskIndexException {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"janjanchen"},"content":"        if (input.length() \u003e 7 \u0026\u0026 Character.isDigit(input.charAt(7))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"janjanchen"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"janjanchen"},"content":"                int pos \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"janjanchen"},"content":"                if (pos \u003c 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidTaskIndexException(\"Duke.Task list index starts from 1!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"janjanchen"},"content":"                } else if (pos \u003c tasks.arrSize()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"janjanchen"},"content":"                    String temp \u003d tasks.inArrayList().get(pos).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"janjanchen"},"content":"                    tasks.deleteTask(pos);","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"janjanchen"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"janjanchen"},"content":"                        storage.writeToFile(tasks.inArrayList());","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"janjanchen"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"janjanchen"},"content":"                        System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"janjanchen"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"janjanchen"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"janjanchen"},"content":"                    System.out.println(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"janjanchen"},"content":"                    System.out.println(\"Now you have \" + tasks.arrSize() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"janjanchen"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"janjanchen"},"content":"                    throw new InvalidTaskIndexException(\"There are only \" + pos + \" tasks!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"janjanchen"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"janjanchen"},"content":"                throw new InvalidTaskIndexException(\"A task index should only contain numbers!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"janjanchen"},"content":"     * Lists out all the tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"janjanchen"},"content":"    public void list() {","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"janjanchen"},"content":"        tasks.listTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":234}},{"path":"src/main/java/Duke/Recieve.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":" * An UI that recieve\u0027s user\u0027s input to run Duke","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":" * and prints out the welcome message to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":" * UI also carries the parser created.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"public class Recieve {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    private String input;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create Recieve.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"     * @param parser The parser created when user starts session with Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    public Recieve(Parser parser) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"     * Runs the Duke Application.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"                \"To add a Duke.Todo, type -\u003e todo \u003cDescription\u003e \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"                \"To add a Duke.Deadline, type -\u003e deadline \u003cDescription\u003e /by \u003cdeadline\u003e\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"                \"To add an Duke.Event, type -\u003e event \u003cDescription\u003e /at \u003cdetails\u003e\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"                \"To mark as done, type -\u003e done \u003ctask list index\u003e\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"                \"To see all of your tasks, type -\u003e list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"                \"To end session, type -\u003e bye\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"                \"What can I do for you today?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"                parser.getStorage().load();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"                    parser.endSession();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"                } else if (input.startsWith(\"done \") || input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"                    parser.done(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"                    parser.list();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"                } else if (input.startsWith(\"delete \") || input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"                    parser.delete(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"                } else if (input.startsWith(\"find \") || input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"                    parser.find(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"                    parser.add(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"            } catch (DukeException | InvalidTaskIndexException |","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"                    InvalidFormatException | IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"janjanchen":66}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":" * Handles the reading and writing of file","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":" * which Duke accesses for the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":" * Keeps the file path of the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"     * @param filePath The string for the file name.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"//    public void createNew() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"//","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"//        File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"//        if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"//            System.out.println(\"Creating new file... Please try again\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"//            f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"//        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"//    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"     * Loads and reads the content of the file to","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"     * return an Array List of tasks saved in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"     * @return An ArrayList of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"     * @throws IOException Thrown when the file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"Creating new file...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"                System.out.println(\"Creating new file...1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"            String readLine \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"            if (readLine.contains(\"[T]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"                Todo task \u003d new Todo(readLine.substring(7));","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"                if (readLine.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"                arr.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"            else if (readLine.contains(\"[D]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"                String[] spl \u003d readLine.split(\"--\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"                int length \u003d spl[1].length();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"                LocalDate date \u003d LocalDate.parse(spl[1].substring(5, length - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"                Deadline task \u003d new Deadline(spl[0].substring(7), date);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"                if (readLine.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"                arr.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"                String[] spl \u003d readLine.split(\"--\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"                int length \u003d spl[1].length();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"                Event task \u003d new Event(spl[0].substring(7), spl[1].substring(5, length - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"                if (readLine.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"                arr.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"        return arr;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"     * Rewrites the content of the file with the content passed in to the method.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"     * @param arr The arraylist of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"     * @throws IOException Thrown when the file cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e arr) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"        for(Task str: arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"            fw.write(str.toStore() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"     * Returns the filePath string of the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"     * @return the filePath string of the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"    public String getPath() {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"        return this.filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":113}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * A Parent class for the different types of input to the Task List.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the task\u0027s status.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the task\u0027s status.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"     * to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"     * to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    public String toStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"janjanchen":52}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":" * A list that contains all the tasks saved in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"     * that takes in an array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"     * @param tasks ArrayList of the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a TaskLIst","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"     * that takes in no argument.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"     * Marks a specified task as completed","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"     * and returns an updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"     * @param index The index of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"     * @return An updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e markDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"        System.out.println(tasks.get(index).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"            return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"janjanchen"},"content":"     * Adds a Todo to the TaskList and","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"janjanchen"},"content":"     * returns an updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"janjanchen"},"content":"     * @param details The description of the Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"janjanchen"},"content":"     * @return The updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e addTodo(String details) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"janjanchen"},"content":"        Todo task \u003d new Todo(details);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"janjanchen"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"janjanchen"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"janjanchen"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"janjanchen"},"content":"     * Adds a Deadline to the TaskList and","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"janjanchen"},"content":"     * returns an updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"janjanchen"},"content":"     * @param details The description of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"janjanchen"},"content":"     * @param date The date of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"janjanchen"},"content":"     * @return The updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e addDeadline(String details, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"janjanchen"},"content":"        Deadline task \u003d new Deadline(details, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"janjanchen"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"janjanchen"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"janjanchen"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"janjanchen"},"content":"     * Adds an Event to the TaskList and","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"janjanchen"},"content":"     * returns an updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"janjanchen"},"content":"     * @param details The description of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"janjanchen"},"content":"     * @param at The details of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"janjanchen"},"content":"     * @return The updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e addEvent(String details, String at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"janjanchen"},"content":"        Event task \u003d new Event(details, at);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"janjanchen"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"janjanchen"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"janjanchen"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"janjanchen"},"content":"     * Deletes a specified task from the Task List and","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"janjanchen"},"content":"     * returns an updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"janjanchen"},"content":"     * @param index The task index.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"janjanchen"},"content":"     * @return An updated array list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e deleteTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"janjanchen"},"content":"        String temp \u003d tasks.get(index).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"janjanchen"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"janjanchen"},"content":"        System.out.println(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"janjanchen"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"janjanchen"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"janjanchen"},"content":"     * Lists out all tasks in the Task List.","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"janjanchen"},"content":"    public void listTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"janjanchen"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"There is no task for now :)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"janjanchen"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"janjanchen"},"content":"            for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"janjanchen"},"content":"                System.out.println(i + \".\" + tasks.get(i - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"janjanchen"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"janjanchen"},"content":"     * Returns the length of the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"janjanchen"},"content":"     * @return the length of the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"janjanchen"},"content":"    public int arrSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"janjanchen"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"janjanchen"},"content":"     * Returns the Array List representation of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"janjanchen"},"content":"     * @return the Array List representation of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"janjanchen"},"content":"    public ArrayList\u003cTask\u003e inArrayList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"janjanchen"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":147}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"package Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":" * A Task that can be added to the Task List","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":" * which has a description.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"     * A public constructor to create a Todo Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"     * Returns the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"     * todo to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"     * @return the string representation of the","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"     *         todo to be saved into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"    public String toStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"janjanchen":36}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"import Duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"    public void AddDeadlineTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"            LocalDate date \u003d LocalDate.parse(\"2021-11-11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"            Deadline task \u003d new Deadline(\"task1 \", date);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[D][ ] task1 --(by: Nov 11 2021)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddDeadlineTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddDeadlineTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"    public void markDeadLineDoneTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"            LocalDate date \u003d LocalDate.parse(\"2021-12-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"            Deadline task \u003d new Deadline(\"task2 \", date);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[D][ ] task2 --(by: Dec 12 2021)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[D][X] task2 --(by: Dec 12 2021)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markDeadlineDoneTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markDeadlineDoneTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":43}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"import Duke.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    public void AddEventTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"            Event task \u003d new Event(\"task1 \", \"loc1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[E][ ] task1 --(at: loc1)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddEventTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddEventTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public void markEventTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"            Event task \u003d new Event(\"task2 \", \"loc2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[E][ ] task2 --(at: loc2)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[E][X] task2 --(at: loc2)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markDeadlineDoneTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markDeadlineDoneTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":39}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"import Duke.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RESET \u003d \"\\u001B[0m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_GREEN \u003d \"\\u001B[32m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"    private static final String ANSI_RED \u003d \"\\u001B[31m\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"    public void AddTodoTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"            Todo task \u003d new Todo(\"task1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[T][ ] task1\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddTodoTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"AddTodoTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"janjanchen"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"janjanchen"},"content":"    public void markTodoDoneTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"janjanchen"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"janjanchen"},"content":"            Todo task \u003d new Todo(\"task2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[T][ ] task2\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"janjanchen"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"janjanchen"},"content":"            assertEquals(\"[T][X] task2\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markTodoDoneTest: \" + ANSI_GREEN + \"pass\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"janjanchen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"janjanchen"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"janjanchen"},"content":"            System.out.println(\"markTodoDoneTest: \" + ANSI_RED + \"fail\" + ANSI_RESET);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"janjanchen"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"janjanchen"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"janjanchen"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"janjanchen"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"janjanchen":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"janjanchen"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"janjanchen"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"janjanchen"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"janjanchen"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"janjanchen"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"janjanchen"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"janjanchen"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"janjanchen"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"janjanchen"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"janjanchen"},"content":"deadline buy books","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"janjanchen"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"janjanchen"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"janjanchen"},"content":"event yoga /at","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"janjanchen"},"content":"event yoga /at Home","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"janjanchen"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"janjanchen":15}}]
