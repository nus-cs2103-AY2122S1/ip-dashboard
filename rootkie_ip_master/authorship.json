[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"compileJava {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    options.encoding \u003d \"UTF-8\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"compileTestJava {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    options.encoding \u003d \"UTF-8\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rootkie":9,"-":45}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"public class Main {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"     * Entry point of Duke project.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"     * @param args Not used.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"        duke.run();","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Represents the Duke bot engine, handles everything.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"     * Constructs the Duke Bot engine.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        this.taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * Entrypoint of Duke bot engine.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"                Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"                c.execute(taskManager, ui);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"            } catch (DukeException | IllegalArgumentException | DateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"                ui.handleError(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rootkie":37,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Represents exceptions that are specific to Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    DukeException(String msg) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"        super(msg);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":10}},{"path":"src/main/java/duke/InvalidDukeCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Represents an exception thrown due to unknown / unimplemented Duke command.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public class InvalidDukeCommandException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    public InvalidDukeCommandException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":" * Represents a parser to understand user input and returns a Command object to be executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     * Parse a String of fullCommand and Return a valid Command object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     * If fullCommand is invalid, exceptions are thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"     * @param fullCommand String of the full command user inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"     * @return Command that can be executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * @throws DukeException            If the command action is not recognized.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * @throws IllegalArgumentException If there are missing arguments for given command.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public static Command parse(String fullCommand) throws DukeException, IllegalArgumentException {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        String[] parts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        String [] args;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        String action \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        switch (action) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"Not enough arguments\");","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"            return new DoneCommand(Integer.parseInt(parts[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"Not enough arguments\");","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"            return new DeleteCommand(Integer.parseInt(parts[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"Not enough arguments\");","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"            return new FindCommand(parts[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"            return new AddCommand(action, parts[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"Not enough arguments\");","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"            args \u003d parts[1].split(\" /by \");","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"            assertInputSize(args, 2, \"☹ OOPS!!! Insufficient args for deadline.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"            return new AddCommand(action, args);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"            assertInputSize(parts, 2, \"Not enough arguments\");","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"            args \u003d parts[1].split(\" /at \");","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"            assertInputSize(args, 2, \"☹ OOPS!!! Insufficient args for event.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"            return new AddCommand(action, args);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"            throw new InvalidDukeCommandException();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"    private static void assertInputSize(String[] inputs,","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"                                        int expectedSize,","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"                                        String errorMsg) throws IllegalArgumentException {","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"        if (inputs.length !\u003d expectedSize) {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"            throw new IllegalArgumentException(errorMsg);","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":68}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":" * Represents a Storage object that handles file IO for tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    private final Path path;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public Storage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        this.path \u003d Paths.get(\".\", \"db.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    public Storage(Path path) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * Saves given list of tasks to file specified at instantiation.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     * If file does not exist, it will be created.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     * The list of tasks will be formatted in easily parsable format delimited","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     * by |.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * @param taskList The list of tasks to be saved.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     * @throws IOException If something goes wrong with File operations.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    public void save(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"        boolean fileExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        if (!fileExists) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        BufferedWriter file \u003d Files.newBufferedWriter(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"            file.write(t.toDatabaseString() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"        file.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"     * Returns a List of Task by parsing file specified at instantiation.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"     * If file does not exist, empty List will be returned.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"     * @return List of Task saved in file.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"     * @throws IOException       If something goes wrong with File operations.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"     * @throws DateTimeException If file\u0027s date data is corrupted.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"    public List\u003cTask\u003e load() throws IOException, DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"        boolean fileExists \u003d Files.exists(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"        if (!fileExists) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"        BufferedReader file \u003d Files.newBufferedReader(path);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"        file.lines().forEachOrdered(line -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"            String[] parts \u003d line.split(\"[|]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"            String type \u003d parts[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"            boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"            switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"            case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"                taskList.add(ToDo.of(isDone, parts[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"            case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"                taskList.add(Deadline.of(isDone, parts[2], parts[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"            case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"                taskList.add(Event.of(isDone, parts[2], parts[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"            default:","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        });","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":94}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":" * Represents a TaskManager object that stores and operates on a List of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    TaskManager() throws DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        load();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * Adds a task to the taskList and saves it to database.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     * @param task any Task object is accepted.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        save();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * Deletes a task at specified index.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     * If given index is too big or negative, an IllegalArgumentException is thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     * @param taskId The index (0-indexed) of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"     * @return The task that has just been deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"     * @throws IllegalArgumentException If taskId \u003e\u003d taskList.size() or taskId \u003c 0.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    public Task deleteTask(int taskId) throws IllegalArgumentException {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        if (taskId \u003c taskList.size() \u0026\u0026 taskId \u003e\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"            Task ret \u003d taskList.remove(taskId);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"            save();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"            return ret;","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! Task Index is invalid!!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public int taskCount() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"     * Mark the task at specified index as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"     * If given index is too big or negative, an IllegalArgumentException is thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"     * @param taskId The index (0-indexed) of the task to be mark as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"     * @return The task that has just been marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"     * @throws IllegalArgumentException If taskId \u003e\u003d taskList.size() or taskId \u003c 0.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"rootkie"},"content":"    public Task completeTask(int taskId) throws IllegalArgumentException {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rootkie"},"content":"        if (taskId \u003c taskList.size() \u0026\u0026 taskId \u003e\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"rootkie"},"content":"            taskList.set(taskId, taskList.get(taskId).markDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"rootkie"},"content":"            save();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"rootkie"},"content":"            return taskList.get(taskId);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"rootkie"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"rootkie"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! Task Index is invalid!!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"rootkie"},"content":"     * Format the list of tasks in a ordered numbered list format.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"rootkie"},"content":"     * @return pretty-printable string of the list of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"rootkie"},"content":"    public String listTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"rootkie"},"content":"        return Stream.iterate(0, x -\u003e x \u003c taskList.size(), x -\u003e x + 1)","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"rootkie"},"content":"                .map(x -\u003e String.format(\"%d. %s\", x + 1, taskList.get(x).toString()))","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"rootkie"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"rootkie"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"rootkie"},"content":"        return this.taskList.stream().filter(t -\u003e t.getDescription().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"rootkie"},"content":"    private void load() throws DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"rootkie"},"content":"            this.taskList \u003d storage.load();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"rootkie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"rootkie"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"rootkie"},"content":"    private void save() {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"rootkie"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"rootkie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"rootkie"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":102}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Represents the Ui object that deals with interactions with the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Prints greeting message","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        reply(\"Hello! I\u0027am Duke\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"     * Output box formatted message to screen.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     * @param msg The message to be formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    public void reply(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        String indentedMsg \u003d Arrays.stream(msg.split(\"\\n\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"                .map(s -\u003e String.format(\"\\t%s\\n\", s))","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"                .collect(Collectors.joining(\"\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        System.out.printf(\"\\t____________________________________\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"                + \"%s\"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"                + \"\\t____________________________________\\n\", indentedMsg);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"     * Handles any exceptions. Outputs the message to screen for now.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"     * @param e The exception to be handled.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    public void handleError(Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        reply(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":52}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.InvalidDukeCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":" * Represents the command to add additional tasks. Accepted task so far are \"todo\" \"deadline\" and \"event\".","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    private final String type;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    private final String[] args;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     * Constructs AddCommand object.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * @param type the type of task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     * @param args the argument for the task to be added.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    public AddCommand(String type, String... args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) throws InvalidDukeCommandException, DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"            task \u003d ToDo.of(false, args[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"            task \u003d Deadline.of(false, args[0], args[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"            task \u003d Event.of(false, args[0], args[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"            throw new InvalidDukeCommandException();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        taskManager.addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        ui.reply(String.format(","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"                \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"                        + \"%s\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"                        + \"Now you have %d tasks in the list\", task.toString(), taskManager.taskCount()","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        ));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"     * Executes the command, modify given taskManager and output to screen using ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"     * @param taskManager Instance of TaskManager that handles tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"     * @param ui          Instance of Ui that handles output to screen.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"     * @throws DukeException If something goes wrong with the Duke command.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    public abstract void execute(TaskManager taskManager, Ui ui) throws DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" * Represents the command \"delete x\" to delete a task at index x (1-indexed).","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        Task deletedTask \u003d taskManager.deleteTask(id);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        ui.reply(String.format(\"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"                + \"%s\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"                + \"Now you have %d tasks in the list.\", deletedTask.toString(), taskManager.taskCount())","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        );","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":" * Represents the command \"done x\" to mark a task at index x (1-indexed) as completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    public DoneCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        ui.reply(String.format(","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"                \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"                        + \"%s\", taskManager.completeTask(id - 1).toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        ));","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":" * Represents the command \"exit\", returns True when checked for isExit().","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"        ui.reply(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" * Represents the command \"find x\" to find tasks containing specified keyword x and outputs them to screen.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        List\u003cTask\u003e tasks \u003d taskManager.find(this.keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        s.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"            s.append(String.format(\"%d.%s\\n\", i, tasks.get(i)));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        ui.reply(s.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"rootkie":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":" * Represents the command \"list\" to list the tasks in given taskManager in numbered list format.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    public void execute(TaskManager taskManager, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"        ui.reply(","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"                String.format(\"Here are the tasks in your list:\\n%s\", taskManager.listTasks())","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        );","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":16}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" * Represents a deadline type task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    private Deadline(String description, LocalDate time) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"     * Returns a Deadline object that is subclass of Task","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"     * @param isDone      Boolean for if the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"     * @param description String for the description of the Task","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"     * @param time        String for time, needs to be in valid string format or exception is thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"     * @return A Task that is a Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * @throws DateTimeException If time string is not valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    public static Task of(boolean isDone, String description, String time) throws DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        Task ret \u003d new Deadline(description, LocalDate.parse(time));","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        return isDone ? ret.markDone() : ret;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        return \"D\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        return String.format(\"%s|%s\", super.toDatabaseString(), this.time);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        return String.format(\"[%s]%s (by: %s)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"                this.getTaskType(),","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"                super.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":50}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":" * Represents a event type task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     * Constructs an Event object.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"     * @param description description of event.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"     * @param time time of event.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    public Event(String description, LocalDate time) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"     * Returns a Event object that is subclass of Task","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"     * @param isDone      Boolean for if the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"     * @param description String for the description of the Task","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"     * @param time        String for time, needs to be in valid string format or exception is thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"     * @return A Task that is a Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"     * @throws DateTimeException If time string is not valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"    public static Task of(boolean isDone, String description, String time) throws DateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        Task ret \u003d new Event(description, LocalDate.parse(time));","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        return isDone ? ret.markDone() : ret;","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        return \"E\";","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"        return String.format(\"%s|%s\", super.toDatabaseString(), this.time);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"        return String.format(\"[%s]%s (at: %s)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"                this.getTaskType(),","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"                super.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":60}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Represents a Task object that support serializing to database string and pretty print. Can be marked as completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"    protected final String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"     * Construct a Task object","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"     * @param description description of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    abstract String getTaskType();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"     * Mark task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"     * @return Updated Task object.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public Task markDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        return this;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"        return this.description;","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"     * Returns | delimited string that is used to represent the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"     * Used for serializing task for database.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"     * @return String serialized for database.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    public String toDatabaseString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"        return String.format(\"%s|%d|%s\",","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"rootkie"},"content":"                this.getTaskType(), this.isDone() ? 1 : 0, this.getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"rootkie"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":59}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":" * Represents a Todo type task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"    private ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"     * Returns a ToDo object that is subclass of Task","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"     * @param isDone      Boolean for if the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"     * @param description String for the description of the Task","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"     * @return A Task that is a ToDo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    public static Task of(boolean isDone, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        Task ret \u003d new ToDo(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"        return isDone ? ret.markDone() : ret;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        return \"T\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        return String.format(\"[%s]%s\", this.getTaskType(), super.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":33}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public void parse_validCommands() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        Command c;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"list\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof ListCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"bye\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof ExitCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof DeleteCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"done 1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof DoneCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"todo test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"deadline test /by 2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"            c \u003d Parser.parse(\"event test /at 2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"            assertTrue(c instanceof AddCommand);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    public void parse_invalidCommands_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parse(\"INVALID COMMAND\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.parse(\"done\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.parse(\"deadline abcd\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.parse(\"event abcd\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":51}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"    @TempDir","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    Path path;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    public void readWrite() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"        Path file \u003d path.resolve(\"db.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        Storage storage \u003d new Storage(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        List\u003cTask\u003e tasks \u003d Arrays.asList(ToDo.of(false, \"TEST TASK HERE\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"            List\u003cTask\u003e readTasks \u003d storage.load();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"            assertEquals(tasks.toString(), readTasks.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"            fail(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":35}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"    public void createDeadline() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST DEADLINE\";","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Deadline.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        assertEquals(desc, task.getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        task \u003d Deadline.of(true, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    public void completeDeadline() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST DEADLINE\";","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Deadline.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        task.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"    public void makeDeadlineStrings() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST DEADLINE\";","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Deadline.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[D][ ] TEST DEADLINE (by: Feb 2 2020)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"D|0|TEST DEADLINE|2020-02-02\", task.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        task.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[D][X] TEST DEADLINE (by: Feb 2 2020)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"D|1|TEST DEADLINE|2020-02-02\", task.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    public void createDeadline_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST DEADLINE\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"        assertThrows(DateTimeException.class, () -\u003e Deadline.of(false, desc, \"NOT VALID DATE\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":49}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"    public void createEvent() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST EVENT\";","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Event.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"        assertEquals(desc, task.getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"        task \u003d Event.of(true, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"    public void completeEvent() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST EVENT\";","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Event.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"        task.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"        assertEquals(true, task.isDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"    public void makeEventStrings() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST EVENT\";","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        Task task \u003d Event.of(false, desc, \"2020-02-02\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[E][ ] TEST EVENT (at: Feb 2 2020)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"E|0|TEST EVENT|2020-02-02\", task.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"        task.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[E][X] TEST EVENT (at: Feb 2 2020)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"E|1|TEST EVENT|2020-02-02\", task.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"    public void createEvent_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST EVENT\";","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"        assertThrows(DateTimeException.class, () -\u003e Event.of(false, desc, \"NOT VALID DATE\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":48}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"    public void createTodo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST TODO\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"        Task todo \u003d ToDo.of(false, desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"        assertEquals(desc, todo.getDescription());","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"        assertEquals(\" \", todo.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"        todo \u003d ToDo.of(true, desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"X\", todo.getStatusIcon());","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"    public void completeToDo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST TODO\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"        Task todo \u003d ToDo.of(false, desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"        todo.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"        assertEquals(true, todo.isDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"    public void makeToDoStrings() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rootkie"},"content":"        String desc \u003d \"TEST TODO\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rootkie"},"content":"        Task todo \u003d ToDo.of(false, desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[T][ ] TEST TODO\", todo.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"T|0|TEST TODO\", todo.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rootkie"},"content":"        todo.markDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"[T][X] TEST TODO\", todo.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rootkie"},"content":"        assertEquals(\"T|1|TEST TODO\", todo.toDatabaseString());","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rootkie"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rootkie":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"rootkie"},"content":"deadline return book /by 2021-01-01","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rootkie"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"rootkie"},"content":"event project meeting /at 2021-02-02","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rootkie"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"rootkie"},"content":"deadline return book /by 2021-03-03","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rootkie"},"content":"event project meeting /at 2021-04-04","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"rootkie"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"rootkie"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"rootkie"},"content":"ooga booga","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"rootkie"},"content":"deadline monke","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"rootkie"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"rootkie"},"content":"event what","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"rootkie"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"rootkie"},"content":"done 999","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"rootkie"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"rootkie"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"rootkie"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"todo new thing","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"rootkie"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"rootkie"},"content":"delete","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"rootkie"},"content":"find book","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rootkie"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"rootkie":27}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"rootkie"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rootkie"},"content":"dos2unix db.txt EXPECTED-DB.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rootkie"},"content":"diff db.txt EXPECTED-DB.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rootkie"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rootkie"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rootkie"},"content":"    echo \"DB Test result: PASSED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rootkie"},"content":"else","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rootkie"},"content":"    echo \"DB Test result: FAILED\"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rootkie"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"rootkie"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"rootkie"},"content":"# remove db","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rootkie"},"content":"rm db.txt","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"rootkie":13,"-":35}}]
