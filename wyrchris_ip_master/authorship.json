[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"checkstyle {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    implementation \u0027junit:junit:4.13.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"    archiveBaseName \u003d \"look\"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":29,"wyrchris":25}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"# LOOK User Guide","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"## Content","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"  - [todo](#todo---add-a-todo-task)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"  - [deadline](#deadline---add-a-deadline-task)","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"  - [event](#event---add-an-event-task)","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"  - [list](#list---show-all-the-list-of-all-tasks)","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"  - [done](#done---mark-a-task-as-done)","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"  - [delete](#delete---delete-a-task-from-the-list)","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"  - [undo](#undo---undo-the-previous-command)","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"  - [redo](#redo---redo-the-previous-command)","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"  - [bye](#bye---close-the-program)","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"- [Reference](#reference)","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"## Quick Start","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"2. Download the latest `look.jar` from [here](https://github.com/wyrchris/ip/releases/tag/A-Jar)","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your LOOK.","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"5. Type the command into the text box at the bottom to start using. Some example commands are below:","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"   - `list`: List out all the task that have been inputted.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"   - `todo`: Add a new todo task.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"   - `done 2`: Mark the task at index 2 as completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"   - `undo`: Undo the previous action","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"1. ### ToDo/Deadline/Event","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"   - Add a new todo/deadline/event task to your list of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"2. ### List all task","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"   - List all the task that was inputted into LOOK.","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"3. ### Delete task","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"   - Delete a task from your list of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"4. ### Mark task","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"   - Mark a task from your list of task as completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"5. ### Undo/Redo action","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"   - Undo/Redo the latest action that was done.","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"Add a todo task with the given description to our list.","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"`todo task1`","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"The todo task will be added into our list and shows the current count of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"        [T][ ] task1","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"Add a deadline task with the given description and deadline date to our list.","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"Format: `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"`deadline task1 /by Next Monday`","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"The deadline task will be added into our list and shows the current count of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"        [D][ ] task1 (by: Next Monday)","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"### `event` - Add an event task","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"Add an event task with the given description and event date to our list.","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"Format: `event DESCRIPTION /at DATE`","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"`event task1 /at Next Monday`","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"The event task will be added into our list and shows the current count of task.","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"        [E][ ] task1 (at: Next Monday)","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"wyrchris"},"content":"### `list` - Show all the list of all tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"wyrchris"},"content":"Show all the tasks that have been added into the lists","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"wyrchris"},"content":"Format: `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"wyrchris"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"wyrchris"},"content":"        1. [E][ ] task1 (at: Next Monday)","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"wyrchris"},"content":"        2. [D][X] task2 (by: Next Tuesday)","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"        3. [T][ ] task3","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"wyrchris"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"Mark the tasks at the index provided as done.","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"wyrchris"},"content":"`done 2`","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"wyrchris"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"wyrchris"},"content":"        [D][X] task2 (by: Next Tuesday)","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"### `delete` - Delete a task from the list","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"Delete the tasks at the index provided from the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"wyrchris"},"content":"Example of usage:","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"wyrchris"},"content":"`delete 2`","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"wyrchris"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"wyrchris"},"content":"        [D][X] task2 (by: Next Tuesday)","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"wyrchris"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"wyrchris"},"content":"### `undo` - Undo the previous command","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"wyrchris"},"content":"Undo the previous command and show the list of tasks in the previous state.","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"wyrchris"},"content":"Format: `undo`","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":187,"author":{"gitId":"wyrchris"},"content":"    Last command has been undone. The tasks is now this:","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"wyrchris"},"content":"        1. [E][ ] task1 (at: Next Monday)","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"wyrchris"},"content":"        2. [D][X] task2 (by: Next Tuesday)","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"wyrchris"},"content":"        3. [T][ ] task3","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"wyrchris"},"content":"### `redo` - Redo the previous command","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"wyrchris"},"content":"Redo the previous command and show the list of tasks in the previous state.","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"wyrchris"},"content":"Format: `redo`","lastModifiedDate":"2021-09-11"},{"lineNumber":198,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":199,"author":{"gitId":"wyrchris"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":200,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":201,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"wyrchris"},"content":"    Last command has been redone. The tasks is now this:","lastModifiedDate":"2021-09-11"},{"lineNumber":203,"author":{"gitId":"wyrchris"},"content":"        1. [E][ ] task1 (at: Next Monday)","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"wyrchris"},"content":"        2. [D][X] task2 (by: Next Tuesday)","lastModifiedDate":"2021-09-11"},{"lineNumber":205,"author":{"gitId":"wyrchris"},"content":"        3. [T][ ] task3","lastModifiedDate":"2021-09-11"},{"lineNumber":206,"author":{"gitId":"wyrchris"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":207,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"wyrchris"},"content":"### `bye` - Close the program","lastModifiedDate":"2021-09-11"},{"lineNumber":209,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":210,"author":{"gitId":"wyrchris"},"content":"Close the program.","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":212,"author":{"gitId":"wyrchris"},"content":"Format: `bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"wyrchris"},"content":"## Command Summary","lastModifiedDate":"2021-09-11"},{"lineNumber":216,"author":{"gitId":"wyrchris"},"content":"Command|Format, Examples","lastModifiedDate":"2021-09-11"},{"lineNumber":217,"author":{"gitId":"wyrchris"},"content":"---|---","lastModifiedDate":"2021-09-11"},{"lineNumber":218,"author":{"gitId":"wyrchris"},"content":"ToDo|`todo DESCRIPTION` \u003cbr\u003e e.g. todo task1","lastModifiedDate":"2021-09-11"},{"lineNumber":219,"author":{"gitId":"wyrchris"},"content":"Deadline|`deadline DESCRIPTION` \u003cbr\u003e e.g. deadline task2 /by Next Monday","lastModifiedDate":"2021-09-11"},{"lineNumber":220,"author":{"gitId":"wyrchris"},"content":"Event|`event DESCRIPTION` \u003cbr\u003e e.g. deadline task2 /at Next Tuesday","lastModifiedDate":"2021-09-11"},{"lineNumber":221,"author":{"gitId":"wyrchris"},"content":"List|`list`","lastModifiedDate":"2021-09-11"},{"lineNumber":222,"author":{"gitId":"wyrchris"},"content":"Done|`done INDEX` \u003cbr\u003e e.g. done 2","lastModifiedDate":"2021-09-11"},{"lineNumber":223,"author":{"gitId":"wyrchris"},"content":"Delete|`delete INDEX` \u003cbr\u003e e.g. delete 2","lastModifiedDate":"2021-09-11"},{"lineNumber":224,"author":{"gitId":"wyrchris"},"content":"Undo|`undo`","lastModifiedDate":"2021-09-11"},{"lineNumber":225,"author":{"gitId":"wyrchris"},"content":"Redo|`redo`","lastModifiedDate":"2021-09-11"},{"lineNumber":226,"author":{"gitId":"wyrchris"},"content":"Close|`bye`","lastModifiedDate":"2021-09-11"},{"lineNumber":227,"author":{"gitId":"wyrchris"},"content":"---","lastModifiedDate":"2021-09-11"},{"lineNumber":228,"author":{"gitId":"wyrchris"},"content":"##Reference","lastModifiedDate":"2021-09-11"},{"lineNumber":229,"author":{"gitId":"wyrchris"},"content":"AB3 User Guide: https://se-education.org/addressbook-level3/UserGuide.html#features","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"wyrchris":200,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * Implementation for Duke.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Duke {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    private final TaskList list;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * Public constructor to initialise Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        storage \u003d new Storage(\"/data/duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        list \u003d storage.readData();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * Handles the saving of the TaskList\u0027s data by calling the saveData","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    public void saveDataToFile() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        this.storage.saveData(this.list);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     * Returns the User\u0027s string input after it was parsed by the parser","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"     * @param input the String that is to be parsed","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * @return The Duke\u0027s String response of the user\u0027s input","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"    public String handleInput(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        assert !input.isEmpty() : \"String is empty!!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        return Parser.parseInput(this.list, input);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wyrchris":38,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * Exception meant for handling those specific to Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * A public constructor for initialising DukeException.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @param message The message meant for the Duke Exception","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * Returns the String representation for this DukeException formatted to be printed by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of this DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        return \":( OOPS!! \" + super.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"wyrchris":27}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wyrchris":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import duke.task.TaskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the handling of the text input into Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * Handles all the text input to call the correct corresponding method.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @param input The text input from the user to Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply to the user\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    public static String parseInput(TaskList list, String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        String reply;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        switch (command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.displayTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        case \"undo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.undoList();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        case \"redo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.redoList();","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            reply \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"            reply \u003d parseOneInputCommand(list, inputArray);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"            reply \u003d parseTwoInputCommand(list, inputArray);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        return reply;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    private static String parseOneInputCommand(TaskList list, String[] inputArray) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"        String reply;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"        String command \u003d inputArray[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"        if (inputArray.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The second input is missing.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        String input \u003d inputArray[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        switch (command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"        case \"done\":","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.markTask(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.deleteTask(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"        case \"find\":","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.findTask(inputArray[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Wrong command provided.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"        return reply;","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"    private static String parseTwoInputCommand(TaskList list, String[] inputArray) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"        if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The description of \" + inputArray[0] + \" cannot be empty.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"        TaskName taskType \u003d TaskName.getTaskType(inputArray[0]);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"        return list.addTask(taskType, inputArray[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"     * Parse the string provided from the saved data text file and add the respective Task into TaskList provided.","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"     * @param list The TaskList by which the Task is to be added to","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"     * @param dataLine The String corresponding to a single line of text in the saved data text file","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"    public static void parseSavedDataLine(TaskList list, String dataLine) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray \u003d dataLine.split(\" \\\\| \");","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"        TaskName type \u003d TaskName.getTaskType(inputArray[0]);","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"        String secondInput \u003d type !\u003d TaskName.TODO ? inputArray[3] : \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"        String description \u003d inputArray[2] + type.getSplit() + secondInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"        boolean isDone \u003d inputArray[1].equals(\"1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"        list.addTask(type, description, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":115}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" * A class that encapsulates the saving/reading data for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * Constructor for the Storage object initialised with the filepath","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * to save/read the data to/from.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     * @param filePath The String representation of the filepath to the text file","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     *                 containing the saved data","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * Saves the data of the task in the list into a text file formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     * @param list The TaskList containing the tasks that is to be saved into","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    public void saveData(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            // get file directory string","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            String[] dir \u003d this.filePath.split(\"/\");","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            StringBuilder dirString \u003d new StringBuilder();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            for (int i \u003d 0; i \u003c dir.length - 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                dirString.append(\"/\").append(dir[i]);","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"            String path \u003d new File(\"\").getAbsoluteFile() + dirString.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"            // create directory if not yet created","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"            if (!file.isDirectory()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"                file.mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            FileWriter fw \u003d new FileWriter(file + \"/\" + dir[dir.length - 1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            list.iterateList(x -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"                    fw.write(x.toData() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"            });","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     * Reads the data from the saved file if it exists to update Duke on running.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"    public TaskList readData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"            // set-up to check if file exists","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"            String path \u003d new File(\"\").getAbsoluteFile() + this.filePath;","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"            if (!file.isFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"                return list;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"            // read and update TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"                Parser.parseSavedDataLine(list, s.nextLine());","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"            return list;","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"            return new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":89}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import duke.task.TaskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the list of task inputted by Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    private final LinkedList\u003cArrayList\u003cTask\u003e\u003e previousTasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    private final LinkedList\u003cArrayList\u003cTask\u003e\u003e nextTasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        this.previousTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        this.nextTasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     * Adds the new Task into list and return the corresponding String reply.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"     * @param type The type of the task that will be added","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"     * @param input The corresponding description provided for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The boolean if the task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the reply after adding a task","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    public String addTask(TaskName type, String input, Boolean isDone) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        assert !input.isBlank() : \"Input cannot be null!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        this.saveCurrentTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            task \u003d Task.ofTask(type, input, null, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"            inputArray \u003d input.split(type.getSplit());","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"            if (inputArray.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The format for \" + type + \" is wrong.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"            String description \u003d inputArray[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"            String timeDescription \u003d inputArray[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"            if (description.isBlank()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The description of \" + type + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"            } else if (timeDescription.isBlank()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The date/time is missing from \" + type + \".\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"            assert inputArray[0] !\u003d null \u0026\u0026 inputArray[1] !\u003d null : \"The description is null!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"            task \u003d Task.ofTask(type, description, timeDescription, false);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Unexpected value: \" + type);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"        this.tasks \u003d this.copyTaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"        return Ui.showAddTaskReply(task.toString(), this.tasks.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"     * Adds the new Task into list and return the corresponding String reply.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"     * @param type The type of the task that will be added","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"     * @param input The corresponding description provided for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the reply after adding a task","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"    public String addTask(TaskName type, String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"        return addTask(type, input, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"     * Returns the list of all the Tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the list of all the tasks formatted","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"    public String displayTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"            output.append(\"\\t\").append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"            i++;","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"        return output.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"     * Marks the Task at the index of the list to be done.","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"     * @param input The index of the Task in the list that is to be mark as done","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after marking a task done","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"    public String markTask(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"        assert !input.isBlank() : \"Input cannot be null!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"        int index;","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"        this.saveCurrentTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"            index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"        if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wyrchris"},"content":"        this.tasks \u003d this.copyTaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"wyrchris"},"content":"        String taskName \u003d this.tasks.get(index - 1).markDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"wyrchris"},"content":"        return Ui.showMarkTaskReply(taskName);","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wyrchris"},"content":"     * Deletes the task at the specific index.","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wyrchris"},"content":"     * @param input The index of the task in the list that is to be deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after deleting a task","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"wyrchris"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"wyrchris"},"content":"        assert !input.isBlank() : \"Input cannot be null!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"        int index;","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"        this.saveCurrentTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"wyrchris"},"content":"            index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"wyrchris"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"wyrchris"},"content":"        if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"wyrchris"},"content":"        this.tasks \u003d this.copyTaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"        Task deleted \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"        return Ui.showDeleteTaskReply(deleted.toString(), this.tasks.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"     * Returns the list of all tasks whose description which matches the provided keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"wyrchris"},"content":"     * @param input The String of the keyword that will be used to search the TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"wyrchris"},"content":"     * @return The reply for Duke containing all the task matching the keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"wyrchris"},"content":"    public String findTask(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"wyrchris"},"content":"        assert !input.isBlank() : \"Input cannot be null!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"wyrchris"},"content":"        StringBuilder reply \u003d new StringBuilder();","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"wyrchris"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wyrchris"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"wyrchris"},"content":"            if (task.matchKeyword(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wyrchris"},"content":"                reply.append(\"\\t\").append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"wyrchris"},"content":"                i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"wyrchris"},"content":"        return Ui.showFindTaskReply(input, reply.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"wyrchris"},"content":"     * Iterates the list and perform a function on each task.","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"wyrchris"},"content":"     * @param f the function to be applied on each task","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"wyrchris"},"content":"    public void iterateList(Function\u003cTask, Void\u003e f) {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"wyrchris"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"wyrchris"},"content":"            f.apply(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"wyrchris"},"content":"     * Undoes the TaskList to the state before the previous command.","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"wyrchris"},"content":"     * @return The reply for Duke showing the previous state","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"wyrchris"},"content":"    public String undoList() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"wyrchris"},"content":"            this.nextTasks.addFirst(this.copyTaskList());","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"wyrchris"},"content":"            this.tasks \u003d this.previousTasks.remove();","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"wyrchris"},"content":"            String displayedTasks \u003d this.displayTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"wyrchris"},"content":"            return Ui.showUndoRedoListReply(displayedTasks, true);","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"wyrchris"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Already at the oldest possible state\");","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"wyrchris"},"content":"     * Redoes the TaskList to the state before the previous undoList.","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"wyrchris"},"content":"     * @return The reply for Duke showing the previous state","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"wyrchris"},"content":"    public String redoList() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":223,"author":{"gitId":"wyrchris"},"content":"            this.previousTasks.addFirst(this.tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"wyrchris"},"content":"            this.tasks \u003d this.nextTasks.remove();","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":226,"author":{"gitId":"wyrchris"},"content":"            String displayedTasks \u003d this.displayTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"wyrchris"},"content":"            return Ui.showUndoRedoListReply(displayedTasks, false);","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"wyrchris"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Already at the latest possible state\");","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":231,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"wyrchris"},"content":"    private ArrayList\u003cTask\u003e copyTaskList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"wyrchris"},"content":"        ArrayList\u003cTask\u003e copy \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"wyrchris"},"content":"        this.tasks.forEach(task -\u003e copy.add(task.copy()));","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"wyrchris"},"content":"        return copy;","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":238,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":239,"author":{"gitId":"wyrchris"},"content":"    private void saveCurrentTasks() {","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"wyrchris"},"content":"        this.previousTasks.addFirst(this.tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":242,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":242}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"     * Shows the final message before terminating.","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * @return The formatted error message to be printed on screen","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    public static String showByeMessage() {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"        return \"\\tLOOK no more!!\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     * Shows the welcome message when first executing Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * @return The formatted error message to be printed on screen","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        String logo \u003d \"L00K!!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        StringBuilder result \u003d new StringBuilder(\"\\tHello from \\n\\tWhat can I do for you\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        result.insert(12, logo);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        return result.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     * Shows the error message when encountering a DukeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"     * @return The formatted error message to be printed on screen","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    public static String showErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        return \"\\n\\n\" + e.toString() + \"\\n\\n\" + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply from Duke after receiving an input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"     * @param reply The String representation of the reply provided from Duke","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public static String showReply(String reply) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        return reply;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply for the TaskList addTask method.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"     * @param task The name of the task that is added to the taskList","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * @param size The new size of the taskList after adding the task","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     * @return The String to be returned by the addTask method","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"    public static String showAddTaskReply(String task, int size) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        return \"\\tGot it. I\u0027ve added this task:\\n\\t\\t \"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                + task","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"                + \"\\n\\tNow you have \" + size + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply for the TaskList markTask method.","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"     * @param task The name of the task that has been marked as done","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"     * @return The String to be returned by the addTask method","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"    public static String showMarkTaskReply(String task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + task + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply for the TaskList deleteTask method.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"     * @param task The name of the task that has been deleted","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"     * @param size The new size of the taskList after deleting the task","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"     * @return The String to be returned by the addTask method","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"    public static String showDeleteTaskReply(String task, int size) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNoted. I\u0027ve removed this task:\\n\\t\\t\" + task","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"                + \"\\n\\tNow you have \" + size + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply for the TaskList findTask method.","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"     * @param task The name of the task that is to be found","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"     * @param tasksFound The String representing all the task that is found line by line","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"     * @return The String to be returned by the findTask method","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"    public static String showFindTaskReply(String task, String tasksFound) {","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"        String foundReply \u003d \"Here are the tasks matching the keyword: \";","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"        String notFoundReply \u003d \"No task matching the keyword: \";","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"        String correctReply \u003d tasksFound.isEmpty() ? notFoundReply : foundReply;","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"        return \"\\t\" + correctReply + task + \"\\n\" + tasksFound;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply for the TaskList undoList/redoList method.","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"     * @param tasks The undone/redone list of tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"     * @param isUndo True if is for undoList method and false for redoList method","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"     * @return The String to be returned by the undoList/redoList method","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"    public static String showUndoRedoListReply(String tasks, boolean isUndo) {","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"        String type \u003d isUndo ? \"undone\" : \"redone\";","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"        return \"\\tLast command has been \" + type + \". The tasks is now this:\\n\" + tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":106}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":" * Class to encapsulate each response dialogue box in Duke\u0027s GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    private static final Image DUKE_IMAGE \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    private static final Image USER_IMAGE \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    private static final Background DUKE_BACKGROUND \u003d new Background(","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"                new BackgroundFill(new Color(100.0 / 255.0, 100.0 / 255.0, 1.0, 1.0),","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"                new CornerRadii(0), new Insets(0, 0, 0, 0)));","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    private static final Background USER_BACKGROUND \u003d new Background(","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            new BackgroundFill(new Color(50.0 / 255.0, 175.0 / 255.0, 50.0 / 255.0, 1.0),","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"                    new CornerRadii(0), new Insets(0, 0, 0, 0)));","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"     * Constructor for creating a dialogue box to be displayed to the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"     * @param text The string that is to be displayed in the GUI to the user","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"     * @param img The image to be displayed with the dialogue","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        dialog.setTextFill(Color.WHITE);","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"     * Returns the DialogBox corresponding to Duke\u0027s respond.","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"     * @param s The String inputted by the user","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"     * @return The DialogBox with the user input","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"    public static DialogBox getUserDialog(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"        DialogBox db \u003d new DialogBox(s, USER_IMAGE);","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"        db.setBackground(USER_BACKGROUND);","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"     * Return the DialogBox corresponding to Duke\u0027s respond. Duke\u0027s DialogBox is flipped","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"     * that of the user\u0027s DialogBox.","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"     * @param s The String returned from Duke that is to be displayed to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"     * @return The DialogBox with Duke\u0027s respond","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"    public static DialogBox getDukeDialog(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"        DialogBox db \u003d new DialogBox(s, DUKE_IMAGE);","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"        db.setBackground(DUKE_BACKGROUND);","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"     * Returns the DialogBox corresponding to Duke\u0027s respond. Duke\u0027s DialogBox is flipped","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"     * that of the user\u0027s DialogBox.","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"     * @param s The String returned from Duke that is to be displayed to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"     * @return The DialogBox with Duke\u0027s respond","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"    public static DialogBox getErrorDialog(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"        DialogBox db \u003d new DialogBox(s, DUKE_IMAGE);","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"        db.dialog.setTextFill(Color.RED);","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wyrchris":113}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.gui;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"            stage.setTitle(\"LOOK\");","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"            stage.getIcons().addAll(new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\")));","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"            stage.show();","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"wyrchris":35}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.gui;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":" * A class to handle all the GUI/JavaFX portion of Duke","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     * Initialises this MainWindow for JavaFX","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showWelcomeMessage()));","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     * Sets duke for MainWindow.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"     * @param d Duke object to initialise","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"     * Handles the text input by the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"        DialogBox userText \u003d DialogBox.getUserDialog(this.userInput.getText());","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        DialogBox dukeText;","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        String inputString \u003d this.userInput.getText();","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        String parsedString \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        if (inputString.isBlank()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"            parsedString \u003d this.duke.handleInput(inputString);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"            dukeText \u003d DialogBox.getDukeDialog(Ui.showReply(parsedString));","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"            dukeText \u003d DialogBox.getErrorDialog(Ui.showErrorMessage(e));","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        this.dialogContainer.getChildren().addAll(userText, dukeText);","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        this.duke.saveDataToFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        this.userInput.clear();","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"        if (parsedString.equals(\"bye\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"wyrchris":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a duke.task.Deadline which is a duke.task.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" * Task that needs to be done before a date/time.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    protected LocalDate byLd;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a duke.task.Deadline duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * @param by The String describing when the duke.task.Deadline need to be done by","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        super(TaskName.DEADLINE, description, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            byLd \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            byLd \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this Deadline task that is to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for Deadline, description of this Deadline and the","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     * deadline of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        return taskName.getTaskIcon() + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"                + (byLd !\u003d null","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"                    ? byLd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"                    : this.by)","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"                + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this Deadline task that is to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        return taskName.getTaskIcon() + \" | \" + super.toData() + \" | \" + this.by;","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"    public Task copy() {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"        return new Deadline(this.description, this.by, this.isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a duke.task.Event which is a duke.task.Task that start at a specific date/time.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise an duke.task.Event duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * @param at The String describing when the duke.task.Event takes place","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    public Event(String description, String at, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        super(TaskName.EVENT, description, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this Event task that is to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for Event, description of this Event and the","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * Event of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        return taskName.getTaskIcon() + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this Event task that is to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        return taskName.getTaskIcon() + \" | \" + super.toData() + \" | \" + this.at;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"    public Task copy() {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        return new Event(this.description, this.at, this.isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a task used by DukeList.","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    protected TaskName taskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    protected Task(TaskName taskname, String description, Boolean isDone) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        this.taskName \u003d taskname;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     * Gets the corresponding status icon for this task.","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the status for this task","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"     * Marks the status of this task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"     * @return The new String representation of this duke.task.Task after the status is marked as done","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"    public String markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        return this.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"     * Returns the task formatted as a text string to be stored as data in a text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"     * The task is stored with 1 and 0 representing the isDone status of the task with 1","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"     * representing the task is done while 0 is not done separated by a vertical line","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"     * then followed by the description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of this task","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     * Return if the provided string matches with that of the task\u0027s description.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"     * @param keyword The String used to check against the task\u0027s description if they match","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"     * @return The boolean if the keyword matches with the task\u0027s description","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"    public boolean matchKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"     * Factory method to return the corresponding task with the given task name.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"     * @param taskName Name of the task to be returned","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"     * @param description Description for the task","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"     * @param secondInput Time description for event and deadline task and should be null for todo task","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The state of whether the task is done","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"     * @return The task from the given inputs provided","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exception specific to duke.Duke","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"    public static Task ofTask(TaskName taskName, String description, String secondInput, Boolean isDone)","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"            throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"        switch (taskName) {","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"        case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"            return new Deadline(description, secondInput, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"        case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"            return new Event(description, secondInput, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Task name provided is incorrect\");","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"    public abstract Task copy();","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":101}},{"path":"src/main/java/duke/task/TaskName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" * Enum for the different type of task","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public enum TaskName {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    TODO (\"\", \"[T]\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    DEADLINE (\" /by \", \"[D]\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    EVENT (\" /at \", \"[E]\");","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    private final String split;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    private final String taskIcon;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    TaskName(String split, String taskIcon) {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        this.split \u003d split;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        this.taskIcon \u003d taskIcon;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * Returns the corresponding regex/split needed to split the string input","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     * received to get correct output.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * @return The regex used to split the input String for these task type","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public String getSplit() {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        return this.split;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * Returns the corresponding task icon used in the saved data text file.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the task icon for this task","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        return this.taskIcon;","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        return this.name().toLowerCase();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"     * Returns the TaskName when provided with the string name of the type of task.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"     * @param s The string representation of the type of task","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding TaskName","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exception specific to duke.Duke","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"    public static TaskName getTaskType(String s) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        switch (s) {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        case \"[T]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"            return TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"        case \"[D]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"            return DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"        case \"event\":","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        case \"[E]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"            return EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Something has gone very wrong!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"wyrchris":74}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a Todos which is a task without date/time","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a Todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        super(TaskName.TODO, description, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this ToDo task that is to be displayed","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for ToDo, description of this ToDo and the","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * ToDo of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this ToDo task","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        return taskName.getTaskIcon() + super.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this ToDo task that is to be saved","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this ToDo task","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        return this.taskName.getTaskIcon() + \" | \" + super.toData();","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    public Task copy() {","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        return new ToDo(this.description, this.isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"wyrchris":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"            fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"wyrchris":19}},{"path":"src/test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"[D] | 1 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task1","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task2 | 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task4","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task6 | three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":12}},{"path":"src/test/data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"todo task1","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"event task2 /at 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"deadline task3 /by next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"todo task4","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"done 2","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"done 4","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"todo task5","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"event task6 /at three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"done 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"delete 1","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"todo task7","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"deadline task8 /by tomorrow","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"done 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":15}},{"path":"src/test/data/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"[E] | 1 | task2 | 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task6 | three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":6}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * Runs Duke with the specified input in the input text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    public void runTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        File f \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        if (f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"            f.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        f \u003d new File(\"./data/input.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"            StringBuilder input \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"                input.append(sc.nextLine() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"            System.setIn(new ByteArrayInputStream(input.toString().getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     * Checks the output of running Duke to see if the data saved is the same.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    public void checkOutput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"            Scanner sc \u003d new Scanner(new File(\"./data/duke.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            Scanner sco \u003d new Scanner(new File(\"./data/output.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"                assertEquals(sc.nextLine(), sco.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":52}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import duke.task.TaskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t1.[T][ ] Task1\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t2.[E][ ] Task2 (at: Tuesday)\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t3.[D][ ] Task3 (by: Next monday)\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"    public void markTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            list.addTask(TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"3\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t1.[T][X] Task1\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t2.[E][X] Task2 (at: Tuesday)\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                    + \"\\t3.[D][X] Task3 (by: Next monday)\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":60}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"[T]\"), TaskName.TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"todo\"), TaskName.TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"[D]\"), TaskName.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"deadline\"), TaskName.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"[E]\"), TaskName.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"            assertEquals(TaskName.getTaskType(\"event\"), TaskName.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"deadline task1 /by Monday","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"todo task2","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"event task3 /at Sunday 2pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"todo task4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"event task5 /at Tuesday 3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"todo task6","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"if exist data\\duke.txt del data\\duke.txt","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"wyrchris":3}}]
