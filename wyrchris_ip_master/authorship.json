[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a Deadline which is a Task that needs to be done before a date/time.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a Deadline Task.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @param by The String describing when the Deadline need to be done by","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" * Implementation for Duke.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * A private method to add the new Task into list and return the corresponding String reply.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * @param task The Task that will be added into the list","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the reply after adding a task","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    private String addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        return \"\\tGot it. I\u0027ve added this task:\\n\\t\\t \" + task.toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"                + \"\\n\\tNow you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * A private method to return the list of all the Tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the list of all the tasks formatted","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    private String displayTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        for (Task task: list) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            String temp \u003d \"\\t\" + i + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            output.append(temp);","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            i++;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        return output.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"     * A private method to mark the Task at the index of the list to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"     * @param index The index of the Task in the list that is to be mark as done","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after marking a task done","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    private String markTask(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + list.get(index - 1).markDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     * Delete the task at the specific index.","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"     * @param index The index of the task in the list that is to be deleted","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after deleting a task","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"    private String deleteTask(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        Task deleted \u003d this.list.remove(index - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNoted. I\u0027ve removed this task:\\n\\t\\t\" + deleted.toString()","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"                + \"\\nNow you have \" + this.list.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"     * The method to handle all the text input to call the correct corresponding method","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     * @param input The text input from the user to Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply to the user\u0027s input","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"    public String handleInput(String input) throws  DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray \u003d input.split(\" \",2);","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"        String[] tempArray;","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"        int index;","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"        switch (inputArray[0]) {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"            case \"list\":","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.displayTask();","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"            case \"done\":","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"                if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index is missing.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"                try {","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"                    index \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"                if (index \u003e this.list.size() || index \u003c 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.markTask(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"                if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index is missing.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"                try {","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"                    index \u003d Integer.parseInt(inputArray[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"                if (index \u003e this.list.size() || index \u003c 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.deleteTask(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"                if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The description of todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.addTask(new Todo(inputArray[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"                if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The description of deadline cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"                tempArray \u003d inputArray[1].split(\" /by \");","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"                if (tempArray.length \u003c 2) {","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The format for deadline is wrong.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"                } else if(tempArray[0].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The description of deadline cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"                } else if(tempArray[1].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The date/time is missing from deadline.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.addTask(new Deadline(tempArray[0], tempArray[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"wyrchris"},"content":"            case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"wyrchris"},"content":"                if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The description of event cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"wyrchris"},"content":"                tempArray \u003d inputArray[1].split(\" /at \");","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"wyrchris"},"content":"                if (tempArray.length \u003c 2) {","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The format for event is wrong.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"                } else if(tempArray[0].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The description of event cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"wyrchris"},"content":"                } else if(tempArray[1].isBlank()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"wyrchris"},"content":"                    throw new DukeException(\"The date/time is missing from event.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"                reply \u003d this.addTask(new Event(tempArray[0], tempArray[1]));","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"wyrchris"},"content":"            default:","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"wyrchris"},"content":"        return reply;","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"What can I do for you\\n\");","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"wyrchris"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"wyrchris"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"wyrchris"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"wyrchris"},"content":"                System.out.println(duke.handleInput(input));","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"wyrchris"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"wyrchris"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"wyrchris"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"wyrchris"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wyrchris":167,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":" * Exception meant for handling those specific to Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"     * A public constructor for initialising DukeException","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * @param message The message meant for the Duke Exception","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        return \":( OOPS!! \" + super.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"wyrchris":20}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":" * A wrapper for an Event which is a Task that start at a specific date/time.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise an Event Task.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @param at The String describing when the Event takes place","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a task used by DukeList.","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a Task.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * Get the corresponding status icon for this task.","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the status for this task","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     * Marks the status of this task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     * @return The new String representation of this Task after the status is marked as done","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    public String markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"        return this.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":43}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a Todos which is a task without date/time","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a Todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"deadline task1 /by Monday","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"todo task2","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"event task3 /at Sunday 2pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"todo task4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"event task5 /at Tuesday 3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"todo task6","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":13}}]
