[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a duke.task.Deadline which is a duke.task.Task that needs to be done before a date/time.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    protected LocalDate byLd;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a duke.task.Deadline duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * @param by The String describing when the duke.task.Deadline need to be done by","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    public Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"            byLd \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"            byLd \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this Deadline task that is to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for Deadline, description of this Deadline and the","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     * deadline of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"                + (byLd !\u003d null","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"                    ? byLd.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"                    : this.by)","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"                + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this Deadline task that is to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this Deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        return \"[D] | \" + super.toData() + \" | \" + this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * Implementation for Duke.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * Public constructor to initialise Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     * @param filepath The String representing the filepath to the Duke.txt file containing","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     *                 the previous saved data","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        list \u003d storage.readData();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     * Executes the Duke to start up for use.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"                ui.showReply(parser.handleInput(this.list, input));","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"                storage.saveData(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"        ui.showByeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"        new Duke(\"/data/duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wyrchris":50,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * Exception meant for handling those specific to Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * A public constructor for initialising DukeException.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @param message The message meant for the Duke Exception","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * Returns the String representation for this DukeException formatted to be printed by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of this DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        return \":( OOPS!! \" + super.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"wyrchris":27}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * A wrapper for an duke.task.Event which is a duke.task.Task that start at a specific date/time.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    protected String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise an duke.task.Event duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * @param at The String describing when the duke.task.Event takes place","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    public Event(String description, String at, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this Event task that is to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for Event, description of this Event and the","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * Event of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this Event task that is to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this Event task","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        return \"[E] | \" + super.toData() + \" | \" + this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the handling of the text input into Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"     * Handles all the text input to call the correct corresponding method.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     * @param input The text input from the user to Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply to the user\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    public String handleInput(TaskList list, String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray \u003d input.split(\" \",2);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        switch (inputArray[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.displayTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The index is missing.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            reply \u003d inputArray[0].equals(\"done\")","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"                    ? list.markTask(inputArray[1])","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"                    : list.deleteTask(inputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The keyword is missing.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.findTask(inputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"            if (inputArray.length \u003c 2 || inputArray[1].isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The description of \" + inputArray[0] + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            reply \u003d list.addTask(Task.TaskName.getTaskType(inputArray[0]), inputArray[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        return reply;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":57}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":" * A class that encapsulates the saving/reading data for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * Constructor for the Storage object initialised with the filepath","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     * to save/read the data to/from.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     * @param filepath The String representation of the filepath to the text file","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     *                 containing the saved data","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     * Saves the data of the task in the list into a text file formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"     * @param list The TaskList containing the tasks that is to be saved into","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    public void saveData(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            // get file directory string","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            String[] dir \u003d this.filepath.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            StringBuilder dirString \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            for (int i \u003d 0; i \u003c dir.length - 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"                dirString.append(\"/\" + dir[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"            String path \u003d new File(\"\").getAbsoluteFile() + dirString.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"            // create directory if not yet created","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"            if (!file.isDirectory()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"                file.mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            FileWriter fw \u003d new FileWriter(file + \"/\" + dir[dir.length - 1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            list.iterateList(x -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"                    fw.write(x.toData() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"            }); ;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     * Reads the data from the saved file if it exists to update Duke on running.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"    public TaskList readData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"            // set-up to check if file exists","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"            String path \u003d new File(\"\").getAbsoluteFile() + this.filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"            if (!file.isFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"                return list;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"            // read and update TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"                String[] inputArray \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"                Task.TaskName type \u003d Task.TaskName.getTaskType(inputArray[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"                list.addTask(type, inputArray[2] + type.getSplit()","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"                                + (type !\u003d Task.TaskName.TODO ? inputArray[3] : \"\")","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"                        , inputArray[1].equals(\"1\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"            return list;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"            return new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":94}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a task used by DukeList.","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * Enum for the different type of task","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    public enum TaskName {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"        TODO (\"\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"        DEADLINE (\" /by \"),","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        EVENT (\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        private final String split;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        TaskName(String split) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"            this.split \u003d split;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"         * Returns the corresponding regex/split needed to split the string input","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"         * received to get correct output.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"         *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"         * @return","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"         */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        public String getSplit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            return this.split;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"            return this.name().toLowerCase();","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"         * Returns the TaskName when provided with the string name of the type of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"         *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"         * @param s The string representation of the type of task","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"         * @return The corresponding TaskName","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"         * @throws DukeException Exception specific to duke.Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"         */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        public static TaskName getTaskType(String s) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            switch (s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            case \"[T]\":","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"                return TODO;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"            case \"[D]\":","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"                return DEADLINE;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"            case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"            case \"[E]\":","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"                return EVENT;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"Something has gone very wrong!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a duke.task.Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"     * Gets the corresponding status icon for this task.","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the status for this task","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"     * Marks the status of this task as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"     * @return The new String representation of this duke.task.Task after the status is marked as done","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"    public String markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"        return this.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"     * Returns the task formatted as a text string to be stored as data in a text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"     * The task is stored with 1 and 0 representing the isDone status of the task with 1","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"     * representing the task is done while 0 is not done separated by a vertical line","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"     * then followed by the description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of this task","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"     * Return if the provided string matches with that of the task\u0027s description.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"     * @param keyword The String used to check against the task\u0027s description if they match","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"     * @return The boolean if the keyword matches with the task\u0027s description","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"    public boolean matchKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the list of task inputted by Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"     * Adds the new Task into list and return the corresponding String reply.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"     * @param type The type of the task that will be added","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * @param input The corresponding description provided for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The boolean if the task is done","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the reply after adding a task","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    public String addTask(Task.TaskName type, String input, Boolean isDone) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        String[] inputArray;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            task \u003d new Todo(input, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"            inputArray \u003d input.split(type.getSplit());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"            if (inputArray.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The format for \" + type +\" is wrong.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"            } else if(inputArray[0].isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The description of \" + type + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"            } else if(inputArray[1].isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"                throw new DukeException(\"The date/time is missing from \" + type +\".\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            task \u003d type \u003d\u003d Task.TaskName.EVENT ? new Event(inputArray[0], inputArray[1], isDone)","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"                    : new Deadline(inputArray[0], inputArray[1], isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"Unexpected value: \" + type);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"        return \"\\tGot it. I\u0027ve added this task:\\n\\t\\t \" + task","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"                + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"     * Adds the new Task into list and return the corresponding String reply.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wyrchris"},"content":"     * @param type The type of the task that will be added","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wyrchris"},"content":"     * @param input The corresponding description provided for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the reply after adding a task","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wyrchris"},"content":"    public String addTask(Task.TaskName type, String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wyrchris"},"content":"        return addTask(type, input, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wyrchris"},"content":"     * Returns the list of all the Tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wyrchris"},"content":"     * @return The String of the list of all the tasks formatted","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wyrchris"},"content":"    public String displayTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wyrchris"},"content":"        StringBuilder output \u003d new StringBuilder(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wyrchris"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wyrchris"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wyrchris"},"content":"            output.append(\"\\t\").append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wyrchris"},"content":"            i++;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wyrchris"},"content":"        return output.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wyrchris"},"content":"     * Marks the Task at the index of the list to be done.","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wyrchris"},"content":"     * @param input The index of the Task in the list that is to be mark as done","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after marking a task done","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wyrchris"},"content":"    public String markTask(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wyrchris"},"content":"        int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wyrchris"},"content":"            index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wyrchris"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wyrchris"},"content":"        if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNice! I\u0027ve marked this task as done:\\n\\t\\t\" + tasks.get(index - 1).markDone() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wyrchris"},"content":"     * Deletes the task at the specific index.","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wyrchris"},"content":"     * @param input The index of the task in the list that is to be deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wyrchris"},"content":"     * @throws DukeException Exceptions specific to Duke\u0027s input","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wyrchris"},"content":"     * @return The corresponding String reply after deleting a task","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wyrchris"},"content":"    public String deleteTask(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wyrchris"},"content":"        int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wyrchris"},"content":"            index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wyrchris"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not a number.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wyrchris"},"content":"        if (index \u003e this.tasks.size() || index \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wyrchris"},"content":"            throw new DukeException(\"The index provided is not within the valid range\");","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wyrchris"},"content":"        Task deleted \u003d this.tasks.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wyrchris"},"content":"        return \"\\tNoted. I\u0027ve removed this task:\\n\\t\\t\" + deleted.toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wyrchris"},"content":"                + \"\\n\\tNow you have \" + this.tasks.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"wyrchris"},"content":"     * Returns the list of all tasks whose description which matches the provided keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wyrchris"},"content":"     * @param input The String of the keyword that will be used to search the TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wyrchris"},"content":"     * @return The reply for Duke containing all the task matching the keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"wyrchris"},"content":"    public String findTask(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"wyrchris"},"content":"        StringBuilder reply \u003d new StringBuilder(\"Here are the tasks matching the keyword: \")","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wyrchris"},"content":"                .append(input).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"wyrchris"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"wyrchris"},"content":"        for (Task task: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"wyrchris"},"content":"            if (task.matchKeyword(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wyrchris"},"content":"                reply.append(i).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"wyrchris"},"content":"                i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"wyrchris"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"wyrchris"},"content":"            reply \u003d new StringBuilder(\"No task matching the keyword: \")","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"wyrchris"},"content":"                    .append(input).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"wyrchris"},"content":"        return reply.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"wyrchris"},"content":"     * Iterates the list and perform a function on each task.","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"wyrchris"},"content":"     * @param f the function to be applied on each task","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wyrchris"},"content":"    public void iterateList(Function\u003cTask, Void\u003e f){","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wyrchris"},"content":"        for (Task t: this.tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wyrchris"},"content":"            f.apply(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":168}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" * A wrapper for a Todos which is a task without date/time","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":" * @author Wong Yun Rui Chris","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"     * A public constructor to initialise a Todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"     * @param description The String description/name of the task","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"     * @param isDone The Boolean of if the task is done","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     * Returns the string representation of this Todo task that is to be displayed","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"     * by Duke. It comprises the tag for Todo, description of this Todo and the","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"     * Todo of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"     * @return The string representation of this Todo task","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"     * Returns the data representation for this Todo task that is to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"     * and used on initial execution of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"     * @return The String representation of the data of this Todo task","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        return \"[T] | \" + super.toData();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":42}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":" *  A class that encapsulates the interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"     * Shows the welcome message when first executing Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"        System.out.println(\"Hello from\\n\" + logo + \"What can I do for you\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"     * Shows the goodbye message when finishing executing Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    public void showByeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        String bye \u003d \"\\tBye bye!!. Hope to see you again soon!!\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        showBreakLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        System.out.println(bye);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        showBreakLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"     * Shows the error message when encountering a DukeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"    public void showErrorMessage(DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        String red \u003d \"\\u001B[91m\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        String def \u003d \"\\u001B[39m\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        String border \u003d \"******************************\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        System.out.println(red + border + border + \"\\n\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"                + e.toString() + \"\\n\\n\" + border + border","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"                + def + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"     * Shows the BreakLine that is shown at the start and end of each Duke\u0027s reply.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    public void showBreakLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"        String breakLine \u003d \"------------------------------\";","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"        System.out.println(breakLine + breakLine + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"     * Shows the formatted reply from Duke after receiving a input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"     * @param reply The String representation of the reply provided from Duke","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"    public void showReply(String reply) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        showBreakLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"        System.out.println(reply);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        showBreakLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wyrchris":59}},{"path":"src/main/test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"[D] | 1 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task1","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task2 | 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task4","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task6 | three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":12}},{"path":"src/main/test/data/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"todo task1","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"event task2 /at 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"deadline task3 /by next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"todo task4","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"done 2","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"done 4","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"todo task5","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"event task6 /at three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"done 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"delete 1","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"todo task7","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"deadline task8 /by tomorrow","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"done 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":15}},{"path":"src/main/test/data/output.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"[E] | 1 | task2 | 21/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task3 | next monday","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task5","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"[E] | 0 | task6 | three week later","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"[T] | 0 | task7","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"[D] | 0 | task8 | tomorrow","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":6}},{"path":"src/main/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"     * Runs Duke with the specified input in the input text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"    public void runTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"        File f \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        if (f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"            f.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"        f \u003d new File(\"./data/input.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"            StringBuilder input \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"                input.append(sc.nextLine() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"            System.setIn(new ByteArrayInputStream(input.toString().getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"     * Checks the output of running Duke to see if the data saved is the same.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"    public void checkOutput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            Scanner sc \u003d new Scanner(new File(\"./data/duke.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            Scanner sco \u003d new Scanner(new File(\"./data/output.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"                assertEquals(sc.nextLine(), sco.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":57}},{"path":"src/main/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"                    \"\\t1.[T][ ] Task1\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"                    \"\\t2.[E][ ] Task2 (at: Tuesday)\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"                    \"\\t3.[D][ ] Task3 (by: Next monday)\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"            list.deleteTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"    public void markTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.TODO, \"Task1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.EVENT, \"Task2 /at Tuesday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wyrchris"},"content":"            list.addTask(Task.TaskName.DEADLINE, \"Task3 /by Next monday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wyrchris"},"content":"            list.markTask(\"3\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wyrchris"},"content":"            assertEquals(list.displayTask(), \"\\tHere are the tasks in your list:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wyrchris"},"content":"                    \"\\t1.[T][X] Task1\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wyrchris"},"content":"                    \"\\t2.[E][X] Task2 (at: Tuesday)\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wyrchris"},"content":"                    \"\\t3.[D][X] Task3 (by: Next monday)\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":59}},{"path":"src/main/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"[T]\"), Task.TaskName.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"todo\"), Task.TaskName.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"[D]\"), Task.TaskName.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"deadline\"), Task.TaskName.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"[E]\"), Task.TaskName.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wyrchris"},"content":"            assertEquals(Task.TaskName.getTaskType(\"event\"), Task.TaskName.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wyrchris"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wyrchris"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wyrchris"},"content":"    public void getStatusIconTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wyrchris"},"content":"        Task notDone \u003d new Task(\"notDone\",false);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wyrchris"},"content":"        Task done \u003d new Task(\"done\",true);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wyrchris"},"content":"        assertEquals(notDone.getStatusIcon(), \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wyrchris"},"content":"        assertEquals(done.getStatusIcon(), \"X\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wyrchris"},"content":"    public void markDoneTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wyrchris"},"content":"        Task test \u003d new Task(\"test\",false);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wyrchris"},"content":"        assertEquals(test.getStatusIcon(), \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wyrchris"},"content":"        test.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wyrchris"},"content":"        assertEquals(test.getStatusIcon(), \"X\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wyrchris"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wyrchris"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wyrchris"},"content":"    public void toDataTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wyrchris"},"content":"        Task test1 \u003d new Task(\"test1\",false);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wyrchris"},"content":"        Task test2 \u003d new Task(\"test2\",true);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wyrchris"},"content":"        assertEquals(test1.toData(), \"0 | test1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wyrchris"},"content":"        assertEquals(test2.toData(), \"1 | test2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wyrchris"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wyrchris"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wyrchris":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wyrchris"},"content":"deadline task1 /by Monday","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"wyrchris"},"content":"todo task2","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"wyrchris"},"content":"event task3 /at Sunday 2pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"wyrchris"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"wyrchris"},"content":"todo task4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"wyrchris"},"content":"event task5 /at Tuesday 3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"todo task6","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"wyrchris"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"wyrchris"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"wyrchris"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"wyrchris":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"wyrchris"},"content":"if exist data\\duke.txt del data\\duke.txt","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"wyrchris"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"wyrchris"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"wyrchris":3}}]
