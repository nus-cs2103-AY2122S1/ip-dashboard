[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    mainClassName \u003d \"duke.Main\"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JoelChanZhiYang":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.CommandResult;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" * Duke class to encapsulate the high level logic of Duke","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of Duke","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param filePath path of the save file","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses the input, handles the command and returns a CommandResult","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult after completing the logic of the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"            String[] parsedInput \u003d Parser.parseInput(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"            Command c \u003d Parser.parse(parsedInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new CommandResult(Reply.showError(e.getMessage()),","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                    false, false);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JoelChanZhiYang":48,"-":1}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Main {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":9}},{"path":"src/main/java/duke/MainApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * JavaFX application that initialises Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"public class MainApp extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Initialises the UI and Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void init() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        duke \u003d new Duke(\"./data/saveFile.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Starts the UI.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param primaryStage JavaFX stage being used.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        ui.start(primaryStage, duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":33}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027bye\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the ByeCommand class","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Causes the UI to print a bye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showBye(), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * Abstract class that represents a command. It is abstract because the execute method will depend","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" * on the type of command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** Whether the command will cause the program to exit */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of Command","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param isExit Whether the command will cause the program to stop","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Execute the logic of the command and returns a CommandResult.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws DukeException if there is a Duke related exception","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    public abstract CommandResult execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if the command will exit after executing.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":42}},{"path":"src/main/java/duke/command/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * CommandResult class abstracts behavior of the command after completing","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class CommandResult {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final boolean isReply;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the CommandResult class","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param feedbackToUser text to display to the user","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param isReply whether the text is a reply from duke","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param isExit whether to exit the application","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult(String feedbackToUser, boolean isReply, boolean isExit) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.isReply \u003d isReply;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns text to display to user","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return text to display to user","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Getter of isReply","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return isReply","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean isReply() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return isReply;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Getter of isExit","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return isExit","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        return isExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":50}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoActionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027deadline\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String action;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for the Deadline Command.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action String input for the deadline task","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    public DeadlineCommand(String action) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Creates and adds a \u0027deadline\u0027 task to the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if input cannot be parsed into a date","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoActionException if no todo list action given","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoTimeException if no deadline is provided","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there are issues with the save file","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) throws InvalidInputException,","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            NoActionException, NoTimeException, SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        String[] deadlineInputs \u003d action.split(\"/by\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (deadlineInputs[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoActionException(\"Command \u0027deadline\u0027 requires a task action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (deadlineInputs.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoTimeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                    \"Command \u0027deadline\u0027 requires a deadline to be specified. Use /by to specify a deadline.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        LocalDateTime deadline \u003d Parser.parseDate(deadlineInputs[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        Task newTask \u003d new Deadline(deadlineInputs[0].trim(), deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showTaskAdded(newTask, tasks), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Indicate if another object is \u0027equal\u0027 to this object.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param obj Reference object with which to compare to.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if they are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (obj instanceof DeadlineCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"            DeadlineCommand otherDeadlineCommand \u003d (DeadlineCommand) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"            return otherDeadlineCommand.action.equals(this.action);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":79}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027delete\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The index of the todo to delete */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String todoNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for the DeleteCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param todoNumber The index of the todo to delete","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public DeleteCommand(String todoNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.todoNumber \u003d todoNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Deletes a task from the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws TaskNotFoundException if task does not exist","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if input cannot be parsed into a number","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there are issues with the save file","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) throws TaskNotFoundException,","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            InvalidInputException, SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"            int taskNumber \u003d Integer.parseInt(todoNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (taskNumber \u003c\u003d tasks.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                Task taskToDelete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"                return new CommandResult(Reply.showTaskRemoved(taskToDelete, tasks), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"                throw new TaskNotFoundException(\"The task chosen does not exist. Use \u0027list\u0027 to see all your tasks.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"Command \u0027delete\u0027 require an integer as the second parameter\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":57}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.TaskCompletedException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027bye\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The index of the todo to complete */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String action;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for the Done Command","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action The string input of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public DoneCommand(String action) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Sets a task to complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws TaskNotFoundException if index of task is out of bounds","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if input cannot be parsed into an integer","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws TaskCompletedException if task is already completed","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there are issues with the save file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) throws TaskNotFoundException,","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"            InvalidInputException, TaskCompletedException, SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            int taskNumber \u003d Integer.parseInt(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (taskNumber \u003c\u003d tasks.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                Task taskToComplete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"                if (!taskToComplete.isComplete()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"                    taskToComplete.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"                    storage.save(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"                    return new CommandResult(Reply.showTaskDone(taskToComplete), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"                    throw new TaskCompletedException(\"This task is already completed.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"                throw new TaskNotFoundException(\"The task chosen does not exist. Use \u0027list\u0027 to see all your tasks.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"Command \u0027done\u0027 require an integer as the second parameter\");","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":63}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoActionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027event\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String action;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the EventCommand","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action Text input of the EventCommand","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    public EventCommand(String action) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Instantiates an Event task and adds it to the tasklist","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if invalid datetime is provided","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoTimeException if no event time is provided","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoActionException if no event name is provided","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if save file errors occur","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) throws InvalidInputException,","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        NoTimeException, NoActionException, SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (action.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoActionException(\"Command \u0027event\u0027 requires a task action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        String[] eventInputs \u003d action.split(\"/at\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (eventInputs.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoTimeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"                    \"Command \u0027event\u0027 requires a time to be specified. Use /at to specify a time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        LocalDateTime date \u003d Parser.parseDate(eventInputs[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        Task newTask \u003d new Event(eventInputs[0].trim(), date);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showTaskAdded(newTask, tasks), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (obj instanceof EventCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"            EventCommand otherEventCommand \u003d (EventCommand) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"            return otherEventCommand.action.equals(this.action);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":71}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoActionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String searchTerms;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for the find command.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param searchTerms Word to search for.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    public FindCommand(String searchTerms) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.searchTerms \u003d searchTerms;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Finds the tasks based on the search terms provided by user","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoActionException Thrown if no action is provided","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) throws NoActionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (this.searchTerms.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoActionException(\"Command \u0027find\u0027 requires search terms to be provided.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (currTask.contains(searchTerms)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"                matchList.add(currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"                continue;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (currTask.getTag().contains(searchTerms)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                matchList.add(currTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showMatchingTasks(new TaskList(matchList)),","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"                true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":54}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027list\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Causes the Ui to print the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showList(tasks), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Indicate if another object is \u0027equal\u0027 to this object.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param obj Reference object with which to compare to.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if they are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":39}},{"path":"src/main/java/duke/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027tag\u0027 command.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** String input of the action from the user */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String action;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the TagCommand class","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action String input of the action from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TagCommand(String action) {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Finds the task and add the tag to it","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException Indicates that a invalid input is given","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws TaskNotFoundException Indicates that the task suggested is not in the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException Indicates a save file error","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage)","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            throws InvalidInputException, TaskNotFoundException, SaveFileException {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        String[] actionSplit \u003d this.action.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (actionSplit.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"                throw new InvalidInputException(\"The \u0027tag\u0027 command requires an integer and word.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (actionSplit.length \u003e 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                throw new InvalidInputException(\"A tag can only be a word\");","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"            int taskNumber \u003d Integer.parseInt(actionSplit[0]);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (taskNumber \u003c\u003d tasks.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"                Task currTask \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"                currTask.setTag(actionSplit[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                return new CommandResult(Reply.showTag(currTask), true, super.isExit());","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"                throw new TaskNotFoundException(\"The task chosen does not exist. Use \u0027list\u0027 to see all your tasks.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"The \u0027tag\u0027 command requires an integer as the second parameter\");","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JoelChanZhiYang":64}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoActionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":" * A command class encapsulating the logic that occurs when the user issues a \u0027todo\u0027 command.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private String action;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the TodoCommand","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action String input of the tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TodoCommand(String action) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(false);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Creates and adds a Todo to the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks List of existing tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param storage Storage class handling the persistence of the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return CommandResult of the encapsulating the effects of the command after it completes","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws NoActionException if no action was provided","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there is a save file related error","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(TaskList tasks, Storage storage)","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"            throws NoActionException, SaveFileException {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (action.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new NoActionException(\"Command \u0027todo\u0027 requires a task action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        Task newTask \u003d new Todo(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(Reply.showTaskAdded(newTask, tasks), true, super.isExit());","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Indicate if another object is \u0027equal\u0027 to this object.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param obj Reference object with which to compare to.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if they are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (obj instanceof TodoCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"            TodoCommand otherTask \u003d (TodoCommand) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"            return otherTask.action.equals(this.action);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":65}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" * Abstract class representing a exception that could occur due to Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"    public DukeException(String errMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":11}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that an invalid input has been provided.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/exception/NoActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that an input did not provide a action.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class NoActionException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public NoActionException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/exception/NoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that a time was not provided with the input","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class NoTimeException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public NoTimeException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/exception/SaveFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that there has been an issue with the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class SaveFileException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public SaveFileException(String errMsg) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errMsg);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/exception/TaskCompletedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that the task selected has already been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TaskCompletedException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TaskCompletedException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * Signals that a task is not inside the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * A class representing a task that need to be completed by a certain time.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The symbol that represents a deadline */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String symbol \u003d \"[D]\";","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The deadline of the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * The constructor of a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action Task to be completed by the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param deadline The time when the task should be completed","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Deadline(String action, LocalDateTime deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(action);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * returns the state of the Deadline in a concise manner suitable for saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return A concise format of the state of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s||%s||%s||%s||%s\", symbol, super.getTag(), super.isComplete(),","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"                super.getAction(), this.deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns a string representing the task","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return String representation of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s%s (by: %s)\", symbol, super.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                this.deadline.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT)));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JoelChanZhiYang":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * A class representing a event that will occur at a certain time.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The symbol that represents a deadline */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String symbol \u003d \"[E]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The deadline of the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     * The constructor of a event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action Event that will occur.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param deadline The time when the task occurs","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Event(String action, LocalDateTime deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(action);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     * returns the state of the Deadline in a concise manner suitable for saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return A concise format of the state of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s||%s||%s||%s||%s\", symbol, super.getTag(), super.isComplete(), super.getAction(),","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns a string representing the task","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return String representation of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s%s (at: %s)\", symbol, super.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                this.deadline.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT)));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JoelChanZhiYang":48}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * An abstract class representing a task","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The task that needs to be completed */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String action;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** Whether a task is completed */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    private String tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the task. Can only be called by subclasses","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"     * as Task is an abstract class.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action task that needs to be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Task(String action) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns the action","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return action","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String getAction() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.action;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns whether a task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return whether a task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Changes the state of the task to be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void complete() {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Abstract method for the task to return its save format","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return Save format of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns whether the task action contains the search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param searchTerms Terms to search for","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if search terms are found","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean contains(String searchTerms) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.action.contains(searchTerms);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String getTag() {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns a string representing the task","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return String representation of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"        System.out.println(this.tag);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s[%s] %s\",","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"                this.tag \u003d\u003d null ? \"\" : \"(#\" + this.tag + \")\",","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"                isCompleted ? \"X\" : \" \",","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"                this.action","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JoelChanZhiYang":89}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":" * A class representing a task which does not have a time associated with it","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** The symbol that represents a deadline */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String symbol \u003d \"[T]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param action The task that has to be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Todo(String action) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"        super(action);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * returns the state of the Deadline in a concise manner suitable for saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return A concise format of the state of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s||%s||%s||%s\", symbol, super.getTag(), super.isComplete(), super.getAction());","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns a string representing the task","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return String representation of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"%s%s\", symbol, super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Indicate if another object is \u0027equal\u0027 to this object.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param obj Reference object with which to compare to.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return true if they are equal.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     *         false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (obj instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"            Todo otherTodo \u003d (Todo) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"            return otherTodo.toSaveFormat().equals(this.toSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JoelChanZhiYang":54}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for the DialogBox. Constructs using a FXML file","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param text Text inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param img Image inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Factory method that creates a user dialog","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param text Text inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param img Image inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return User dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Factory method that creates a Duke dialog","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param text Text inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param img Image inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return Duke dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":80}},{"path":"src/main/java/duke/ui/ErrorBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":" * This control represents a dialog box when the Duke logic results in an exception","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ErrorBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of ErrorBox","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param text Text inside the dialog box","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ErrorBox(String text) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/ErrorBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":34}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.CommandResult;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":" * This controller represents the main window of the application.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DogRight.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DogLeft.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        CommandResult result \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        handleCommandResult(result);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Handles the logic depending on the attributes of the CommandResult","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param result CommandResult after executing the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"    private void handleCommandResult(CommandResult result) {","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (result.isReply()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"                    DialogBox.getDukeDialog(result.getFeedbackToUser(), dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"            );","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"            dialogContainer.getChildren().add(new ErrorBox(result.getFeedbackToUser()));","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (result.isExit()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"            handleExit();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Exits the program.","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"    private void handleExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":80}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.Main;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":" * This class is an abstraction of the Ui of the application.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Ui {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Loads the JavaFX components","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param primaryStage JavaFX stage","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param duke Duke instance that handles the logic","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void start(Stage primaryStage, Duke duke) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"            primaryStage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":35}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.TagCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":" * Utility class that contains static methods useful in parsing","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"public final class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Parser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses the string command and returns the correct command handler.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param fullCommand string input from the user","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return corresponding command handler","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if command is not recognised.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static Command parse(String[] fullCommand) throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert fullCommand.length \u003d\u003d 2;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        String command \u003d fullCommand[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        String action \u003d fullCommand[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new TodoCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new DeadlineCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new EventCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new DoneCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new DeleteCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new FindCommand(action);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"tag\":","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new TagCommand(action);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"This is an unknown command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses the string input into a LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param deadline String representation of the the date-time","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return LocalDateTime representation of the date-time","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if input string cannot be parsed into a LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static LocalDateTime parseDate(String deadline) throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"            return LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"We don\u0027t understand your date format.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Splits one input into the command and the action","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param input Input from the user","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return String array with length 2. First element is the command. Second element is the action","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String[] parseInput(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new String[] {splitInput[0], \"\"};","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert splitInput.length \u003d\u003d 2;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"JoelChanZhiYang"},"content":"        return splitInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Generates the task from a string in the savefile","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param input String input from the savefile","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return Task to be added to a task list","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if task cannot be parsed","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static Task parseSaveFileLine(String input) throws InvalidInputException {","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"JoelChanZhiYang"},"content":"        String[] currTaskSplit \u003d input.split(\"\\\\|\\\\|\");","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"JoelChanZhiYang"},"content":"        Task newTask;","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"JoelChanZhiYang"},"content":"        switch (currTaskSplit[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"[T]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"JoelChanZhiYang"},"content":"            newTask \u003d new Todo(currTaskSplit[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"JoelChanZhiYang"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"[E]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"JoelChanZhiYang"},"content":"            LocalDateTime eventTime \u003d Parser.parseDate(currTaskSplit[4]);","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"JoelChanZhiYang"},"content":"            newTask \u003d new Event(currTaskSplit[3], eventTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"JoelChanZhiYang"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"JoelChanZhiYang"},"content":"        case \"[D]\":","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"JoelChanZhiYang"},"content":"            LocalDateTime deadline \u003d Parser.parseDate(currTaskSplit[4]);","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"JoelChanZhiYang"},"content":"            newTask \u003d new Deadline(currTaskSplit[3], deadline);","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"JoelChanZhiYang"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"JoelChanZhiYang"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new InvalidInputException(\"Unrecognised task type detected in save file.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!currTaskSplit[1].equals(\"null\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"JoelChanZhiYang"},"content":"            newTask.setTag(currTaskSplit[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (currTaskSplit[2].equals(\"true\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"JoelChanZhiYang"},"content":"            newTask.complete();","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"JoelChanZhiYang"},"content":"        return newTask;","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":129}},{"path":"src/main/java/duke/util/Reply.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":" * A static class that help generate the text replies from Duke","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Reply {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of Reply class.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Reply() { }","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows a loading error.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"        System.out.println(\"Sorry. We could not load your save file. We are created a new save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows the welcome text.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        System.out.println(\"Hello, I am Duke. What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows the error given an error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param errMessage Error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showError(String errMessage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"Ooop! %s\\nPlease try again.\", errMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows that the user has successfully added a new task.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param task Task that has been added.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks Tasklist which the task has been added to.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showTaskAdded(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert task !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"Got it. I\u0027ve added this task: \\n   %s \\nNow you have %d task in the list.\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"                task, tasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows that the user has successfully removed a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param task Task that has been removed","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks Tasklist which the task has been added to.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showTaskRemoved(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert task !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d task in the list.\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"                task, tasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows that the user has successfully marked a task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param task Task that has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showTaskDone(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert task !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows a user friendly text version of the tasks in the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showList(TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"        StringBuilder out \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"            out.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"        return out.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows the tasks which matches the search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks Tasklist of tasks that matches the search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showMatchingTasks(TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"JoelChanZhiYang"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"JoelChanZhiYang"},"content":"            return \"There are no matches in your list.\\nUse command \u0027list\u0027 to see your whole list\";","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"JoelChanZhiYang"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"JoelChanZhiYang"},"content":"            StringBuilder out \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"JoelChanZhiYang"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"JoelChanZhiYang"},"content":"                out.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"JoelChanZhiYang"},"content":"            return out.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Shows a goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"JoelChanZhiYang"},"content":"        return \"Bye. Hope to see you again!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static String showTag(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"JoelChanZhiYang"},"content":"        return String.format(\"You added a tag:\\n %s\", task);","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":114}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":" * Class responsible for all interactions with the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** Path of the storage file */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    private String saveFilePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor of the storage","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param saveFilePath path of the storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Storage(String saveFilePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.saveFilePath \u003d saveFilePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Read data from the save file","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return ArrayList of Tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws InvalidInputException if unable to parse the data in the save file","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there are issues caused by the IO.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ArrayList\u003c? extends Task\u003e load() throws InvalidInputException, SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            File saveFile \u003d getSaveFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"                String taskInSaveFormat \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"                Task taskToAdd \u003d Parser.parseSaveFileLine(taskInSaveFormat);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"                tasks.add(taskToAdd);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"            System.out.println(\"Save file successfully read.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"            return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new SaveFileException(\"Unable to load save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Write into the save file given a TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param list current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws SaveFileException if there is an IO error","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void save(TaskList list) throws SaveFileException {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"            File saveFile \u003d this.getSaveFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"                writer.write(list.get(i).toSaveFormat() + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new SaveFileException(\"Unable to write to save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Retrieves the save file given the file path. Create the file if it is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return save file","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws IOException if there is an IO error","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"    @SuppressWarnings(\"ResultOfMethodCallIgnored\")","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"    private File getSaveFile() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"        File saveFile \u003d new File(saveFilePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"        saveFile.getParentFile().mkdirs(); // if folder already exist, nothing is done","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"        saveFile.createNewFile(); // if file already exists, nothing is done","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"        return saveFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":86}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Collection;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" * Class representing a list of tasks to complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    /** ArrayList storing the tasks.*/","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Empty constructor of the Tasklist. Used when an empty TaskList is needed.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Overridden constructor of the Tasklist. Used when a TaskList is initialised with values.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param tasks Tasks to initialise tasklist with","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    public TaskList(Collection\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Adds a given task to the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param task task to be added","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns number of tasks in the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return Number of tasks in the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Retrieves a task from the tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param i The index of task to retrieve","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return Task at a given index","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Removes a task from the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param i Index of task to remove.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"1.7976931348623157E308\" \u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"      \u003cfont\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cFont name\u003d\"Verdana\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"      \u003c/font\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":25}},{"path":"src/main/resources/view/ErrorBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" textFill\u003d\"#ff4c4d\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JoelChanZhiYang":19}},{"path":"src/test/java/duke/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.NoActionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.SaveFileException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TodoCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void execute_goodInput_createTodo() throws SaveFileException, NoActionException {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"        TodoCommand command \u003d new TodoCommand(\"Test Action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"        TaskListStub taskListStub \u003d new TaskListStub();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        command.execute(taskListStub, new StorageStub());","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(taskListStub.getTask(), new Todo(\"Test Action\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void execute_noAction_throwNoActionException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        TodoCommand command \u003d new TodoCommand(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        TaskListStub taskListStub \u003d new TaskListStub();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NoActionException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"            command.execute(taskListStub, new StorageStub());","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    private class TaskListStub extends duke.util.TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"        @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"            return this.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    private class StorageStub extends duke.util.Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        public StorageStub() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"            super(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        public void save(TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"            return;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":57}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void toSaveFormat_methodCall_saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals((new Todo(\"Test Action\")).toSaveFormat(), \"[T]||null||false||Test Action\");","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void toString_methodCall_saveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals((new Todo(\"Test Action\")).toString(), \"[T][ ] Test Action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void complete_methodCall_changeCompleteStatus() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"        Todo todo \u003d new Todo(\"Test Action\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        todo.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(todo.isComplete(), true);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":26}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_validTodo_createsTodoCommand() throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(Parser.parse(new String[]{\"todo\", \"Action\"}), new TodoCommand(\"Action\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_validDeadline_createsDeadlineCommand() throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(Parser.parse(new String[]{\"deadline\", \"Action\"}), new DeadlineCommand(\"Action\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_validEvent_createsEventCommand() throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(Parser.parse(new String[]{\"event\", \"Action\"}), new EventCommand(\"Action\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_validList_createsListCommand() throws InvalidInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(Parser.parse(new String[]{\"list\", \"\"}), new ListCommand());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_invalidCommand_throwsInvalidInputException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(InvalidInputException.class, () -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"            Parser.parse(new String[]{\"hi\", \"Action\"});","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"JoelChanZhiYang":41}}]
