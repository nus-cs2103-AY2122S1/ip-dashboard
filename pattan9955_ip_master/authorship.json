[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"run {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pattan9955":21,"-":45}},{"path":"data/taskdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"T | 0 | bye","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"T | 0 | why there","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"T | 0 | kekw","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"T | 0 | yoshi","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"D | 0 | kekw | 23-03-2020 23:59","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"E | 0 | kekw | 23-03-2020 04:59","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"pattan9955":6}},{"path":"src/main/java/data/taskdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"D | 1 | why doe | 06-03-2018 00:00","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":" * A class encapsulating a DialogBox, which contains text and an Image representing the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     * A Label containing the message by/for the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * An ImageView containing an Image of either the user or Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a DialogBox.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @param text The message to be contained in the DialogBox.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param img The image to be used in the DialogBox.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    private void flip() {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     * Gets a DialogBox containing the user\u0027s interaction with Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     * @param text The text entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"     * @param img An image representing the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"     * @return A DialogBox representing a message from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"     * Gets a DialogBox containing text by Duke in response to a user\u0027s command.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"     * @param text The text to be sent to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"     * @param img  An image representing Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"     * @return A DialogBox representing a message from Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        db.flip();","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        return db;","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":86}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates the Duke application","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private PersistentStorage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private Tasklist taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    private Response response;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * Public constructor for a Duke object","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @param filePath A filepath to a text file that serves as persistent storage for Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        response \u003d new Response();","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        storage \u003d new PersistentStorage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"            response.showLoadError();","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * Executes a command from the user and gets the result of executing that command.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @param input A String representing the input command by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult encapsulating the result of executing the command provided by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    public CommandResult getResponse(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"            CommandResult output \u003d command.executeCommand(taskList, response, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"            return output;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            return new CommandResult(response.showErrorMsg(e));","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pattan9955":48,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that represents Exceptions thrown by Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"     * @param error The error message contained in the DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"        super(error);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"pattan9955":16}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":" * A Launcher for the Duke GUI application.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"public class Launcher {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"     * The entry point of the application.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     * @param args Command line arguments to main.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" * A class encapsulating the GUI for the Duke application.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private Duke duke \u003d new Duke(\"./data/taskdata.txt\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * An overridden method to start the GUI for the Duke application.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param stage The JavaFX stage for GUI scenes to be displayed on.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"            stage.show();","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.commands.CommandResult;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pepe.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pepeduke.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * A method for initializing the MainWindow of the Duke GUI.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"                DialogBox.getDukeDialog(new Response().showStartMsg(), dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * Attaches the Duke object that processes user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     * @param duke The Duke instance to be attached to the GUI.","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     * Creates two dialog boxes, one echoing user input and one containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        CommandResult response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                DialogBox.getDukeDialog(response.getMessage(), dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        if (response.getExitStatus()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":70}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" * A class encapsulating a \"bye\" command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public ByeCommand(){}","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * Executes the bye command by displaying the exit message and saving","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * stored tasks to PersistentStorage.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if an error occured when saving tasks to PersistentStorage.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     * @returns A CommandResult containing the exit message and a boolean to terminate the program.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage)","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"            return new CommandResult(response.showExitMsg(), true);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * Returns a Boolean that tells Duke to terminate the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @return True.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" * An abstract class that all Commands inherit from.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     * Executes the command based on the type of the calling Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @returns A CommandResult encapsulating the results of executing the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public abstract CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage)","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"            throws DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * Returns a Boolean that tells Duke if it should terminate or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Default implementation of a command does not terminate Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @return False by default, unless overridden","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    };","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":34}},{"path":"src/main/java/duke/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * A class encapsulating the results of executing a Command.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public class CommandResult {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"    private String msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    private Boolean isExit;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"     * Instantiates a new CommandResult.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     * @param msg The returned String response from executing a Command.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     * @param isExit A Boolean indicating if the program should terminate.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    public CommandResult(String msg, Boolean isExit) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * An alternative constructor for a CommandResult, when the program should not terminate.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param msg The returned String response from executing a Command.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    public CommandResult(String msg) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * Gets the returned String response from executing a Command.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @return The returned String response from executing a Command.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        return this.msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * Gets a Boolean indicating if the program should terminate.","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * @return A boolean indicating if the program should terminate.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public Boolean getExitStatus() {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":48}},{"path":"src/main/java/duke/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"public enum CommandType {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"    TODO,","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"    DEADLINE,","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"    EVENT,","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"    FIND,","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    LIST,","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    DELETE,","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"    DONE,","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    BYE","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"pattan9955":12}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates a \"deadline\" command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** The String description of the Deadline provided by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /** The due datetime of the Deadline provided by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a DeadlineCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * @param dueDateTime A LocalDateTime describing the due datetime of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public DeadlineCommand(String description, LocalDateTime dueDateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * Executes the deadline command by creating the specified Deadline, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the added Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.dueDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showAddedTask(taskList, deadline));","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":46}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"delete\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** The integer index of the task to be deleted (as in the UI) */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private int target;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a DeleteCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param target The integer index of the task to be deleted (as in the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public DeleteCommand(int target) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the delete command by deleting the specified task and displaying the","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the result of deleting a Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage)","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"            throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        // Check for valid task number provided","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        if (this.target \u003c 1 || this.target \u003e taskList.getTotalTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        // Target index of task to be deleted should be 1 or greater","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        assert target \u003e\u003d 1 : \"Target index for Delete should be at least 1!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        Task removed \u003d taskList.deleteTask(target);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showRemovedTask(taskList, removed));","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":49}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"done\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** The integer index of the target task to be completed (as in the UI) */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private int target;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a DoneCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param target The integer index of the target task to be completed (as in the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public DoneCommand(int target) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the done command by marking the specified task as complete and displaying","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * the completed task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the result of marking a Task as complete.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage)","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"            throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        // Validate target index","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        if (this.target \u003e taskList.getTotalTasks() || this.target \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        // Target index should be at least 1","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        assert target \u003e\u003d 1 : \"Target index for Done should be at least 1!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        Task completed \u003d taskList.markAsDone(target);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showCompletedTask(completed));","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":49}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating an \"event\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** A String description of the Event by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /** A LocalDateTime representing the datetime of the Event */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime eventDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * A constructor for an EventCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * @param eventDateTime The LocalDateTime representing the datetime of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public EventCommand(String description, LocalDateTime eventDateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * Executes the event command by creating the specified Event, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the addition of an Event task.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        Event event \u003d new Event(this.description, this.eventDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showAddedTask(taskList, event));","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":47}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"find\" command by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** Starting index of search term(s) */","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public static final int SEARCH_TERM_START_IDX \u003d 5;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** String containing the desired search terms */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private String searchTerms;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a FindCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @param searchTerms A String representing the search terms by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public FindCommand(String searchTerms) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        this.searchTerms \u003d searchTerms;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * Executes a find command by finding task descriptions that contain the keywords","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * and printing said tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * @return A Commandresult detailing the results of the find operation.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        Tasklist matchingTasks \u003d taskList.findAllTasksWith(this.searchTerms);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showMatchingTasks(matchingTasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"pattan9955":41}},{"path":"src/main/java/duke/commands/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"list\" command by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    public ListAllCommand(){}","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * Executes the list command by printing out all Tasks stored in the","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the result of the List operation.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.listAllTasks(taskList));","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":26}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"todo\" command by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** A String description of the ToDo */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a TodoCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the todo command by creating the specified ToDo, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param response The UI associated with the Duke instance.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @return A CommandResult detailing the result of adding a ToDo task.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public CommandResult executeCommand(Tasklist taskList, Response response, PersistentStorage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        ToDo task \u003d new ToDo(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        return new CommandResult(response.showAddedTask(taskList, task));","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":42}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" * Class that encaspulates a Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * A Deadline is a Task with a due datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** Starting index of the description for a Deadline. */","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public static final int DEADLINE_DESC_START \u003d 9;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** A LocalDateTime object representing the due datetime. */","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @param dueDate The LocalDateTime representing the due datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a Deadline that may be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @param dueDate The LocalDateTime representing the due datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the Deadline is completed","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public Deadline(String description, LocalDateTime dueDate, Boolean isComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of a","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * Deadline for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        return \"D\" + super.getFileRepr() + \" | \" + this.dueDate.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of a Deadline for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        return \"[D][\"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"            + ((this.isCompleted()) ? \"X] \" : \" ] \")","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"            + this.getDescription()","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"            + \" (by: \"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"            + this.dueDate.format(format)","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"            + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":70}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" * Class that encaspulates am Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * An Event is a Task with an associated Event datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** Starting index of the description for an Event */","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public static final int EVENT_DESC_START \u003d 6;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for an Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param eventTime The LocalDateTime representing the event datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for an Event that may be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param eventTime The LocalDateTime representing the Event datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the Event is completed","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public Event(String description, LocalDateTime eventTime, Boolean isComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of an","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     * Event for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        return \"E\" + super.getFileRepr() + \" | \" + this.eventTime.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of an Event for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"        return \"[E][\"","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"            + ((this.isCompleted()) ? \"X] \" : \" ] \")","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"            + this.getDescription()","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"            + \" (at: \"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"            + this.eventTime.format(format) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that represents a Task that has a description and can be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    /** The description of the task */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    /** A boolean representing if the task is complete */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a Task","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a Task that","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * specifies if it has been completed or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @param description A String description of the Task","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A boolean indicating if the Task is complete","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public Task(String description, Boolean isComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d isComplete;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * Sets the calling Task object to complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * Returns the completion status of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     * @return True if the task is completed and false otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    public Boolean isCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     * Gets the description of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     * @return The String description of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable String representing the calling Task","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"     * for use inside persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     * @return A String representing the Task in an easily parsable format.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"        return \" | \" + (this.isCompleted ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of the calling Task that can be displayed","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"     * to the user for use within the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly String representation of the calling Task","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"            return (\"[X] \" + this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"            return (\"[ ] \" + this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":85}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates a ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" * A ToDo is a type of task with no associated datetime information.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    /** Starting index of a ToDo description */","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"    public static final int TODO_DESC_START \u003d 5;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a ToDo that may be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param description A String description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the ToDo is complete","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public ToDo(String description, Boolean isComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of a ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        return \"T\" + super.getFileRepr();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of a ToDo for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        if (this.isCompleted()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"            return (\"[T][X] \" + this.getDescription());","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"            return (\"[T][ ] \" + this.getDescription());","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":56}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.util;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import duke.commands.CommandType;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ListAllCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":" * Class that represents a Parser object for parsing Strings to Commands","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"public class Parser {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * Returns a Command by parsing a user provided String input","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * that can be executed.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param fullCommand A String input direct from the user.","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @return A subtype of Command","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException In the event of parse or invalid argument errors","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        String firstToken \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        // Check if user input is empty","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        if (fullCommand.equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"Please enter a command!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        assert fullCommand.split(\" \").length \u003e\u003d 1 : \"Input should not be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        switch(firstToken) {","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        case \"list\":","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            return new ListAllCommand();","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"                Parser.validateInput(fullCommand, CommandType.DELETE);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"                // Determine index of task to delete","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"                int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        case \"done\":","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                Parser.validateInput(fullCommand, CommandType.DONE);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"                // Determine index of task to mark as done","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"            Parser.validateInput(fullCommand, CommandType.TODO);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"            String todoDescription \u003d Parser.parseDescription(fullCommand, CommandType.TODO);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"            assert !todoDescription.equals(\"\") : \"ToDo description should not be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"            return new TodoCommand(todoDescription);","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                Parser.validateInput(fullCommand, CommandType.DEADLINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"                assert !fullCommand.split(\" /by \")[1].strip().equals(\"\")","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"                        : \"Datetime provided for Deadline cannot be empty\";","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime dueDateTime \u003d Parser.parseDateTime(fullCommand, CommandType.DEADLINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"                String deadlineDescription \u003d Parser.parseDescription(fullCommand, CommandType.DEADLINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                assert  !deadlineDescription.equals(\"\") : \"Description provided for Deadline cannot be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                return new DeadlineCommand(deadlineDescription, dueDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid due date.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        case \"event\":","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                Parser.validateInput(fullCommand, CommandType.EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"                assert !fullCommand.split(\" /at \")[1].strip().equals(\"\")","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                        : \"Datetime input for Event should not be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime eventDateTime \u003d Parser.parseDateTime(fullCommand, CommandType.EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                String eventDescription \u003d Parser.parseDescription(fullCommand, CommandType.EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                assert !eventDescription.equals(\"\") : \"Description for Event should not be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"                return new EventCommand(eventDescription, eventDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid event time.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"        case \"find\":","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"            Parser.validateInput(fullCommand, CommandType.FIND);","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"            // Parse search terms","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"            String searchTerms \u003d Parser.parseSearchTerms(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"            assert !searchTerms.equals(\"\") : \"Search terms for Find should not be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"            return new FindCommand(searchTerms);","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"    private static String parseDescription(String inputCommand, CommandType commandType) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"        case TODO:","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"            return inputCommand.substring(ToDo.TODO_DESC_START);","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"        case EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"            return inputCommand.split(\"/at\")[0].strip().substring(Event.EVENT_DESC_START);","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"            return inputCommand.split(\"/by\")[0].strip().substring(Deadline.DEADLINE_DESC_START);","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"An error occurred in parsing the command! :(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"    private static LocalDateTime parseDateTime(String inputCommand, CommandType commandType) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"        String rawDateTime;","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"        switch(commandType) {","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"        case EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"            rawDateTime \u003d inputCommand.split(\"/at\")[1].strip();","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"            rawDateTime \u003d inputCommand.split(\"/by\")[1].strip();","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"An error occurred in parsing the command! :(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"        return LocalDateTime.parse(rawDateTime, formatter);","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"    private static void validateInput(String inputCommand, CommandType commandType) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"        switch(commandType) {","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"        case DONE:","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"            //fallthrough","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"        case DELETE:","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"        case TODO:","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"            // Check for valid description provided","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" /by \")[0].split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid deadline description.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"pattan9955"},"content":"            // Check for valid due date provided","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" /by \").length !\u003d 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid due date.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"pattan9955"},"content":"        case EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"            // Check for valid description provided","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" /at \")[0].split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid event description.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"pattan9955"},"content":"            // Check for valid event time provided","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" /at \").length !\u003d 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid event time.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"pattan9955"},"content":"        case FIND:","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"            // Validate command and arguments","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"            if (inputCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"Please provide a valid search term!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"        case BYE:","lastModifiedDate":"2021-09-12"},{"lineNumber":193,"author":{"gitId":"pattan9955"},"content":"            //fallthrough","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"pattan9955"},"content":"        case LIST:","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"pattan9955"},"content":"            //fallthrough","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"pattan9955"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":197,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":198,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":200,"author":{"gitId":"pattan9955"},"content":"    private static String parseSearchTerms(String inputCommand) {","lastModifiedDate":"2021-09-12"},{"lineNumber":201,"author":{"gitId":"pattan9955"},"content":"        return inputCommand.substring(FindCommand.SEARCH_TERM_START_IDX).strip();","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":203,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"pattan9955":203}},{"path":"src/main/java/duke/util/PersistentStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.util;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":" * Class that deals with the saving and loading of persistent task data","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":" * that persists throughout multiple runs of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"public class PersistentStorage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * String that represents a filepath to the text","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * file for persistent storage","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a PersistentStorage.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * @param filepath The filepath to the text file used for","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     *                 persistent storage","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    public PersistentStorage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     * Loads tasks from the text file at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * @return A Tasklist containing all tasks in the provided text file","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if no such file found at the provided filepath","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"    public Tasklist loadTasks() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"            // Create the necessary files and load an empty Tasklist","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"            return new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"            // File exists","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"            // Read data from file","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"                Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"                Tasklist storedTasks \u003d new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"                String fileData \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                while (fileReader.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                    fileData +\u003d fileReader.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                // Check if fileData is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"                if (fileData.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"                    fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                    return new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"                // Parse fileData and return a Tasklist","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"                String[] allTasks \u003d fileData.split(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"                for (String task : allTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                    //Split task string into tokens","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                    String[] tokens \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"                    String taskType \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                    boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                    String description \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"                    String rawDateTimeInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"                    if (tokens.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                        ToDo item \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"                        storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                        rawDateTimeInfo \u003d tokens[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                        LocalDateTime dateTimeInfo \u003d LocalDateTime.parse(rawDateTimeInfo, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"                        if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                            // Task is a Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                            Deadline item \u003d new Deadline(description, dateTimeInfo, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                            storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                            // Task is an Event","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"                            Event item \u003d new Event(description, dateTimeInfo, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                            storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"                fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                return storedTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"Error loading file!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"     * Saves tasks to the text file at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"     * @return True if the operation was successful and false otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if no such file found at the provided filepath","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"    public boolean saveTasks(Tasklist tasklist) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"            // Convert tasks into string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"            String taskData \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d tasklist.getAllTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"            for (int i \u003d 0; i \u003c tasklist.getTotalTasks(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"                Task task \u003d allTasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"                taskData +\u003d (i \u003d\u003d tasklist.getTotalTasks() - 1","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"                    ? task.getFileRepr()","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"                    : task.getFileRepr() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"            // Write data to file","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"            writer.write(taskData);","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"            return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"An error occurred while trying to save data to your file :(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pattan9955":143}},{"path":"src/main/java/duke/util/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.util;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" * Class that represents possible String responses by Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"public class Response {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a Response object","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    public Response() {}","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted error message in the event that the","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * persistence file cannot be read or found.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing an error in loading data from the persistent storage file.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public String showLoadError() {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        return \"Could not read your file :(\";","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted start message to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @return A String containing a welcome message to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public String showStartMsg() {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        return \"Hello there, I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted exit message to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @return A String containing an exit message for the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    public String showExitMsg() {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        return \"Bye! Come back again!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted message detailing a removed Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist the Task was removed from","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was removed","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing the Task that was removed.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    public String showRemovedTask(Tasklist taskList, Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        String msg \u003d \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"                + task.toString()","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"                + taskList.getTotalTasks()","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"                + (taskList.getTotalTasks() \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        return msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted message listing all the current Tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"     * in the Tasklist","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist of Tasks to be shown to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing all the Tasks in the current Tasklist.","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    public String listAllTasks(Tasklist taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"        return (\"Here are the items in your list:\\n\" + taskList.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted message detailing a completed Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was completed","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing the Task that was marked as complete.","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"    public String showCompletedTask(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                + task.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"     * Return a formatted message detailing an added Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist where the Task was added to","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was added","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing the Task that was added.","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"    public String showAddedTask(Tasklist taskList, Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        String msg \u003d \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                + task.toString()","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                + taskList.getTotalTasks()","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                + (taskList.getTotalTasks() \u003d\u003d 1 ? \" task \" : \" tasks \")","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                + \"in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"        return msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted message detailing an error from a","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"     * DukeException","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"     * @param e The DukeException to be printed","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing the DukeException.","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"    public String showErrorMsg(DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"     * Returns a formatted message detailing the tasks that match a given","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"     * search term provided by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"     * @param matches the Tasklist containing all Tasks that match the search terms","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"     * @return A String detailing all matching Tasks found by Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"    public String showMatchingTasks(Tasklist matches) {","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"        if (matches.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"            String msg \u003d \"No matches found! :(\";","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"            return msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"        String msg \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"        msg +\u003d matches.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        return msg;","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":128}},{"path":"src/main/java/duke/util/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.util;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class that handles the storing of Tasks during the app\u0027s runtime","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** Used to store each Task */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** To keep track of the current number of Tasks */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private int lastItem \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * Marks a target task in the Tasklist as complete and returns it","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @param index The index (as shown on the UI) of the task to be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @return The completed task","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public Task markAsDone(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        // index should be at least 1","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        assert index \u003e\u003d 1 : \"Target index for markAsDone should be at least 1!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        Task task \u003d this.taskList.get(index - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        task.completeTask();","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        return task;","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * Adds a task to the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * @param task The task to be added to the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        taskList.add(lastItem, task);","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        this.lastItem++;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"     * Returns the total number of tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     * @return The total number of tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"        return this.lastItem;","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"     * Deletes the target task by index","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"     * @param index The target task\u0027s index (as shown on the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"     * @return The deleted task","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        // index should be at least 1","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"        assert index \u003e\u003d 1 : \"Target index for deleteTask should be at least 1!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"        Task removed \u003d this.taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"        this.lastItem--;","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        assert this.lastItem \u003e\u003d 0 : \"Index of last item cannot be less than 0!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"        return removed;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"     * Returns the list of all Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"     * @return An ArrayList containing all Tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"     * Returns the String representation of the Tasklist, with","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"     * each task numbered starting from 1.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"     * @return A String representation of the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"        String contents \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"        for (int i \u003d 0; i \u003c this.lastItem; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"            String index \u003d String.valueOf(i + 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"            contents +\u003d (i !\u003d this.lastItem - 1)","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                ? (index + \". \" + this.taskList.get(i) + \"\\n\")","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                : (index + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"        return contents;","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"     * Returns all Tasks whose descriptions contain any of the provided search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"     * @param searchTerms A String describing the search terms to check the Tasks against.","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"     * @return An ArrayList of Tasks whose descriptions contain at least one of the search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"    public Tasklist findAllTasksWith(String searchTerms) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"        Tasklist result \u003d new Tasklist();","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"        assert !searchTerms.equals(\"\") : \"Search terms cannot be empty!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"        // Parse searchTerms","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        String[] searchTokens \u003d searchTerms.strip().split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        for (int i \u003d 0; i \u003c this.lastItem; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"            Task current \u003d this.taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"            // Check if any search tokens are in the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"            for (String token : searchTokens) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"                String taskDescription \u003d current.getDescription();","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"                if (taskDescription.contains(token)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"                    result.addTask(current);","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":136}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"pattan9955":19}},{"path":"src/test/java/DukeCommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.util.PersistentStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.util.Response;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"public class DukeCommandsTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    public void byeCommandTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"        Command c \u003d new ByeCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"        assertEquals(true, c.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        Response response \u003d new Response();","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        Tasklist taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        PersistentStorage storage \u003d new PersistentStorage(\"./test.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"        DeadlineCommand c \u003d new DeadlineCommand(\"test description\",","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime.of(2012, 2, 2, 16, 30));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        c.executeCommand(taskList, response, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"1. [D][ ] test description (by: Feb 02 2012 16:30)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":37}},{"path":"src/test/java/DukeTasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class DukeTasksTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    public void toDoTaskTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"        ToDo item \u003d new ToDo(\"test todo description\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"        item.completeTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"T | 1 | test todo description\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, item.getFileRepr());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public void deadlineTaskTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        Deadline item \u003d new Deadline(\"some deadline description\",","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime.of(2011, 12, 2, 4, 59));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"[D][ ] some deadline description (by: Dec 02 2011 04:59)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, item.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"todo test multiple words","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"deadline do technical test /at /by time string","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"event do technical test /by /at time string","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":11}}]
