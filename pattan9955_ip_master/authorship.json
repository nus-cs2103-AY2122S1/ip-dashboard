[{"path":"data/taskdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"T | 0 | bye","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"T | 0 | why","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"T | 0 | why there","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"T | 0 | kekw","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"D | 0 | why | 23-05-2020 23:00","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"pattan9955":5}},{"path":"src/main/java/data/taskdata.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"D | 1 | why doe | 06-03-2018 00:00","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates the Duke application","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    private PersistentStorage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    private Tasklist taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    private UI ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * Public constructor for a Duke object","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param filePath A filepath to a text file that serves","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     *    as persistent storage for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        ui \u003d new UI(new Scanner(System.in));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        storage \u003d new PersistentStorage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            taskList \u003d storage.loadTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"            ui.showLoadError();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"            taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * Runs the Duke application.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        ui.showStartMsg();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        Boolean isExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"                String rawCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"                Command command \u003d Parser.parse(rawCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"                command.executeCommand(taskList, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"                ui.showErrorMsg(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * Main function to be run.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     * @param args Command line arguments to main.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        Duke duke \u003d new Duke(\"./data/taskdata.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        duke.run();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pattan9955":59,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that represents Exceptions thrown by Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"     * @param error The error message contained in the DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"        super(error);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"pattan9955":16}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ListAllCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":" * Class that represents a Parser object for parsing Strings to Commands","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     * Returns a Command by parsing a user provided String input","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * that can be executed.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * @param fullCommand A String input direct from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * @return A subtype of Command","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException In the event of parse or invalid argument errors","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        String firstToken \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        // Check if fullCommand is \"bye\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        // Check if fullCommand is \"list\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"            return new ListAllCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        // Check if fullCommand starts with \"delete\"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"delete\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"                // Check that delete is used correctly","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"                // Determine index of task to delete","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"                int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        // Check if fullCommand starts with \"done\"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"done\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"                // Check that delete is used correctly","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"                // Determine index of task to mark as done","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"                int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"        // Check if user adding a ToDo","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"todo\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"            if (fullCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"            String description \u003d fullCommand.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        // Check if user adding a Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"deadline\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                // Check for valid description provided","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" /by \")[0].split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid deadline description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                // Check for valid due date provided","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" /by \").length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid due date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                String rawDueDate \u003d fullCommand.split(\"/by\")[1].strip();","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                // Initialize datetime formatter","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime dueDateTime \u003d LocalDateTime.parse(rawDueDate, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                String description \u003d fullCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                    .split(\"/by\")[0]","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                    .strip()","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                    .substring(9);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"                return new DeadlineCommand(description, dueDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid due date.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"        // Check if user adding an Event","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"event\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"                // Check for valid description provided","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" /at \")[0].split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid event description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"                // Check for valid event time provided","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"                if (fullCommand.split(\" /at \").length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide a valid event time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                String rawEventDateTime \u003d fullCommand.split(\"/at\")[1].strip();","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                // Initialize datetime formatter","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime eventDateTime \u003d LocalDateTime.parse(rawEventDateTime, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"                String description \u003d fullCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"                    .split(\"/at\")[0]","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"                    .strip()","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"                    .substring(6);","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"                return new EventCommand(description, eventDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"☹ OOPS!!! Please provide a valid event time.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"        // Check if fullCommand starts with \"find\"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"        } else if (firstToken.equals(\"find\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"            // Validate command and arguments","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"            if (fullCommand.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"Please provide a valid search term!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"            // Parse search terms","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"            String searchTerms \u003d fullCommand.substring(5).strip();","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"            return new FindCommand(searchTerms);","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"        // Otherwise, throw an error","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":150}},{"path":"src/main/java/duke/PersistentStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":" * Class that deals with the saving and loading of persistent task data","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":" * that persists throughout multiple runs of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"public class PersistentStorage {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * String that represents a filepath to the text","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * file for persistent storage","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a PersistentStorage.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @param filepath The filepath to the text file used for","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     *                 persistent storage","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    public PersistentStorage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * Loads tasks from the text file at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * @return A Tasklist containing all tasks in the provided text file","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if no such file found at the provided filepath","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    public Tasklist loadTasks() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"            // File doesn\u0027t exist","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"            // Create the necessary files and load an empty Tasklist","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"            return new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"            // File exists","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"            // Read data from file","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"                Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"                Tasklist storedTasks \u003d new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"                String fileData \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"                while (fileReader.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"                    fileData +\u003d fileReader.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"                // Check if fileData is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"                if (fileData.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                    fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"                    return new Tasklist();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"                // Parse fileData and return a Tasklist","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"                String[] allTasks \u003d fileData.split(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"                for (String task : allTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"                    //Split task string into tokens","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"                    String[] tokens \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"                    String taskType \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"                    boolean isDone \u003d (tokens[1].equals(\"1\") ? true : false);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"                    String description \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"                    String rawDateTimeInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                    if (tokens.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"                        ToDo item \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                        storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"                        rawDateTimeInfo \u003d tokens[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"                        LocalDateTime dateTimeInfo \u003d LocalDateTime.parse(rawDateTimeInfo, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"                        if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"                            // Task is a Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"                            Deadline item \u003d new Deadline(description, dateTimeInfo, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"                            storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"                        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"                            // Task is an Event","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"                            Event item \u003d new Event(description, dateTimeInfo, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"                            storedTasks.addTask(item);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"                fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"                return storedTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"                throw new DukeException(\"Error loading file!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"     * Saves tasks to the text file at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"     * @return True if the operation was successful and false otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if no such file found at the provided filepath","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"    public boolean saveTasks(Tasklist tasklist) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"        File file \u003d new File(this.filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"            // Convert tasks into string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"            String taskData \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"            ArrayList\u003cTask\u003e allTasks \u003d tasklist.getAllTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"            for (int i \u003d 0; i \u003c tasklist.getTotalTasks(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"                Task task \u003d allTasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"                taskData +\u003d (i \u003d\u003d tasklist.getTotalTasks() - 1","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"                    ? task.getFileRepr()","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"                    : task.getFileRepr() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"            // Write data to file","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"            writer.write(taskData);","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"            return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"An error occurred while trying to save data to your file :(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pattan9955":144}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class that handles the storing of Tasks during the app\u0027s runtime","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** Used to store each Task */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** To keep track of the current number of Tasks */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private int lastItem \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * Constructor for a Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * Marks a target task in the Tasklist as complete and returns it","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @param index The index (as shown on the UI) of the task to be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @return The completed task","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"    public Task markAsDone(int index) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        this.taskList.get(index - 1).completeTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        return this.taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * Adds a task to the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * @param task The task to be added to the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        taskList.add(lastItem, task);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        this.lastItem++;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     * Returns the total number of tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"     * @return The total number of tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"        return this.lastItem;","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     * Deletes the target task by index","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"     * @param index The target task\u0027s index (as shown on the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"     * @return The deleted task","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"        Task removed \u003d this.taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"        this.lastItem--;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"        return removed;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"     * Returns the list of all Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"     * @return An ArrayList containing all Tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"     * Returns the String representation of the Tasklist, with","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"     * each task numbered starting from 1.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"     * @return A String representation of the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        String contents \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"        for (int i \u003d 0; i \u003c this.lastItem; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"            String index \u003d String.valueOf(i + 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"            contents +\u003d (i !\u003d this.lastItem - 1)","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"                ? (index + \". \" + this.taskList.get(i) + \"\\n\")","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"                : (index + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        return contents;","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"     * Returns all Tasks whose descriptions contain any of the provided search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"     * @param searchTerms A String describing the search terms to check the Tasks against.","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"     * @return An ArrayList of Tasks whose descriptions contain at least one of the search terms.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"    public Tasklist findAllTasksWith(String searchTerms) {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"        Tasklist result \u003d new Tasklist();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"        // Parse searchTerms","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"        String[] searchTokens \u003d searchTerms.strip().split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        for (int i \u003d 0; i \u003c this.lastItem; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"            Task current \u003d this.taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"            // Check if any search tokens are in the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"            for (String token : searchTokens) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"                String taskDescription \u003d current.getDescription();","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"                if (taskDescription.contains(token)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"                    result.addTask(current);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":124}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class that represents the UI of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class UI {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     * A nested class that encapsulates a typical command line","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     * response from Duke, and deals with formatting.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    public static class Response {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"        /** The content of the message to be sent to the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"        private String content;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"         * A constructor for a Response object.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"         * @param content A String containing the content of the Response.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        private Response(String content) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            this.content \u003d content;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"         * An alternate constructor for a Response object.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"         * @param list a Tasklist of tasks to be shown to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        private Response(Tasklist list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"            this.content \u003d list.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response for the event where a Task is added","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"         * to a Tasklist, and prints the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"         * @param tasklist The Tasklist where the task has been added to","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"         * @param task The Task which has been added.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"         * @return A Response object detailing the addition of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        public static Response added(Tasklist tasklist, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            String msg \u003d \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"                + task.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"                + tasklist.getTotalTasks()","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"                + (tasklist.getTotalTasks() \u003d\u003d 1 ? \" task \" : \" tasks \")","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"                + \"in the list.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response for the event where a Task has been marked","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"         * as complete, and prints the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"         * @param task The Task that has been completed","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"         * @return A Response object detailing the completion of the Task","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"        public static Response completedTask(Task task) {","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"            String msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"                + task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response for the event where a Task has been removed,","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"         * and prints the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"         * @param tasklist The Tasklist from which the Task was removed","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"         * @param task The Task that was removed","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"         * @return A Response detailing the removal of the Task","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"        public static Response removed(Tasklist tasklist, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"            String msg \u003d \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"                + task.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"                + tasklist.getTotalTasks()","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"                + (tasklist.getTotalTasks() \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"pattan9955"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response for the event where user requests to list","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"pattan9955"},"content":"         * all Tasks in the Tasklist, and prints the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"pattan9955"},"content":"         * @param tasklist The Tasklist containing the Tasks to be displayed to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"pattan9955"},"content":"         * @return A Response detailing the list of all Tasks in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"pattan9955"},"content":"        public static Response listAllItems(Tasklist tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"pattan9955"},"content":"                + tasklist.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response containing the start message for Duke, and","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"pattan9955"},"content":"         * prints the Response to the Console.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"pattan9955"},"content":"         * @return A Response containing the start message of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"pattan9955"},"content":"        public static Response start() {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"pattan9955"},"content":"            String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"pattan9955"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"pattan9955"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"pattan9955"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"pattan9955"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(logo","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"pattan9955"},"content":"                + \"Hello there, I\u0027m Duke!\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response containing the exit message for Duke, and","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"pattan9955"},"content":"         * prints the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"pattan9955"},"content":"         * @return A Response containing the exit message of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"pattan9955"},"content":"        public static Response exit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(\"Bye! Come back again!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response containing an error message, and prints","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"pattan9955"},"content":"         * the Response to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"pattan9955"},"content":"         * @param msg An error message to be formatted by Response","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"pattan9955"},"content":"         * @return A Response object detailing the error message","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"pattan9955"},"content":"        public static Response error(String msg) {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"pattan9955"},"content":"         * Returns a Response detailing the tasks that match a set of","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"pattan9955"},"content":"         * given search terms and prints it to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"pattan9955"},"content":"         * @param matches A Tasklist of tasks that match the search terms","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"pattan9955"},"content":"         * @return A Response detailing the matching Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"pattan9955"},"content":"        public static Response matchingTasks(Tasklist matches) {","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"pattan9955"},"content":"            if (matches.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"pattan9955"},"content":"                Response response \u003d new Response(\"No matches found! :(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"pattan9955"},"content":"                System.out.println(response);","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"pattan9955"},"content":"                return response;","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"pattan9955"},"content":"            String msg \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"pattan9955"},"content":"            msg +\u003d matches.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"pattan9955"},"content":"            Response response \u003d new Response(msg);","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"pattan9955"},"content":"            System.out.println(response);","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"pattan9955"},"content":"            return response;","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"pattan9955"},"content":"        /**","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"pattan9955"},"content":"         * Returns a String representation of a Response with all formatting complete,","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"pattan9955"},"content":"         * for use when printing to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"pattan9955"},"content":"         *","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"pattan9955"},"content":"         * @return A user-friendly, readable String representing a Response object","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"pattan9955"},"content":"         */","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"pattan9955"},"content":"        @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"pattan9955"},"content":"        public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"pattan9955"},"content":"            String linebreak \u003d \"\\t_______________________________________________\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"pattan9955"},"content":"            String[] splitByLines \u003d this.content.split(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"pattan9955"},"content":"            String rawContent \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"pattan9955"},"content":"            for (int i \u003d 0; i \u003c splitByLines.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"pattan9955"},"content":"                rawContent +\u003d (\"\\t\" + splitByLines[i] + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"pattan9955"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"pattan9955"},"content":"            String result \u003d (linebreak + rawContent + linebreak);","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"pattan9955"},"content":"            return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"pattan9955"},"content":"    /** The Scanner used for reading input from the command line */","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"pattan9955"},"content":"    private Scanner inputScanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a UI object","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"pattan9955"},"content":"     * @param inputScanner A Scanner object used for reading input from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"pattan9955"},"content":"    public UI(Scanner inputScanner) {","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"pattan9955"},"content":"        this.inputScanner \u003d inputScanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted error message in the event that the","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"pattan9955"},"content":"     * persistence file cannot be read or found.","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"pattan9955"},"content":"    public void showLoadError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"pattan9955"},"content":"        Response.error(\"Could not read your file :(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted start message to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"pattan9955"},"content":"    public void showStartMsg() {","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"pattan9955"},"content":"        Response.start();","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted exit message to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"pattan9955"},"content":"    public void showExitMsg() {","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"pattan9955"},"content":"        Response.exit();","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message detailing a removed Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":231,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":232,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist the Task was removed from","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was removed","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":235,"author":{"gitId":"pattan9955"},"content":"    public void showRemovedTask(Tasklist taskList, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"pattan9955"},"content":"        Response.removed(taskList, task);","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message listing all the current Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"pattan9955"},"content":"     * in the Tasklist","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist of Tasks to be shown to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"pattan9955"},"content":"    public void listAllTasks(Tasklist taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"pattan9955"},"content":"        Response.listAllItems(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message detailing a completed Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was completed","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"pattan9955"},"content":"    public void showCompletedTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"pattan9955"},"content":"        Response.completedTask(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":256,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":258,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":259,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message detailing an added Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist where the Task was added to","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"pattan9955"},"content":"     * @param task The Task that was added","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"pattan9955"},"content":"    public void showAddedTask(Tasklist taskList, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"pattan9955"},"content":"        Response.added(taskList, task);","lastModifiedDate":"2021-08-25"},{"lineNumber":266,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":267,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":268,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message detailing an error from a","lastModifiedDate":"2021-08-26"},{"lineNumber":270,"author":{"gitId":"pattan9955"},"content":"     * DukeException","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"pattan9955"},"content":"     * @param e The DukeException to be printed","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"pattan9955"},"content":"    public void showErrorMsg(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":275,"author":{"gitId":"pattan9955"},"content":"        Response.error(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":276,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":277,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":279,"author":{"gitId":"pattan9955"},"content":"     * Prints a formatted message detailing the tasks that match a given","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"pattan9955"},"content":"     * search term provided by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"pattan9955"},"content":"     * @param matches the Tasklist containing all Tasks that match the search terms","lastModifiedDate":"2021-08-26"},{"lineNumber":283,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"pattan9955"},"content":"    public void showMatchingTasks(Tasklist matches) {","lastModifiedDate":"2021-08-26"},{"lineNumber":285,"author":{"gitId":"pattan9955"},"content":"        Response.matchingTasks(matches);","lastModifiedDate":"2021-08-26"},{"lineNumber":286,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":287,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":289,"author":{"gitId":"pattan9955"},"content":"     * Reads a String input from the user for use by the Parser","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":291,"author":{"gitId":"pattan9955"},"content":"     * @return A String input read from the user through the command line.","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":293,"author":{"gitId":"pattan9955"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":294,"author":{"gitId":"pattan9955"},"content":"        String fullCommand \u003d this.inputScanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":295,"author":{"gitId":"pattan9955"},"content":"        return fullCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":296,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":297,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":297}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" * A class encapsulating a \"bye\" command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    public ByeCommand(){}","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * Executes the bye command by displaying the exit message and saving","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * stored tasks to PersistentStorage.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if an error occured when saving tasks to PersistentStorage.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage)","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"            ui.showExitMsg();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     * Returns a Boolean that tells Duke to terminate the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @return True.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":43}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" * An abstract class that all Commands inherit from.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"     * Executes the command based on the type of the calling Command.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    public abstract void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage)","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"            throws DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * Returns a Boolean that tells Duke if it should terminate or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * Default implementation of a command does not terminate Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @return False by default, unless overridden","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    public Boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    };","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":33}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates a \"deadline\" command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** The String description of the Deadline provided by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /** The due datetime of the Deadline provided by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a DeadlineCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * @param dueDateTime A LocalDateTime describing the due datetime of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public DeadlineCommand(String description, LocalDateTime dueDateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        this.dueDateTime \u003d dueDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * Executes the deadline command by creating the specified Deadline, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.dueDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        ui.showAddedTask(taskList, deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":45}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"delete\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** The integer index of the task to be deleted (as in the UI) */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private int target;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a DeleteCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param target The integer index of the task to be deleted (as in the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public DeleteCommand(int target) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the delete command by deleting the specified task and displaying the","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        // Check for valid task number provided","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        if (this.target \u003c 1 || this.target \u003e taskList.getTotalTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        Task removed \u003d taskList.deleteTask(target);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        ui.showRemovedTask(taskList, removed);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":44}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"done\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** The integer index of the target task to be completed (as in the UI) */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private int target;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a DoneCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param target The integer index of the target task to be completed (as in the UI)","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public DoneCommand(int target) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the done command by marking the specified task as complete and displaying","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * the completed task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        // Validate target index","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"        if (this.target \u003e taskList.getTotalTasks() || this.target \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        Task completed \u003d taskList.markAsDone(target);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        ui.showCompletedTask(completed);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":44}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating an \"event\" command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /** A String description of the Event by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /** A LocalDateTime representing the datetime of the Event */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime eventDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * A constructor for an EventCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * @param eventDateTime The LocalDateTime representing the datetime of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    public EventCommand(String description, LocalDateTime eventDateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * Executes the event command by creating the specified Event, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"        Event event \u003d new Event(this.description, this.eventDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"        ui.showAddedTask(taskList, event);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":46}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"find\" command by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** String containing the desired search terms */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    private String searchTerms;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a FindCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param searchTerms A String representing the search terms by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public FindCommand(String searchTerms) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        this.searchTerms \u003d searchTerms;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"     * Executes a find command by finding task descriptions that contain the keywords","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"     * and printing said tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"        Tasklist matchingTasks \u003d taskList.findAllTasksWith(this.searchTerms);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"pattan9955":36}},{"path":"src/main/java/duke/commands/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"list\" command by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    public ListAllCommand(){}","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * Executes the list command by printing out all Tasks stored in the","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        ui.listAllTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":25}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":" * Class encapsulating a \"todo\" command by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /** A String description of the ToDo */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a TodoCommand","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * Executes the todo command by creating the specified ToDo, adding it to the","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * Tasklist and displaying the updated Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param taskList The Tasklist associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param ui The UI associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param storage The PersistentStorage associated with the Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     * @throws DukeException if the provided target index is not in range.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public void executeCommand(Tasklist taskList, UI ui, PersistentStorage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        ToDo task \u003d new ToDo(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"        ui.showAddedTask(taskList, task);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":41}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" * Class that encaspulates a Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * A Deadline is a Task with a due datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    /** A LocalDateTime object representing the due datetime */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param dueDate The LocalDateTime representing the due datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"    public Deadline(String description, LocalDateTime dueDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a Deadline that may be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param dueDate The LocalDateTime representing the due datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the Deadline is completed","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    public Deadline(String description, LocalDateTime dueDate, Boolean isComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of a","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * Deadline for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        return \"D\" + super.getFileRepr() + \" | \" + this.dueDate.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of a Deadline for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        return \"[D][\"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"            + ((this.isCompleted()) ? \"X] \" : \" ] \")","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"            + this.getDescription()","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"            + \" (by: \"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"            + this.dueDate.format(format)","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"            + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":67}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":" * Class that encaspulates am Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":" * An Event is a Task with an associated Event datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    private LocalDateTime eventTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    // Constructor for an Event","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * A constructor for an Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     * @param eventTime The LocalDateTime representing the event datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for an Event that may be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param eventTime The LocalDateTime representing the Event datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the Event is completed","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    public Event(String description, LocalDateTime eventTime, Boolean isComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of an","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * Event for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"        return \"E\" + super.getFileRepr() + \" | \" + this.eventTime.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of an Event for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the Event","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        return \"[E][\"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"            + ((this.isCompleted()) ? \"X] \" : \" ] \")","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"            + this.getDescription()","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"            + \" (at: \"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"            + this.eventTime.format(format) + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":66}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that represents a Task that has a description and can be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"    /** The description of the task */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    /** A boolean representing if the task is complete */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    private Boolean isCompleted;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"     * A constructor for a Task","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"     * @param description A String describing the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    // Constructor for a completed Task","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a Task that","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"     * specifies if it has been completed or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * @param description A String description of the Task","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A boolean indicating if the Task is complete","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"    public Task(String description, Boolean isComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d isComplete;","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"     * Sets the calling Task object to complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"     * Returns the completion status of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"     * @return True if the task is completed and false otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"    public Boolean isCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"pattan9955"},"content":"     * Gets the description of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"pattan9955"},"content":"     * @return The String description of the calling Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"pattan9955"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"pattan9955"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable String representing the calling Task","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"pattan9955"},"content":"     * for use inside persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"pattan9955"},"content":"     * @return A String representing the Task in an easily parsable format.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pattan9955"},"content":"        return \" | \" + (this.isCompleted ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of the calling Task that can be displayed","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"pattan9955"},"content":"     * to the user for use within the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly String representation of the calling Task","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"pattan9955"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"pattan9955"},"content":"            return (\"[X] \" + this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"pattan9955"},"content":"            return (\"[ ] \" + this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":87}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":" * Class that encapsulates a ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":" * A ToDo is a type of task with no associated datetime information.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"     * A Constructor for a ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"     * @param description The String description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"     * An alternate constructor for a ToDo that may be completed","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"     * @param description A String description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"     * @param isComplete A Boolean representing if the ToDo is complete","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"    public ToDo(String description, Boolean isComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        super(description, isComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"     * Returns an easily parsable, String file representation of a ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"     * for use in persistent storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"     * @return An easily parsable String representing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"    public String getFileRepr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"        return \"T\" + super.getFileRepr();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pattan9955"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"pattan9955"},"content":"     * Returns a String representation of a ToDo for use in","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"pattan9955"},"content":"     * the Duke UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"pattan9955"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"pattan9955"},"content":"     * @return A user-friendly, readable String representing the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"pattan9955"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"pattan9955"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"pattan9955"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"pattan9955"},"content":"        if (this.isCompleted()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"pattan9955"},"content":"            return (\"[T][X] \" + this.getDescription());","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"pattan9955"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"pattan9955"},"content":"            return (\"[T][ ] \" + this.getDescription());","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"pattan9955"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":53}},{"path":"src/test/java/DukeCommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.PersistentStorage;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"import duke.Tasklist;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"import duke.UI;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"public class DukeCommandsTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    public void byeCommandTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"        Command c \u003d new ByeCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"        assertEquals(true, c.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"    public void deadlineCommandTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        UI ui \u003d new UI(new Scanner(System.in));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"        Tasklist taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"        PersistentStorage storage \u003d new PersistentStorage(\"./test.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"pattan9955"},"content":"        DeadlineCommand c \u003d new DeadlineCommand(\"test description\",","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime.of(2012, 2, 2, 16, 30));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"pattan9955"},"content":"        c.executeCommand(taskList, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"1. [D][ ] test description (by: Feb 02 2012 16:30)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":38}},{"path":"src/test/java/DukeTasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"public class DukeTasksTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"pattan9955"},"content":"    public void toDoTaskTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"pattan9955"},"content":"        ToDo item \u003d new ToDo(\"test todo description\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"pattan9955"},"content":"        item.completeTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"T | 1 | test todo description\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, item.getFileRepr());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"pattan9955"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"pattan9955"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"pattan9955"},"content":"    public void deadlineTaskTest() {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"pattan9955"},"content":"        Deadline item \u003d new Deadline(\"some deadline description\",","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"pattan9955"},"content":"                LocalDateTime.of(2011, 12, 2, 4, 59));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"pattan9955"},"content":"        String expected \u003d \"[D][ ] some deadline description (by: Dec 02 2011 04:59)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"pattan9955"},"content":"        assertEquals(expected, item.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"pattan9955"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"pattan9955"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"pattan9955":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"pattan9955"},"content":"todo test multiple words","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"pattan9955"},"content":"deadline do technical test /at /by time string","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"pattan9955"},"content":"event do technical test /by /at time string","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"pattan9955"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"pattan9955"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"pattan9955"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"pattan9955"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"pattan9955"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"pattan9955":11}}]
