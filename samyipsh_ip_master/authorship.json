[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samyipsh":2,"-":22}},{"path":"data/duke-storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"E | 1 | party | town","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"T | 0 | partymore","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"T | 0 | smth","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"E | 0 | smth | a time","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"public class Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    private final Parser PARSER;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    private final Ui UI;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"        String filePath \u003d \"data\" + File.separatorChar + \"duke-storage.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    public Duke(String filePathToStorage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        Storage DUKE_STORE \u003d new Storage(filePathToStorage);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        TaskList TASKLIST \u003d TaskList.of(DUKE_STORE);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"        this.PARSER \u003d Parser.initialize(TASKLIST);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        this.UI \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    public void run() {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        while (UI.isRunning()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"            if (!UI.isPendingReply()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"                continue;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"            String userInput \u003d UI.readCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"                UI.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"                String reply \u003d this.PARSER.parseCommand(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"                Ui.printFormatted(reply);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"                Ui.printFormatted(e.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":50}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.exception;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"//    private boolean isKeyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    private final String MESSAGE_REPLY;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    //package private","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public static DukeException of(String invalidInput, String messageReply) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        return new DukeException(invalidInput, messageReply);","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public static DukeException of(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"        String reply \u003d DukeException.replyInput(userInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        return new DukeException(userInput, reply);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    private DukeException(String invalidInput, String messageReply) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        super(invalidInput);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        this.MESSAGE_REPLY \u003d messageReply;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    private static String replyInput(String userInput) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        String defaultReply \u003d \"Invalid input!\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"            \"    Available commands: [todo, deadline, event, list, bye]\";","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        if (userInput.matches(\"\\\\w+\\\\s*\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"            String inputWord \u003d userInput.split(\" \", 2)[0].toLowerCase();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"            return switch (inputWord) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"                case \"todo\" -\u003e ToDo.syntax();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"                case \"deadline\" -\u003e Deadline.syntax();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"                case \"event\" -\u003e Event.syntax();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"                default -\u003e defaultReply;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"            };","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"            return defaultReply;","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        return this.MESSAGE_REPLY;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"samyipsh":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    public static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    public static final String COMMAND_REGEX \u003d \"deadline \\\\w[\\\\w, ]+\\\\w \\\\/by \\\\w[\\\\w,\\\\-, ]*\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"//            \"deadline\\\\s.+\\\\s\\\\\\\\/by\\\\s.+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    private String userInputDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"    private LocalDateTime dateTimeDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    private LocalDateTime dateTimeTaskCreation;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        DateTimeFormatter.ofPattern(\"dd-MM-uuuu HHmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    public static Deadline of(String taskSummary, String byDate) {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        return new Deadline(taskSummary, byDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    public static Deadline parse(String storageLine) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        //example line: \"D | 0 | work | 01-06-2020 1430\"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        String[] args \u003d storageLine.split(\" \\\\| \");","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalArgumentException(\"storage line passed in doesnt have enough arguments\");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        Deadline loadedTask \u003d new Deadline(args[2], args[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"        boolean completed \u003d args[1].equals(\"1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"        if (completed) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"            loadedTask.markCompleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        return loadedTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    public Deadline(String taskSummary, String byDate) {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        super(taskSummary);","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        this.userInputDeadline \u003d byDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"        this.dateTimeTaskCreation \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        this.updateDateTimeDeadline(byDate);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"    private void updateDateTimeDeadline(String byDate) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"            LocalDateTime parsedDateTime \u003d Deadline.stringToLocalDateTime(byDate);","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"            if (parsedDateTime.isBefore(dateTimeTaskCreation)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"                throw new IllegalArgumentException(\"Time of deadline is in the past!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"            this.dateTimeDeadline \u003d parsedDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"            throw DukeException.of(\"date\",","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    String.format(\"Invalid date \u0026 time passed (\u0027%s\u0027)\\n\\n\", byDate) + Deadline.syntax());","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"            throw DukeException.of(\"date\",","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"    String.format(\"Invalid date \u0026 time passed (\u0027%s\u0027)\\n\\n\", byDate) + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    private static LocalDateTime stringToLocalDateTime(String text) {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"        return LocalDateTime.parse(text, Deadline.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"    private static String localDateTimeToString(LocalDateTime localDateTime) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"        return localDateTime.format(Deadline.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"    public static String syntax() {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"        return \"deadline command syntax: \\n\" +","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"                \"    \u0027deadline \u003ctask\u003e /by dd-MM-yyyy HHmm\u0027\\n\" +","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"                \"Eg. \u0027deadline project /by 01-01-2020 2359\u0027\";","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"            \"%s | %d | %s | %s\",","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"            Deadline.SYMBOL, this.isCompleted() ? 1 : 0,this.getTaskSummary(), this.userInputDeadline","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"            Deadline deadline \u003d (Deadline) obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"            boolean isDescSame \u003d deadline.getTaskSummary().equals(this.getTaskSummary());","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"            boolean isDeadlineSame \u003d deadline.dateTimeDeadline.equals(this.dateTimeDeadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"            return isDescSame \u0026\u0026 isDeadlineSame;","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"            \"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"            Deadline.SYMBOL,","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"            this.isCompleted() ? \"X\" : \"\",","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"            this.getTaskSummary(),","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"            Deadline.localDateTimeToString(this.dateTimeDeadline)","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"samyipsh":106}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"    public static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"    public static final String COMMAND_REGEX \u003d \"event \\\\w[\\\\w, ]+\\\\w \\\\/at \\\\w[\\\\w, ]*\";","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"    private String eventTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    public static Event of(String taskSummary, String eventTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"        return new Event(taskSummary, eventTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    public static Event parse(String storageLine) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        //example line: \"E | 0 | party | house\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"        String[] args \u003d storageLine.split(\" \\\\| \");","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"        if (args.length !\u003d 4) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalArgumentException(\"storage line passed in doesnt have enough arguments\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        Event loadedEvent \u003d new Event(args[2], args[3]);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        boolean completed \u003d args[1].equals(\"1\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        if (completed) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"            loadedEvent.markCompleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"        return loadedEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    public Event(String taskSummary, String eventTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        super(taskSummary);","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    public static String syntax() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"        return \"event command syntax: \u0027event \u003ctask\u003e /at \u003ceventTime\u003e\u0027\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"            \"%s | %d | %s | %s\",","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"            Event.SYMBOL, this.isCompleted() ? 1 : 0, this.getTaskSummary(), this.eventTime","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"            Event event \u003d (Event) obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"            boolean isDescSame \u003d event.getTaskSummary().equals(this.getTaskSummary());","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"            boolean isTimeSame \u003d event.eventTime.equals(this.eventTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"            return isDescSame \u0026\u0026 isTimeSame;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"            \"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"            Event.SYMBOL,","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"            this.isCompleted() ? \"X\" : \"\",","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"            this.getTaskSummary(),","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"            this.eventTime","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"samyipsh":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"//make abstract class?","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"    private String taskSummary;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    Task(String taskSummary) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"        this.taskSummary \u003d taskSummary;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    public static Task parseLine(String line) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        String taskSymbol \u003d Character.toString(line.charAt(0));","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"        return switch (taskSymbol) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"            case \"T\" -\u003e ToDo.parse(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"            case \"E\" -\u003e Event.parse(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"            case \"D\" -\u003e Deadline.parse(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"            default -\u003e throw new IllegalArgumentException(\"Should not enter here\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        };","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"    public void markCompleted() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public String completeStatus() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        return this.isDone ? \"x\" : \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    public String getTaskSummary() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        return this.taskSummary;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"    //only for purpose of polymorphism, change to abstract?","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"            \"? | %d | %s \",","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"            this.isCompleted() ? 1 : 0,this.getTaskSummary()","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        return String.format(\"[GENERIC TASK] [%s] %s\", this.completeStatus(),this.taskSummary);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"samyipsh":50}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"// immutable principles?","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"public final class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    private final ArrayList\u003cTask\u003e TASKS;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    private final Storage STORAGE_FILE;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"    //parse in Files containing Strings (line) of duke.task representation","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public static TaskList of(Storage storageFile) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"        File tasksStorageFile \u003d storageFile.getFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"            Scanner sc \u003d new Scanner(tasksStorageFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"                Task task \u003d Task.parseLine(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        return new TaskList(tasks, storageFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    private TaskList(ArrayList\u003cTask\u003e tasks, Storage storageFile) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        this.STORAGE_FILE \u003d storageFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        this.TASKS \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        this.TASKS.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        //TEST","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        this.updateStore();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    public Task get(int idx) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        return this.TASKS.get(idx);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    public int length() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"        return TASKS.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"    public void toggleDone(int idx) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"        if (isValidIndex(idx, TASKS.size())) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"            TASKS.get(idx).markCompleted();","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"    public void removeTask(int idx) {","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        if (isValidIndex(idx, TASKS.size())) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"            TASKS.remove(idx);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"        //TEST","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"        this.updateStore();","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"    private void updateStore() {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"        this.STORAGE_FILE.write(this.TASKS);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"    public static boolean isValidIndex(int idxFrom0, int numOfTasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"        if (idxFrom0 \u003c 0 || idxFrom0 \u003e\u003d numOfTasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalArgumentException(\"task index passed in out of range\");","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"        int numOfTasks \u003d this.TASKS.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"            result.append(String.format(\"%d: %s\\n\", i + 1, this.TASKS.get(i).toString()));","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"//        //add final duke.task without \\n","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"//        result +\u003d String.format(\"%d: %s\", numOfTasks, this.tasks[numOfTasks - 1].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"        return result.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"samyipsh":90}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"    public static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"    public static final String COMMAND_REGEX \u003d \"todo \\\\w+.*\";","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    public static ToDo of(String taskSummary) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"        return new ToDo(taskSummary);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public static ToDo parse(String storageLine) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        //eg. \"T | 0 | eat\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        String[] args \u003d storageLine.split(\" \\\\| \");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"        if (args.length !\u003d 3) {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalArgumentException(\"storage line passed in doesnt have enough arguments\");","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        ToDo loadedToDo \u003d new ToDo(args[2]);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        boolean completed \u003d args[1].equals(\"1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        if (completed) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"            loadedToDo.markCompleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        return loadedToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public ToDo(String taskSummary) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        super(taskSummary);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    public static String syntax() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        return \"todo command syntax: \u0027todo \u003ctask\u003e\u0027\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"            \"%s | %d | %s\",","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"            ToDo.SYMBOL, this.isCompleted() ? 1 : 0,this.getTaskSummary()","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        if (obj instanceof ToDo) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"            ToDo toDo \u003d (ToDo) obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"            return toDo.getTaskSummary().equals(this.getTaskSummary());","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"        return String.format(","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"            \"[%s][%s] %s\",","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"            ToDo.SYMBOL,","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"            this.isCompleted() ? \"X\" : \"\",","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"            this.getTaskSummary()","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        );","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"samyipsh":60}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.util;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    public static Parser initialize(TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"        return new Parser(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    private Parser(TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"     * Returns reply message","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    public String parseCommand(String userInput) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"            return String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"                    \"Here are the tasks in your list:\\n%s\",","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"                    taskList.toString()","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"            );","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        } else if (userInput.matches(\"done\\s[0-9]{1,2}\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"            //eg. done 12","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"            //limiting tasks from 0-99","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"            String inputBody \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"            int idxFrom0 \u003d Integer.parseInt(inputBody) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"            if (TaskList.isValidIndex(idxFrom0, taskList.length())) { //valid argument indexes","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"                taskList.toggleDone(idxFrom0);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"                return String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"                        \"Nice! I\u0027ve marked this task as done:\\n    %s\",","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"                        taskList.get(idxFrom0).toString()","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"                );","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        } else if (userInput.matches(\"delete\\s[0-9]{1,2}\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"            //eg. delete 3","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"            String inputBody \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"            int idxFrom0 \u003d Integer.parseInt(inputBody) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"            if (TaskList.isValidIndex(idxFrom0, taskList.length())) { //valid argument indexes","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"                String reply \u003d String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"                        \"Noted. I\u0027ve removed this task:\\n    %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"                        taskList.get(idxFrom0).toString(),","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"                        taskList.length() - 1","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"                );","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"                taskList.removeTask(idxFrom0);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"                return reply;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        } else if (userInput.matches(ToDo.COMMAND_REGEX)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"            //eg. todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"            String inputBody \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"            Task newTask \u003d ToDo.of(inputBody);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"            String reply \u003d String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"                    \"Got it! I\u0027ve added this task:\\n %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"                    newTask.toString(),","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"                    taskList.length() + 1","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"            );","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"            return reply;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"        } else if (userInput.matches(Deadline.COMMAND_REGEX)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"            //eg. deadline xxx /by dd-MM-uuuu HHmm","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"            String inputBody \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"            String[] deadlineDetails \u003d inputBody.split(\"\\s/by\\s\", 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"            String deadlineTask \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"            String deadlineByDate \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"            Task newTask \u003d Deadline.of(deadlineTask, deadlineByDate);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"            String reply \u003d String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"                    \"Got it! I\u0027ve added this task:\\n %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"                    newTask.toString(),","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"                    taskList.length()  + 1","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"            );","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"            return reply;","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"        } else if (userInput.matches(Event.COMMAND_REGEX)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"            //eg. event xxx /by xxx","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"            String inputBody \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"            String[] eventDetails \u003d inputBody.split(\"\\s/at\\s\", 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"            String eventTask \u003d eventDetails[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"            String eventTime \u003d eventDetails[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"            Task newTask \u003d Event.of(eventTask, eventTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"            String reply \u003d String.format(","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"                    \"Got it! I\u0027ve added this task:\\n %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"                    newTask.toString(),","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"                    taskList.length()  + 1","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"            );","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"            return reply;","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"        throw DukeException.of(userInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":95}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.util;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    private File dir;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    private File file;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    private FileWriter fw;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    public Storage(String filePathToStorageFile) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        this.filePath \u003d filePathToStorageFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        this.file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        this.dir \u003d this.file.getParentFile(); //may be null","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        //create directory and file if doesnt exist","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        if (!this.dir.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"            createDir(this.dir);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"            createFile(this.file);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    public void createDir(File dir) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        dir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    public void createFile(File file) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"    public File getFile() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        return this.file;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    public void write(String text)  {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"            this.fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        String text \u003d tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"                .stream()","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"                .map(Task::toStorageFormat)","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"                .reduce(\"\",","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"                    (stringRes, stringTask) -\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"                        stringRes + stringTask + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"        this.write(text);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"samyipsh":66}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.util;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"    private boolean isRunning;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    private static final String TOP_BORDER \u003d \"____________________________________\";","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    private static final String BOTTOM_BORDER \u003d \"------------------------------------\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public static final String CLOSING_STATEMENT \u003d \"Bye, hope to see you again! :)\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    public Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        this.start();","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        printFormatted(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    public void start() {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"    public void close() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        sc.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"        printFormatted(CLOSING_STATEMENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    public boolean isPendingReply() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        return sc.hasNext();","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        return this.isRunning;","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"    public static void printFormatted(String text) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        String textWithBorders \u003d TOP_BORDER + \"\\n\"+  text + \"\\n\" + BOTTOM_BORDER + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"        String[] lines \u003d textWithBorders.split(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"            System.out.println(Ui.INDENT + line);","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"samyipsh":54}},{"path":"src/test/java/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"//public class StorageStub {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"//}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":2}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    public void randomTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"//    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"//    public void randomTest2() {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"//        Duke duke \u003d new Duke(\"file\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":17}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    private static final String TIME_IN_FUTURE1 \u003d \"12-12-2025 2359\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    private static final String TIME_IN_FUTURE2 \u003d \"12-12-2026 2359\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameObj_returnTrue() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline1 \u003d Deadline.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline2 \u003d Deadline.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"        assertEquals(deadline1.equals(deadline2), true);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameTypeDiffDesc_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline1 \u003d Deadline.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline2 \u003d Deadline.of(\"Peel a banana\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        assertEquals(deadline1.equals(deadline2), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameTypeDiffTime_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline1 \u003d Deadline.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline2 \u003d Deadline.of(\"Eat a potato\", TIME_IN_FUTURE2);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        assertEquals(deadline1.equals(deadline2), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_diffTaskObj_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        Deadline deadline1 \u003d Deadline.of(\"Eat a banana\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo1 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        assertEquals(deadline1.equals(toDo1), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":40}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"public class EventTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    private static final String TIME_IN_FUTURE1 \u003d \"12-12-2025 2359\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"    private static final String TIME_IN_FUTURE2 \u003d \"12-12-2026 2359\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameObj_returnTrue() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        Event event1 \u003d Event.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"        Event event2 \u003d Event.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"        assertEquals(event1.equals(event2), true);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameTypeDiffDesc_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        Event event1 \u003d Event.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        Event event2 \u003d Event.of(\"Eat a banana\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"        assertEquals(event1.equals(event2), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameTypeDiffTime_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        Event event1 \u003d Event.of(\"Eat a potato\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        Event event2 \u003d Event.of(\"Eat a potato\", TIME_IN_FUTURE2);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        assertEquals(event1.equals(event2), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_diffTaskObj_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        Event event1 \u003d Event.of(\"Eat a banana\", TIME_IN_FUTURE1);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo1 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        assertEquals(event1.equals(toDo1), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":38}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"    private static final String TIME_IN_FUTURE \u003d \"12-12-2025 2359\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameObj_returnTrue() {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo1 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo2 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        assertEquals(toDo1.equals(toDo2), true);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_sameTypeDiffDesc_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo1 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo2 \u003d ToDo.of(\"Eat a banana\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        assertEquals(toDo1.equals(toDo2), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    public void equalsMtd_diffTaskObj_returnFalse() {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        ToDo toDo1 \u003d ToDo.of(\"Eat a potato\");","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        Event event1 \u003d Event.of(\"Eat a banana\", TIME_IN_FUTURE);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        assertEquals(toDo1.equals(event1), false);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":29}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package duke.util;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"//    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"//    public void parseCommand_incorrectInput_DukeExceptionThrown() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"//        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"//        TaskList taskList \u003d new TaskList()","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"//        String[] incorrectInputs \u003d new String[]{","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"//                \"hi\",","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"//                \"help\",","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"//                \"task\",","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"//                \"todoo\",","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"//                \"del\",","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"//                \"asdfgh\"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"//        };","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"//        for (String input : incorrectInputs) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"//            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":32}},{"path":"text-ui-test/data/duke-storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"E | 1 | zoomMeeting | tonight","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"T | 0 | readme","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"E | 0 | zoomMeeting | tonight","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"T | 0 | readme","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"E | 0 | zoomMeeting | tonight","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"T | 0 | readme","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"E | 0 | zoomMeeting | tonight","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"samyipsh":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"nonsene text","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"todo","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"todo readme","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"deadline projSubmission /by yesterday","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"event zoomMeeting \\at tonight","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"event zoomMeeting /at tonight","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"done 2","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"delete 1","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"bye","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"samyipsh":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"samyipsh":1,"-":20}}]
