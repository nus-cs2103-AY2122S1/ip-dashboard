[{"path":"src/main/java/BobbyBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"public class BobbyBot {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"    private static final String div \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    private static final String[] acceptedCommands \u003d {\"bye\", \"list\", \"done\", \"deadline\", \"todo\", \"event\"};","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public BobbyBot() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Hello! I\u0027m Bobby\\nWhat can I do for you?\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"     * Perform command based on String user input","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"     * @param userInput string command for chatbot","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"     * @throws InvalidCommandException Command not one of the acceptedCommands","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"     * @throws InvalidArgumentException Invalid or no arguments given","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"     * @throws TooManyArgumentsException Too many /by or /at connectors","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    public void doCommand(String userInput) throws InvalidCommandException,","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"            InvalidArgumentException, TooManyArgumentsException {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e userInputList \u003d new LinkedList\u003c\u003e(Arrays.asList(userInput.split(\" \")));","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        String command \u003d userInputList.get(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        String[] userInputArgs;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        if (!commandIsValid(command)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"            throw new InvalidCommandException(\"Invalid Command!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        switch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"            sayBye();","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        case \"list\":","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"            printList();","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        case \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"            markAsDone(Integer.parseInt(userInputList.get(1)));","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"            userInputList.remove(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"            if (userInputList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"                throw new InvalidArgumentException(\"No arguments submitted for todo\");","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"            description \u003d String.join(\" \", userInputList);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"            createToDo(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"            userInputList.remove(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"            if (userInputList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"                throw new InvalidArgumentException(\"No arguments submitted for deadline\");","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"            //split description and by","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"            userInputArgs \u003d String.join(\" \", userInputList).split(\"/by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"            if (userInputArgs.length \u003e 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"                throw new TooManyArgumentsException(\"Too many arguments given for deadline\");","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"            } else if (userInputArgs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"                throw new InvalidArgumentException(\"Could not find connector /by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"            description \u003d userInputArgs[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"            String by \u003d userInputArgs[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"            createDeadline(description, by);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        case \"event\":","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"            userInputList.remove(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"            if (userInputList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"                throw new InvalidArgumentException(\"No arguments submitted for event\");","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"            //split description and at","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"            userInputArgs \u003d String.join(\" \", userInputList).split(\"/at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"            if (userInputArgs.length \u003e 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"                throw new TooManyArgumentsException(\"Too many arguments given\");","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"            } else if (userInputArgs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"                throw new InvalidArgumentException(\"Could not find connector /at\");","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"            description \u003d userInputArgs[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"            String at \u003d userInputArgs[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"            createEvent(description, at);","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"     * Checks if command is valid","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"     * @param command command for chatbot eg. (list,delete,todo..)","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"     * @return boolean if command is valid","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"    private boolean commandIsValid(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"        //check valid command","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"        boolean commandIsValid \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"        for (String acceptedCommand : acceptedCommands) {","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"            if (acceptedCommand.equals(command)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"                commandIsValid \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"mokdarren"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"        return commandIsValid;","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"     * Say Bye and close program","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"    private void sayBye() {","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Bye. Hope to see you again soon!\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"        System.exit(1);","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"     * Print current to do list","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"    private void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"mokdarren"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div);","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"mokdarren"},"content":"     * Mark a task as done","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"mokdarren"},"content":"     * @param taskNo Task Number (starting from index 1)","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"mokdarren"},"content":"    private void markAsDone(int taskNo) {","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"mokdarren"},"content":"        Task taskCompleted \u003d tasks.get(taskNo - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"mokdarren"},"content":"        taskCompleted.markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"mokdarren"},"content":"        System.out.println(\"  \" + taskCompleted + \"\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"mokdarren"},"content":"    private void deleteTask(int taskNo) {","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"mokdarren"},"content":"        tasks.remove(taskNo-1);","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"mokdarren"},"content":"     * Creates a todo task","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"mokdarren"},"content":"    private void createToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"mokdarren"},"content":"        tasks.add(new ToDo(description));","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"mokdarren"},"content":"        totalTasks++;","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Got it. I\u0027ve added this task:\\n  \" + tasks.get(totalTasks - 1) + \"\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"mokdarren"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"mokdarren"},"content":"     * Creates an event task","lastModifiedDate":"2021-08-16"},{"lineNumber":150,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":151,"author":{"gitId":"mokdarren"},"content":"     * @param at time period of Event (start-end)","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"mokdarren"},"content":"    private void createEvent(String description, String at) {","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"mokdarren"},"content":"        tasks.add(new Event(description, at));","lastModifiedDate":"2021-08-16"},{"lineNumber":155,"author":{"gitId":"mokdarren"},"content":"        totalTasks++;","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Got it. I\u0027ve added this task:\\n  \" + tasks.get(totalTasks - 1) + \"\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"mokdarren"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":160,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":161,"author":{"gitId":"mokdarren"},"content":"     * Creates a deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":162,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":163,"author":{"gitId":"mokdarren"},"content":"     * @param by date and time that the task should be completed by","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":165,"author":{"gitId":"mokdarren"},"content":"    private void createDeadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":166,"author":{"gitId":"mokdarren"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2021-08-16"},{"lineNumber":167,"author":{"gitId":"mokdarren"},"content":"        totalTasks++;","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"mokdarren"},"content":"        System.out.println(div + \"Got it. I\u0027ve added this task:\\n  \" + tasks.get(totalTasks - 1) + \"\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":169,"author":{"gitId":"mokdarren"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":170,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":171}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"/** Represents a Task that should be completed by a specified Date and Time","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":" *  @author mokdarren","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"     * @param by date and time that the task should be completed by","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public Deadline(String description, String by)  {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":21}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"/** Represents a Task that should be completed at a specified time period","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":" *  @author mokdarren","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"     * @param at time period of Event (start-end)","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public Event(String description, String at)  {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":21}},{"path":"src/main/java/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"public class InvalidArgumentException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":5}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":5}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"public class Main {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"     * Our main method. Starts up the chatbot and waits for user inputs","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"     * @param args Command Line Arguments","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"    private static final String div \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"        BobbyBot chatbot \u003d new BobbyBot();","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"                chatbot.doCommand(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"                System.out.println(div + \"OOPS!!! I\u0027m sorry but I don\u0027t know what that mean :-(\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"            } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"                System.out.println(div + \"You did not specify the correct details for this task\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            } catch (TooManyArgumentsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"                System.out.println(div + \"You gave me too many details for this task!\\n\" + div);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"/** Represents a task that can be completed","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":" * @author mokdarren","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"     * Getter for isDone status","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"     * @return \"X\" or \" \"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"     * Marks task as done","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        return \"[\" + getStatus() + \"] \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"mokdarren":36}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"/** Represents a task without any time restrictions","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":" *  @auther mokdarren","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"     * @param description description of task","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":18}},{"path":"src/main/java/TooManyArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"public class TooManyArgumentsException extends DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"    public TooManyArgumentsException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"event project meeting /at Aug 6th 2-4pm)","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"mokdarren":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"mokdarren":1}}]
