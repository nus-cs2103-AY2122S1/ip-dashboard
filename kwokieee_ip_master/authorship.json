[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"javafx {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokieee":7,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" * The Duke class encapsulates the resources and interfaces","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":" * needed for the Duke program to run.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    /** Storage used by the Duke program. */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    /** The user\u0027s task list in Duke. */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    /** The user interface of Duke. */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"     * Constructs the Duke program, initializing all","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * the necessary resources for the program to run.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"            this.tasks \u003d new TaskList(Parser.parseSaveFile(this.storage.getSavedContents()));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to be displayed by the GUI based on the input string entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"     * @param input The input string entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"     * @return The string to be displayed by Duke\u0027s GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            return Parser.parseUserInput(input).execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"            return this.ui.formatErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     * Returns the string to be displayed on initializing Duke\u0027s GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"     * @return The string to be displayed on initializing Duke\u0027s GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    public String getStartMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"        return this.ui.getStartMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kwokieee":56,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" * The launcher class launches the application.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":24}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.constant.TaskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":" * The AddCommand class encapsulates the data and instructions","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":" * needed to add a task to the user\u0027s task list on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    /** The type of task to be added. */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    private TaskType taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    /** The description of the task to be added. */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    /** The date associated with the task to be added. */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    private String date;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * Constructs an add command with information on the task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * @param date The date associated with the task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    public AddCommand(TaskType taskType, String taskDescription, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"     * Executes the instructions for adding a task to the user\u0027s task list on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"     * @param taskList Task list of the user loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing Duke\u0027s UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing Duke\u0027s data and storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        Task newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"        switch (this.taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new Deadline(this.taskDescription, this.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new Event(this.taskDescription, this.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new ToDo(this.taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"        storage.appendToSave(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"        return ui.formatAddedTask(newTask, taskList.getNumberOfTasks());","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this add command.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are add commands and share the same task type, description and date, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof AddCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"            AddCommand otherCommand \u003d (AddCommand) other;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"            return this.taskType \u003d\u003d otherCommand.taskType","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"                    \u0026\u0026 this.taskDescription.equals(otherCommand.taskDescription)","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"                    \u0026\u0026 this.date.equals(otherCommand.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":86}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" * A Command represents a set of instructions to be executed by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"     * Executes a set of instructions in Duke, then returns the string to be displayed","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     * to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @param taskList Task list of the user loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing Duke\u0027s UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing Duke\u0027s data and storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":21}},{"path":"src/main/java/duke/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.constant.EditType;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":" * The EditCommand class encapsulates the data and instructions","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":" * needed to edit a task in the user\u0027s task list on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"    /** The edit type to be performed. */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    private EditType editType;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    /** The index of the task of the task in the task list to be edited. */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"     * Constructs an edit command with information on the task to be edited","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"     * and the edit to be performed.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * @param editType The type of edit to be performed on the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     * @param taskIndex The index of the task to be edited in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    public EditCommand(EditType editType, int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        this.editType \u003d editType;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"     * Executes the instructions for editing a task on the user\u0027s task list on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     * @param taskList Task list of the user loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing Duke\u0027s UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing Duke\u0027s data and storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"            Task editedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            switch (this.editType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"                editedTask \u003d taskList.markAsDone(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"            case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"                editedTask \u003d taskList.delete(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"            storage.overwriteSave(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"            return ui.formatEditedTask(editedTask, taskList.getNumberOfTasks(), this.editType);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this edit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are edit commands and share the same edit type and task index, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof EditCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"            EditCommand otherCommand \u003d (EditCommand) other;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"            return this.editType \u003d\u003d otherCommand.editType \u0026\u0026 this.taskIndex \u003d\u003d otherCommand.taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":77}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" * The ExitCommand class encapsulates the instructions needed to exit Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"     * Executes the instructions for exiting Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     * @param taskList Task list of the user loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing Duke\u0027s UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing Duke\u0027s data and storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"        return ui.getGoodbyeMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this exit command.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are exit commands, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"        return other instanceof ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" * The FindCommand class encapsulates all data and instructions","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":" * needed to find all tasks that contain a keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    /** The keyword to be matched in the find operation. */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    private String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * Constructs a find command object with the necessary information to execute a find operation.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * @param keyword The keyword to be matched.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * Executes the instructions for a find operation.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * @param taskList The task list currently loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing the UI of Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing the storage of the Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        TaskList results \u003d taskList.getMatchingTasks(this.keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        return ui.formatMatchingTasks(results);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"kwokieee":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" * The ListCommand class encapsulates the instructions needed","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":" * for listing out the user\u0027s current task list Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     * Executes the instructions for listing the current task list on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @param taskList Task list of the user loaded on Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * @param ui The object representing Duke\u0027s UI.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * @param storage The object representing Duke\u0027s data and storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * @return A string to be displayed to the user on the user interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        return ui.formatTaskList(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this list command.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are list commands, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":35}},{"path":"src/main/java/duke/constant/EditType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.constant;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":" * The EditType enum represents the various types of edits that","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":" * can be performed on a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"public enum EditType {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    DONE,","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    DELETE","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":10}},{"path":"src/main/java/duke/constant/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.constant;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":" * The TaskType enum represents the various types of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":" * that can be stored in Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    EVENT","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":11}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.controller;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":" * The DialogBox class is a controller class that represents a dialog box consisting of","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":" * an image of the speaker\u0027s avatar and a label containing text from the speaker,","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":" * similar to most chat-bot user interfaces.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    /** Label containing text from the speaker. */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    /** ImageView containing the speaker\u0027s avatar. */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DialogBox.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"     * Returns a dialog box for text entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"     * @param text The text entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"     * @param img The user\u0027s avatar.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"     * @return A dialog box of text entered by the user to be displayed on the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     * Returns a dialog box for text from Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"     * @param text The text from Duke to be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"     * @param img Duke\u0027s avatar.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"     * @return A dialog box of text from Duke to be displayed on the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":78}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.controller;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":" * The MainWindow class is a controller class that provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * Initializes the controller.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"            scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(e.toString(), dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        } finally {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getStartMessage(), dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply,","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":62}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":" * The DukeException class encapsulates exceptions that","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":" * are thrown while Duke is operating.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"     * Constructs a Duke exception with a specified message.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"     * @param message The message containing information on the exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * Returns a string representation of the Duke exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"     * @return String representing the Duke exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        return \"Error detected by Duke:\\n\" + getMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":26}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import duke.command.EditCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"import duke.constant.EditType;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"import duke.constant.TaskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":" * The Parser class encapsulates parsing operations that involve reading in data and","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":" * transforming it into a useful format to be utilised by other classes.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     * Parses a list of strings representing the contents of a save file and","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * transforms it into a list of task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * @param saveFileContents A list of strings, each representing a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @return A list of task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If strings passed to the parser are not in the expected format.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    public static List\u003cTask\u003e parseSaveFile(List\u003cString\u003e saveFileContents) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        return saveFileContents.stream().map(task -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"                String[] taskInfo \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"                String taskType \u003d taskInfo[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"                boolean isDone \u003d taskInfo[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"                String taskDescription \u003d taskInfo[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"                case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"                    return new ToDo(taskDescription, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"                case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"                    return new Deadline(taskDescription, isDone, taskInfo[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"                case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"                    return new Event(taskDescription, isDone, taskInfo[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"                default:","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Your save file is corrupted and has an invalid format.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Your save file is corrupted and has an invalid format.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"        }).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"     * Parses a string representing the user\u0027s input and creates a","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"     * command object with relevant data extracted from the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"     * @param userInput The user\u0027s input.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"     * @return A command object with relevant data.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If the string passed to the parser does not contain information in the","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"     * correct format for a command object to be created.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"    public static Command parseUserInput(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"        switch (userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"        String[] commandAndArgument \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"        String userCommand \u003d commandAndArgument[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"        if (userCommand.equals(\"todo\") || userCommand.equals(\"deadline\") || userCommand.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"            if (commandAndArgument.length \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"The description of a task cannot be empty.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"                        + \"Please input your task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"                        + \"todo|deadline|event \u003ctask_description\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"            if (commandAndArgument[1].indexOf(\u0027|\u0027) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"The description of a task cannot contain this character: |\");","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"            String[] descriptionAndDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"                if (commandAndArgument[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Task description cannot be empty for a todo task.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your todo task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"                            + \"todo \u003ctask_description\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.TODO, commandAndArgument[1], \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"                descriptionAndDate \u003d commandAndArgument[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"                if (descriptionAndDate.length \u003c 2 || descriptionAndDate[0].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Invalid format for a deadline task.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your deadline task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"                            + \"deadline \u003ctask_description\u003e /by \u003ctask_deadline\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.DEADLINE, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"kwokieee"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"kwokieee"},"content":"                descriptionAndDate \u003d commandAndArgument[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"kwokieee"},"content":"                if (descriptionAndDate.length \u003c 2 || descriptionAndDate[0].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Invalid format for an event.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your event in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"kwokieee"},"content":"                            + \"event \u003cevent_description\u003e /at \u003cevent_date\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.EVENT, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"kwokieee"},"content":"        } else if (userCommand.equals(\"done\") || userCommand.equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"kwokieee"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"kwokieee"},"content":"                int taskIndex \u003d Integer.parseInt(commandAndArgument[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"kwokieee"},"content":"                switch (userCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"kwokieee"},"content":"                case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"kwokieee"},"content":"                    return new EditCommand(EditType.DONE, taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"kwokieee"},"content":"                default:","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"kwokieee"},"content":"                    return new EditCommand(EditType.DELETE, taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"kwokieee"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"kwokieee"},"content":"        } else if (userCommand.equals(\"find\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"kwokieee"},"content":"            if (commandAndArgument.length \u003c 2 || commandAndArgument[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Please enter a keyword to search for in the following manner:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"kwokieee"},"content":"                        + \"find \u003ckeyword\u003e\");","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"kwokieee"},"content":"            return new FindCommand(commandAndArgument[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Invalid command. List of valid commands include:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"kwokieee"},"content":"                    + \"list|todo|deadline|event|done|delete|find|bye\");","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":135}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":" * The Storage class encapsulates Duke\u0027s data and operations involving this data.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    /** The path of the data directory. */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    private static final Path DATA_DIRECTORY_PATH \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    /** The path of the save file containing the user\u0027s tasks. */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    private static final Path SAVE_FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    /** The save file containing the user\u0027s tasks. */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    private File saveFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * Constructs a storage object that initializes a data directory and save file","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * if not already present, and loads the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If there is an error initializing the data directory or save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"            if (!Files.exists(DATA_DIRECTORY_PATH)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"                Files.createDirectory(DATA_DIRECTORY_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            if (!Files.exists(SAVE_FILE_PATH)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"                Files.createFile(SAVE_FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"            this.saveFile \u003d SAVE_FILE_PATH.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error creating a save file for Duke.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"     * Gets all of the saved files contents and returns them a list of strings,","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"     * with each string representing each line in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     * @return A list of strings, where each string is a line in the save file,","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"     * and each line is separated by a new line character.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If there is an error accessing the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    public List\u003cString\u003e getSavedContents() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"            return Files.readAllLines(SAVE_FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error retrieving your save file for Duke.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"     * Appends a new task to the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     * @param task The task object to be added to the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If there is an error accessing the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"    public void appendToSave(Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"            fw.write(task.getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error accessing your save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"     * Overwrites the save file with a new task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"     * @param taskList The task list whose contents are to be written to the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If there is an error accessing the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"    public void overwriteSave(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"            fw.write(taskList.getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error accessing your save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":95}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" * The Deadline class encapsulates a task that has a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * Constructs a deadline object that is not completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If the deadline of the task is not in YYYY-MM-DD format.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Deadlines should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     * Constructs a deadline object with a specifiable completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If the deadline of the task is not in YYYY-MM-DD format.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Deadlines should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"     * Returns the format in which the task is stored in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing how the task is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"        return \"D|\" + super.getSaveFormat() + \"|\" + this.by + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are deadline tasks and share the same date, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"            Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"            return super.equals(otherDeadline) \u0026\u0026 this.by.equals(otherDeadline.by);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":85}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" * The Event class encapsulates a task that occurs at a specific date.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    /** The date that the event occurs at. */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * Constructs an event object that is not completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"     * @param at The date that the event occurs at.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If the deadline of the task is not in YYYY-MM-DD format.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Event dates should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     * Constructs an event object with a specifiable completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"     * @param at The date that the event occurs at.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     * @throws DukeException If the deadline of the task is not in YYYY-MM-DD format.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Event dates should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"     * Returns the format in which the event is stored in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing how the event is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"        return \"E|\" + super.getSaveFormat() + \"|\" + this.at + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are events and share the same date, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"            Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"            return super.equals(otherEvent) \u0026\u0026 this.at.equals(otherEvent.at);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":85}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" * The Task class encapsulates a task for the user to complete.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":" * It contains information about the task\u0027s description and its completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    /** The description of the task. */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    /** A boolean indicating whether the task has been completed. */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * Constructs a task object that is not completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * Constructs a task object with a specifiable completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     * Gets the icon representing the completion status of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     * Marks the given task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"The task indicated has already been marked as done.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     * Returns the format in which the task is stored in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing how the task is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"        return (isDone ? \"1\" : \"0\") + \"|\" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are tasks and share the same description and completion status, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"            Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"            return this.description.equals(otherTask.description) \u0026\u0026 this.isDone \u003d\u003d otherTask.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"     * Checks if the task description contains a specified keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"     * @param keyword The keyword being searched.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"     * @return true if the task description contains the specified keyword, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kwokieee":100}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":" * The TaskList class encapsulates a list of tasks that the user has stored in Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    /** The list of task objects on Duke. */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    /** The number of tasks that the user currently has on their task list. */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    private int numberOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * Constructs a task list object with no tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * Constructs a task list object with a specified list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * @param taskList The list of tasks in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     * Returns the current number of tasks in the task list object.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"     * @return The current number of tasks in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"        return this.numberOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"     * Returns a task object at a specified index in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"     * @param taskIndex The index of the task to be retrieved.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     * @return The task object located at the index specified.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     * Deletes a task at a specified index in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     * @return The task object representing the task deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"    public Task delete(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"        Task deletedTask \u003d this.taskList.remove(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks--;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"     * Completes a task at a specified index in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"     * @param taskIndex The index of the task to be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"     * @return The task object representing the task completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"    public Task markAsDone(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"        this.taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"        return getTask(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"     * Returns the format in which the task list is stored in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing how the task list is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"            sb.append(this.taskList.get(i).getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"kwokieee"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"kwokieee"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"kwokieee"},"content":"            sb.append(String.format(\"%d.%s\\n\", i + 1, this.taskList.get(i).toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"kwokieee"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"kwokieee"},"content":"     * Retrieves all matching tasks in the task list that match a specified keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"kwokieee"},"content":"     * @param keyword The keyword being searched.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"kwokieee"},"content":"     * @return A task list object containing all of the tasks that match the keyword specified.","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"kwokieee"},"content":"    public TaskList getMatchingTasks(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"kwokieee"},"content":"        TaskList results \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"kwokieee"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"kwokieee"},"content":"            Task currentTask \u003d this.taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"kwokieee"},"content":"            if (currentTask.containsKeyword(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"kwokieee"},"content":"                results.add(currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"kwokieee"},"content":"        return results;","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":129}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":" * The ToDo class encapsulates a task to be done by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"     * Constructs a todo object that is not completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * Constructs a todo object with a specifiable completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"     * Returns the format in which the task is stored in the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing how the task is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        return \"T|\" + super.getSaveFormat() + \u0027\\n\u0027;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     * Checks whether another object is equal with this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"     * @param other The object being compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"     * @return true if both are tasks and share the same description and completion status, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"        if (other instanceof ToDo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"            return super.equals(other);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":60}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import duke.constant.EditType;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":" * The Ui class encapsulates the interface that the user interacts with and what the user sees.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to be displayed when the user starts Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing Duke\u0027s welcome message.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    public String getStartMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"        return \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to be displayed when the user exits Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing Duke\u0027s exit message.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to display a task list\u0027s contents to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing the task list\u0027s contents, formatted to be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public String formatTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        if (taskList.getNumberOfTasks() \u003c 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            return \"You currently have no tasks in your list\";","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"            return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"                    + taskList.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to display all tasks matching the user\u0027s keyword search, if any.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"     * @param taskList The task list containing the tasks that match the keyword searched.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing the matching tasks, formatted to be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"     * If there are no matching tasks, a standard message will be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"    public String formatMatchingTasks(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"        if (taskList.getNumberOfTasks() \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"            return \"No matching tasks were found in your list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"            return \"Here are the matching tasks I found in your list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"                    + taskList.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to display a task that has been edited to the user. If the task was deleted,","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"     * the number of remaining tasks on the task list is displayed as well.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"     * @param editedTask The task that has been edited.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"     * @param numberOfTasks The number of tasks in the user\u0027s task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"     * @param editType The edit done to the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing the edited task, formatted to be displayed to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"     * If the task was deleted, the number of remaining tasks on the task list is displayed as well.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"    public String formatEditedTask(Task editedTask, int numberOfTasks, EditType editType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"        switch (editType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"        case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"                    + editedTask.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"        case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"            return \"Got it! I\u0027ve removed this task from the list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"                    + editedTask.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"                    + \"Now you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"                    + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Error in updating edited task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to display a newly added task to the user,","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"     * along with the number of tasks in the user\u0027s task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"     * @param newTask The recently added task.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"     * @param numberOfTasks The number of tasks in the user\u0027s task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing the new task and the current number of tasks in the user\u0027s task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"    public String formatAddedTask(Task newTask, int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"                + newTask + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"                + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"kwokieee"},"content":"     * Returns a string to display an error message to the user if Duke encounters one.","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"kwokieee"},"content":"     * @param e The Duke exception encountered.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"kwokieee"},"content":"     * @return A string containing the error encountered.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"kwokieee"},"content":"    public String formatErrorMessage(DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"kwokieee"},"content":"        return e.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":111}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" spacing\u003d\"10.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"            \u003cclip\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"                \u003cCircle centerX\u003d\"50.0\" centerY\u003d\"50.0\" radius\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kwokieee":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"import duke.command.EditCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"import duke.constant.EditType;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"import duke.constant.TaskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    public void parseSaveFileTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"        assertEquals(List.\u003cTask\u003eof(","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"                new Deadline(\"Math assignment\", true, \"2021-08-21\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"                new Event(\"Team meeting\", \"2021-09-01\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"                new ToDo(\"Read book\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"                Parser.parseSaveFile(List.of(","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"                        \"D|1|Math assignment|2021-08-21\",","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"                        \"E|0|Team meeting|2021-09-01\",","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"                        \"T|0|Read book\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public void parseSaveFileErrorTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            Parser.parseSaveFile(List.of(\"badly formatted task\")));","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"Your save file is corrupted and has an invalid format.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_list() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new ListCommand(), Parser.parseUserInput(\"list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_bye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new ExitCommand(), Parser.parseUserInput(\"bye\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_todo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new AddCommand(TaskType.TODO, \"Read book\", \"\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"                Parser.parseUserInput(\"todo Read book\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_deadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new AddCommand(TaskType.DEADLINE, \"Math assignment\", \"2021-08-21\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"                Parser.parseUserInput(\"deadline Math assignment /by 2021-08-21\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_event() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new AddCommand(TaskType.EVENT, \"Team meeting\", \"2021-09-01\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"                Parser.parseUserInput(\"event Team meeting /at 2021-09-01\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_done() {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new EditCommand(EditType.DONE, 3), Parser.parseUserInput(\"done 4\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_delete() {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"        assertEquals(new EditCommand(EditType.DELETE, 4), Parser.parseUserInput(\"delete 5\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_unknownCommand_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"blah\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"Invalid command. List of valid commands include:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"                + \"list|todo|deadline|event|done|delete|find|bye\";","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_illegalUseOfDelimiter_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"todo some|description\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"The description of a task cannot contain this character: |\";","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_emptyTaskDescription_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"todo\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"The description of a task cannot be empty.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"kwokieee"},"content":"                + \"Please input your task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"kwokieee"},"content":"                + \"todo|deadline|event \u003ctask_description\u003e\";","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_invalidDeadline_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"deadline no date provided\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"Invalid format for a deadline task.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"kwokieee"},"content":"                + \"Please input your deadline task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"kwokieee"},"content":"                + \"deadline \u003ctask_description\u003e /by \u003ctask_deadline\u003e\";","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_invalidEvent_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"event no date provided\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"Invalid format for an event.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"kwokieee"},"content":"                + \"Please input your event in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"kwokieee"},"content":"                + \"event \u003cevent_description\u003e /at \u003cevent_date\u003e\";","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"kwokieee"},"content":"    public void parseUserInput_taskNumber_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"kwokieee"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"kwokieee"},"content":"            Parser.parseUserInput(\"done f\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"kwokieee"},"content":"        String expectedMessage \u003d \"Please enter a valid task number.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"kwokieee"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"kwokieee"},"content":"        assertTrue(actualMessage.contains(expectedMessage));","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":143}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"import duke.constant.EditType;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    public void formatTaskListTest() {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        TaskList taskList \u003d new TaskList(List.of(","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"                new ToDo(\"Read book\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"                new Deadline(\"Math assignment\", true, \"2021-08-21\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"                new Event(\"Team meeting\", \"2021-09-02\")","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        assertEquals(\"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"                + \"1.[T][ ] Read book\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"                + \"2.[D][X] Math assignment (by: 21 August 2021)\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"                + \"3.[E][ ] Team meeting (at: 2 September 2021)\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"                ui.formatTaskList(taskList));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    public void formatTaskListTest_emptyTaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        TaskList taskList \u003d new TaskList(List.of());","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        assertEquals(\"You currently have no tasks in your list\",","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"                ui.formatTaskList(taskList));","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"    public void formatEditedTask_taskDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"                + \"[D][X] Final submission (by: 13 December 2021)\",","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"                ui.formatEditedTask(new Deadline(\"Final submission\", true, \"2021-12-13\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"                        5, EditType.DONE));","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    public void formatEditedTask_taskDeleted() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"        assertEquals(\"Got it! I\u0027ve removed this task from the list:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"                + \"[D][X] Final submission (by: 13 December 2021)\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                + \"Now you have 5 tasks in the list.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"                ui.formatEditedTask(new Deadline(\"Final submission\", true, \"2021-12-13\"),","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"                        5, EditType.DELETE));","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"    public void updateUserOnAddedTaskTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"                + \"[D][ ] Final submission (by: 13 December 2021)\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"                + \"Now you have 5 tasks in the list.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"                ui.formatAddedTask(new Deadline(\"Final submission\", \"2021-12-13\"), 5));","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"todo t1","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"deadline d1 /by 2021-09-01","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"event e1 /at 2021-08-28","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"todo t2","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"blah","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"todo","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"todo invalid|task description","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"deadline nodate","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"event nodate","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"deadline d2 /by invalid date","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"event e2 /at invalid date","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"delete 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"done -1","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":18}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kwokieee":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"REM delete data directory and save file from previous run","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"if exist data rd /s /q data","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"REM run the program again to test load save functionality","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokieee":7,"-":20}}]
