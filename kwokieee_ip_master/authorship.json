[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    private TaskType taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"    private String date;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    public AddCommand(TaskType taskType, String taskDescription, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"        Task newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"        switch (this.taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new Deadline(this.taskDescription, this.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new Event(this.taskDescription, this.date);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"            newTask \u003d new ToDo(this.taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        storage.appendToSave(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"        ui.updateUserOnAddedTask(newTask, taskList.getNumberOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":37}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" * The Deadline class encapsulates a task that has a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Deadlines should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Deadlines should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the Deadline task.","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        return \"D|\" + super.getSaveFormat() + \"|\" + this.by + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"            this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"            this.tasks \u003d new TaskList(Parser.parseSaveFile(this.storage.getSavedContents()));","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"            this.ui.printErrorMessage(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        this.ui.printStartMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"                String userInput \u003d this.ui.readUserInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"                Command command \u003d Parser.parseUserInput(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"                command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"                this.ui.printErrorMessage(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kwokieee":31,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"        return \"Error detected by Duke:\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"                + getMessage();","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":11}},{"path":"src/main/java/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    private EditType editType;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    public EditCommand(EditType editType, int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"        this.editType \u003d editType;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"            Task editedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"            switch (this.editType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"                editedTask \u003d taskList.markAsDone(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"            case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"                editedTask \u003d taskList.delete(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Unknown command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"            storage.overwriteSave(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"            ui.updateUserOnEditedTask(editedTask, taskList.getNumberOfTasks(), this.editType);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":35}},{"path":"src/main/java/EditType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public enum EditType {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    DONE,","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    DELETE","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":" * The Event class encapsulates a task that occurs at a specific date/time.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    /** The date/time that the event occurs at. */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     * @param at The date/time that the event occurs at.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Event dates should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"     * @param at The date/time that the event occurs at.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Event dates should be in the form YYYY-MM-DD.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                + this.at.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        return \"E|\" + super.getSaveFormat() + \"|\" + this.at + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":58}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"        ui.stop();","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":11}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":11}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    public static List\u003cTask\u003e parseSaveFile(List\u003cString\u003e saveFileContents) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"        return saveFileContents.stream().map(task -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"            String[] taskInfo \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"            String taskType \u003d taskInfo[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"            boolean isDone \u003d taskInfo[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"            String taskDescription \u003d taskInfo[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"            case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"                return new ToDo(taskDescription, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"            case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"                return new Deadline(taskDescription, isDone, taskInfo[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"            case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"                return new Event(taskDescription, isDone, taskInfo[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Your save file is corrupted and has an invalid format.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"        }).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    public static Command parseUserInput(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        switch (userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        String[] commandAndArgument \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        String userCommand \u003d commandAndArgument[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        if (userCommand.equals(\"todo\") || userCommand.equals(\"deadline\") || userCommand.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"            if (commandAndArgument.length \u003c 2 || commandAndArgument[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"The description of a task cannot be empty.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"                        + \"Please input your task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"                        + \"todo|deadline|event \u003ctask_description\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"            if (commandAndArgument[1].indexOf(\u0027|\u0027) \u003e\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"The description of a task cannot contain this character: |\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            String[] descriptionAndDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"                if (commandAndArgument[1].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Task description cannot be empty for a todo task.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your todo task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"                            + \"todo \u003ctask_description\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.TODO, commandAndArgument[1], \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"                descriptionAndDate \u003d commandAndArgument[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"                if (descriptionAndDate.length \u003c 2 || descriptionAndDate[0].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Invalid format for a deadline task.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your deadline task in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"                            + \"deadline \u003ctask_description\u003e /by \u003ctask_deadline\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.DEADLINE, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"                descriptionAndDate \u003d commandAndArgument[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"                if (descriptionAndDate.length \u003c 2 || descriptionAndDate[0].strip().equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"                    throw new DukeException(\"Invalid format for an event.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"                            + \"Please input your event in the following manner:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"                            + \"event \u003cevent_description\u003e /at \u003cevent_date\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"                return new AddCommand(TaskType.EVENT, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"        } else if (userCommand.equals(\"done\") || userCommand.equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"                int taskIndex \u003d Integer.parseInt(commandAndArgument[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"                switch (userCommand) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"                case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"                    return new EditCommand(EditType.DONE, taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"                default:","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"                    return new EditCommand(EditType.DELETE, taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"                throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Invalid command. List of valid commands include:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"                    + \"list|todo|deadline|event|done|delete|bye\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":88}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    private static final Path DATA_DIRECTORY_PATH \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    private static final Path SAVE_FILE_PATH \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    private File saveFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"            if (!Files.exists(DATA_DIRECTORY_PATH)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"                Files.createDirectory(DATA_DIRECTORY_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"            if (!Files.exists(SAVE_FILE_PATH)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"                Files.createFile(SAVE_FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"            this.saveFile \u003d SAVE_FILE_PATH.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error creating a save file for Duke.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    public List\u003cString\u003e getSavedContents() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"            return Files.readAllLines(SAVE_FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error retrieving your save file for Duke.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public void appendToSave(Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"            fw.write(task.getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error accessing your save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"    public void overwriteSave(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"            FileWriter fw \u003d new FileWriter(this.saveFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"            fw.write(taskList.getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"There was an error accessing your save file.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":56}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":" * The Task class encapsulates a task for the user to complete.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    /** The description of the task. */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    /** A boolean indicating whether the task has been completed. */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"     * Marks the given task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"The task indicated has already been marked as done.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"        return (isDone ? \"1\" : \"0\") + \"|\" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"kwokieee":64}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"    private int numberOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"        return this.numberOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks++;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"    public Task delete(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"        Task deletedTask \u003d this.taskList.remove(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"        this.numberOfTasks--;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public Task markAsDone(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        this.taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"        return getTask(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"            sb.append(this.taskList.get(i).getSaveFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"        for (int i \u003d 0; i \u003c this.numberOfTasks; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"            sb.append(String.format(\"%d.%s\\n\", i + 1, this.taskList.get(i).toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":58}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"    TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"    EVENT","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":5}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":" * The ToDo class encapsulates a task to be done by the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * @param isDone A boolean indicating whether the task has been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"     * @return A string representing the ToDo task.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"        return \"T|\" + super.getSaveFormat() + \u0027\\n\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":38}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":" * The Ui class encapsulates the interface that the user interacts with and what the user sees.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"     * The logo for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"     * A divider to separate messages displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kwokieee"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kwokieee"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kwokieee"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kwokieee"},"content":"    public void printStartMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kwokieee"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kwokieee"},"content":"                + LOGO","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kwokieee"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kwokieee"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kwokieee"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kwokieee"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kwokieee"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kwokieee"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kwokieee"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kwokieee"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kwokieee"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kwokieee"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kwokieee"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kwokieee"},"content":"                + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kwokieee"},"content":"                + taskList.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kwokieee"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kwokieee"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kwokieee"},"content":"    public void updateUserOnEditedTask(Task editedTask, int numberOfTasks, EditType editType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kwokieee"},"content":"        switch (editType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kwokieee"},"content":"        case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kwokieee"},"content":"            System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kwokieee"},"content":"                    + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kwokieee"},"content":"                    + editedTask.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kwokieee"},"content":"                    + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kwokieee"},"content":"            );","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kwokieee"},"content":"        case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kwokieee"},"content":"            System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kwokieee"},"content":"                    + \"Got it! I\u0027ve removed this task from the list:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kwokieee"},"content":"                    + editedTask.toString() + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kwokieee"},"content":"                    + \"Now you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kwokieee"},"content":"                    + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kwokieee"},"content":"                    + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kwokieee"},"content":"            );","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kwokieee"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kwokieee"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kwokieee"},"content":"            throw new DukeException(\"Error in updating edited task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kwokieee"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kwokieee"},"content":"    public void updateUserOnAddedTask(Task newTask, int numberOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kwokieee"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kwokieee"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kwokieee"},"content":"                + newTask + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kwokieee"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kwokieee"},"content":"                + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kwokieee"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kwokieee"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kwokieee"},"content":"    public void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kwokieee"},"content":"        System.out.println(DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kwokieee"},"content":"                + e + \u0027\\n\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kwokieee"},"content":"                + DIVIDER","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kwokieee"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kwokieee"},"content":"    public String readUserInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kwokieee"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kwokieee"},"content":"    public void stop() {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kwokieee"},"content":"        this.sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kwokieee"},"content":"        printGoodbyeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"kwokieee"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"kwokieee"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kwokieee":100}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"todo t1","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"deadline d1 /by 2021-09-01","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kwokieee"},"content":"event e1 /at 2021-08-28","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kwokieee"},"content":"todo t2","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kwokieee"},"content":"blah","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kwokieee"},"content":"todo","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kwokieee"},"content":"todo invalid|task description","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kwokieee"},"content":"deadline nodate","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"event nodate","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"deadline d2 /by invalid date","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"event e2 /at invalid date","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"kwokieee"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"kwokieee"},"content":"delete 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kwokieee"},"content":"done -1","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kwokieee"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"kwokieee"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"kwokieee":18}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kwokieee"},"content":"list","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kwokieee"},"content":"bye","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kwokieee":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"kwokieee"},"content":"REM delete data directory and save file from previous run","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kwokieee"},"content":"if exist data rd /s /q data","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kwokieee"},"content":"REM run the program again to test load save functionality","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kwokieee"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kwokieee"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kwokieee":6,"-":21}}]
