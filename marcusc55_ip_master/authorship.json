[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":" * This class represents a deadline - a task that needs to be","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":" * done before a specific date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"    private String dueDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"marcusc55"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"marcusc55"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"marcusc55"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"marcusc55"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcusc55":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":" * This class represents a Duke instance.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":" * User inputs are added to the task list, and the \"list\" command lists all the user\u0027s tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":" * Users can exit Duke by typing the \"bye\" command.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"    private static final String WELCOME \u003d \"Hello, I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"    private static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"marcusc55"},"content":"     * Prints welcome message, then accepts user input until exit command is entered.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"marcusc55"},"content":"    public void start() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"marcusc55"},"content":"        formatAndPrint(WELCOME);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"marcusc55"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"marcusc55"},"content":"        boolean continueListening \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"marcusc55"},"content":"        while (continueListening) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"marcusc55"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"marcusc55"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"marcusc55"},"content":"                continueListening \u003d listen(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"marcusc55"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"marcusc55"},"content":"                formatAndPrint(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"marcusc55"},"content":"     * Accepts user input and runs the appropriate function.","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"marcusc55"},"content":"     * @param input String containing user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"marcusc55"},"content":"     * @return Boolean that controls whether to continue accepting user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"marcusc55"},"content":"    public boolean listen(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"marcusc55"},"content":"        // Get command","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"marcusc55"},"content":"        String[] splitCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"marcusc55"},"content":"        String command \u003d splitCommand[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"marcusc55"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"marcusc55"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"marcusc55"},"content":"            formatAndPrint(BYE);","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"marcusc55"},"content":"            return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"marcusc55"},"content":"        case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"marcusc55"},"content":"            displayList();","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"marcusc55"},"content":"        case \"done\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"marcusc55"},"content":"            // Error handling: number not provided.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"marcusc55"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Please provide a number to mark as done.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"marcusc55"},"content":"            // Retrieve value inputted by user and subtract 1 to get the index in the array.","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"marcusc55"},"content":"            int index \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"marcusc55"},"content":"            // Error handling: negative number or number more than list length.","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"marcusc55"},"content":"            if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Invalid number.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"marcusc55"},"content":"            markAsDone(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"marcusc55"},"content":"        case \"delete\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"marcusc55"},"content":"            // Error handling: number not provided.","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"marcusc55"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Please provide a number to delete.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"marcusc55"},"content":"            // Retrieve value inputted by user and subtract 1 to get the index in the array.","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"marcusc55"},"content":"            int index \u003d Integer.parseInt(splitCommand[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"marcusc55"},"content":"            // Error handling: negative number or number more than list length.","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"marcusc55"},"content":"            if (index \u003c 0 || index \u003e\u003d list.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Invalid number.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"marcusc55"},"content":"            delete(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"marcusc55"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"marcusc55"},"content":"            // Error handling: no task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"marcusc55"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"marcusc55"},"content":"            addToList(new Todo(splitCommand[1]));","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"marcusc55"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"marcusc55"},"content":"            // Error handling: no task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"marcusc55"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"marcusc55"},"content":"            // Split deadline message from due date","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"marcusc55"},"content":"            String[] splitMessage \u003d splitCommand[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"marcusc55"},"content":"            // Error handling: no due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"marcusc55"},"content":"            if (splitMessage.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Due date cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"marcusc55"},"content":"            addToList(new Deadline(splitMessage[0], splitMessage[1]));","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"marcusc55"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"marcusc55"},"content":"            // Error handling: no task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"marcusc55"},"content":"            if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Description of a event cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"marcusc55"},"content":"            // Split event message from due date","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"marcusc55"},"content":"            String[] splitMessage \u003d splitCommand[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"marcusc55"},"content":"            // Error handling: no time provided.","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"marcusc55"},"content":"            if (splitMessage.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"marcusc55"},"content":"                throw new DukeException(\"Time cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"marcusc55"},"content":"            addToList(new Event(splitMessage[0], splitMessage[1]));","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"marcusc55"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"marcusc55"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"marcusc55"},"content":"            throw new DukeException(\"Sorry, I don\u0027t understand this command.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"marcusc55"},"content":"        return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"marcusc55"},"content":"     * Adds task to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"marcusc55"},"content":"     * @param task Task that the user inputs.","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"marcusc55"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"marcusc55"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"marcusc55"},"content":"        formatAndPrint(String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d %s in your list.\",","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"marcusc55"},"content":"                task,","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"marcusc55"},"content":"                list.size(),","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"marcusc55"},"content":"                list.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"marcusc55"},"content":"     * Formats the list of tasks for displaying when the user inputs \"list\".","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"marcusc55"},"content":"    public void displayList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"marcusc55"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"marcusc55"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"marcusc55"},"content":"            output.append(String.format(\"%d. %s\", i + 1, this.list.get(i)));","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"marcusc55"},"content":"            // Append new line for all lines except last line.","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"marcusc55"},"content":"            if (i !\u003d this.list.size() - 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"marcusc55"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"marcusc55"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"marcusc55"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"marcusc55"},"content":"        formatAndPrint(output.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"marcusc55"},"content":"     * Marks a given task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"marcusc55"},"content":"     * @param itemNo Index of the task in the ArrayList.","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"marcusc55"},"content":"    public void markAsDone(int itemNo) {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"marcusc55"},"content":"        Task task \u003d list.get(itemNo);","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"marcusc55"},"content":"        task.toggleComplete();","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"marcusc55"},"content":"        formatAndPrint(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"marcusc55"},"content":"     * Deletes a given task","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"marcusc55"},"content":"     * @param itemNo Index of the task in the ArrayList.","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"marcusc55"},"content":"    public void delete(int itemNo) {","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"marcusc55"},"content":"        Task task \u003d list.remove(itemNo);","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"marcusc55"},"content":"        formatAndPrint(String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d %s in your list.\",","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"marcusc55"},"content":"                task,","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"marcusc55"},"content":"                list.size(),","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"marcusc55"},"content":"                list.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"marcusc55"},"content":"     * Helper function to format output between 2 lines.","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"marcusc55"},"content":"     * @param s String to be outputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"marcusc55"},"content":"    private static void formatAndPrint(String s) {","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"marcusc55"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"marcusc55"},"content":"        System.out.printf(\"%s%s\\n%s\", line, s, line);","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":181,"author":{"gitId":"marcusc55"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"marcusc55"},"content":"        duke.start();","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"marcusc55":180,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":" * This class handles exceptions specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcusc55":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":" * This class represents a event - a task that starts at a specific time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":" * and ends at a specific time.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"    private String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"marcusc55"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"marcusc55"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"marcusc55"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.time);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"marcusc55"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcusc55":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":" * This class represents a user\u0027s task.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"    private String taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"    private boolean complete;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":"     * Constructor for a task. When tasks are initialised, they are marked as not complete.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"marcusc55"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"marcusc55"},"content":"        this.complete \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"marcusc55"},"content":"     * Gets the name of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"marcusc55"},"content":"     * @return Name of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"marcusc55"},"content":"    public String getName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"marcusc55"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"marcusc55"},"content":"     * Toggles the completion status of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"marcusc55"},"content":"    public void toggleComplete() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"marcusc55"},"content":"        this.complete \u003d !this.complete;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"marcusc55"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"marcusc55"},"content":"     * @return Returns X if task is completed, \" \" otherwise.","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"marcusc55"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"marcusc55"},"content":"        return (complete ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"marcusc55"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"marcusc55"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"marcusc55"},"content":"     * This displays the completion status of the task along with its name.","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"marcusc55"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"marcusc55"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"marcusc55"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"marcusc55"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"marcusc55"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"marcusc55"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), taskName);","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"marcusc55"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"marcusc55":53}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":" * This class represents a to-do - a task without any date/time attached.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"marcusc55"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcusc55":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusc55"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"marcusc55"},"content":"deadline return book /by 9th Jun","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"marcusc55"},"content":"event watch lecture /at 10am-12pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"marcusc55"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"marcusc55"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"marcusc55"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"marcusc55"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"marcusc55"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"marcusc55"},"content":"invalid input","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"marcusc55"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"marcusc55"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"marcusc55"},"content":"event watch lecture","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"marcusc55"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"marcusc55"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"marcusc55"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"marcusc55"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"marcusc55"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"marcusc55":17}}]
