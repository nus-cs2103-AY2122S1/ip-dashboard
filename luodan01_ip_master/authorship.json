[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luodan01":18,"-":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"    private void flip() {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"        db.flip();","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"        return db;","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":" * Encapsulates the Duke chatbot.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    private Storage taskStorage;","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    private Storage archiveStorage;","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    Duke(String taskFilePath, String archiveFilePath) {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"        taskStorage \u003d new Storage(taskFilePath);","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        archiveStorage \u003d new Storage(archiveFilePath);","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"            taskList \u003d new TaskList(taskStorage.loadTasksFromFile(), archiveStorage.loadTasksFromFile());","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"            System.out.println(Ui.format(e.toString()));","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"        //sendButton.setGraphic(new ImageView(getClass().getResource(\"/images/Icon.png\").toExternalForm()));","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"        stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"luodan01"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"luodan01"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"luodan01"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"luodan01"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"luodan01"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"luodan01"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"luodan01"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"luodan01"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"luodan01"},"content":"        });","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"luodan01"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"luodan01"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"luodan01"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"luodan01"},"content":"        });","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"luodan01"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"luodan01"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"luodan01"},"content":"     * Iteration 1:","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"luodan01"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"luodan01"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"luodan01"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"luodan01"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"luodan01"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"luodan01"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"luodan01"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"luodan01"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"luodan01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"luodan01"},"content":"        String response;","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"luodan01"},"content":"            Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"luodan01"},"content":"            if (cmd.isExit()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"luodan01"},"content":"                taskStorage.writeTasksToFile(taskList.getTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"luodan01"},"content":"                archiveStorage.writeTasksToFile(taskList.getArchives());","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"luodan01"},"content":"                response \u003d ui.getGoodbyeMsg();","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"luodan01"},"content":"            response \u003d cmd.execute(taskList, ui);","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"luodan01"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"luodan01"},"content":"            return e.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"luodan01"},"content":"        assert !response.equals(\"\") : \"Response should not be empty.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"luodan01"},"content":"        return response;","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":140}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"    private String msg;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"        msg \u003d message;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"        return msg;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"luodan01":14}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"public class Launcher {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\", \"data/archives.txt\");","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"            stage.getIcons().add(new Image(getClass().getResourceAsStream(\"/images/Icon.png\")));","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"            stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    private ImageView imageView \u003d new ImageView();","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.gif\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"     * Initialises the chat bot.","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"                DialogBox.getDukeDialog(ui.getWelcomeMsg(), dukeImage));","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"    private Image getDukeImage(String dukeResponse) {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"        if (dukeResponse.startsWith(\"OOPS\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"            return new Image(this.getClass().getResourceAsStream(\"/images/DaDukeConfused.gif\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"        } else if (dukeResponse.startsWith(\"Your tasks have been saved\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"            return new Image(this.getClass().getResourceAsStream(\"/images/DaDukeBye.gif\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"            return new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.gif\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"        dukeImage \u003d getDukeImage(response);","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"        if (response.equals(ui.getGoodbyeMsg())) {","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"                @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"                public void run() {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"            }, 2900);","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":88}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.command.ArchiveTaskCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"import duke.command.ListArchiveCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"import duke.command.UnarchiveTaskCommand;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     * Parses the String representation of the user input and returns","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"     * the corresponding Command object.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     * @param fullCommand The String representation of the user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        String[] params \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"        String keyword \u003d params[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        switch (keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        case (\"list\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"        case (\"done\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"                int doneIdx \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"                return new DoneCommand(doneIdx);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter the task you\u0027d like to \"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"                        + \"mark as done in the following format: \\n\\t done [task number]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"            try {","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"                int doneIdx \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"                return new DeleteCommand(Integer.parseInt(params[1]) - 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter the task you\u0027d like to \"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"                        + \"delete in the following format: \\n\\t done [task number]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        case (\"find\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"            if (params.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter the keyword you\u0027d like to \"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"                        + \"search for in the following format \\n\\t find [keyword].\");","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"            return new FindCommand(params[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"        case (\"archive\"):","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"            try {","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"                int doneIdx \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"                return new ArchiveTaskCommand(doneIdx);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter the task you\u0027d like to \"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"                        + \"archive in the following format: \\n\\t archive [task number]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"        case (\"archives\"):","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"            return new ListArchiveCommand();","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"        case (\"unarchive\"):","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"            try {","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"                int doneIdx \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"                return new UnarchiveTaskCommand(doneIdx);","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter the task you\u0027d like to \"","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"                        + \"unarchive in the following format: \\n\\t unarchive [task number]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"        //fallthrough","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"        case (\"event\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"        //fallthrough","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"            return new AddCommand(params);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"        case (\"bye\"):","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":84}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.io.File;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import java.util.List;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":" * Encapsulates the storage class.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    private final File file;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * Constructor for a Storage instance.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     * @param path The path of the file.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"            String dir \u003d file.getParent();","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"            File dirFile \u003d new File(dir);","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        this.filePath \u003d path;","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"    private Task toTask(String fileRecord) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        String[] params \u003d fileRecord.split(\" \\\\| \");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"        String type \u003d params[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        boolean isDone \u003d params[1].equals(\"1\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"        String desc \u003d params[2];","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"        switch (type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"        case (\"T\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"            t \u003d new ToDo(desc, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        case (\"E\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"            t \u003d new Event(desc, isDone, params[3]);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"        case (\"D\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"            t \u003d new Deadline(desc, isDone, params[3]);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        return t;","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"     * Loads user\u0027s saved data from file.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"     * @return A TaskList object representing user\u0027s tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"     * @throws IOException If there is error reading from the file.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"    public List\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"        FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"        String line;","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"        while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"            tasks.add(toTask(line));","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"        fileReader.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"        return tasks;","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"     * Writes new data to file on exit.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"     * @param tasks List of tasks to be saved.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"    public void writeTasksToFile(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"        StringBuilder fileRecords \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"luodan01"},"content":"            fileRecords.append(task.toFileRecord());","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"luodan01"},"content":"            fileRecords.append(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"luodan01"},"content":"        fileWriter.write(fileRecords.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"luodan01"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"luodan01":93}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":" * Encapsulates the task list object.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"public class TaskList {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    private List\u003cTask\u003e archives;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     * Creates new TaskList instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"        this.archives \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * Creates new TaskList instance when tasks are loaded from storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     * @param existingTasks Previously saved tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    public TaskList(List\u003cTask\u003e existingTasks, List\u003cTask\u003e existingArchives) {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        this.tasks \u003d (existingTasks \u003d\u003d null ? new ArrayList\u003c\u003e() : existingTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        this.archives \u003d existingArchives;","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"    public int getArchiveSize() {","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        return archives.size();","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"    public Task getArchivedTask(int i) {","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"        return archives.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"     * Archives the task at index i in the task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"     * @param i Index of the task in the main task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"    public void archive(int i) {","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"        Task t \u003d tasks.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        archives.add(t);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"     * Unarchives the task at index i in the archives list.","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"     * @param i Index of the task in the archives list.","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"    public void unarchive(int i) {","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"        Task t \u003d archives.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"        archives.remove(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"        this.tasks.remove(i);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"        return this.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"    public List\u003cTask\u003e getArchives() {","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"        return this.archives;","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":86}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"    private static String line \u003d","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"            \"*･゜ﾟ･*･゜ﾟ･*:.｡..｡.:*･\u0027(*ﾟ▽ﾟ*)\u0027･*:.｡. .｡.:*･゜ﾟ･*゜ﾟ･*\";","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    private static String welcomeMsg \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    private static String goodbyeMsg \u003d \"Your tasks have been saved.\\nSee you next time!\";","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    public static String format(String msg) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        return msg + \"\\n\\n\" + line;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    public String getWelcomeMsg() {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"        return welcomeMsg;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    public String getErrorMsg(DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        return e + \"\\nWhat else can I do for you?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"    public String getGoodbyeMsg() {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        return goodbyeMsg;","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"     * Formats the number of tasks as part of a display message.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"     * @param size The number of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"     * @return A String representation of the number of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"    public String formatNumTasks(int size) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        return size \u003d\u003d 0 ? \"no tasks\"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"                : size \u003d\u003d 1 ? \"1 task\"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"                : size + \" tasks\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"luodan01":43}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":" * Encapsulates the add task command.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    private String[] params;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     * Constructor for an AddCommand instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"     * @param params String array containing user input split by whitespace.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    public AddCommand(String[] params) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"        this.params \u003d params;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     * Creates a new task from user\u0027s input and adds task to the given task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"     * @param tasks TaskList instance which the new task is to be added to.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException For invalid inputs.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        if (params.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        Task t;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        String taskType \u003d params[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        String taskInfo \u003d params[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        case \"event\":","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"            if (taskInfo.startsWith(\"/at\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! You are missing the name of the event.\"","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"                        + \"\\nThe correct format is:\"","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"                        + \"\\nevent [event name] /at [yyyy-mm-dd HH:MM]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"            String[] eventInfo \u003d taskInfo.split(\" /at \");","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"            if (eventInfo.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter event information in the following \"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"                        + \"format:\\nevent [event name] /at [yyyy-mm-dd HH:MM]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"            t \u003d new Event(eventInfo[0], eventInfo[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"            if (taskInfo.startsWith(\"/by\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! You are missing the name of the deadline.\"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"                        + \"\\nThe correct format is:\"","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"                        + \"\\ndeadline [deadline name] /by [yyyy-mm-dd]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"            String[] deadlineInfo \u003d taskInfo.split(\" /by \");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"            if (deadlineInfo.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"                throw new DukeException(\"OOPS!!! Please enter deadline information in the following \"","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"                        + \"format:\\ndeadline [deadline name] /by [yyyy-mm-dd]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"            t \u003d new Deadline(deadlineInfo[0], deadlineInfo[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"            t \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"        return \"Got it. I\u0027ve added this task: \\n\\t\" + t","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"                + \"\\nNow you have \" + ui.formatNumTasks(tasks.getSize()) + \" in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":87}},{"path":"src/main/java/duke/command/ArchiveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":" * Encapsulates the archive command.","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"public class ArchiveTaskCommand implements Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    private int idx;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"     * Constructor for an ArchiveTaskCommand instance.","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     * @param idx Index of the to-be-archived task in the user\u0027s main task list.","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    public ArchiveTaskCommand(int idx) {","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"        super();","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     * Marks the task at the given index in the task list as done.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     * @param tasks User\u0027s list of tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException For invalid inputs.","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        if (idx \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! That task doesn\u0027t exist.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        Task t \u003d tasks.get(idx);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        tasks.archive(idx);","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        return \"Nice! I\u0027ve archived the task: \\n\\t\" + t;","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"luodan01":51}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":" * Encapsulates the bye command.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"     * @param tasks User\u0027s list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"        return ui.getGoodbyeMsg();","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"public interface Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    String execute(TaskList taskList, Ui ui) throws DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    boolean isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":13}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"public enum CommandType {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"    Add,","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"    Bye,","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"    Delete,","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"    Display,","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    Done,","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    Find,","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    List","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":" * Encapsulates the delete command.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    private int idx;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"     * Constructor for a DeleteCommand instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     * @param idx Index at which the task to be deleted is stored in user\u0027s task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    public DeleteCommand(int idx) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * Deletes the task at a given index from the given task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     * @param tasks User\u0027s list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException For invalid inputs.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"        if (idx \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! That task doesn\u0027t exist.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task: \\n\\t\" + tasks.get(idx)","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"                + \"\\nNow you have \" + ui.formatNumTasks(tasks.getSize() - 1) + \" in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        tasks.remove(idx);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":50}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":" * Encapsulates the done command.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    private int idx;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     * Constructor for a DoneCommand instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     * @param idx Index at which the task to be marked as done is stored in user\u0027s task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    public DoneCommand(int idx) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"        super();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     * Marks the task at the given index in the task list as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"     * @param tasks User\u0027s list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException For invalid inputs.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        if (idx \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! That task doesn\u0027t exist.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"        Task t \u003d tasks.get(idx);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"        t.markAsDone();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\\t\" + t;","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":52}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    private String keyword;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        boolean hasMatch \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"            if (t.containsKeyword(this.keyword)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"                matchCount++;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"                response.append(String.format(\"%d. %s\\n\", matchCount, t));","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"                hasMatch \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"        if (!hasMatch) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"            return \"No matches so far.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        return response.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"luodan01":36}},{"path":"src/main/java/duke/command/ListArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"public class ListArchiveCommand implements Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        if (taskList.getArchiveSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"            return \"There are no tasks in your archive yet.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your archive:\\n\");","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"        for (int i \u003d 1; i \u003c taskList.getArchiveSize() + 1; i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"            response.append(String.format(\"\\t %d. %s\\n\", i, taskList.getArchivedTask(i - 1)));","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        return response.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"luodan01":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"            return \"There are no tasks in your list yet.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"        for (int i \u003d 1; i \u003c tasks.getSize() + 1; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"            response.append(String.format(\"\\t %d. %s\\n\", i, tasks.get(i - 1)));","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        return response.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":28}},{"path":"src/main/java/duke/command/UnarchiveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"public class UnarchiveTaskCommand implements Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    private int idx;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"     * Constructor for an UnarchiveTaskCommand instance.","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"     * @param idx Index at which the task to be archived is stored in user\u0027s archive list.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    public UnarchiveTaskCommand(int idx) {","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"     * Removes the given task from the archive list and puts it back into the main list.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     * @param taskList User\u0027s list of tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @param ui Duke\u0027s UI.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException For invalid inputs.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    public String execute(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        if (idx \u003e\u003d taskList.getArchiveSize()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!!! That task doesn\u0027t exist.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"        String response \u003d \"Noted. I\u0027ve unarchived this task: \\n\\t\" + taskList.getArchivedTask(idx)","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"                + \"\\nYou can now find it in your main list.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"        taskList.unarchive(idx);","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"        return response;","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"     * @return If the command is an exit command.","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"        return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"luodan01":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":" * Encapsulates the Deadline class which has a date as its deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    private String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     * Constructor for new deadline objects as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"     * @param by Date of the deadline as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException If the date and time are formatted incorrectly.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"            this.date \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!! Deadline date is formatted incorrectly.\"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"                    + \"\\n\\t Please format it as: [yyyy-mm-dd])\");","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"     * Constructor for deadline objects as read from saved file.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"     * @param isDone Indicates if task is done.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"     * @param by Date of the deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        this.date \u003d LocalDate.parse(by.trim());","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"     * Gets the task type indicator to be displayed when the","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"     * user lists tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the type label for Deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"    public String getTypeIndicator() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"        return \"[D]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"     * Converts the Deadline object to a String representation to be stored","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"     * in file.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the file record of the Deadline object.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"    public String toFileRecord() {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"        return String.format(\"E | %d | %s | %s\",","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"                this.isDone ? 1 : 0 , this.description, this.by);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"     * Returns a String representation of the object","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the Deadline object.","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"        return String.format(\"%s (by: %s)\", super.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":" * Encapsulates the Event class which has a starting date and time.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    private String at;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"    private LocalTime eventTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"     * Constructor for new event objects as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     * @param at Starting date and time of the event as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @throws DukeException If the date and time are formatted incorrectly.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"            String[] dateTime \u003d at.split(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"            this.eventDate \u003d LocalDate.parse(dateTime[0].trim());","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"            this.eventTime \u003d LocalTime.parse(dateTime[1].trim());","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"            throw new DukeException(\"OOPS!! Event date and time are formatted incorrectly.\"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"                    + \"\\n\\t Please format them as: [yyyy-mm-dd HH:MM]\");","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"     * Constructor for event objects as read from saved file.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"     * @param isDone Indicates if event is done.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"     * @param at Starting date and time of the event as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"        String[] dateTime \u003d at.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        this.eventDate \u003d LocalDate.parse(dateTime[0].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"        this.eventTime \u003d LocalTime.parse(dateTime[1].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"     * Gets the task type indicator to be displayed when the","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"     * user lists tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the type label for Event.","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"    public String getTypeIndicator() {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"     * Converts the Event object to a String representation to be stored","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"     * in file.","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the file record of the Event object.","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"luodan01"},"content":"    public String toFileRecord() {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"luodan01"},"content":"        return String.format(\"E | %d | %s | %s\",","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"luodan01"},"content":"                this.isDone ? 1 : 0 , this.description, this.at);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"luodan01"},"content":"     * Returns a String representation of the object.","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the Event object.","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"luodan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"luodan01"},"content":"        return String.format(\"%s (at: %s)\", super.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"luodan01"},"content":"                eventDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy \"))","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"luodan01"},"content":"                + eventTime.format(DateTimeFormatter.ofPattern(\"h:mm a\")));","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"luodan01":86}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":" * Encapsulates the abstract Task class.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"     * Constructor for new task objects as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"     * Constructor for new task objects as read from saved file.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * @param isDone isDone Indicates if task is done.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"    public abstract String getTypeIndicator();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"    public abstract String toFileRecord();","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of status icon of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"luodan01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"luodan01"},"content":"     * Returns whether the description of the task contains a given keyword.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"luodan01"},"content":"     * @return Whether the keyword is found.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"luodan01"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"luodan01"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"luodan01"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"luodan01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"luodan01"},"content":"        return getTypeIndicator() + \" [\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":69}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"     * Constructor for new tasks as input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"     * Constructor for new tasks as read from saved file.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"     * Gets the task type indicator to be displayed when the","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"     * user lists tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the type label for todos.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"luodan01"},"content":"    public String getTypeIndicator() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"luodan01"},"content":"        return \"[T]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"luodan01"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"luodan01"},"content":"     * Converts the object to a String representation to be stored","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"luodan01"},"content":"     * in file.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"luodan01"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"luodan01"},"content":"     * @return The String representation of the file record of the object.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"luodan01"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"luodan01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"luodan01"},"content":"    public String toFileRecord() {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"luodan01"},"content":"        return String.format(\"T | %d | %s\",","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"luodan01"},"content":"                this.isDone ? 1 : 0 , this.description);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"luodan01":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"luodan01":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"luodan01":12}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"    public void parse_emptyDoneKeyword_exceptionThrown() {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"        String testInput \u003d \"done\";","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"            Parser.parse(testInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"            assertEquals(e.toString(), \"OOPS!!! Please enter the task you\u0027d like to\"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"                    + \"mark as done in the following format: \\n\\t done [task number]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"luodan01"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"luodan01"},"content":"    public void parse_emptyDeleteKeyword_exceptionThrown() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"luodan01"},"content":"        String testInput \u003d \"delete\";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"luodan01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"luodan01"},"content":"            Parser.parse(testInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"luodan01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"luodan01"},"content":"            assertEquals(e.toString(), \"OOPS!!! Please enter the task you\u0027d like to\"","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"luodan01"},"content":"                    + \"delete in the following format: \\n\\t delete [task number]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luodan01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"luodan01":29}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"public class ToDoTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"    public void toFileRecord_validFormat_success() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"        Task testToDo \u003d new ToDo(\"a todo\");","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"luodan01"},"content":"        testToDo.markAsDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"luodan01"},"content":"        assertEquals(testToDo.toFileRecord(), \"T | 1 | a todo\");","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"luodan01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"luodan01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"luodan01":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luodan01"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"luodan01"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"luodan01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"luodan01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"luodan01"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"luodan01"},"content":"event exam /at idk","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"luodan01"},"content":"todo a todo","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"luodan01"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"luodan01"},"content":"todo another todo","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"luodan01"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"luodan01"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"luodan01"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"luodan01"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"luodan01":13}}]
