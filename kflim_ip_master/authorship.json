[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"# display.Duke project template","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"3. After that, locate the `src/main/java/display.Duke.java` file, right-click it, and choose `Run display.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kflim":2,"-":22}},{"path":"src/main/java/display/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package display;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"import error.DukeException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"import tasks.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"import tasks.ToDo;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":" * Simulates the Duke chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"public class Duke {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    private static final String line \u003d \"\\n\\t_______________________________________________________________\";","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        initBot();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    private static void initBot() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"        greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"        analyzeLog();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        Date localDate \u003d new Date();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"        SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HH:mm:ss\");","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"        String localTime \u003d timeFormat.format(localDate);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"        String msg \u003d \"\\t I\u0027m IntelliBot. What can I do for you today?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"        if (\"05:00:00\".compareTo(localTime) \u003c\u003d 0 \u0026\u0026 localTime.compareTo(\"12:00:00\") \u003c 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"            System.out.println(line + \"\\n\\t Good morning!\\n\" + msg + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"        } else if (\"12:00:00\".compareTo(localTime) \u003c\u003d 0 \u0026\u0026 localTime.compareTo(\"18:00:00\") \u003c 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"            System.out.println(line + \"\\n\\t Good afternoon!\\n\" + msg + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"            System.out.println(line + \"\\n\\t Good evening!\\n\" + msg + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kflim"},"content":"     * Primary response function of the chatbot","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"kflim"},"content":"    private static void analyzeLog() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"kflim"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"kflim"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"kflim"},"content":"        String[] words;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"kflim"},"content":"        StringBuilder log;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"kflim"},"content":"        logging:","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"kflim"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"kflim"},"content":"            log \u003d new StringBuilder();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"kflim"},"content":"            words \u003d sc.nextLine().trim().split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"kflim"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"kflim"},"content":"                checkInput(words);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"kflim"},"content":"                switch (words[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"kflim"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"kflim"},"content":"                    System.out.println(line + \"\\n\\t Peace out!\" + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"kflim"},"content":"                    break logging;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"kflim"},"content":"                case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"kflim"},"content":"                    log.append(\"\\n\\t Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"kflim"},"content":"                    for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"kflim"},"content":"                        log.append(\"\\n\\t \").append(i + 1).append(\". \").append(tasks.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"kflim"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"kflim"},"content":"                case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"kflim"},"content":"                    int idx \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"kflim"},"content":"                    Task task \u003d tasks.get(idx - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"kflim"},"content":"                    if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"kflim"},"content":"                        log.append(\"\\t This task has been marked as done\");","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"kflim"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"kflim"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"kflim"},"content":"                        log.append(\"\\n\\t Nice! I\u0027ve marked this task as done:\\n\\t\\t\").append(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"kflim"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"kflim"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"kflim"},"content":"                    ToDo newTask \u003d new ToDo(words[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"kflim"},"content":"                    tasks.add(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"kflim"},"content":"                    log.append(\"\\n\\t Got it. I\u0027ve added this task:\\n\\t\\t\").append(newTask).append(\"\\n\\t Now you have \")","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"kflim"},"content":"                            .append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"kflim"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"kflim"},"content":"                    String[] details \u003d words[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"kflim"},"content":"                    Deadline deadline \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"kflim"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"kflim"},"content":"                    log.append(\"\\n\\t Got it. I\u0027ve added this task:\\n\\t\\t\").append(deadline)","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"kflim"},"content":"                            .append(\"\\n\\t Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"kflim"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"kflim"},"content":"                    details \u003d words[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"kflim"},"content":"                    Event event \u003d new Event(details[0], details[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"kflim"},"content":"                    tasks.add(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"kflim"},"content":"                    log.append(\"\\n\\t Got it. I\u0027ve added this task:\\n\\t\\t\").append(event)","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"kflim"},"content":"                            .append(\"\\n\\t Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"kflim"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"kflim"},"content":"                    idx \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"kflim"},"content":"                    task \u003d tasks.get(idx - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"kflim"},"content":"                    tasks.remove(idx - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"kflim"},"content":"                    log.append(\"\\n\\t Noted. I\u0027ve removed this task:\\n\\t\\t\").append(task)","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"kflim"},"content":"                            .append(\"\\n\\t Now you have \").append(tasks.size()).append(\" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"kflim"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"kflim"},"content":"                default:","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"kflim"},"content":"                    throw new DukeException(","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"kflim"},"content":"                            \"\\n\\t ☹ My dictionary does not contain this sophisticated language.\\n\\t Maybe someday :)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"kflim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"kflim"},"content":"                log.append(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"kflim"},"content":"            System.out.println(line + log + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"kflim"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"kflim"},"content":"     * Handles DukeExceptions for the chatbot","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"kflim"},"content":"     * @param log The separate words in a given line","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"kflim"},"content":"    private static void checkInput(String[] log) throws DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"kflim"},"content":"        if (log.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"kflim"},"content":"            switch (log[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"kflim"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"kflim"},"content":"                throw new DukeException(\"\\n\\t ☹ Oh dearie!. The description of a todo cannot be empty!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"kflim"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"kflim"},"content":"                throw new DukeException(\"\\n\\t ☹ Oh lord!. I need some description and a time limit!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"kflim"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"kflim"},"content":"                throw new DukeException(\"\\n\\t ☹ By the heavens!. I need some description and a timing!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"kflim"},"content":"        } else if (log.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"kflim"},"content":"            switch (log[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"kflim"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"kflim"},"content":"                if (log[1].split(\" /by \", 2).length !\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"kflim"},"content":"                    throw new DukeException(\"\\n\\t ☹ Blimey! Did you forget to type \\\"/by\\\" or a time limit?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"kflim"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"kflim"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"kflim"},"content":"                if (log[1].split(\" /at \", 2).length !\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"kflim"},"content":"                    throw new DukeException(\"\\n\\t ☹ Wait! Did you forget to type \\\"/at\\\" or a timing?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"kflim"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"kflim"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"kflim"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":148}},{"path":"src/main/java/error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package error;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":" * Represents the unique DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"     * Creates a DukeException with a specified message.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"     * @param message The message of this DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":15}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":" * Represents a task that needs to be done before a specific date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"     * Creates a Deadline with a specified description and time limit.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"     * @param description The description of this Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"     * @param by The time limit of this Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"     * Returns this task\u0027s status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"     * @return A string showing what the task is, its description and its time limit.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":27}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":" * Represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"    protected String timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"     * Creates an Event with a specified description and timing.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"     * @param description The description of this Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"     * @param timing The timing of this Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public Event(String description, String timing) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"     * Returns this task\u0027s status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"     * @return A string showing what the task is, its description and its timing.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.timing + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":27}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":" * Represents a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"    protected final String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"     * Creates a task with the specified description.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"     * @param description The description of this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"     * Returns the status of this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"     * @return A string representing the status of this task.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kflim"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kflim"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kflim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kflim"},"content":"     * Returns this task\u0027s status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kflim"},"content":"     * @return A string representing the status of this task and its description.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kflim"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kflim"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":42}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":" * Represents a task without any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kflim"},"content":"     * Creates a ToDo with a specified description.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"     * @param description The description of this ToDo.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kflim"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kflim"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kflim"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kflim"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kflim"},"content":"     * Returns this task\u0027s status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"     * @return A string showing what the task is and its description.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kflim"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kflim"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kflim"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kflim"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kflim"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kflim"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kflim"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kflim"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kflim"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kflim"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kflim"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kflim"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kflim"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kflim":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kflim"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\display\\*.java ..\\src\\main\\java\\tasks\\*.java","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kflim"},"content":"java -classpath ..\\bin display.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kflim":2,"-":19}}]
