[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"    protected String time;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"    public DeadlineTask(String description, String time) {","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    public DeadlineTask(String description, boolean isDone, String time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        return super.toString() + \" (by: \" + this.time + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rehad-a":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"import jdk.jfr.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    public static void loadTasksFromFile(ArrayList\u003cTask\u003e tasks) throws IOException, DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"        String directoryPath \u003d \"./data\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"        String filePath \u003d directoryPath.concat(\"/duke.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"            throw new DukeException(\"OOPS!! Directory does not exist\");","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"        } else if (!dataFile.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        Scanner f \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"        while (f.hasNext()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"            String[] task \u003d f.nextLine().split(\"|\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"            String taskType \u003d task[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"            boolean isDone \u003d (Integer.parseInt(task[1]) \u003d\u003d 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"            String description \u003d task[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"            String time \u003d task.length \u003d\u003d 4 ? task[3] : null;","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"                tasks.add(new TodoTask(description, isDone));","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"                tasks.add(new DeadlineTask(description, isDone, time));","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"                tasks.add(new EventTask(description, isDone, time));","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"            String type \u003d t.type;","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"            String description \u003d t.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"            String isDone \u003d t.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"            String line \u003d type + \"|\" + isDone + \"|\" + description;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"            if (t.type.equals(\"D\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"                DeadlineTask dt \u003d (DeadlineTask) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"                line +\u003d \"|\" + dt.time;","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"            } else if (t.type.equals(\"E\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"                EventTask et \u003d (EventTask) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"                line +\u003d \"|\" + et.time;","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"            line +\u003d \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"            fw.write(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"        fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"        System.out.println(line + \"Hello I\u0027m Duke\\nWhat can I do for you?\\n\" + line);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"        int ctr \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"rehad-a"},"content":"            loadTasksFromFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"rehad-a"},"content":"            System.out.println(\"Something went wrong while trying to load tasks: \" + e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"rehad-a"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"rehad-a"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"rehad-a"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"rehad-a"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"        while (!command.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"rehad-a"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"rehad-a"},"content":"                if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"                    if (!command.contains(\" \")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"rehad-a"},"content":"                        throw new DukeException(\"OOPS!! done needs the index of the task.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"                    int idx \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"rehad-a"},"content":"                    tasks.get(idx).updateStatus();","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"rehad-a"},"content":"                    System.out.printf(\"%sNice! I\u0027ve marked this task as done:\\n%s\\n%s\\n\", line, tasks.get(idx), line);","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"rehad-a"},"content":"                } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"rehad-a"},"content":"                    System.out.println(line + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"rehad-a"},"content":"                    for (int i \u003d 0; i \u003c ctr; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"rehad-a"},"content":"                        System.out.printf(\"%d.%s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"rehad-a"},"content":"                    System.out.println(line);","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"rehad-a"},"content":"                }else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"rehad-a"},"content":"                    if (command.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"rehad-a"},"content":"                        throw new DukeException(\"OOPS!! delete needs the index of the task.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"rehad-a"},"content":"                    int idx \u003d Integer.parseInt(command.split(\" \")[1]) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"rehad-a"},"content":"                    Task t \u003d tasks.remove(idx);","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"rehad-a"},"content":"                    System.out.printf(\"%sNoted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list\\n%s\\n\", line, t, ctr - 1, line);","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"rehad-a"},"content":"                    ctr--;","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"rehad-a"},"content":"                } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"                    if (command.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"                        throw new DukeException(\"OOPS!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-20"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"                    int taskIdxStart \u003d command.indexOf(\" \") + 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":122,"author":{"gitId":"rehad-a"},"content":"                    String task \u003d command.substring(taskIdxStart);","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"rehad-a"},"content":"                    tasks.add(new TodoTask(task));","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"rehad-a"},"content":"                    System.out.printf(\"%sGot it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n%s\\n\", line, tasks.get(ctr), ctr + 1, line);","lastModifiedDate":"2021-08-20"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"                    ctr++;","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"rehad-a"},"content":"                } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"rehad-a"},"content":"                    if (command.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"rehad-a"},"content":"                        throw new DukeException(\"OOPS!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":129,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-20"},{"lineNumber":130,"author":{"gitId":"rehad-a"},"content":"                    int taskIdxStart \u003d command.indexOf(\" \") + 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":131,"author":{"gitId":"rehad-a"},"content":"                    int timeIdxStart \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"rehad-a"},"content":"                    String task \u003d command.substring(taskIdxStart, timeIdxStart - 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":133,"author":{"gitId":"rehad-a"},"content":"                    String time \u003d command.substring(timeIdxStart + 4);","lastModifiedDate":"2021-08-20"},{"lineNumber":134,"author":{"gitId":"rehad-a"},"content":"                    tasks.add(new DeadlineTask(task, time));","lastModifiedDate":"2021-08-20"},{"lineNumber":135,"author":{"gitId":"rehad-a"},"content":"                    System.out.printf(\"%sGot it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n%s\\n\", line, tasks.get(ctr), ctr + 1, line);","lastModifiedDate":"2021-08-20"},{"lineNumber":136,"author":{"gitId":"rehad-a"},"content":"                    ctr++;","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"rehad-a"},"content":"                } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":138,"author":{"gitId":"rehad-a"},"content":"                    if (command.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":139,"author":{"gitId":"rehad-a"},"content":"                        throw new DukeException(\"OOPS!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"rehad-a"},"content":"                    }","lastModifiedDate":"2021-08-20"},{"lineNumber":141,"author":{"gitId":"rehad-a"},"content":"                    int taskIdxStart \u003d command.indexOf(\" \") + 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"rehad-a"},"content":"                    int timeIdxStart \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"rehad-a"},"content":"                    String task \u003d command.substring(taskIdxStart, timeIdxStart - 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"rehad-a"},"content":"                    String time \u003d command.substring(timeIdxStart + 4);","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"rehad-a"},"content":"                    tasks.add(new EventTask(task, time));","lastModifiedDate":"2021-08-20"},{"lineNumber":146,"author":{"gitId":"rehad-a"},"content":"                    System.out.printf(\"%sGot it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list\\n%s\\n\", line, tasks.get(ctr), ctr + 1, line);","lastModifiedDate":"2021-08-20"},{"lineNumber":147,"author":{"gitId":"rehad-a"},"content":"                    ctr++;","lastModifiedDate":"2021-08-20"},{"lineNumber":148,"author":{"gitId":"rehad-a"},"content":"                } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":149,"author":{"gitId":"rehad-a"},"content":"                    throw new DukeException(\"OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-20"},{"lineNumber":150,"author":{"gitId":"rehad-a"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":151,"author":{"gitId":"rehad-a"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":152,"author":{"gitId":"rehad-a"},"content":"                System.out.println(line + e.getMessage() + \"\\n\"+ line);","lastModifiedDate":"2021-08-20"},{"lineNumber":153,"author":{"gitId":"rehad-a"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"rehad-a"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":155,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"rehad-a"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"rehad-a"},"content":"            saveTasksToFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"rehad-a"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"rehad-a"},"content":"            System.out.println(\"Something went wrong while trying to save tasks: \" + e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"rehad-a"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"rehad-a"},"content":"        System.out.println(line + \"Bye. Hope to see you again soon!\\n\" + line);","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rehad-a":157,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rehad-a":5}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"    protected String time;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"    public EventTask(String description, String time) {","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    public EventTask(String description, boolean isDone, String time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        return super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rehad-a":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"    protected String type;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"    public void updateStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rehad-a":28}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rehad-a":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"todo borrow book","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"todo read book","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"done 1","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"todo join sports club","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"done 5","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"bye","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rehad-a":10}}]
