[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"# Duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elroygohjy":2,"-":22}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * Duke is a simple bot that allows users to keep track of different types of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class Duke {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\tprivate final Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\tprivate final TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\tprivate final UI ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\tpublic Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.tasks \u003d this.storage.loadTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.ui \u003d new UI();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t * Runs Duke and parses input using Parser class.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\tpublic void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t\tParser parser \u003d new Parser(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\t\twhile (!parser.isExit()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t\t\tString userInput \u003d ui.readInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t\t\tparser.commands(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t\t\tstorage.saveData(tasks.encodeTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t\tnew Duke(\"data/Duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":36}},{"path":"src/main/java/Duke/Exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * InvalidCommandException is an exception that is thrown when command is not recognized for any type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\tprivate final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs error message for Duke.Exception.InvalidCommandException.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\tpublic InvalidCommandException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(SAD_ROBOT_ICON + \": OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":15}},{"path":"src/main/java/Duke/Exception/InvalidFindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * NoTaskDescriptionException is thrown when there is no task description when finding.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class InvalidFindException extends Exception{","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     * Constructs an error message if there is no task description when searching.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public InvalidFindException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! The description of the task cannot be empty when finding.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"elroygohjy":15}},{"path":"src/main/java/Duke/Exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * InvalidIndexException is thrown if done i, where i is the index of task is not a number or taskNumber","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" * exceeds the current list size.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\tprivate final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs error message for either delete or done command","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t * @param commandType is either delete or done command","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\tpublic InvalidIndexException(String commandType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(SAD_ROBOT_ICON + \": OOPS!!! The task to set as \" + commandType + \" does not exists. Please try again!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":18}},{"path":"src/main/java/Duke/Exception/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * NoDateException is thrown if there is no date/timing provided by either Duke.Task.Event or Duke.Task.Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class NoDateException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\tprivate final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs error message for NoDateException depending on the eventType.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t * @param taskType it can be either Deadline or Event task type.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tpublic NoDateException(String taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(SAD_ROBOT_ICON + \": OOPS!!! The date/timing of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":17}},{"path":"src/main/java/Duke/Exception/NoDateIndicatorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * NoDateIndicatorException is thrown if there is no /at or /by provided by Event or Deadline respectively.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class NoDateIndicatorException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\tprivate final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs error message depending on whether it is Deadline or Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t * @param dateType the dateType is either Deadline or Event task in string.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tpublic NoDateIndicatorException(String dateType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(SAD_ROBOT_ICON + \": OOPS!!! You are missing \" + dateType + \" before your timing/date\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":18}},{"path":"src/main/java/Duke/Exception/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * NoTaskDescriptionException is thrown when there is no task description for any task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class NoTaskDescriptionException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\tprivate final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs error message for Duke.Exception.NoTaskDescriptionException depending on taskType.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t * @param taskType type of task in string.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tpublic NoTaskDescriptionException(String taskType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(SAD_ROBOT_ICON + \": OOPS!!! The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":18}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\tprivate final TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\tprivate boolean isExit;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t * Adds user inputted String to list and prints the user added tasks and the current number of tasks, else","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t * print error message for the error","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput user inputted String","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\tpublic void commands(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t\tTask newTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t\tString[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\t\t\tswitch (tokens[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttasks.completeAndPrintTask(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttasks.deleteAndPrintTask(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tnewTask \u003d tasks.makeToDoTask(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tnewTask \u003d tasks.makeDeadlineTask(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tnewTask \u003d tasks.makeEventTask(userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tif (tokens.length \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tthrow new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tUI.bye();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthis.isExit \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tif (tokens.length \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tthrow new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttasks.printList();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcase \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttasks.findTasks(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\treturn;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"\t\t\tdefault:","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthrow new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (InvalidCommandException | NoTaskDescriptionException | NoDateIndicatorException","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t| NoDateException | InvalidFindException err) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printErrorMessage(err);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"\t\ttasks.addTask(newTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printRobotMsg(\"You have added this following task to the list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printMsg(newTask.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printNoOfTasks(tasks.noOfTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"\t * Return true if parser read user input of \"bye\".","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"\t * @return true if parser has exited else false","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"\tpublic boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"\t\treturn this.isExit;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs a parser class that parsers user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"\t * @param tasks list of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"\tpublic Parser(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":89}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\tprivate final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final int startOfTaskDes \u003d 8;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final int taskTypeIndex \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final int taskStatusIndex \u003d 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\t * Creates new file at filePath if the file does not exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t * @return File to write","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\tprivate File initStorageFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"\t\tFile directory \u003d new File(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t\tdirectory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\t\tFile storageFile \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t\t\tstorageFile.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\t\t\tSystem.out.println(\"Error has occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t\treturn storageFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"\t * Reads from storage file all the previously saved tasks info and add all the tasks to the current tracking list.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\tpublic TaskList loadTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"\t\tTaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"\t\t\tScanner s \u003d new Scanner(initStorageFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"\t\t\twhile (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tString line \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tchar taskType \u003d line.charAt(taskTypeIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tchar taskStatus \u003d line.charAt(taskStatusIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tint taskDescIdentifier \u003d line.indexOf(\u0027|\u0027, startOfTaskDes);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tString taskDesc \u003d line.substring(startOfTaskDes, taskDescIdentifier - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tif (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tString date \u003d line.substring(taskDescIdentifier + 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tEvent task \u003d new Event(taskDesc, date);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tif (taskStatus \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\t\ttask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\ttasks.addTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t} else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tString time \u003d line.substring(taskDescIdentifier + 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tDeadline task \u003d new Deadline(taskDesc, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tif (taskStatus \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\t\ttask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\ttasks.addTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t} else {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\ttasks.addTask(new ToDo(taskDesc));","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"\t\treturn tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"\t * Overwrites and saves new task list in data/duke.txt file when there is changes such as deleting and adding task.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"\tpublic void saveData(List\u003cString\u003e encodedTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"\t\t\tFileWriter myWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"\t\t\tfor (String encodedTask : encodedTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tmyWriter.write(encodedTask + \u0027\\n\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"\t\t\tmyWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":96}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":" * Deadline-type Task is a task consisting of its details and deadline in day.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t * The deadline in day.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\tprotected LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final DateTimeFormatter outputDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs a instance of Deadline that consist of its details and deadline in day.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\t * @param taskDetails Description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\t * @param by day in dd/MM/yyyy","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\tpublic Deadline(String taskDetails, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t\tLocalDate byDate \u003d LocalDate.parse(by, inputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.by \u003d byDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\t * Return the string representation of Deadline details with day and time, prefixed with [D]","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t * @return the string representation of Deadline details","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\t@Override","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t\tString outputDate \u003d this.by.format(outputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + outputDate + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"\t * Returns the string representation for storing in text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"\t * @return the string representation for storing in text file","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"\t@Override","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toStringSave() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"\t\tint completeBinary \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"\t\tif (this.isComplete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcompleteBinary \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"D\" + \" | \" + completeBinary + \" | \" + this.taskDetails + \" | \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthis.by.format(inputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":55}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":" * A Event-type Task consisting of event details, day and time.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t * The day and time in LocalDate.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\tprotected LocalDate at;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\tprivate static final DateTimeFormatter outputDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs a instance of Event that consist of event details, day and time","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\t * @param taskDetails Description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\t * @param at day and time in string","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\tpublic Event(String taskDetails, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t\tLocalDate byDate \u003d LocalDate.parse(at, inputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t\tthis.at \u003d byDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\t * Return the string representation of Event details with day and time, prefixed with [E].","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t * @return the string representation of Event details","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\t\tString outputDate \u003d this.at.format(outputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at: \" + outputDate + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"\t * Returns the string representation for storing in text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"\t * @return the string representation for storing in text file","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"\t@Override","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toStringSave() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"\t\tint completeBinary \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"\t\tif (this.isComplete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcompleteBinary \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"E\" + \" | \" + completeBinary + \" | \" + this.taskDetails + \" | \" + this.at.format(inputDateFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":54}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" * Task is an Object that consist of the status of completion and the task details.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * The status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    protected boolean isComplete;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"     * The details of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    protected final String taskDetails;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a uncompleted task with the details as taskDetails","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"     * @param taskDetails task name","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"    public Task(String taskDetails) {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"     * set isComplete as true.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     * Returns the task Details with the prefix of the status of completion of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"     * @return A string representation of task details with the prefix of the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        if (isComplete) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"            return \"[✓] \" + taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"            return \"[ ] \" + taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"     * Returns the string representation for storing in text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"     * @return the string representation for storing in text file","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"    public String toStringSave() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"        int completeBinary \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"        if (this.isComplete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"            completeBinary \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"        return \"G\" + \" | \" + completeBinary + \" | \" + this.taskDetails + \" | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"     * Returns TaskDetails","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"     * @return taskDetails","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"        return this.taskDetails;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":68}},{"path":"src/main/java/Duke/Task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" * A toDo-type of Task that contains details.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\t * Constructs a uncompleted task with the details as taskDetails","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\t * @param taskDetails task name","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\tpublic ToDo(String taskDetails) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"\t\tsuper(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t * Returns the task details with the prefix first with [T] followed by the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\t * @return the task details with the prefix first with [T] followed by the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"\t * Returns the string representation for storing in text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\t * @return the string representation for storing in text file","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t@Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"\tpublic String toStringSave() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\t\tint completeBinary \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\t\tif (this.isComplete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t\t\tcompleteBinary \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"\t\treturn \"T\" + \" | \" + completeBinary + \" | \" + this.taskDetails + \" | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":41}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"\tprivate final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"\t * Add task to list.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"\tpublic void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"\t\ttasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"\t * Deletes the task from list.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"\t * @param task task","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"\tprivate void deleteTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"\t\ttasks.remove(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"\t * Marks the task as complete and prints out the task, throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput the index of the task in lis.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"\tpublic void completeAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"\t\tString[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"\t\tint taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean isTaskDoneCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"\t\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttaskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"\t\t\t} catch (NumberFormatException err) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthrow new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"\t\t\tif (!isTaskDoneCommand || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthrow new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printErrorMessage(err);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printRobotMsg(\"You have completed the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"\t\ttasks.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printMsg(tasks.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"\t * Delete the task and prints out the task and current number of tasks,","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"\t * throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput the index of the task in list","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"\tpublic void deleteAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"\t\tString[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"\t\tint taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean isTaskDeleteCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"\t\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\ttaskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"\t\t\t} catch (NumberFormatException err) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthrow new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"\t\t\tif (!isTaskDeleteCommand || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tthrow new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printErrorMessage(err);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"\t\t\treturn;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printRobotMsg(\"You have removed the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printMsg(tasks.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"\t\tdeleteTask(tasks.get(taskNumber - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printRobotMsg(\"You have \" + tasks.size() + \" task/s left.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"elroygohjy"},"content":"\t * Prints all the tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"elroygohjy"},"content":"\tpublic void printList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printRobotMsg(\"Your list contains the following task/s:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printMsg((i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"elroygohjy"},"content":"\t\tUI.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"elroygohjy"},"content":"\t * Returns newly created ToDo task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput user input String","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"\t * @return Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"\tpublic ToDo makeToDoTask(String userInput) throws NoTaskDescriptionException {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"elroygohjy"},"content":"\t\tif (userInput.length() \u003d\u003d \"todo\".length()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"elroygohjy"},"content":"\t\treturn new ToDo(userInput.substring(\"todo\".length() + 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"elroygohjy"},"content":"\t * Returns newly created Event task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput user input String","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"elroygohjy"},"content":"\t * @return Event task","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"\tpublic Task makeEventTask(String userInput) throws","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"\t\t\tNoTaskDescriptionException, NoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"\t\tint indexOfAt \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"\t\tint EndIndexForEvent \u003d \"event\".length();","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesAtExist \u003d indexOfAt !\u003d -1;","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesTimeExist \u003d userInput.length() \u003e indexOfAt + \"/at\".length() + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesEventDescriptionExist \u003d indexOfAt !\u003d EndIndexForEvent + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesAtExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoDateIndicatorException(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesTimeExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoDateException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesEventDescriptionExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"\t\treturn new Event(userInput.substring(\"event\".length() + 1, indexOfAt - 1),","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tuserInput.substring(indexOfAt + \"/at\".length() + 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"\t * Returns newly created Deadline task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput user input String","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"\t * @return Deadline task","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"\t * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"\tpublic Deadline makeDeadlineTask(String userInput) throws NoTaskDescriptionException,","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"\t\t\tNoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"elroygohjy"},"content":"\t\tint indexOfBy \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"elroygohjy"},"content":"\t\tint EndIndexForDeadline \u003d \"deadline\".length();","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesByExist \u003d indexOfBy !\u003d -1;","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesDateExist \u003d userInput.length() \u003e indexOfBy + \"/by\".length() + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean doesDeadlineDescriptionExist \u003d indexOfBy !\u003d EndIndexForDeadline + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesByExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoDateIndicatorException(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesDateExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoDateException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"elroygohjy"},"content":"\t\tif (!doesDeadlineDescriptionExist) {","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new NoTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"elroygohjy"},"content":"\t\tString stringDate \u003d userInput.substring(indexOfBy + \"/by\".length() + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"elroygohjy"},"content":"\t\treturn new Deadline(userInput.substring(\"deadline\".length() + 1, indexOfBy - 1), stringDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"elroygohjy"},"content":"\t * Returns the number of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"elroygohjy"},"content":"\t * @return number of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"elroygohjy"},"content":"\tpublic int noOfTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"elroygohjy"},"content":"\t\treturn tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"elroygohjy"},"content":"\t * Returns encoded string list for saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"elroygohjy"},"content":"\tpublic List\u003cString\u003e encodeTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"elroygohjy"},"content":"\t\tArrayList\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"elroygohjy"},"content":"\t\tfor (Task task : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"elroygohjy"},"content":"\t\t\tencodedTasks.add(task.toStringSave());","lastModifiedDate":"2021-08-23"},{"lineNumber":202,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"elroygohjy"},"content":"\t\treturn encodedTasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":204,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"elroygohjy"},"content":"\t/**","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"elroygohjy"},"content":"\t * Prints the task matching the searched description, if searching description is empty, it will throw an error.","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"elroygohjy"},"content":"\t *","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"elroygohjy"},"content":"\t * @param userInput user input String","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"elroygohjy"},"content":"\t * @throws InvalidFindException if search description is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"elroygohjy"},"content":"\t */","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"elroygohjy"},"content":"\tpublic void findTasks(String userInput) throws InvalidFindException {","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"elroygohjy"},"content":"\t\tboolean isSearchSuccess \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"elroygohjy"},"content":"\t\tint startingIndex \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"elroygohjy"},"content":"\t\ttry {","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printRobotMsg(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"elroygohjy"},"content":"\t\t\tString searchTerm \u003d userInput.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"elroygohjy"},"content":"\t\t\tfor (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tif (task.toString().contains(searchTerm)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tisSearchSuccess \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tUI.printMsg(startingIndex + \". \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t\tstartingIndex++;","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"elroygohjy"},"content":"\t\t\tif (!isSearchSuccess) {","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"elroygohjy"},"content":"\t\t\t\tUI.printMsg(\"You have no tasks matching the description. Pls try again.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"elroygohjy"},"content":"\t\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"elroygohjy"},"content":"\t\t\tUI.printLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"elroygohjy"},"content":"\t\t} catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"elroygohjy"},"content":"\t\t\tthrow new InvalidFindException();","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"elroygohjy"},"content":"\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"elroygohjy"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":235}},{"path":"src/main/java/Duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":" * UI for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"public class UI {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_ICON \u003d \"[~o_o~]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    private final static String BYE \u003d \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    private final static String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_TEXT_SPACE \u003d \"         \";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    private final Scanner myScanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     * Prints greeting text of the robotFriend.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": Hello I am your RobotFriend.\\n\" + ROBOT_TEXT_SPACE + \"How can i help you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"Commands:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"bye: terminate session.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"list: view all tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"done i: mark task number i as complete and view the task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"delete i: delete the task at the given index i.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"todo *description*: add todo task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"event *description* /at *date in dd/MM/YYYY*: add event task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"deadline *description* /by *timing in dd/MM/YYYY*: add deadline task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * Echos the user inputted String in a robot way.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user inputted String","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    private static void echo(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + userInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     * Prints the exiting text in a robot way.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Bye~ Hope to see you soon :)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"     * Prints error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"     * @param e error","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"    public static void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"    public static void printNoOfTasks(int noOfTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Now you have \" + noOfTasks + \" tasks!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"     * Prints the input text prefixed with robot icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"     * @param text user input string","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"    public static void printRobotMsg(String text) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + text);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"     * Print message input by user.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"     * @param text user input string","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"    public static void printMsg(String text) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(text);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a UI.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"    public UI() {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"        this.myScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"elroygohjy"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"elroygohjy"},"content":"        return myScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":103}},{"path":"src/test/java/Duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":" * Tests the Parser class.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"     * Tests if event task is added via parser and checks if event task is successfully encoded.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    void eventTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        parser.commands(\"event dance night /at 11/12/2019\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        assertEquals(\"E | 0 | dance night | 11/12/2019\", tasks.encodeTasks().get(0));","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":23}},{"path":"src/test/java/Duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":" * Tests the Storage class","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     * Tests whether the storage writes properly.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"    void writeTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        Storage storage \u003d new Storage(\"data/Duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        ArrayList\u003cString\u003e input \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        input.add(\"hello world\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        storage.saveData(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        File file \u003d new File(\"data/Duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"            assertEquals(\"hello world\", s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"elroygohjy":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"deadline /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"deadline /by","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"event /at","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"done x","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"done x x","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"delete x","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"delete x x","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"java -classpath ..\\bin RobotFriend \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elroygohjy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"java -classpath ../bin RobotFriend \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elroygohjy":1,"-":37}}]
