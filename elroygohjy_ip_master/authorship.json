[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * A Deadline-type Task consisting of its details and deadline in day.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"     * The deadline in day.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a instance of Deadline that consist of its details and deadline in day.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"     * @param taskDetails Description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"     * @param by day","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    public Deadline(String taskDetails, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"     * Return the string representation of Deadline details with day and time, prefixed with [D]","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"     * @return the string representation of Deadline details","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" * Duke is a simple bot that allows users to keep track of different types of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_ICON \u003d \"[~o_o~]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    private final static String BYE \u003d \"bye\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    private final static String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_TEXT_SPACE \u003d \"         \";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     * Prints greeting text of the robotFriend.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": Hello I am your RobotFriend.\\n\" + ROBOT_TEXT_SPACE + \"How can i help you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"Commands:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"bye: terminate session:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"list: view all tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"done i: mark task number i as complete and view the task.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"delete i: delete the task at the given index i.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"todo *description*: add todo task.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"event *description* /at *date*: add event task.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"deadline *description* /by *timing*: add deadline task.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * Echos the user inputted String in a robot way.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user inputted String","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    private static void echo(String userInput) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     * Prints the exiting text in a robot way.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    private static void bye() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Bye~ Hope to see you soon :)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"     * Prints current number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"    private static void printCurrentNumberOfTask() {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Now you have \" + list.size() + \" tasks!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"     * Add task to list.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        list.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"     * Prints error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"     * @param e error","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"    private static void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"     * Returns ToDo task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"     * @return todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"    private static ToDo makeToDoTask(String userInput) throws NoTaskDescriptionException {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"        if (userInput.length() \u003d\u003d \"todo\".length()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"        return new ToDo(userInput.substring(\"todo\".length() + 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"     * Returns Event task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"     * @return event task","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"    private static Task makeEventTask(String userInput) throws NoTaskDescriptionException, NoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"        int indexOfAt \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"elroygohjy"},"content":"        int EndIndexForEvent \u003d \"event\".length();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"elroygohjy"},"content":"        boolean doesAtExist \u003d indexOfAt !\u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"elroygohjy"},"content":"        boolean doesTimeExist \u003d userInput.length() \u003e indexOfAt + \"/at\".length() + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"elroygohjy"},"content":"        boolean doesEventDescriptionExist \u003d indexOfAt !\u003d EndIndexForEvent + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"        if (!doesAtExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateIndicatorException(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"        if (!doesTimeExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateException(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"        if (!doesEventDescriptionExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"elroygohjy"},"content":"        return new Event(userInput.substring(\"event\".length() + 1, indexOfAt - 1),","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"elroygohjy"},"content":"                userInput.substring(indexOfAt + \"/at\".length() + 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"elroygohjy"},"content":"     * Returns Deadline task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"elroygohjy"},"content":"     * @return deadline task","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"    private static Deadline makeDeadlineTask(String userInput) throws NoTaskDescriptionException, NoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"        int indexOfBy \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"        int EndIndexForDeadline \u003d \"deadline\".length();","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"        boolean doesByExist \u003d indexOfBy !\u003d -1;","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"        boolean doesDateExist \u003d userInput.length() \u003e indexOfBy + \"/by\".length() + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"        boolean doesDeadlineDescriptionExist \u003d indexOfBy !\u003d EndIndexForDeadline + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"        if (!doesByExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateIndicatorException(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"elroygohjy"},"content":"        if (!doesDateExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateException(\"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"elroygohjy"},"content":"        if (!doesDeadlineDescriptionExist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"        return new Deadline(userInput.substring(\"deadline\".length() + 1, indexOfBy - 1),","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"                userInput.substring(indexOfBy + \"/by\".length() + 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"     * Adds user inputted String to list and prints the user added tasks and the current number of tasks, else","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"     * print error message for the error","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user inputted String","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"elroygohjy"},"content":"    private static void otherCommands(String userInput) {","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"        Task newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"elroygohjy"},"content":"            case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"elroygohjy"},"content":"                completeAndPrintTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"elroygohjy"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"elroygohjy"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"elroygohjy"},"content":"                deleteAndPrintTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"elroygohjy"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"elroygohjy"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeToDoTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"elroygohjy"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeDeadlineTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"elroygohjy"},"content":"            case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeEventTask(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"elroygohjy"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidCommandException | NoTaskDescriptionException | NoDateIndicatorException | NoDateException err) {","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"elroygohjy"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have added this following task to the list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(newTask.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"elroygohjy"},"content":"        printCurrentNumberOfTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"elroygohjy"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"elroygohjy"},"content":"    private static void printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Your list contains the following task/s:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"elroygohjy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"elroygohjy"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"elroygohjy"},"content":"     * Deletes the task from list.","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"elroygohjy"},"content":"     * @param task task","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"elroygohjy"},"content":"    private static void deleteTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"elroygohjy"},"content":"        list.remove(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"elroygohjy"},"content":"     * Marks the task as complete and prints out the task, throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput the index of the task in list","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"elroygohjy"},"content":"    private static void completeAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"elroygohjy"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"elroygohjy"},"content":"        boolean isTaskDoneCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"done\");","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"elroygohjy"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"elroygohjy"},"content":"                taskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"elroygohjy"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":231,"author":{"gitId":"elroygohjy"},"content":"            if (!isTaskDoneCommand || taskNumber \u003e list.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-22"},{"lineNumber":233,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have completed the following task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"elroygohjy"},"content":"        list.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(list.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"elroygohjy"},"content":"     * Delete the task and prints out the task and current number of tasks,","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"elroygohjy"},"content":"     * throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput the index of the task in list","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"elroygohjy"},"content":"    private static void deleteAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":254,"author":{"gitId":"elroygohjy"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"elroygohjy"},"content":"        boolean isTaskDeleteCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"delete\");","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"elroygohjy"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"elroygohjy"},"content":"                taskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"elroygohjy"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"elroygohjy"},"content":"            if (!isTaskDeleteCommand || taskNumber \u003e list.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have removed the following task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":273,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(list.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":274,"author":{"gitId":"elroygohjy"},"content":"        deleteTask(list.get(taskNumber - 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have \" + list.size() + \" task/s left.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":277,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":278,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"elroygohjy"},"content":"        greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"elroygohjy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"elroygohjy"},"content":"        while (true) {","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"elroygohjy"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"elroygohjy"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"elroygohjy"},"content":"            if (userInput.equals(BYE)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"elroygohjy"},"content":"                bye();","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"elroygohjy"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"elroygohjy"},"content":"                printList();","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"elroygohjy"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"elroygohjy"},"content":"                otherCommands(userInput);","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"elroygohjy":293,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * A Event-type Task consisting of event details, day and time.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"     * The day and time in string","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a instance of Event that consist of event details, day and time","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"     * @param taskDetails Description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"     * @param at day and time in string","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    public Event(String taskDetails, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"     * Return the string representation of Event details with day and time, prefixed with [E]","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"     * @return the string representation of Event details","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":29}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * InvalidCommandException is an exception that is thrown when command is not recognized for any type of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * Constructs error message for InvalidCommandException.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":13}},{"path":"src/main/java/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * InvalidIndexException is thrown if done i, where i is the index of task is not a number or taskNumber","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" * exceeds the current list size.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"public class InvalidIndexException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * Constructs error message for either delete or done command","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     * @param commandType is either delete or done command","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public InvalidIndexException(String commandType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! The task to set as \"+ commandType + \" does not exists. Please try again!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":15}},{"path":"src/main/java/NoDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * NoDateException is thrown if there is no date/timing provided by either Event or Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class NoDateException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * Constructs error message for NoDateException depending on the eventType.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     * @param taskType it can be either Deadline or Event task type.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    public NoDateException(String taskType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! The date/timing of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":14}},{"path":"src/main/java/NoDateIndicatorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * NoDateIndicatorException is thrown if there is no /at or /by provided by either Event or Deadline task respectively.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class NoDateIndicatorException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * Constructs error message depending on whether it is Deadline or Event task type.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     * @param dateType the dateType can be either Deadline or Event task type.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public NoDateIndicatorException(String dateType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! You are missing \" + dateType + \" before your timing/date\");","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":16}},{"path":"src/main/java/NoTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * NoTaskDescriptionException is thrown when there is no task description for any task.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class NoTaskDescriptionException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    private final static String SAD_ROBOT_ICON \u003d \"[~T-T~]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     * Constructs error message for NoTaskDescriptionException depending on taskType.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     * @param taskType type of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    public NoTaskDescriptionException(String taskType) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"        super(SAD_ROBOT_ICON +\": OOPS!!! The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"elroygohjy":15}},{"path":"src/main/java/RobotFriend.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":" * RobotFriend is a simple bot that allows users to keep track of different types of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"public class RobotFriend {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_ICON \u003d \"[~o_o~]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    private final static String BYE \u003d \"bye\";","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    private final static String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    private final static String ROBOT_TEXT_SPACE \u003d \"         \";","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     * Prints greeting text of the robotFriend.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": Hello I am your RobotFriend.\\n\" + ROBOT_TEXT_SPACE + \"How can i help you?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"Commands:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"bye: terminate session:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"list: view all tasks in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"done i: mark task number i as complete and view the task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"delete i: delete the task at the given index i.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"todo *description*: add todo task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"event *description* /at *date*: add event task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_TEXT_SPACE + \"deadline *description* /by *timing*: add deadline task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * Echos the user inputted String in a robot way.","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user inputted String","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    private static void echo(String userInput) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + userInput);","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     * Prints the exiting text in a robot way.","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    private static void bye() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Bye~ Hope to see you soon :)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"     * Prints current number of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"    private static void printCurrentNumberOfTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Now you have \" + list.size() + \" tasks!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"     * Add task to list.","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        list.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"     * Prints error message.","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"     * @param e error","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"    private static void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"     * Returns ToDo task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"     * @return todo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"    private static ToDo makeToDoTask(String userInput) throws NoTaskDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"        if (userInput.length() \u003d\u003d \"todo\".length()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"        return new ToDo(userInput.substring(\"todo\".length() + 1));","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"     * Returns Event task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"     * @return event task","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"    private static Task makeEventTask(String userInput) throws NoTaskDescriptionException, NoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"        int indexOfAt \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"elroygohjy"},"content":"        int EndIndexForEvent \u003d \"event\".length();","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"elroygohjy"},"content":"        boolean doesAtExist \u003d indexOfAt !\u003d -1;","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"elroygohjy"},"content":"        boolean doesTimeExist \u003d userInput.length() \u003e indexOfAt + \"/at\".length() + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"elroygohjy"},"content":"        boolean doesEventDescriptionExist \u003d indexOfAt !\u003d EndIndexForEvent + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"        if (!doesAtExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateIndicatorException(\"/at\");","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"        if (!doesTimeExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateException(\"event\");","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"        if (!doesEventDescriptionExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"elroygohjy"},"content":"        return new Event(userInput.substring(\"event\".length() + 1, indexOfAt - 1),","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"elroygohjy"},"content":"                userInput.substring(indexOfAt + \"/at\".length() + 1));","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"elroygohjy"},"content":"     * Returns Deadline task otherwise throw an appropriate error.","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user input String","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"elroygohjy"},"content":"     * @return deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoTaskDescriptionException if there is no task description, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateIndicatorException if there is no /by indicator, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"     * @throws NoDateException if there is no date, it will result in this error.","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"    private static Deadline makeDeadlineTask(String userInput) throws NoTaskDescriptionException, NoDateIndicatorException, NoDateException {","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"        int indexOfBy \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"        int EndIndexForDeadline \u003d \"deadline\".length();","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"        boolean doesByExist \u003d indexOfBy !\u003d -1;","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"        boolean doesDateExist \u003d userInput.length() \u003e indexOfBy + \"/by\".length() + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"        boolean doesDeadlineDescriptionExist \u003d indexOfBy !\u003d EndIndexForDeadline + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"        if (!doesByExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateIndicatorException(\"/by\");","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"elroygohjy"},"content":"        if (!doesDateExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"elroygohjy"},"content":"            throw new NoDateException(\"deadline\");","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"elroygohjy"},"content":"        if (!doesDeadlineDescriptionExist) {","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"elroygohjy"},"content":"            throw new NoTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"        return new Deadline(userInput.substring(\"deadline\".length() + 1, indexOfBy - 1),","lastModifiedDate":"2021-08-16"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"                userInput.substring(indexOfBy + \"/by\".length() + 1));","lastModifiedDate":"2021-08-16"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"     * Adds user inputted String to list and prints the user added tasks and the current number of tasks, else","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"     * print error message for the error","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput user inputted String","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"elroygohjy"},"content":"    private static void otherCommands(String userInput) {","lastModifiedDate":"2021-08-16"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"        Task newTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"elroygohjy"},"content":"            case \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":166,"author":{"gitId":"elroygohjy"},"content":"                completeAndPrintTask(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":167,"author":{"gitId":"elroygohjy"},"content":"                return;","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"elroygohjy"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-16"},{"lineNumber":169,"author":{"gitId":"elroygohjy"},"content":"                deleteAndPrintTask(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":170,"author":{"gitId":"elroygohjy"},"content":"                return;","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"elroygohjy"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeToDoTask(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"elroygohjy"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeDeadlineTask(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"elroygohjy"},"content":"            case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"elroygohjy"},"content":"                newTask \u003d makeEventTask(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"elroygohjy"},"content":"            default:","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidCommandException | NoTaskDescriptionException | NoDateIndicatorException | NoDateException err) {","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"elroygohjy"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have added this following task to the list:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(newTask.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"elroygohjy"},"content":"        printCurrentNumberOfTask();","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"elroygohjy"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"elroygohjy"},"content":"    private static void printList() {","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"Your list contains the following task/s:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"elroygohjy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"elroygohjy"},"content":"            System.out.println((i + 1) + \". \" + list.get(i).toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"elroygohjy"},"content":"     * Deletes the task from list.","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"elroygohjy"},"content":"     * @param task task","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"elroygohjy"},"content":"    private static void deleteTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":213,"author":{"gitId":"elroygohjy"},"content":"        list.remove(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"elroygohjy"},"content":"     * Marks the task as complete and prints out the task, throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput the index of the task in list","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"elroygohjy"},"content":"    private static void completeAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"elroygohjy"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"elroygohjy"},"content":"        boolean isTaskDoneCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"done\");","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":226,"author":{"gitId":"elroygohjy"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":227,"author":{"gitId":"elroygohjy"},"content":"                taskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":228,"author":{"gitId":"elroygohjy"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-16"},{"lineNumber":229,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-16"},{"lineNumber":230,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":231,"author":{"gitId":"elroygohjy"},"content":"            if (!isTaskDoneCommand || taskNumber \u003e list.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":232,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"done\");","lastModifiedDate":"2021-08-16"},{"lineNumber":233,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":234,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-16"},{"lineNumber":235,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-16"},{"lineNumber":236,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-16"},{"lineNumber":237,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":238,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":239,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":240,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have completed the following task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":241,"author":{"gitId":"elroygohjy"},"content":"        list.get(taskNumber - 1).completeTask();","lastModifiedDate":"2021-08-16"},{"lineNumber":242,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(list.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":243,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":244,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":245,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":246,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":247,"author":{"gitId":"elroygohjy"},"content":"     * Delete the task and prints out the task and current number of tasks,","lastModifiedDate":"2021-08-16"},{"lineNumber":248,"author":{"gitId":"elroygohjy"},"content":"     * throws error if done command is not properly formatted.","lastModifiedDate":"2021-08-16"},{"lineNumber":249,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":250,"author":{"gitId":"elroygohjy"},"content":"     * @param userInput the index of the task in list","lastModifiedDate":"2021-08-16"},{"lineNumber":251,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":252,"author":{"gitId":"elroygohjy"},"content":"    private static void deleteAndPrintTask(String userInput) {","lastModifiedDate":"2021-08-16"},{"lineNumber":253,"author":{"gitId":"elroygohjy"},"content":"        String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":254,"author":{"gitId":"elroygohjy"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-16"},{"lineNumber":255,"author":{"gitId":"elroygohjy"},"content":"        boolean isTaskDeleteCommand \u003d tokens.length \u003d\u003d 2 \u0026\u0026 tokens[0].equals(\"delete\");","lastModifiedDate":"2021-08-16"},{"lineNumber":256,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":257,"author":{"gitId":"elroygohjy"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":258,"author":{"gitId":"elroygohjy"},"content":"                taskNumber \u003d Integer.parseInt(tokens[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":259,"author":{"gitId":"elroygohjy"},"content":"            } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-16"},{"lineNumber":260,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-16"},{"lineNumber":261,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":262,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":263,"author":{"gitId":"elroygohjy"},"content":"            if (!isTaskDeleteCommand || taskNumber \u003e list.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":264,"author":{"gitId":"elroygohjy"},"content":"                throw new InvalidIndexException(\"delete\");","lastModifiedDate":"2021-08-16"},{"lineNumber":265,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":266,"author":{"gitId":"elroygohjy"},"content":"        } catch (InvalidIndexException err) {","lastModifiedDate":"2021-08-16"},{"lineNumber":267,"author":{"gitId":"elroygohjy"},"content":"            printErrorMessage(err);","lastModifiedDate":"2021-08-16"},{"lineNumber":268,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-08-16"},{"lineNumber":269,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":270,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":271,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":272,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have removed the following task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":273,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(list.get(taskNumber - 1).toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":274,"author":{"gitId":"elroygohjy"},"content":"        deleteTask(list.get(taskNumber - 1));","lastModifiedDate":"2021-08-16"},{"lineNumber":275,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(ROBOT_ICON + \": \" + \"You have \" + list.size() + \" task/s left.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":276,"author":{"gitId":"elroygohjy"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":277,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":278,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":279,"author":{"gitId":"elroygohjy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":280,"author":{"gitId":"elroygohjy"},"content":"        greet();","lastModifiedDate":"2021-08-15"},{"lineNumber":281,"author":{"gitId":"elroygohjy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":282,"author":{"gitId":"elroygohjy"},"content":"        while (true) {","lastModifiedDate":"2021-08-15"},{"lineNumber":283,"author":{"gitId":"elroygohjy"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":284,"author":{"gitId":"elroygohjy"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":285,"author":{"gitId":"elroygohjy"},"content":"            if (userInput.equals(BYE)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":286,"author":{"gitId":"elroygohjy"},"content":"                bye();","lastModifiedDate":"2021-08-15"},{"lineNumber":287,"author":{"gitId":"elroygohjy"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":288,"author":{"gitId":"elroygohjy"},"content":"            } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":289,"author":{"gitId":"elroygohjy"},"content":"                printList();","lastModifiedDate":"2021-08-15"},{"lineNumber":290,"author":{"gitId":"elroygohjy"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":291,"author":{"gitId":"elroygohjy"},"content":"                otherCommands(userInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":292,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":293,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":294,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":295,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":296,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":297,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":297}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * Task is an Object that consist of the status of completion and the task details.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"     * the status of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"    private boolean isComplete;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"     * the details of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    private final String taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a uncompleted task with the details as taskDetails","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     * @param taskDetails task name","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    public Task(String taskDetails) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"     * set isComplete as true","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"     * Returns the task Details with the prefix of the status of completion of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     * @return A string representation of task details with the prefix of the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        if (isComplete) {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"            return \"[✓] \" + taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"            return \"[ ] \" + taskDetails;","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":45}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":" * A toDo-type of Task that contains details toDo.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"     * Constructs a uncompleted task with the details as taskDetails","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"     * @param taskDetails task name","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    public ToDo(String taskDetails) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"     * Returns the task details with the prefix first with [T] followed by the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     * @return the task details with the prefix first with [T] followed by the status of completion of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"deadline /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"deadline /by","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"event /at","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"done x","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"done x x","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"delete x","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"delete x x","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"elroygohjy":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"java -classpath ..\\bin RobotFriend \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elroygohjy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"java -classpath ../bin RobotFriend \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"elroygohjy":1,"-":37}}]
