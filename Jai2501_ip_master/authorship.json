[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of tasks with a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    private TaskDateAndTime by;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a deadline task.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"     * @param by Time to do the task by.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    public Deadline(String description, TaskDateAndTime by) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * Returns the deadline task description and its status in an","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the deadline task details.","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Jai2501":32}},{"path":"src/main/java/retriever/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * The Parser class is responsible for parsing","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" * various user inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private boolean isSessionDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        this.isSessionDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * Marks the isSessionDone to true, when the user inputs","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * the \"bye\" keyword, indicating, the end of session.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    public void markSessionDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        isSessionDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     * Returns whether the user would like to continue or no.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean indicating to end the session or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        return isSessionDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     * Parses the user input, and calls the respective command","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * method to execute it. If the command entered is invalid,","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     * an exception is thrown.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"     * @param userCommand The command entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"     * @throws RetrieverException If the command is invalid or unformatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput(String userCommand) throws RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"        String[] userInput \u003d userCommand.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        String commandEntered \u003d userInput[0].toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        switch(commandEntered) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"                taskList.printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"                taskList.deleteTask(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"                taskList.markTaskAsDone(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"                taskList.addDeadlineTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"                taskList.addEventTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"                taskList.addTodoTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"                markSessionDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"                throw new IllegalCommandException(\"Woof! Command Not Found! Can I Sleep?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":76}},{"path":"src/main/java/retriever/Retriever.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":" * A Chatbot to help manage your daily schedule.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"public class Retriever {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    /** To perform operations on the tasks stored in the text file*/","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    private Storage taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    public Retriever(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * Main body of the Retriever Chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        // To show the welcome message","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        // To store the user input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        String userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        // Main body which is repeated till the \"bye\" keyword is encountered.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"            // Taking input","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"            userInput \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"                parser.parseUserInput(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"            } catch (RetrieverException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"                // Catching various exceptions and alerting the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"            ui.printDashedLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"        } while(!parser.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        // Printing the good-bye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"     * Returns an interactive session with the Chatbot. Basically a mean to interact with it.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"     * @param args Here, usually nothing is passed.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"        // Calling the run() method to start the Chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"        new Retriever(\"tasksList.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":62}},{"path":"src/main/java/retriever/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"import retriever.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":" * This class helps to read, write, update and delete","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":" * tasks from the file it is being stored in.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"     * Creates a new file in case the file doesn\u0027t exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    public void createNewFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"            File myFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"            if (myFile.createNewFile()){","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"                System.out.println(\"Woof! File is Created!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"            }else{","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"                System.out.println(\"File Already Exists Master.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Master, Your Computer Has Issues!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"     * Reads the tasks from the text file and returns it","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"     * as an ArrayList.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * @return An ArrayList with the tasks stored in it.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"            Scanner scanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"                // Parsing the line read from file","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"                String[] tokens \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"                // Storing the extracted task components.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"                String completionStatus \u003d tokens[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"                String taskDescription \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"                // Checking the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"                if(taskType.contains(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"                    Task deadlineTask \u003d new Deadline(taskDescription, new TaskDateAndTime(tokens[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"                    if(completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"                        deadlineTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"                if(taskType.contains(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"                    Task eventTask \u003d new Event(taskDescription, new TaskDateAndTime(tokens[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"                    if(completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"                        eventTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"                if(taskType.contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"                    Task todoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"                    if(completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"                        todoTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"            scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Master, File Does Not Exist, Give Me A Treat, And\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"                    + \"I Shall Create One For You! :)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"            // In case the file doesn\u0027t exist, one is created.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"            createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"     * Writes the task entered to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"     * @param task An enum representing the task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"     * @param taskDeadline The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"    public void writeTask(Task.TaskType task, String taskDescription, String taskDeadline){","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"        String taskAsText;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        // Formatting the string appropriately to add task to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"        switch (task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"                taskAsText \u003d \"D | 0 | \" + taskDescription + \" | \" + taskDeadline + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"                taskAsText \u003d \"E | 0 | \" + taskDescription + \" | \" + taskDeadline + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"            case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"                taskAsText \u003d \"T | 0 | \" + taskDescription + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"                taskAsText \u003d \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"        // Writing the task to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"            fw.write(taskAsText);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Master, Sorry! I Ate The File!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"     * Deletes a task from the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"     * @param taskNumber The task number to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"        // Reading and writing to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"            String currentLine;","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"            while((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"                if(counter \u003d\u003d taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"                    writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"                counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"            reader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"            boolean isNameChangeSuccessful \u003d tempFile.renameTo(inputFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Master! Error Reading File. Gimme Treats, And I Help You!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"     * Updates a given task status to done in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"     * @param taskNumber The task number to be updated.","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"    public void updateTaskStatusToDone(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"        // Reading and writing to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"            String currentLine;","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"            while((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"                if(counter \u003d\u003d taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"                    String[] taskToUpdate \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"                    String newLine \u003d taskToUpdate[0] + \" | 1 | \" + taskToUpdate[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"                    if(!taskToUpdate[0].contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"                        newLine +\u003d \" | \" + taskToUpdate[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"                    writer.write(newLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"                    writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"                counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"            reader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"            boolean isNameChangeSuccessful \u003d tempFile.renameTo(inputFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Master! Error Reading File. Gimme Treats, And I Help You!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":213}},{"path":"src/main/java/retriever/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * The class handles the user interaction between the","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" * user and the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    // Predetermined strings.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private String dashedLine \u003d \"_______________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    private String welcomeMessage \u003d \"Hello, I am Retriever\\nHow Can I Help You Today?\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private String goodByeMessage \u003d \"-\u003e Sad To See You Go!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private String emptyListMessage \u003d \"My Memory Is Empty, Please Feed Items!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    private String printListMessage \u003d \"-\u003e Your Tasks, My Master:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    private String logo \u003d \"  __      ^\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"            + \"o\u0027\u0027)}____//\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"            + \" `_\u0027      )\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"            + \"(_(_/-(_/\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"        System.out.println(dashedLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        System.out.println(dashedLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        // Closing the scanner.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"        System.out.println(goodByeMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"        System.out.println(dashedLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"     * Prints the error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"     * @param errorMessage The exception message to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"     * Prints a dashed line.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"    public void printDashedLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        System.out.println(dashedLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"     * Prints the task added message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"     * @param taskListLength The length of the task list, after adding the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"    public void printTaskAdded(Task task, int taskListLength) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"-\u003e Where\u0027s My Treat? I Added: \\n\\t\" + task);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"        // Add Task Size here.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"\\nYou Owe Me \" + taskListLength + \" Treat(s), Master!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"     * Prints the task deleted message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"     * @param taskListLength The length of the task list, after deleting the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"    public void printTaskDeleted(Task task, int taskListLength) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"                + \"Task Deleted!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"                + \"\\t\" + task","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"                // Add Task Size here.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"                + \"\\nYou Owe Me \" + taskListLength + \" Treat(s), Master!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"     * Prints the task done message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been done.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"    public void printTaskMarkedAsDone(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"Woof! Whose a Good Boy?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"                + \"Task Done!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"                + \"\\t\" + task);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"     * Reads the command entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"     * @return The user input command.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"        // To store the user input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        String userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"        // Taking input","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"        userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"        return userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":119}},{"path":"src/main/java/retriever/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalCommandException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalCommandException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalDateFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalDateFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalDeadlineFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalDeadlineFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalEventFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalEventFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalTaskNumberException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalTaskNumberException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalTodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalTodoFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalTodoFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/RetrieverException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * RetrieverException is an Exception Class specific for Exceptions","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" * that could be encountered when using the Retriever Chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class RetrieverException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    public RetrieverException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":12}},{"path":"src/main/java/retriever/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class TaskNotFoundException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of tasks with a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    private TaskDateAndTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     * @param by Time to do the task by.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    public Deadline(String description, TaskDateAndTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * Returns the deadline task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the deadline task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":31}},{"path":"src/main/java/retriever/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of event type tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    private TaskDateAndTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize an event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     * @param at What time the event is at.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    public Event(String description, TaskDateAndTime at){","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * Returns the event task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the event task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":32}},{"path":"src/main/java/retriever/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class would help to keep track of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"        EVENT,","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        TODO","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     * @param description The task description entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"        /** Variables to hold values. */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     * Returns the status of the task in the form of a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     * @return A String indicating whether the task is accomplished or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     * @return The description.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * Sets the task to done by updating the isDone variable.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"     * Returns the task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":64}},{"path":"src/main/java/retriever/task/TaskDateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":" * This class helps to manage the date and time formatting","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * for tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"public class TaskDateAndTime {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    private String userInputDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    private LocalDate taskDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public TaskDateAndTime(String userInputDateAndTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        this.userInputDateAndTime \u003d userInputDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        isValidDate();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     * Validates if the date is entered in the correct","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * format.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean indicating if the date is valid.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    public boolean isValidDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        String[] userInputDate \u003d userInputDateAndTime.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        if(userInputDate.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"            taskDateAndTime \u003d LocalDate.parse(userInputDate[2] + \"-\" +userInputDate[1] + \"-\" + userInputDate[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        return userInputDate.length \u003d\u003d 3;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     * Returns the string representation of date in a","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"     * specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"     * @return Formatted date.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        return taskDateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":43}},{"path":"src/main/java/retriever/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import retriever.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":" * This class handles the task list and various","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":" * operations on it.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    private ArrayList\u003cTask\u003e userTaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private Storage taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    public TaskList(Storage taskStorage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        this.userTaskList \u003d taskStorage.readTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    public int taskListLength() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        return userTaskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     * To add a deadline type task to the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDeadlineFormatException If the format for adding a deadline task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDateFormatException If the date format is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask(String userInput) throws IllegalDeadlineFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted deadline task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"        if(!userInput.toLowerCase().contains(\"/by\")","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"                || userInput.split(\" \").length \u003c 4","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(9).split(\" /by \").length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDeadlineFormatException(\"Please Follow The Format For Adding A Deadline Task: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tdeadline task_description /by DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"        // Making sure that the time is properly formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime deadlineDate \u003d new TaskDateAndTime(userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        if(!deadlineDate.isValidDate()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDateFormatException(\"Please Follow The Date Format DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        Task deadlineTask \u003d new Deadline(userInputArray[0], deadlineDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.DEADLINE, userInputArray[0], userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(deadlineTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"     * To add an event type task to the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalEventFormatException If the format for adding an event task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDateFormatException If the date format is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask(String userInput) throws IllegalEventFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted event task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"        if(!userInput.toLowerCase().contains(\"/at\")","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"                || userInput.split(\" \").length \u003c 4","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(5).split(\" /at \").length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalEventFormatException(\"Please Follow The Format For Adding An Event Task: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tevent task_description /at time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(6).split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        // Making sure that the date is properly formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime eventDate \u003d new TaskDateAndTime(userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"        if(!eventDate.isValidDate()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDateFormatException(\"Please Follow The Date Format DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"        Task eventTask \u003d new Event(userInputArray[0], eventDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.EVENT, userInputArray[0], userInputArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(eventTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"     * To add a todo type task to the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTodoFormatException If the format for adding a todo task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"    public void addTodoTask(String userInput) throws IllegalTodoFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted todo task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"        if(userInput.split(\" \").length \u003c 2","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(5).compareTo(\"\") \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTodoFormatException(\"Please Follow The Format For Adding A Todo Task: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"                    + \"\\ttodo task_description\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"        String userInputTodo \u003d userInput.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"        Task todoTask \u003d new Todo(userInputTodo);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(todoTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.TODO, userInputTodo, \"N/A\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(todoTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"     * Deletes a particular task from the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"delete\" keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number.","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"        String[] holder \u003d parsedUserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"        if(holder.length \u003c\u003d 1 || holder[1].compareTo(\"\") \u003d\u003d 0","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"                || !Character.isDigit(holder[1].charAt(0))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(holder[1])) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"        if (taskNumber \u003c\u003d (userTaskList.size() - 1) \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"            Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"            userTaskList.remove(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"            taskStorage.deleteTask(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"            ui.printTaskDeleted(task, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"     * Marks a particular task as done in the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"done\" keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number.","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"    public void markTaskAsDone(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"        String[] holder \u003d parsedUserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"        if(holder.length \u003c\u003d 1 || holder[1].compareTo(\"\") \u003d\u003d 0","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"                || !Character.isDigit(holder[1].charAt(0))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(holder[1])) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"        if (taskNumber \u003c\u003d (userTaskList.size() - 1) \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"            Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"            taskStorage.updateTaskStatusToDone(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"            ui.printTaskMarkedAsDone(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"     * To print the tasks stored in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"        // If the list is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"        if(userTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"My Memory Is Empty, Please Feed Items!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"-\u003e Your Tasks, My Master:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"            for (int i \u003d 0; i \u003c userTaskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"                System.out.println(\"\\t\" + ((i + 1) + \". \" + userTaskList.get(i)));","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":190}},{"path":"src/main/java/retriever/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of todo type tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     * Returns the todo task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the todo task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":28}},{"path":"src/test/java/retriever/task/TaskDateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class TaskDateAndTimeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    public void toString_aDateInStringFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Aug 21 2021\", new TaskDateAndTime(\"21/08/2021\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public void isValidTestMethod_aDateInputInStringFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        assertEquals(true, new TaskDateAndTime(\"23/08/2021\").isValidDate());","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    @Test void isValidTestMethod_aDateWronglyFormatted_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        assertEquals(false, new TaskDateAndTime(\"21 Jan 2001\").isValidDate());","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":21}},{"path":"src/test/java/retriever/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDateFormatException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDeadlineFormatException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    public void taskListLength_checkingLengthOfEmptyList_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        assertEquals(0, new TaskList(new StorageStub()).taskListLength());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"deadline CS2103T iP /by 26/08/2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"            taskList.addDeadlineTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"event Apple WWDC 2021 /at 10/06/2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"            taskList.addEventTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"    public void addTodoTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"todo laundry\";","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"            taskList.addTodoTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"    public void taskListLength_afterAddingSomeItems_success() throws RetrieverException {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"        TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"        taskList.addTodoTask(\"todo sleep\");","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"        taskList.addDeadlineTask(\"deadline CS2103T iP /by 26/08/2021\");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"        assertEquals(2, taskList.taskListLength());","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask_addingTaskUsingIncorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"deadline CS2103T iP /by 26-08-2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"            taskList.addDeadlineTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        } catch (IllegalDateFormatException | IllegalDeadlineFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"            assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask_addingTaskUsingIncorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"event Apple WWDC 2021 /at 10th June 2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"            taskList.addEventTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"            assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"class StorageStub extends Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"    public StorageStub(){","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"        super(\"file_name_stub\");","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"    public void writeTask(Task.TaskType task, String taskDescription, String taskDeadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        // Assume we are writing a task to the file","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"        // Assume we are deleting task from file","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"    public void updateTaskStatusToDone(int taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"        // Assume we are updating task status in file","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"    public void createNewFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"        // Assume we are creating a new file","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":128}},{"path":"tasksList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"D | 1 | hw | 25/01/2001","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"E | 1 | sleep | 29/01/2090","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"E | 1 | Apple | 11/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"D | 1 | CS2103T | 23/08/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"D | 1 | AI | 25/09/2009","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"T | 0 | sleep","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"D | 1 | CS2100 Lab | 25/08/2021","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"Hi","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"todo fix bugs","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"deadline CS2103T week 1 ip /by 19th Aug","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"event Apple WWDC 2021 /at 11PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"event attend CS2100 lecture /at 4PM","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"event ST2334 tut /at 1PM","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"todo code","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"deadline /at","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"done 6","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"todo clean room","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"event Watch Netflix /at 12AM","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"delete 8","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jai2501":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"java -classpath ../bin Retriever \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Jai2501":1}}]
