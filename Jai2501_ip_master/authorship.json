[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of tasks with a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    private String by;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a deadline task.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * @param by Time to do the task by.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     * Returns the deadline task description and its status in an","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the deadline task details.","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Jai2501":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of event type tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    private String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize an event task.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * @param at What time the event is at.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public Event(String description, String at){","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     * Returns the event task description and its status in an","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the event task details.","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Jai2501":29}},{"path":"src/main/java/Retriever.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":" * A Chatbot to help manage your daily schedule.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"public class Retriever {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    /** To store the user inputs */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    private List\u003cTask\u003e userTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the entered String","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"     * is the word \"bye\" or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     * @return a boolean according to the condition.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    public boolean isItBye(String userInput) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        return userInput.toLowerCase().compareTo(\"bye\") \u003d\u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the entered String","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     * contains the word \"delete\" or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     * @return a boolean according to the condition.","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    public boolean isItDelete(String userInput) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        return userInput.toLowerCase().contains(\"delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the entered String","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"     * contains the word \"done\" or not.","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     * @return a boolean according to the condition.","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    public boolean isItDone(String userInput) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        return userInput.toLowerCase().contains(\"done\");","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the entered String","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * is the word \"list\" or not.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The input entered by the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"     * @return a boolean according to the condition.","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    public boolean isItList(String userInput) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        return userInput.toLowerCase().compareTo(\"list\") \u003d\u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"     * To print the tasks stored in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    public void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        // If the list is empty","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        if(userTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"My Memory Is Empty, Please Feed Items!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"-\u003e Your Tasks, My Master:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"            for (int i \u003d 0; i \u003c userTaskList.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"                System.out.println(\"\\t\" + ((i + 1) + \". \" + userTaskList.get(i)));","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"     * To print the task added in a formatted style.","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"    public void printAddedTask(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"-\u003e Where\u0027s My Treat? I Added: \\n\\t\" + task);","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"\\nYou Owe Me \" + userTaskList.size() + \" Treat(s), Master!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"     * Marks a particular task as done in the task list.","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The command entered by the user with the \"done\" keyword.","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number or does not exist.","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"    public void markTaskDone(String userInput) throws TaskNotFoundException, IllegalTaskNumberException {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"        String[] holder \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"        if(holder.length \u003c\u003d 1 || holder[1].compareTo(\"\") \u003d\u003d 0","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"                || !Character.isDigit(holder[1].charAt(0))) {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be marked as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(holder[1])) - 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"        if (taskNumber \u003c\u003d (userTaskList.size() - 1) \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"            Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Woof! Whose a Good Boy?\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"                    + \"Task Done!\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"                    + \"\\t\"","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"                    + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"     * Deletes a particular task from the task list.","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The command entered by the user with the \"delete\" keyword.","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number or does not exist.","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(String userInput) throws TaskNotFoundException, IllegalTaskNumberException {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"        String[] holder \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"        if(holder.length \u003c\u003d 1 || holder[1].compareTo(\"\") \u003d\u003d 0","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"                || !Character.isDigit(holder[1].charAt(0))) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(holder[1])) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"        if (taskNumber \u003c\u003d (userTaskList.size() - 1) \u0026\u0026 taskNumber \u003e\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"            Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"            userTaskList.remove(taskNumber);","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"                    + \"Task Deleted!\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"                    + \"\\t\" + task","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"                    + \"\\nYou Owe Me \" + userTaskList.size() + \" Treat(s), Master!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"     * To parse and add a deadline type task to the task list.","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDeadlineFormatException If the format for adding a deadline task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"    public void addDeadline(String userInput) throws IllegalDeadlineFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted deadline task is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"        if(!userInput.toLowerCase().contains(\"/by\")","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"                || userInput.split(\" \").length \u003c 4","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(9).split(\" /by \").length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDeadlineFormatException(\"Please Follow The Format For Adding A Deadline Task: \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tdeadline task_description /by date\");","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(9).split(\" /by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"        Task deadlineTask \u003d new Deadline(userInputArray[0], userInputArray[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(deadlineTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"        printAddedTask(deadlineTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"     * To parse and add an event type task to the task list.","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalEventFormatException If the format for adding an event task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"    public void addEvent(String userInput) throws IllegalEventFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted event task is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"        if(!userInput.toLowerCase().contains(\"/at\")","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"                || userInput.split(\" \").length \u003c 4","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(5).split(\" /at \").length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalEventFormatException(\"Please Follow The Format For Adding An Event Task: \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tevent task_description /at time\");","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(6).split(\" /at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"        Task eventTask \u003d new Event(userInputArray[0], userInputArray[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(eventTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"        printAddedTask(eventTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"     * To parse and add a tdod type task to the task list.","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTodoFormatException If the format for adding a todo task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"    public void addTodo(String userInput) throws IllegalTodoFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted todo task is entered.","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"        if(userInput.split(\" \").length \u003c 2","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"                || userInput.substring(5).compareTo(\"\") \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTodoFormatException(\"Please Follow The Format For Adding A Todo Task: \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"                    + \"\\ttodo task_description\");","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"        String userInputTodo \u003d userInput.substring(5);","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"        Task todoTask \u003d new Todo(userInputTodo);","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(todoTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":215,"author":{"gitId":"Jai2501"},"content":"        printAddedTask(todoTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":217,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":218,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":219,"author":{"gitId":"Jai2501"},"content":"     * Parsing the user input to find out which type of","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"Jai2501"},"content":"     * task does the user want to make an entry for.","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The details input by the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":223,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalCommandException If the command entered by the user does not make sense.","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDeadlineFormatException If the format for adding a deadline task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalEventFormatException If the format for adding an event task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTodoFormatException If the format for adding a todo task is not followed.","lastModifiedDate":"2021-08-18"},{"lineNumber":227,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":228,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput(String userInput) throws IllegalCommandException,","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"Jai2501"},"content":"            IllegalDeadlineFormatException, IllegalEventFormatException, IllegalTodoFormatException {","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":232,"author":{"gitId":"Jai2501"},"content":"        String command \u003d userInputArray[0].toLowerCase();","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"Jai2501"},"content":"        switch (command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"Jai2501"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":236,"author":{"gitId":"Jai2501"},"content":"                addDeadline(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":237,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":238,"author":{"gitId":"Jai2501"},"content":"            case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":239,"author":{"gitId":"Jai2501"},"content":"                addEvent(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":240,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":241,"author":{"gitId":"Jai2501"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":242,"author":{"gitId":"Jai2501"},"content":"                addTodo(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":243,"author":{"gitId":"Jai2501"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":244,"author":{"gitId":"Jai2501"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":245,"author":{"gitId":"Jai2501"},"content":"                throw new IllegalCommandException(\"Woof! Command Not Found! Can I Sleep?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":247,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":248,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":249,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":250,"author":{"gitId":"Jai2501"},"content":"     * Main body of the Retriever Chatbot.","lastModifiedDate":"2021-08-16"},{"lineNumber":251,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":252,"author":{"gitId":"Jai2501"},"content":"    public void run() {","lastModifiedDate":"2021-08-16"},{"lineNumber":253,"author":{"gitId":"Jai2501"},"content":"        // Set up scanner for user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":254,"author":{"gitId":"Jai2501"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":255,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":256,"author":{"gitId":"Jai2501"},"content":"        // To store the user input string.","lastModifiedDate":"2021-08-16"},{"lineNumber":257,"author":{"gitId":"Jai2501"},"content":"        String userInput;","lastModifiedDate":"2021-08-16"},{"lineNumber":258,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":259,"author":{"gitId":"Jai2501"},"content":"        // Main body which is repeated till the \"bye\" keyword is encountered.","lastModifiedDate":"2021-08-16"},{"lineNumber":260,"author":{"gitId":"Jai2501"},"content":"        do {","lastModifiedDate":"2021-08-16"},{"lineNumber":261,"author":{"gitId":"Jai2501"},"content":"            // Taking input","lastModifiedDate":"2021-08-16"},{"lineNumber":262,"author":{"gitId":"Jai2501"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":263,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":264,"author":{"gitId":"Jai2501"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":265,"author":{"gitId":"Jai2501"},"content":"                // Checking if the input is either \"list\" or \"done\" or \"delete\" or not \"bye\".","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"Jai2501"},"content":"                if (isItList(userInput)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":267,"author":{"gitId":"Jai2501"},"content":"                    // Calling the method to print the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":268,"author":{"gitId":"Jai2501"},"content":"                    printList();","lastModifiedDate":"2021-08-16"},{"lineNumber":269,"author":{"gitId":"Jai2501"},"content":"                } else if (isItDone(userInput)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":270,"author":{"gitId":"Jai2501"},"content":"                    // Calling the method to mark a particular task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":271,"author":{"gitId":"Jai2501"},"content":"                    markTaskDone(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":272,"author":{"gitId":"Jai2501"},"content":"                }  else if(isItDelete(userInput)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"Jai2501"},"content":"                    // Calling the method to delete a particular task.","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"Jai2501"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":275,"author":{"gitId":"Jai2501"},"content":"                } else if (!isItBye(userInput)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":276,"author":{"gitId":"Jai2501"},"content":"                    // Here, we need to check if it is an event or a deadline or a todo type of task.","lastModifiedDate":"2021-08-17"},{"lineNumber":277,"author":{"gitId":"Jai2501"},"content":"                    parseUserInput(userInput);","lastModifiedDate":"2021-08-17"},{"lineNumber":278,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":279,"author":{"gitId":"Jai2501"},"content":"            } catch (TaskNotFoundException | IllegalDeadlineFormatException","lastModifiedDate":"2021-08-18"},{"lineNumber":280,"author":{"gitId":"Jai2501"},"content":"                    | IllegalEventFormatException | IllegalTodoFormatException","lastModifiedDate":"2021-08-18"},{"lineNumber":281,"author":{"gitId":"Jai2501"},"content":"                    | IllegalCommandException | IllegalTaskNumberException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":282,"author":{"gitId":"Jai2501"},"content":"                // Catching various exceptions and alerting the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":283,"author":{"gitId":"Jai2501"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":284,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":285,"author":{"gitId":"Jai2501"},"content":"            System.out.println(\"________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":286,"author":{"gitId":"Jai2501"},"content":"        } while(!isItBye(userInput));","lastModifiedDate":"2021-08-16"},{"lineNumber":287,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":288,"author":{"gitId":"Jai2501"},"content":"        // Closing the scanner.","lastModifiedDate":"2021-08-16"},{"lineNumber":289,"author":{"gitId":"Jai2501"},"content":"        sc.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":290,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":291,"author":{"gitId":"Jai2501"},"content":"        // Printing the good-bye message.","lastModifiedDate":"2021-08-16"},{"lineNumber":292,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"-\u003e Sad To See You Go!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":293,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":294,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":295,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":296,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":297,"author":{"gitId":"Jai2501"},"content":"     * Returns an interactive session with the Chatbot. Basically a mean to interact with it.","lastModifiedDate":"2021-08-16"},{"lineNumber":298,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":299,"author":{"gitId":"Jai2501"},"content":"     * @param args Here, usually nothing is passed.","lastModifiedDate":"2021-08-16"},{"lineNumber":300,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":301,"author":{"gitId":"Jai2501"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":302,"author":{"gitId":"Jai2501"},"content":"        // Dog logo made with characters.","lastModifiedDate":"2021-08-16"},{"lineNumber":303,"author":{"gitId":"Jai2501"},"content":"        String logo \u003d \"  __      ^\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":304,"author":{"gitId":"Jai2501"},"content":"                + \"o\u0027\u0027)}____//\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":305,"author":{"gitId":"Jai2501"},"content":"                + \" `_\u0027      )\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":306,"author":{"gitId":"Jai2501"},"content":"                + \"(_(_/-(_/\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":307,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":308,"author":{"gitId":"Jai2501"},"content":"        // Printing welcome messages.","lastModifiedDate":"2021-08-16"},{"lineNumber":309,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":310,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"Hello, I am Retriever\\nHow Can I Help You Today?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":311,"author":{"gitId":"Jai2501"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":312,"author":{"gitId":"Jai2501"},"content":"        System.out.println(\"________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":313,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":314,"author":{"gitId":"Jai2501"},"content":"        // Calling the run() method to start the Chatbot.","lastModifiedDate":"2021-08-16"},{"lineNumber":315,"author":{"gitId":"Jai2501"},"content":"        new Retriever().run();","lastModifiedDate":"2021-08-16"},{"lineNumber":316,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":317,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Jai2501":317}},{"path":"src/main/java/RetrieverException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":" * RetrieverException is an Exception Class specific for Exceptions","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":" * that could be encountered when using the Retriever Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"public class RetrieverException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    public RetrieverException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"class TaskNotFoundException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"class IllegalTaskNumberException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    public IllegalTaskNumberException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"class IllegalCommandException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    public IllegalCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"class IllegalDeadlineFormatException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    public IllegalDeadlineFormatException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"class IllegalEventFormatException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    public IllegalEventFormatException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"class IllegalTodoFormatException extends RetrieverException {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    public IllegalTodoFormatException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jai2501":46}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":" * This class would help to keep track of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a task.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * @param description The task description entered by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        /** Variables to hold values. */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * Returns the status of the task in the form of a String.","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     * @return A String indicating whether the task is accomplished or not.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     * @return The description.","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        return this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     * Sets the task to done by updating the isDone variable.","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * Returns the task description and its status in an","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the task details.","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Jai2501":56}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of todo type tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a todo task.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"     * Returns the todo task description and its status in an","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the todo task details.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Jai2501":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"Hi","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"todo fix bugs","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"deadline CS2103T week 1 ip /by 19th Aug","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"event Apple WWDC 2021 /at 11PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"event attend CS2100 lecture /at 4PM","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"event ST2334 tut /at 1PM","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"todo code","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"deadline /at","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"done 6","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"todo clean room","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"event Watch Netflix /at 12AM","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"delete 8","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jai2501":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"java -classpath ../bin Retriever \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Jai2501":1}}]
