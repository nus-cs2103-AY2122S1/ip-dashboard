[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"    mainClassName \u003d \"retriever.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"    archiveBaseName \u003d \"retriever\"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"    archiveVersion \u003d \"2.0\"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"Jai2501":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"Welcome User! Retriever the Chatbot is a Friendly, Dog themed Chatbot. It","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"helps you to manage your busy schedule with its chat style user interface.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"Welcome Splash Screen","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"![](welcomeSplashScreen.png)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"Chatbot Window","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"![](chatBotWindow.png)","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"## Table of Contents","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"* [Getting Started](#getting-started)","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"* [Quick Access Links](#quick-access-links)","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"* [Usage](#usage)","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"## Getting Started","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"1. Download the JAR file from [here](apple.com).","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"2. Open Terminal, and type in the following command to run the App.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"java -jar retriever-1.0.jar","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"* [OPTIONAL] If you want to enable assertions and run, type in the following command.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"java -jar -ea retriever-1.0.jar","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"3. That\u0027s all. Enjoy and Don\u0027t forget to support me on GitHub [here](https://github.com/Jai2501).","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"## Quick Access Links","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"  * Adding a Task","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    * [Deadline Type Task](#deadline---to-add-a-deadline-type-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    * [Event Type Task](#event---to-add-an-event-type-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    * [Todo Type Task](#todo---to-add-a-todo-type-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"  * [Deleting a Task](#delete---to-delete-a-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"  * [Ending the Session](#bye---to-end-the-session-with-the-chatbot)","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"  * [Finding a Task](#find---to-find-tasks-with-similar-keywords)","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"  * [Marking Task as Done](#done---to-mark-a-task-as-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"  * [Viewing All Tasks](#view---to-view-the-tasks-scheduled-for-a-day)","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"  * [Viewing Your Schedule](#view---to-view-the-tasks-scheduled-for-a-day)","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"  * [Help Section](#help---to-show-all-the-possible-commands)","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"### Feature #1 - Add Various Types of Tasks to Your Schedule","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"\u003e This App allows you to add various types of tasks to your schedule, including:","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"\u003e* Deadline Type Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"\u003e* Event Type Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"\u003e* Todo Type Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"### Feature #2 - View Schedule","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"\u003e This feature allows you to view your schedule for a particular day.","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"### Feature #3 - Find","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"\u003e This feature allows you to find tasks with matching keywords.","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"### Feature #4 - Mark Tasks as Done","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"\u003e As you finish your tasks, you can mark them as done!","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"### Feature #5 - Delete Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"\u003e Entered wrong details for a task? Fret not, you can easily delete a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"### Feature #6 - Your Best Friend","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"\u003e New Users Fret not! Our App has a help feature, which guides you as to how to use ","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"a particular feature.","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"### ```bye``` - To end the session with the Chatbot","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"To quit the Chatbot App, after manipulating the tasks, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"```bye``` command.","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"bye","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"bye","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"-\u003e Sad To See You Go!","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"The Chatbot would close, indicating that you have successfully terminated the","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"session.","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"### ```deadline``` - To add a deadline type task","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"If the task you wish to add has a deadline associated with it, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"```deadline``` command to add it.","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"deadline TASK_DESCRIPTION /by DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"deadline CS2103T iP /by 17/09/2021","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"Where\u0027s My Treat? I Added:","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"[D][ ] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"You Owe Me 1 Treat(s), Master!","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a message suggesting that you have successfully added the","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"deadline type task. However, if you make a mistake in the ```keyword```,","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"the ```command format``` or the ```date format```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"### ```event``` - To add an event type task","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"If the task you wish to add is event related, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"```event``` command to add it.","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"event TASK_DESCRIPTION /at DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"event Apple Event /at 15/09/2021","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"Where\u0027s My Treat? I Added:","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"[E][ ] Apple Event  (at: Sep 15 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"You Owe Me 1 Treat(s), Master!","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a message suggesting that you have successfully added the","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"event type task. However, if you make a mistake in the ```keyword```,","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"the ```command format``` or the ```date format```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"### ```delete``` - To delete a task","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"If there is a task you wish to delete, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"```delete``` command to delete it.","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"delete TASK_NUMBER","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"Woof! Whose a Bad Boy?","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"Task Deleted!","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"[D][ ] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"You Owe Me 1 Treat(s), Master!","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a message showcasing the task deleted, and how many","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"tasks are still present in the task list. However, if you make a mistake","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"in the ```keyword```, the ```command format``` or the ```TASK_NUMBER```,","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"### ```done``` - To mark a task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"If you completed a task, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"```done``` command to mark it as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"done TASK_NUMBER","lastModifiedDate":"2021-09-13"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":214,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"Jai2501"},"content":"done 1","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":219,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":220,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":221,"author":{"gitId":"Jai2501"},"content":"Woof! Whose a Good Boy?","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"Jai2501"},"content":"Task Done!","lastModifiedDate":"2021-09-13"},{"lineNumber":223,"author":{"gitId":"Jai2501"},"content":"[D][X] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":224,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":225,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":226,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a message showcasing the task marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"Jai2501"},"content":"However, if you make a mistake in the ```keyword```, the ```command format```","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"Jai2501"},"content":"or the ```TASK_NUMBER```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"Jai2501"},"content":"### ```find``` - To find tasks with similar keywords","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":234,"author":{"gitId":"Jai2501"},"content":"If you wish to search for tasks with a particular keyword, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":235,"author":{"gitId":"Jai2501"},"content":"```find``` command to find such tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":236,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":237,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":238,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":239,"author":{"gitId":"Jai2501"},"content":"find KEYWORD","lastModifiedDate":"2021-09-13"},{"lineNumber":240,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":241,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":242,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":243,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"Jai2501"},"content":"find apple","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":247,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":248,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":249,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":250,"author":{"gitId":"Jai2501"},"content":"Woof! Look What I Found: ","lastModifiedDate":"2021-09-13"},{"lineNumber":251,"author":{"gitId":"Jai2501"},"content":"1. [E][ ] Apple Event (at: Sep 15 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":252,"author":{"gitId":"Jai2501"},"content":"You Owe Me 1 Treat(s), Master!","lastModifiedDate":"2021-09-13"},{"lineNumber":253,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":254,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":255,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a list of tasks which have the keyword present in them.","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"Jai2501"},"content":"However, if you make a mistake in the ```keyword``` or","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"Jai2501"},"content":"the ```command format```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":261,"author":{"gitId":"Jai2501"},"content":"### ```list``` - To show all the tasks present in the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":263,"author":{"gitId":"Jai2501"},"content":"If you want to take a look at the tasks present in your task list, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":264,"author":{"gitId":"Jai2501"},"content":"```list``` command.","lastModifiedDate":"2021-09-13"},{"lineNumber":265,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":266,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":267,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":268,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":269,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":270,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":271,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":272,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":273,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":274,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":275,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":276,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":277,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":278,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":279,"author":{"gitId":"Jai2501"},"content":"Woof! Whose a Good Boy?","lastModifiedDate":"2021-09-13"},{"lineNumber":280,"author":{"gitId":"Jai2501"},"content":"Task Done!","lastModifiedDate":"2021-09-13"},{"lineNumber":281,"author":{"gitId":"Jai2501"},"content":"[D][X] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":282,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":283,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":284,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a list showcasing the tasks present.","lastModifiedDate":"2021-09-15"},{"lineNumber":285,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":286,"author":{"gitId":"Jai2501"},"content":"### ```help``` - To show all the possible commands","lastModifiedDate":"2021-09-15"},{"lineNumber":287,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":288,"author":{"gitId":"Jai2501"},"content":"If you want to take a look at the commands you can execute, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":289,"author":{"gitId":"Jai2501"},"content":"```help``` command. You can see command descriptions, formats and usage examples","lastModifiedDate":"2021-09-13"},{"lineNumber":290,"author":{"gitId":"Jai2501"},"content":"within the App itself.","lastModifiedDate":"2021-09-13"},{"lineNumber":291,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":292,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":293,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":294,"author":{"gitId":"Jai2501"},"content":"help","lastModifiedDate":"2021-09-13"},{"lineNumber":295,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":296,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":297,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":298,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":299,"author":{"gitId":"Jai2501"},"content":"help","lastModifiedDate":"2021-09-15"},{"lineNumber":300,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":301,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":302,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":303,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":304,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":305,"author":{"gitId":"Jai2501"},"content":"Master, I shall guide you to my best ability to smell.","lastModifiedDate":"2021-09-13"},{"lineNumber":306,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":307,"author":{"gitId":"Jai2501"},"content":"Use the bye command to end the session.","lastModifiedDate":"2021-09-13"},{"lineNumber":308,"author":{"gitId":"Jai2501"},"content":"Command Example: bye","lastModifiedDate":"2021-09-13"},{"lineNumber":309,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":310,"author":{"gitId":"Jai2501"},"content":"Use the deadline command to add a deadline type task.","lastModifiedDate":"2021-09-13"},{"lineNumber":311,"author":{"gitId":"Jai2501"},"content":"-\u003e deadline TASK_DESCRIPTION /by DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":312,"author":{"gitId":"Jai2501"},"content":"Command Example: deadline CS2103T iP /by 23/09/2021","lastModifiedDate":"2021-09-13"},{"lineNumber":313,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":314,"author":{"gitId":"Jai2501"},"content":"Use the event command to add an event type task.","lastModifiedDate":"2021-09-13"},{"lineNumber":315,"author":{"gitId":"Jai2501"},"content":"-\u003e event TASK_DESCRIPTION /at DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":316,"author":{"gitId":"Jai2501"},"content":"Command Example: event Apple iPhone 13 /at 14/09/2021","lastModifiedDate":"2021-09-13"},{"lineNumber":317,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":318,"author":{"gitId":"Jai2501"},"content":"Use the todo command to add a todo type task.","lastModifiedDate":"2021-09-13"},{"lineNumber":319,"author":{"gitId":"Jai2501"},"content":"-\u003e todo TASK_DESCRIPTION","lastModifiedDate":"2021-09-13"},{"lineNumber":320,"author":{"gitId":"Jai2501"},"content":"Command Example: todo laundry","lastModifiedDate":"2021-09-13"},{"lineNumber":321,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":322,"author":{"gitId":"Jai2501"},"content":"Use the delete command to delete a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":323,"author":{"gitId":"Jai2501"},"content":"-\u003e delete TASK_NUMBER","lastModifiedDate":"2021-09-13"},{"lineNumber":324,"author":{"gitId":"Jai2501"},"content":"Command Example: delete 4","lastModifiedDate":"2021-09-13"},{"lineNumber":325,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":326,"author":{"gitId":"Jai2501"},"content":"Use the done command to mark a task as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":327,"author":{"gitId":"Jai2501"},"content":"-\u003e done TASK_NUMBER","lastModifiedDate":"2021-09-13"},{"lineNumber":328,"author":{"gitId":"Jai2501"},"content":"Command Example: done 3","lastModifiedDate":"2021-09-13"},{"lineNumber":329,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":330,"author":{"gitId":"Jai2501"},"content":"Use the find command to find tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":331,"author":{"gitId":"Jai2501"},"content":"-\u003e find KEYWORD","lastModifiedDate":"2021-09-13"},{"lineNumber":332,"author":{"gitId":"Jai2501"},"content":"Command Example: find notes","lastModifiedDate":"2021-09-13"},{"lineNumber":333,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":334,"author":{"gitId":"Jai2501"},"content":"Use the list command to view the tasks currently present in the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":335,"author":{"gitId":"Jai2501"},"content":"Command Example: list","lastModifiedDate":"2021-09-13"},{"lineNumber":336,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":337,"author":{"gitId":"Jai2501"},"content":"Use the help command to open the help section.","lastModifiedDate":"2021-09-13"},{"lineNumber":338,"author":{"gitId":"Jai2501"},"content":"Command Example: help","lastModifiedDate":"2021-09-13"},{"lineNumber":339,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":340,"author":{"gitId":"Jai2501"},"content":"Use the view command to view scheduled tasks for a day.","lastModifiedDate":"2021-09-13"},{"lineNumber":341,"author":{"gitId":"Jai2501"},"content":"-\u003e view DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":342,"author":{"gitId":"Jai2501"},"content":"Command Example: view 23/09/2021","lastModifiedDate":"2021-09-13"},{"lineNumber":343,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":344,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":345,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print the command details.","lastModifiedDate":"2021-09-15"},{"lineNumber":346,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":347,"author":{"gitId":"Jai2501"},"content":"### ```todo``` - To add a todo type task","lastModifiedDate":"2021-09-15"},{"lineNumber":348,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":349,"author":{"gitId":"Jai2501"},"content":"If the task you wish to add is a todo and has no fixed due date, you may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":350,"author":{"gitId":"Jai2501"},"content":"```todo``` command to add it.","lastModifiedDate":"2021-09-13"},{"lineNumber":351,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":352,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":353,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":354,"author":{"gitId":"Jai2501"},"content":"todo TASK_DESCRIPTION","lastModifiedDate":"2021-09-13"},{"lineNumber":355,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":356,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":357,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":358,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":359,"author":{"gitId":"Jai2501"},"content":"todo Laundry","lastModifiedDate":"2021-09-15"},{"lineNumber":360,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":361,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":362,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":363,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":364,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":365,"author":{"gitId":"Jai2501"},"content":"Where\u0027s My Treat? I Added:","lastModifiedDate":"2021-09-13"},{"lineNumber":366,"author":{"gitId":"Jai2501"},"content":"[T][ ] Laundry","lastModifiedDate":"2021-09-13"},{"lineNumber":367,"author":{"gitId":"Jai2501"},"content":"You Owe Me 1 Treat(s), Master!","lastModifiedDate":"2021-09-13"},{"lineNumber":368,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":369,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":370,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":371,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a message suggesting that you have successfully added the","lastModifiedDate":"2021-09-15"},{"lineNumber":372,"author":{"gitId":"Jai2501"},"content":"todo type task. However, if you make a mistake in the ```keyword``` or","lastModifiedDate":"2021-09-15"},{"lineNumber":373,"author":{"gitId":"Jai2501"},"content":"the ```command format```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":374,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":375,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":376,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":377,"author":{"gitId":"Jai2501"},"content":"### ```view``` - To view the tasks scheduled for a day","lastModifiedDate":"2021-09-15"},{"lineNumber":378,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":379,"author":{"gitId":"Jai2501"},"content":"This command helps you to quickly look up tasks due by or at a particular day.","lastModifiedDate":"2021-09-13"},{"lineNumber":380,"author":{"gitId":"Jai2501"},"content":"This would __only__ show you `event` and `deadline` type tasks. You may use the","lastModifiedDate":"2021-09-13"},{"lineNumber":381,"author":{"gitId":"Jai2501"},"content":"```view``` command to use this.","lastModifiedDate":"2021-09-13"},{"lineNumber":382,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":383,"author":{"gitId":"Jai2501"},"content":"Format:","lastModifiedDate":"2021-09-13"},{"lineNumber":384,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":385,"author":{"gitId":"Jai2501"},"content":"view DD/MM/YYYY","lastModifiedDate":"2021-09-13"},{"lineNumber":386,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":387,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":388,"author":{"gitId":"Jai2501"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":389,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":390,"author":{"gitId":"Jai2501"},"content":"view 23/09/2021","lastModifiedDate":"2021-09-15"},{"lineNumber":391,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":392,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":393,"author":{"gitId":"Jai2501"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":394,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":395,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":396,"author":{"gitId":"Jai2501"},"content":"Master, You are Busy For The Day...","lastModifiedDate":"2021-09-13"},{"lineNumber":397,"author":{"gitId":"Jai2501"},"content":"1. [D][ ] CS2100 Assignment (by: Sep 23 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":398,"author":{"gitId":"Jai2501"},"content":"2. [E][ ] Tesla Cyber Truck Launch (at: Sep 23 2021)","lastModifiedDate":"2021-09-13"},{"lineNumber":399,"author":{"gitId":"Jai2501"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":400,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":401,"author":{"gitId":"Jai2501"},"content":"\u003cspan color\u003d\"red\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":402,"author":{"gitId":"Jai2501"},"content":"The Chatbot would print a list containing the tasks due on that particular date.","lastModifiedDate":"2021-09-15"},{"lineNumber":403,"author":{"gitId":"Jai2501"},"content":"However, if you make a mistake in the ```keyword```,","lastModifiedDate":"2021-09-15"},{"lineNumber":404,"author":{"gitId":"Jai2501"},"content":"the ```command format``` or the ```date format```, an error message would be shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":405,"author":{"gitId":"Jai2501"},"content":"\u003c/span\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":406,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":407,"author":{"gitId":"Jai2501"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":408,"author":{"gitId":"Jai2501"},"content":"## Command Summary","lastModifiedDate":"2021-09-15"},{"lineNumber":409,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":410,"author":{"gitId":"Jai2501"},"content":"Command | Summary | `Syntax`","lastModifiedDate":"2021-09-15"},{"lineNumber":411,"author":{"gitId":"Jai2501"},"content":"------- | ------- | -------","lastModifiedDate":"2021-09-15"},{"lineNumber":412,"author":{"gitId":"Jai2501"},"content":"bye | To end the session with the Chatbot | `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":413,"author":{"gitId":"Jai2501"},"content":"help | To display the help section | `help`","lastModifiedDate":"2021-09-15"},{"lineNumber":414,"author":{"gitId":"Jai2501"},"content":"deadline | To add a deadline type task | `deadline TASK_DESCRIPTION /by DD/MM/YYYY`","lastModifiedDate":"2021-09-15"},{"lineNumber":415,"author":{"gitId":"Jai2501"},"content":"event | To add an event type task | `event TASK_DESCRIPTION /at DD/MM/YYYY`","lastModifiedDate":"2021-09-15"},{"lineNumber":416,"author":{"gitId":"Jai2501"},"content":"todo | To add a todo type task | `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-15"},{"lineNumber":417,"author":{"gitId":"Jai2501"},"content":"done | To mark a task as done | `done TASK_NUMBER`","lastModifiedDate":"2021-09-15"},{"lineNumber":418,"author":{"gitId":"Jai2501"},"content":"delete | To delete a task from the list | `delete TASK_NUMBER`","lastModifiedDate":"2021-09-15"},{"lineNumber":419,"author":{"gitId":"Jai2501"},"content":"find | To find and show tasks with matching keywords | `find KEYWORD`","lastModifiedDate":"2021-09-15"},{"lineNumber":420,"author":{"gitId":"Jai2501"},"content":"list | To show all the tasks present in the task list  | `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":421,"author":{"gitId":"Jai2501"},"content":"view | To show the tasks scheduled for the date entered | `view DD/MM/YYYY`","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":19,"Jai2501":402}},{"path":"src/main/java/retriever/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        dialog.setPadding(new Insets(10, 10, 10 , 10));","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"        dialog.setStyle(\"-fx-background-color: #c4d8de; -fx-background-insets: 5; -fx-background-radius: 15;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        displayPicture.setStyle(\"-fx-border-image-insets: 10;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    public static DialogBox getRetrieverDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Jai2501":65}},{"path":"src/main/java/retriever/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Jai2501":12}},{"path":"src/main/java/retriever/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    private Retriever retriever \u003d new Retriever();","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * Starts the GUI interface.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     * @param stage The window shown.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"            // Can modify this line for changing font","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Courier New\u0027\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setRetriever(retriever);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"            // To show a welcome splash screen","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"            Stage welcomeStage \u003d new Stage();","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"            Label welcomeLabel \u003d new Label(ui.getRetrieverResponse());","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"            welcomeLabel.setFont(new Font(\"Courier New\", 20));","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"            welcomeLabel.setPadding(new Insets(25, 25, 25, 25));","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"            Scene welcomeScene \u003d new Scene(welcomeLabel);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"            welcomeStage.setScene(welcomeScene);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"            welcomeStage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jai2501":54}},{"path":"src/main/java/retriever/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    private Retriever retriever;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    private Image retrieverImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RetrieverCircular.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public void setRetriever(Retriever r) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        retriever \u003d r;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        String response \u003d retriever.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"                DialogBox.getRetrieverDialog(response, retrieverImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jai2501":51}},{"path":"src/main/java/retriever/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * The Parser class is responsible for parsing","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" * various user inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private boolean isSessionDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"     * Initializes the task list and marks the beginning of a session.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     * @param taskList The Object through which various task operations can be performed.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"        this.isSessionDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     * Marks the isSessionDone to true, when the user inputs","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"     * the \"bye\" keyword, indicating, the end of session.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    public void markSessionDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        isSessionDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     * Returns whether the user would like to continue or no.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean indicating to end the session or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    public boolean isSessionDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        return isSessionDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"     * Parses the user input, and calls the respective command","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"     * method to execute it. If the command entered is invalid,","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"     * an exception is thrown.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * @param userCommand The command entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * @throws RetrieverException If the command is invalid or unformatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput(String userCommand) throws RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        String[] userInput \u003d userCommand.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        String commandEntered \u003d userInput[0].toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        assert commandEntered !\u003d null : \"Command is Null\";","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        switch (commandEntered) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"            taskList.printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"            taskList.deleteTask(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"            taskList.markTaskAsDone(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"            taskList.addDeadlineTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"            taskList.addEventTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"            taskList.addTodoTask(userCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"            taskList.findTaskWithKeyword(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        case \"help\":","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"            Ui.printHelpSection();","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"        case \"view\":","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"            taskList.viewScheduleForAParticularDay(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"            markSessionDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalCommandException(\"Woof! Command Not Found! Can I Sleep?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":91}},{"path":"src/main/java/retriever/Retriever.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * A Chatbot to help manage your daily schedule.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"public class Retriever {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    /** To perform operations on the tasks stored in the text file*/","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private Storage taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     * Initializes various Objects, and also takes in the file path to","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     * read the tasks present in that file.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * @param filePath The file path in which tasks may be stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    public Retriever(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     * Initializes various Objects, and assumes the default file path to","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     * read the tasks present in that file.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    public Retriever() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"        // In case the user doesn\u0027t specify the file path, the default path is taken.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"        String filePath \u003d \"tasksList.txt\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"        taskStorage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"     * Returns a String, that is shown on the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"            parser.parseUserInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d ui.getRetrieverResponse();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"            // Catching various exceptions and alerting the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"        if (parser.isSessionDone()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d \"Sad To See You Go!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        assert !retrieverResponse.equals(\"\") : \"Response Could Not Be Formed!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"        return retrieverResponse;","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":68}},{"path":"src/main/java/retriever/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskDateAndTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":" * This class helps to read, write, update and delete","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":" * tasks from the file it is being stored in.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"     * Sets the file path, so that operations such as read and write may be","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     * performed on that file.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     * @param filePath The file path in which tasks may be stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * Creates a new file in case the file doesn\u0027t exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"    public void createNewFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"            File myFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"            if (myFile.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"                ui.printMessage(\"Woof! File is Created!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"                ui.printMessage(\"File Already Exists Master.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"            ui.printErrorMessage(\"Master, Your Computer Has Issues!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"     * Reads the tasks from the text file and returns it","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"     * as an ArrayList.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"     * @return An ArrayList with the tasks stored in it.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"            Scanner scanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"                // Parsing the line read from file","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"                String[] tokens \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"                // Storing the extracted task components.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"                String taskType \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"                String completionStatus \u003d tokens[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"                String taskDescription \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"                assert (taskType.contains(\"D\") || taskType.contains(\"E\") || taskType.contains(\"T\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"                        : \"Data Corrupt in File\";","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"                // Checking the type of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"                if (taskType.contains(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"                    Task deadlineTask \u003d new Deadline(taskDescription, new TaskDateAndTime(tokens[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"                    if (completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"                        deadlineTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"                if (taskType.contains(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"                    Task eventTask \u003d new Event(taskDescription, new TaskDateAndTime(tokens[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"                    if (completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"                        eventTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"                if (taskType.contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"                    Task todoTask \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"                    if (completionStatus.contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"                        todoTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"            scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"            ui.printErrorMessage(\"Master, File Does Not Exist, Give Me A Treat, And\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"                    + \"I Shall Create One For You! :)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"            // In case the file doesn\u0027t exist, one is created.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"            createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"     * Writes the task entered to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"     * @param task An enum representing the task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"     * @param taskDeadline The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"    public void writeTask(Task.TaskType task, String taskDescription, String taskDeadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"        String taskAsText;","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"        // Formatting the string appropriately to add task to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"        switch (task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"            taskAsText \u003d \"D | 0 | \" + taskDescription + \" | \" + taskDeadline + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"            taskAsText \u003d \"E | 0 | \" + taskDescription + \" | \" + taskDeadline + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"            taskAsText \u003d \"T | 0 | \" + taskDescription + System.getProperty(\"line.separator\");","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"            taskAsText \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"        assert !taskAsText.equals(\"\") : \"Response Could Not Be Saved (Error in Formatting and Saving)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"        // Writing the task to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"            fw.write(taskAsText);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"            ui.printErrorMessage(\"Master, Sorry! I Ate The File!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"     * Deletes a task from the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"     * @param taskNumber The task number to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"        // Reading and writing to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"            String currentLine;","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"                if (counter !\u003d taskNumber) {","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"                    writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"                counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"            reader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"            tempFile.renameTo(inputFile);","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"            ui.printErrorMessage(\"Master! Error Reading File. Gimme Treats, And I Help You!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"     * Updates a given task status to done in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"     * @param taskNumber The task number to be updated.","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"    public void updateTaskStatusToDone(int taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"        File inputFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"        File tempFile \u003d new File(\"tempFile.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"        // Reading and writing to the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"            String currentLine;","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"                if (counter \u003d\u003d taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"                    String[] taskToUpdate \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"                    String newLine \u003d taskToUpdate[0] + \" | 1 | \" + taskToUpdate[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"                    if (!taskToUpdate[0].contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"                        newLine +\u003d \" | \" + taskToUpdate[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"Jai2501"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"Jai2501"},"content":"                    writer.write(newLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"Jai2501"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"Jai2501"},"content":"                    writer.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"Jai2501"},"content":"                counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"Jai2501"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"Jai2501"},"content":"            reader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"Jai2501"},"content":"            tempFile.renameTo(inputFile);","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"Jai2501"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"Jai2501"},"content":"            ui.printErrorMessage(\"Master! Error Reading File. Gimme Treats, And I Help You!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":229,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":232}},{"path":"src/main/java/retriever/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * The class handles the user interaction between the","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" * user and the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    // Response would be stored here","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    private static String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    // Help Section Strings.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private static final String WELCOME_TO_HELP_SECTION_MESSAGE \u003d \"Master, I shall guide you to my best \"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"            + \"ability to smell.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    private static final String BYE_COMMAND_MESSAGE \u003d \"Use the bye command to end the session.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    private static final String BYE_COMMAND_EXAMPLE \u003d \"Command Example: bye\";","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    private static final String DEADLINE_COMMAND_MESSAGE \u003d \"Use the deadline command to add a deadline type task.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    private static final String DEADLINE_COMMAND_EXAMPLE \u003d \"Command Example: deadline CS2103T iP /by 23/09/2021\";","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    private static final String DEADLINE_COMMAND_FORMAT \u003d \"-\u003e deadline TASK_DESCRIPTION /by DD/MM/YYYY\";","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    private static final String DELETE_COMMAND_MESSAGE \u003d \"Use the delete command to delete a task.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    private static final String DELETE_COMMAND_EXAMPLE \u003d \"Command Example: delete 4\";","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    private static final String DELETE_COMMAND_FORMAT \u003d \"-\u003e delete TASK_NUMBER\";","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    private static final String DONE_COMMAND_MESSAGE \u003d \"Use the done command to mark a task as done.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    private static final String DONE_COMMAND_EXAMPLE \u003d \"Command Example: done 3\";","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    private static final String DONE_COMMAND_FORMAT \u003d \"-\u003e done TASK_NUMBER\";","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    private static final String EVENT_COMMAND_MESSAGE \u003d \"Use the event command to add an event type task.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    private static final String EVENT_COMMAND_EXAMPLE \u003d \"Command Example: event Apple iPhone 13 /at 14/09/2021\";","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    private static final String EVENT_COMMAND_FORMAT \u003d \"-\u003e event TASK_DESCRIPTION /at DD/MM/YYYY\";","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    private static final String FIND_COMMAND_MESSAGE \u003d \"Use the find command to find tasks.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    private static final String FIND_COMMAND_EXAMPLE \u003d \"Command Example: find notes\";","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"    private static final String FIND_COMMAND_FORMAT \u003d \"-\u003e find KEYWORD\";","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    private static final String HELP_COMMAND_MESSAGE \u003d \"Use the help command to open the help section.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    private static final String HELP_COMMAND_EXAMPLE \u003d \"Command Example: help\";","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    private static final String LIST_COMMAND_MESSAGE \u003d \"Use the list command to view the tasks \"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"            + \"currently present in the task list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    private static final String LIST_COMMAND_EXAMPLE \u003d \"Command Example: list\";","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"    private static final String TODO_COMMAND_MESSAGE \u003d \"Use the todo command to add a todo type task.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"    private static final String TODO_COMMAND_EXAMPLE \u003d \"Command Example: todo laundry\";","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    private static final String TODO_COMMAND_FORMAT \u003d \"-\u003e todo TASK_DESCRIPTION\";","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    private static final String VIEW_COMMAND_MESSAGE \u003d \"Use the view command to view scheduled tasks for a day.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    private static final String VIEW_COMMAND_EXAMPLE \u003d \"Command Example: view 23/09/2021\";","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    private static final String VIEW_COMMAND_FORMAT \u003d \"-\u003e view DD/MM/YYYY\";","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"    // Predetermined strings.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hello, I am Retriever\\nHow Can I Help You Today?\";","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"    private final String GOOD_BYE_MESSAGE \u003d \"-\u003e Sad To See You Go!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    private final String EMPTY_LIST_MESSAGE \u003d \"My Memory Is Empty, Please Feed Items!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"    private final String NO_TASK_FOUND_MESSAGE \u003d \"Sorry Master, I Couldn\u0027t Smell And Find What You Asked For!\"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"            + \"\\n (Task With the Given Keyword Does Not Exist)\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    private final String PRINT_LIST_MESSAGE \u003d \"-\u003e Your Tasks, My Master:\";","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"    private final String GOOD_BOY_MESSAGE \u003d \"Woof! Whose a Good Boy?\";","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"    private final String BAD_BOY_MESSAGE \u003d \"Woof! Whose a Bad Boy?\";","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"    private final String SCHEDULE_EMPTY_MESSAGE \u003d \"Master, You Can Play With Me, No Scheduled Tasks For The \"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"            + \"Day, Woooof!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"    private final String SCHEDULE_MESSAGE \u003d \"Master, You are Busy For The Day...\";","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    // Dog Logo","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"    private final String LOGO \u003d \"\\t  __      ^\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"            + \"\\to\u0027\u0027)}____//\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"            + \"\\t`_\u0027      )\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"            + \"\\t(_(_/-(_/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"     * Initializes the Ui class.","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"     * Prints the help section.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"    public static void printHelpSection() {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d WELCOME_TO_HELP_SECTION_MESSAGE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"                + BYE_COMMAND_MESSAGE + \"\\n\" + BYE_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"                + DEADLINE_COMMAND_MESSAGE + \"\\n\" + DEADLINE_COMMAND_FORMAT + \"\\n\" + DEADLINE_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"                + EVENT_COMMAND_MESSAGE + \"\\n\" + EVENT_COMMAND_FORMAT + \"\\n\" + EVENT_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"                + TODO_COMMAND_MESSAGE + \"\\n\" + TODO_COMMAND_FORMAT + \"\\n\" + TODO_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"                + DELETE_COMMAND_MESSAGE + \"\\n\" + DELETE_COMMAND_FORMAT + \"\\n\" + DELETE_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"                + DONE_COMMAND_MESSAGE + \"\\n\" + DONE_COMMAND_FORMAT + \"\\n\" + DONE_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"                + FIND_COMMAND_MESSAGE + \"\\n\" + FIND_COMMAND_FORMAT + \"\\n\" + FIND_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"                + LIST_COMMAND_MESSAGE + \"\\n\" + LIST_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"                + HELP_COMMAND_MESSAGE + \"\\n\" + HELP_COMMAND_EXAMPLE + \"\\n\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"                + VIEW_COMMAND_MESSAGE + \"\\n\" + VIEW_COMMAND_FORMAT + \"\\n\" + VIEW_COMMAND_EXAMPLE + \"\\n\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"     * Prints the message received as an argument.","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"     * @param message The message user would like to print.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d message;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d WELCOME_MESSAGE + \"\\n\" + LOGO + \"\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"                + \"Need Help? Type \u0027help\u0027\" + \"\\n\" + \"in the text field below.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d GOOD_BYE_MESSAGE;","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"     * Prints the error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"     * @param errorMessage The exception message to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"     * Prints the task added message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"     * @param taskListLength The length of the task list, after adding the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"    public void printTaskAdded(Task task, int taskListLength) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"                + task + \"\\nYou Owe Me \" + taskListLength + \" Treat(s), Master!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"     * Prints the task deleted message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"     * @param taskListLength The length of the task list, after deleting the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"    public void printTaskDeleted(Task task, int taskListLength) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d BAD_BOY_MESSAGE + \"\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"                + \"Task Deleted!\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"                + task","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"                + \"\\nYou Owe Me \" + taskListLength + \" Treat(s), Master!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"     * Prints the task done message in a specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"     * @param task The task that has been done.","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"    public void printTaskMarkedAsDone(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d GOOD_BOY_MESSAGE + \"\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"                + \"Task Done!\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"                + task;","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"     * Prints the tasks with a matching keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"     * @param taskList The ArrayList containing tasks with matching keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"    public void printTasksFoundByKeyword(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d NO_TASK_FOUND_MESSAGE;","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d \"Woof! Look What I Found: \\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse +\u003d \"You Owe Me \" + taskList.size() + \" Treat(s), Master!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"     * Prints the tasks which are scheduled for the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"     * @param taskList The ArrayList containing tasks scheduled for the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"    public void printTasksScheduledForTheDay(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d SCHEDULE_EMPTY_MESSAGE;","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"            return;","lastModifiedDate":"2021-09-08"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"        retrieverResponse \u003d SCHEDULE_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"     * Prints the tasks stored in the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"     * @param taskList The ArrayList containing the tasks to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"        // If the list is empty","lastModifiedDate":"2021-09-01"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d EMPTY_LIST_MESSAGE;","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d PRINT_LIST_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"                retrieverResponse +\u003d ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"     * Returns the output that the command generated.","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"Jai2501"},"content":"     * @return The response to the command entered.","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"Jai2501"},"content":"    public String getRetrieverResponse() {","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"Jai2501"},"content":"        return retrieverResponse;","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":221}},{"path":"src/main/java/retriever/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalCommandException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalCommandException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalDateFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalDateFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalDeadlineFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalDeadlineFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalEventFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalEventFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalTaskNumberException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalTaskNumberException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/IllegalTodoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class IllegalTodoFormatException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public IllegalTodoFormatException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/exception/RetrieverException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * RetrieverException is an Exception Class specific for Exceptions","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" * that could be encountered when using the Retriever Chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class RetrieverException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    public RetrieverException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":11}},{"path":"src/main/java/retriever/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"public class TaskNotFoundException extends RetrieverException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":7}},{"path":"src/main/java/retriever/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of tasks with a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"    private TaskDateAndTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     * @param by Time to do the task by.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    public Deadline(String description, TaskDateAndTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting if the deadline task","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * is due on the same date, as the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     * @param date The date entered by the user, to be checked against.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the task is due on the same date as the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    public boolean isOnDate(TaskDateAndTime date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        return date.equals(by);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     * Returns the deadline task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the deadline task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":41}},{"path":"src/main/java/retriever/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of event type tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"    private TaskDateAndTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize an event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     * @param at What time the event is at.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    public Event(String description, TaskDateAndTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting if the event task","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     * is due on the same date, as the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     * @param date The date entered by the user, to be checked against.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the task is due on the same date as the date entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    public boolean isOnDate(TaskDateAndTime date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        return date.equals(at);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     * Returns the event task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the event task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":42}},{"path":"src/main/java/retriever/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class would help to keep track of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"    /** Variables to hold values. */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     * Types of tasks present.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"        EVENT,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        TODO","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * Initializes a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"     * @param description The task description entered by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"     * Sets the task to done by updating the isDone variable.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     * Returns the task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":47}},{"path":"src/main/java/retriever/task/TaskDateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":" * This class helps to manage the date and time formatting","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":" * for tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"public class TaskDateAndTime {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    private String userInputDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    private LocalDate taskDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"     * Initializes a date and time for a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"     * @param userInputDateAndTime The date and time entered by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    public TaskDateAndTime(String userInputDateAndTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        this.userInputDateAndTime \u003d userInputDateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        parseDateAndTime();","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * Parses and Stores the date in the desired format.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    public void parseDateAndTime() {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        String[] userInputDate \u003d userInputDateAndTime.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        if (userInputDate.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"            taskDateAndTime \u003d LocalDate.parse(userInputDate[2] + \"-\" + userInputDate[1] + \"-\" + userInputDate[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"     * Returns the string representation of date in a","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"     * specified format.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * @return Formatted date.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"        return taskDateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean, suggesting if the two dates are the same","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     * or not.","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"     * @param o The object that contains the date to be checked against.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if both the dates are same.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime date \u003d (TaskDateAndTime) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"        return taskDateAndTime.compareTo(date.taskDateAndTime) \u003d\u003d 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":58}},{"path":"src/main/java/retriever/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import retriever.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDateFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDeadlineFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalEventFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalTaskNumberException;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalTodoFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.TaskNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":" * This class handles the task list and various","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":" * operations on it.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    private ArrayList\u003cTask\u003e userTaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    private Storage taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"     * Initializes the task list, calls a method to read","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"     * and parse the file to populate the user task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"     * @param taskStorage The storage object is used to read and write the tasks in a text file.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    public TaskList(Storage taskStorage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        this.userTaskList \u003d taskStorage.readTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"     * Returns the number of tasks present in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"     * @return The length of the user task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"    public int taskListLength() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        return userTaskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"     * Returns the number of days present in the month","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"     * entered by the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"     * @param month The month entered by the user as an integer.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"     * @param year The year entered by the user, used for detecting leap years.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"     * @return The number of days present in the month entered.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    public int numberOfDaysInTheMonth(int month, int year) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        switch(month) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        case 1:","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"        case 3:","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"        case 5:","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        case 7:","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        case 8:","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"        case 10:","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"        case 12:","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"            return 31;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"        case 4:","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"        case 6:","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        case 9:","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"        case 11:","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"            return 30;","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"        case 2:","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"            if (year % 4 \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"                return 29;","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"            return 28;","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"            return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the entered date","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"     * is valid or not.","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"     * @param enteredDate The date entered by the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the date is valid.","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"    public boolean isDateRangeValid(String[] enteredDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"        if (enteredDate.length \u003c 3) {","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"        int enteredDay \u003d Integer.parseInt(enteredDate[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"        int enteredMonth \u003d Integer.parseInt(enteredDate[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"        int enteredYear \u003d Integer.parseInt(enteredDate[2]);","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"        boolean isValidMonth \u003d enteredMonth \u003e\u003d 1 \u0026\u0026 enteredMonth \u003c\u003d 12;","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"        boolean isValidDay \u003d enteredDay \u003e\u003d 1 \u0026\u0026 enteredDay \u003c\u003d numberOfDaysInTheMonth(enteredMonth, enteredYear);","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"        return isValidMonth \u0026\u0026 isValidDay;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the format for adding a","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"     * deadline task is followed or not.","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The command entered by the user, to be checked.","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the format for adding the deadline task is followed.","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"    public boolean isDeadlineFormatCorrect(String userInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"        boolean hasByKeyword \u003d userInput.toLowerCase().contains(\"/by\");","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"        if (!hasByKeyword) {","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"        boolean hasLengthGreaterThanOrEqualToFour \u003d userInput.split(\" \").length \u003e\u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"        boolean hasDescriptionAndDateSpecified \u003d userInput.substring(9).split(\" /by \").length \u003e\u003d 2;","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"        return hasByKeyword \u0026\u0026 hasLengthGreaterThanOrEqualToFour \u0026\u0026 hasDescriptionAndDateSpecified;","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"     * Adds a deadline type task to the task list and storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDeadlineFormatException If the format for adding a deadline task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDateFormatException If the date format is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask(String userInput) throws IllegalDeadlineFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"        int prefixLengthPlusSpace \u003d 9;","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted deadline task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"        if (!isDeadlineFormatCorrect(userInput)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDeadlineFormatException(\"Please Follow The Format For Adding A Deadline Task:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tdeadline task_description /by DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(prefixLengthPlusSpace).split(\" /by \");","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"        String[] enteredDate \u003d userInputArray[1].split(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"        // Making sure that the time is properly formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"        if (!isDateRangeValid(enteredDate)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDateFormatException(\"Please Follow The Date Format DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime deadlineDate \u003d new TaskDateAndTime(userInputArray[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"        String taskDescription \u003d userInputArray[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"        String taskDate \u003d userInputArray[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"        Task deadlineTask \u003d new Deadline(taskDescription, deadlineDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.DEADLINE, taskDescription, taskDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(deadlineTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the format for adding an","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"     * event task is followed or not.","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The command entered by the user, to be checked.","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the format for adding the event task is followed.","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"    public boolean isEventFormatCorrect(String userInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"        boolean hasAtKeyword \u003d userInput.toLowerCase().contains(\"/at\");","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"        if (!hasAtKeyword) {","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"        boolean hasLengthGreaterThanOrEqualToFour \u003d userInput.split(\" \").length \u003e\u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"        boolean hasDescriptionAndDateSpecified \u003d userInput.substring(5).split(\" /at \").length \u003e\u003d 2;","lastModifiedDate":"2021-09-07"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"        return hasAtKeyword \u0026\u0026 hasLengthGreaterThanOrEqualToFour \u0026\u0026 hasDescriptionAndDateSpecified;","lastModifiedDate":"2021-09-07"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"     * Adds an event type task to the task list and storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalEventFormatException If the format for adding an event task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalDateFormatException If the date format is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask(String userInput) throws IllegalEventFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"        int prefixLengthPlusSpace \u003d 6;","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted event task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"        if (!isEventFormatCorrect(userInput)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalEventFormatException(\"Please Follow The Format For Adding An Event Task:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"                    + \"\\tevent task_description /at time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"        String[] userInputArray \u003d userInput.substring(prefixLengthPlusSpace).split(\" /at \");","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"        String[] enteredDate \u003d userInputArray[1].split(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"        // Making sure that the date is properly formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"        if (!isDateRangeValid(enteredDate)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalDateFormatException(\"Please Follow The Date Format DD/MM/YYYY\");","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime eventDate \u003d new TaskDateAndTime(userInputArray[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"        String taskDescription \u003d userInputArray[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"        String taskDate \u003d userInputArray[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":212,"author":{"gitId":"Jai2501"},"content":"        Task eventTask \u003d new Event(taskDescription, eventDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.EVENT, taskDescription, taskDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":215,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(eventTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the format for adding a","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"Jai2501"},"content":"     * todo task is followed or not.","lastModifiedDate":"2021-09-07"},{"lineNumber":221,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The command entered by the user, to be checked.","lastModifiedDate":"2021-09-07"},{"lineNumber":223,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the format for adding the todo task is followed.","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"Jai2501"},"content":"    public boolean isTodoFormatCorrect(String userInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":226,"author":{"gitId":"Jai2501"},"content":"        boolean hasLengthGreaterThanOrEqualToTwo \u003d userInput.split(\" \").length \u003e\u003d 2;","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"Jai2501"},"content":"        if (!hasLengthGreaterThanOrEqualToTwo) {","lastModifiedDate":"2021-09-07"},{"lineNumber":228,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":229,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":230,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":231,"author":{"gitId":"Jai2501"},"content":"        boolean hasDescriptionSpecified \u003d userInput.substring(5).compareTo(\"\") !\u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":232,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":233,"author":{"gitId":"Jai2501"},"content":"        return hasLengthGreaterThanOrEqualToTwo \u0026\u0026 hasDescriptionSpecified;","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":236,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"Jai2501"},"content":"     * Adds a todo type task to the task list and storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":238,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"Jai2501"},"content":"     * @param userInput The task details input by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTodoFormatException If the format for adding a todo task is not followed.","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"Jai2501"},"content":"    public void addTodoTask(String userInput) throws IllegalTodoFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"Jai2501"},"content":"        int prefixLengthPlusSpace \u003d 5;","lastModifiedDate":"2021-09-07"},{"lineNumber":244,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":245,"author":{"gitId":"Jai2501"},"content":"        // Making sure that a properly formatted todo task is entered.","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"Jai2501"},"content":"        if (!isTodoFormatCorrect(userInput)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":247,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTodoFormatException(\"Please Follow The Format For Adding A Todo Task:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"Jai2501"},"content":"                    + \"\\ttodo task_description\");","lastModifiedDate":"2021-08-24"},{"lineNumber":249,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"Jai2501"},"content":"        // Parsing the user input to obtain the information about the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"Jai2501"},"content":"        String userInputTodo \u003d userInput.substring(prefixLengthPlusSpace);","lastModifiedDate":"2021-09-07"},{"lineNumber":253,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"Jai2501"},"content":"        Task todoTask \u003d new Todo(userInputTodo);","lastModifiedDate":"2021-08-24"},{"lineNumber":255,"author":{"gitId":"Jai2501"},"content":"        userTaskList.add(todoTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"Jai2501"},"content":"        taskStorage.writeTask(Task.TaskType.TODO, userInputTodo, \"N/A\");","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(todoTask, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":258,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":260,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":261,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting if the task number is entered","lastModifiedDate":"2021-09-07"},{"lineNumber":262,"author":{"gitId":"Jai2501"},"content":"     * correctly.","lastModifiedDate":"2021-09-07"},{"lineNumber":263,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":264,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed user input which should hold the task number.","lastModifiedDate":"2021-09-07"},{"lineNumber":265,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the task number is entered well.","lastModifiedDate":"2021-09-07"},{"lineNumber":266,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":267,"author":{"gitId":"Jai2501"},"content":"    public boolean isTaskNumberSpecified(String[] parsedUserInput) {","lastModifiedDate":"2021-09-07"},{"lineNumber":268,"author":{"gitId":"Jai2501"},"content":"        boolean isArrayLengthGreaterThanOne \u003d parsedUserInput.length \u003e 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":269,"author":{"gitId":"Jai2501"},"content":"        if (!isArrayLengthGreaterThanOne) {","lastModifiedDate":"2021-09-07"},{"lineNumber":270,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":271,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":272,"author":{"gitId":"Jai2501"},"content":"        boolean hasANumber \u003d parsedUserInput[1].compareTo(\"\") !\u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":273,"author":{"gitId":"Jai2501"},"content":"        boolean isDigit \u003d Character.isDigit(parsedUserInput[1].charAt(0));","lastModifiedDate":"2021-09-07"},{"lineNumber":274,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":275,"author":{"gitId":"Jai2501"},"content":"        return isArrayLengthGreaterThanOne \u0026\u0026 hasANumber \u0026\u0026 isDigit;","lastModifiedDate":"2021-09-07"},{"lineNumber":276,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":277,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":278,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":279,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean suggesting whether the task number entered is","lastModifiedDate":"2021-09-07"},{"lineNumber":280,"author":{"gitId":"Jai2501"},"content":"     * in the valid range according to the user task list length.","lastModifiedDate":"2021-09-07"},{"lineNumber":281,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":282,"author":{"gitId":"Jai2501"},"content":"     * @param taskNumber The task number to check.","lastModifiedDate":"2021-09-07"},{"lineNumber":283,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the task number is in the valid range.","lastModifiedDate":"2021-09-07"},{"lineNumber":284,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":285,"author":{"gitId":"Jai2501"},"content":"    public boolean isTaskNumberInRange(int taskNumber) {","lastModifiedDate":"2021-09-07"},{"lineNumber":286,"author":{"gitId":"Jai2501"},"content":"        return (taskNumber \u003c\u003d (userTaskList.size() - 1)) \u0026\u0026 (taskNumber \u003e\u003d 0);","lastModifiedDate":"2021-09-07"},{"lineNumber":287,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":288,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"Jai2501"},"content":"     * Deletes a particular task from the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":291,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"delete\" keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":292,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number.","lastModifiedDate":"2021-08-24"},{"lineNumber":293,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":294,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":295,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":296,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-24"},{"lineNumber":297,"author":{"gitId":"Jai2501"},"content":"        if (!isTaskNumberSpecified(parsedUserInput)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":298,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":299,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":300,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":301,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":302,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(parsedUserInput[1])) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":303,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":304,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":305,"author":{"gitId":"Jai2501"},"content":"        if (!isTaskNumberInRange(taskNumber)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":306,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":307,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":308,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":309,"author":{"gitId":"Jai2501"},"content":"        Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":310,"author":{"gitId":"Jai2501"},"content":"        userTaskList.remove(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":311,"author":{"gitId":"Jai2501"},"content":"        taskStorage.deleteTask(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":312,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskDeleted(task, taskListLength());","lastModifiedDate":"2021-08-24"},{"lineNumber":313,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":314,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":315,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":316,"author":{"gitId":"Jai2501"},"content":"     * Marks a particular task as done in the task list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":317,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":318,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"done\" keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":319,"author":{"gitId":"Jai2501"},"content":"     * @throws IllegalTaskNumberException If the task number entered is not a number.","lastModifiedDate":"2021-08-24"},{"lineNumber":320,"author":{"gitId":"Jai2501"},"content":"     * @throws TaskNotFoundException If the entered task number does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":321,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":322,"author":{"gitId":"Jai2501"},"content":"    public void markTaskAsDone(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":323,"author":{"gitId":"Jai2501"},"content":"        // Checking if a task number is entered and is an integer.","lastModifiedDate":"2021-08-24"},{"lineNumber":324,"author":{"gitId":"Jai2501"},"content":"        if (!isTaskNumberSpecified(parsedUserInput)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":325,"author":{"gitId":"Jai2501"},"content":"            throw new IllegalTaskNumberException(\"Please Enter An Integer Value For Task Number\");","lastModifiedDate":"2021-08-24"},{"lineNumber":326,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":327,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":328,"author":{"gitId":"Jai2501"},"content":"        // Obtaining the task number to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":329,"author":{"gitId":"Jai2501"},"content":"        int taskNumber \u003d (Integer.parseInt(parsedUserInput[1])) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":330,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":331,"author":{"gitId":"Jai2501"},"content":"        // Making sure the task number exists in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":332,"author":{"gitId":"Jai2501"},"content":"        if (!isTaskNumberInRange(taskNumber)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":333,"author":{"gitId":"Jai2501"},"content":"            throw new TaskNotFoundException(\"Sorry! The Task Number Entered Does Not Exist!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":334,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":335,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":336,"author":{"gitId":"Jai2501"},"content":"        Task task \u003d userTaskList.get(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":337,"author":{"gitId":"Jai2501"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":338,"author":{"gitId":"Jai2501"},"content":"        taskStorage.updateTaskStatusToDone(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":339,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskMarkedAsDone(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":340,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":341,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":342,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":343,"author":{"gitId":"Jai2501"},"content":"     * Finds tasks with the given keyword and prints them.","lastModifiedDate":"2021-08-26"},{"lineNumber":344,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":345,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"find\" keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":346,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":347,"author":{"gitId":"Jai2501"},"content":"    public void findTaskWithKeyword(String[] parsedUserInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":348,"author":{"gitId":"Jai2501"},"content":"        String taskDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":349,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":350,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":351,"author":{"gitId":"Jai2501"},"content":"        for (int i \u003d 0; i \u003c taskListLength(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":352,"author":{"gitId":"Jai2501"},"content":"            taskDescription \u003d userTaskList.get(i).toString().toLowerCase();","lastModifiedDate":"2021-08-26"},{"lineNumber":353,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":354,"author":{"gitId":"Jai2501"},"content":"            if (taskDescription.contains(parsedUserInput[1].toLowerCase())) {","lastModifiedDate":"2021-08-26"},{"lineNumber":355,"author":{"gitId":"Jai2501"},"content":"                matchingTasks.add(userTaskList.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":356,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":357,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":358,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":359,"author":{"gitId":"Jai2501"},"content":"        ui.printTasksFoundByKeyword(matchingTasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":360,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":361,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":362,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":363,"author":{"gitId":"Jai2501"},"content":"     * Returns a boolean, suggesting whether the format for viewing a","lastModifiedDate":"2021-09-08"},{"lineNumber":364,"author":{"gitId":"Jai2501"},"content":"     * schedule is followed or not.","lastModifiedDate":"2021-09-08"},{"lineNumber":365,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":366,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The command entered by the user, to be checked.","lastModifiedDate":"2021-09-08"},{"lineNumber":367,"author":{"gitId":"Jai2501"},"content":"     * @return A boolean, true, if the command for viewing the schedule is formatted well.","lastModifiedDate":"2021-09-08"},{"lineNumber":368,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":369,"author":{"gitId":"Jai2501"},"content":"    public boolean isViewScheduleFormatCorrect(String[] parsedUserInput) {","lastModifiedDate":"2021-09-08"},{"lineNumber":370,"author":{"gitId":"Jai2501"},"content":"        boolean hasDate \u003d parsedUserInput.length \u003d\u003d 2;","lastModifiedDate":"2021-09-08"},{"lineNumber":371,"author":{"gitId":"Jai2501"},"content":"        if (!hasDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":372,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":373,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":374,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":375,"author":{"gitId":"Jai2501"},"content":"        String[] enteredDate \u003d parsedUserInput[1].split(\"/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":376,"author":{"gitId":"Jai2501"},"content":"        boolean isDateFormatValid \u003d enteredDate.length \u003d\u003d 3;","lastModifiedDate":"2021-09-08"},{"lineNumber":377,"author":{"gitId":"Jai2501"},"content":"        if (!isDateFormatValid) {","lastModifiedDate":"2021-09-08"},{"lineNumber":378,"author":{"gitId":"Jai2501"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":379,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":380,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":381,"author":{"gitId":"Jai2501"},"content":"        boolean isDateValid \u003d isDateRangeValid(enteredDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":382,"author":{"gitId":"Jai2501"},"content":"        return isDateValid;","lastModifiedDate":"2021-09-08"},{"lineNumber":383,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":384,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":385,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":386,"author":{"gitId":"Jai2501"},"content":"     * Finds tasks with the same due date as the date entered, and prints them.","lastModifiedDate":"2021-09-08"},{"lineNumber":387,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":388,"author":{"gitId":"Jai2501"},"content":"     * @param parsedUserInput The parsed command, entered by the user with the \"view\" keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":389,"author":{"gitId":"Jai2501"},"content":"     * @throws RetrieverException If the command entered is not formatted well.","lastModifiedDate":"2021-09-08"},{"lineNumber":390,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":391,"author":{"gitId":"Jai2501"},"content":"    public void viewScheduleForAParticularDay(String[] parsedUserInput) throws RetrieverException {","lastModifiedDate":"2021-09-08"},{"lineNumber":392,"author":{"gitId":"Jai2501"},"content":"        if (!isViewScheduleFormatCorrect(parsedUserInput)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":393,"author":{"gitId":"Jai2501"},"content":"            throw new RetrieverException(\"Please Follow The Specified Format: view DD/MM/YYYY\");","lastModifiedDate":"2021-09-08"},{"lineNumber":394,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":395,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":396,"author":{"gitId":"Jai2501"},"content":"        TaskDateAndTime enteredDate \u003d new TaskDateAndTime(parsedUserInput[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":397,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e scheduledTasksForTheDay \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":398,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":399,"author":{"gitId":"Jai2501"},"content":"        for (int i \u003d 0; i \u003c taskListLength(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":400,"author":{"gitId":"Jai2501"},"content":"            Task task \u003d userTaskList.get(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":401,"author":{"gitId":"Jai2501"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":402,"author":{"gitId":"Jai2501"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2021-09-08"},{"lineNumber":403,"author":{"gitId":"Jai2501"},"content":"                if (deadlineTask.isOnDate(enteredDate)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":404,"author":{"gitId":"Jai2501"},"content":"                    scheduledTasksForTheDay.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":405,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":406,"author":{"gitId":"Jai2501"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-09-08"},{"lineNumber":407,"author":{"gitId":"Jai2501"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2021-09-08"},{"lineNumber":408,"author":{"gitId":"Jai2501"},"content":"                if (eventTask.isOnDate(enteredDate)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":409,"author":{"gitId":"Jai2501"},"content":"                    scheduledTasksForTheDay.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":410,"author":{"gitId":"Jai2501"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":411,"author":{"gitId":"Jai2501"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":412,"author":{"gitId":"Jai2501"},"content":"                // Don\u0027t Add","lastModifiedDate":"2021-09-08"},{"lineNumber":413,"author":{"gitId":"Jai2501"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":414,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":415,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":416,"author":{"gitId":"Jai2501"},"content":"        ui.printTasksScheduledForTheDay(scheduledTasksForTheDay);","lastModifiedDate":"2021-09-08"},{"lineNumber":417,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":418,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":419,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":420,"author":{"gitId":"Jai2501"},"content":"     * Prints the tasks stored in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":421,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":422,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":423,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskList(userTaskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":424,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":425,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":426,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":426}},{"path":"src/main/java/retriever/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":" * This class keeps track of todo type tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"     * Constructor, to initialize a todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"     * Returns the todo task description and its status in an","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"     * organised format.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"     * @return A String including the todo task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Jai2501":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jai2501":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"retriever.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jai2501":19}},{"path":"src/test/java/retriever/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalCommandException;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskListStub;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    private Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    private StorageStub storageStub \u003d new StorageStub(\"tasksListStub.txt\");","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private TaskListStub taskListStub \u003d new TaskListStub(storageStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithViewKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"view 21/09/2021\");","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"            assertEquals(\"Master, You Can Play With Me, No Scheduled Tasks For The Day, Woooof!\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithFindKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"find String\");","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"            assertEquals(\"Sorry Master, I Couldn\u0027t Smell And Find What You Asked For!\\n \"","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"                    + \"(Task With the Given Keyword Does Not Exist)\\n\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithListKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"list\");","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"            assertEquals(\"My Memory Is Empty, Please Feed Items!\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithDeleteKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"delete 1\");","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d \"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"                    + \"Task Deleted!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"                    + \"[T][ ] Testing\"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"                    + \"\\nYou Owe Me 0 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithDoneKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"done 1\");","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d \"Woof! Whose a Good Boy?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"                    + \"Task Done!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"                    + \"[T][X] Testing\";","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithDeadlineKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"deadline Testing /by 12/09/2021\");","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"                    + \"[D][ ] Testing (by: Sep 12 2021)\"","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"                    + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithEventKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"event Testing /at 12/09/2021\");","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"                    + \"[E][ ] Testing (at: Sep 12 2021)\"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"                    + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithTodoKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"todo Testing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"                    + \"[T][ ] Testing\"","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"                    + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithHelpKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"help\");","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"            retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"            Ui uiActual \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"            uiActual.printHelpSection();","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"            String expectedOutput \u003d uiActual.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"            assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithByeKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse;","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"bye\");","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"            assertTrue(parserTest.isSessionDone());","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"    public void parseUserInput_aStringWithNonsenseKeyword_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"        Parser parserTest \u003d new Parser(taskListStub);","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"            parserTest.parseUserInput(\"Nonsense\");","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"            assertTrue(true);","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Jai2501":180}},{"path":"src/test/java/retriever/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class StorageStub extends Storage {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    public StorageStub(String filePath) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"        super(filePath);","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    public ArrayList\u003cTask\u003e readTasks() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    public void writeTask(Task.TaskType task, String taskDescription, String taskDeadline) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        // Assume we are writing a task to the file","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"        // Assume we are deleting task from file","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    public void updateTaskStatusToDone(int taskNumber) {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        // Assume we are updating task status in file","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public void createNewFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        // Assume we are creating a new file","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Jai2501":36}},{"path":"src/test/java/retriever/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import retriever.task.TaskDateAndTime;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"import retriever.task.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"public class UiTest {","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList_anEmptyArrayList_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"My Memory Is Empty, Please Feed Items!\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList_anArrayListWithItems_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Todo(\"Testing\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\")));","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskList(sampleTasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"-\u003e Your Tasks, My Master:\\n\" + \"1. [T][ ] Testing\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"                + \"2. [D][ ] Testing (by: Sep 12 2021)\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"    public void printTasksScheduledForTheDay_anEmptyArrayList_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTasksScheduledForTheDay(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Master, You Can Play With Me, No Scheduled Tasks For The Day, Woooof!\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"    public void printTasksScheduledForTheDay_anArrayListWithItems_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Todo(\"Testing\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\")));","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTasksScheduledForTheDay(sampleTasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Master, You are Busy For The Day...\\n\" + \"1. [T][ ] Testing\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"                + \"2. [D][ ] Testing (by: Sep 12 2021)\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"    public void printTasksFoundByKeyword_anEmptyArrayList_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTasksFoundByKeyword(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Sorry Master, I Couldn\u0027t Smell And Find What You Asked For!\"","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"                + \"\\n (Task With the Given Keyword Does Not Exist)\\n\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"    public void printTasksFoundByKeyword_anArrayListWithItems_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        ArrayList\u003cTask\u003e sampleTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Todo(\"Testing\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"        sampleTasks.add(new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\")));","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTasksFoundByKeyword(sampleTasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Look What I Found: \\n\" + \"1. [T][ ] Testing\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"                + \"2. [D][ ] Testing (by: Sep 12 2021)\\n\" + \"You Owe Me \" + sampleTasks.size() + \" Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"    public void printMessage_aMessage_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"        uiTest.printMessage(\"Test Message\");","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Test Message\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"    public void printErrorMessage_aMessage_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"        uiTest.printErrorMessage(\"Test Error Message\");","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Test Error Message\", retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"    public void printTaskAdded_aTodoTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"        Todo todoSampleTask \u003d new Todo(\"Testing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskAdded(todoSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"Jai2501"},"content":"                + \"[T][ ] Testing\" + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"Jai2501"},"content":"    public void printTaskAdded_aDeadlineTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"Jai2501"},"content":"        Deadline deadlineSampleTask \u003d new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskAdded(deadlineSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"Jai2501"},"content":"                + \"[D][ ] Testing (by: Sep 12 2021)\" + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Jai2501"},"content":"    public void printTaskAdded_anEventTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"Jai2501"},"content":"        Event eventSampleTask \u003d new Event(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskAdded(eventSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Where\u0027s My Treat? I Added:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"Jai2501"},"content":"                + \"[E][ ] Testing (at: Sep 12 2021)\" + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"Jai2501"},"content":"    public void printTaskDeleted_aTodoTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"Jai2501"},"content":"        Todo todoSampleTask \u003d new Todo(\"Testing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"Jai2501"},"content":"        todoSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskDeleted(todoSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"Jai2501"},"content":"                + \"Task Deleted!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"Jai2501"},"content":"                + \"[T][X] Testing\"","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"Jai2501"},"content":"                + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"Jai2501"},"content":"    public void printTaskDeleted_aDeadlineTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"Jai2501"},"content":"        Deadline deadlineSampleTask \u003d new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"Jai2501"},"content":"        deadlineSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskDeleted(deadlineSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"Jai2501"},"content":"                + \"Task Deleted!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"Jai2501"},"content":"                + \"[D][X] Testing (by: Sep 12 2021)\"","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"Jai2501"},"content":"                + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"Jai2501"},"content":"    public void printTaskDeleted_anEventTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"Jai2501"},"content":"        Event eventSampleTask \u003d new Event(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"Jai2501"},"content":"        eventSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskDeleted(eventSampleTask, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Bad Boy?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"Jai2501"},"content":"                + \"Task Deleted!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"Jai2501"},"content":"                + \"[E][X] Testing (at: Sep 12 2021)\"","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"Jai2501"},"content":"                + \"\\nYou Owe Me 1 Treat(s), Master!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"Jai2501"},"content":"    public void printTaskMarkedAsDone_aTodoTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"Jai2501"},"content":"        Todo todoSampleTask \u003d new Todo(\"Testing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"Jai2501"},"content":"        todoSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskMarkedAsDone(todoSampleTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Good Boy?\\n\" + \"Task Done!\\n\" + \"[T][X] Testing\";","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"Jai2501"},"content":"    public void printTaskMarkedAsDone_aDeadlineTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"Jai2501"},"content":"        Deadline deadlineSampleTask \u003d new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"Jai2501"},"content":"        deadlineSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskMarkedAsDone(deadlineSampleTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Good Boy?\\n\" + \"Task Done!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"Jai2501"},"content":"                + \"[D][X] Testing (by: Sep 12 2021)\";","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"Jai2501"},"content":"    public void printTaskMarkedAsDone_anEventTask_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"Jai2501"},"content":"        Ui uiTest \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"Jai2501"},"content":"        Event eventSampleTask \u003d new Event(\"Testing\", new TaskDateAndTime(\"12/09/2021\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":203,"author":{"gitId":"Jai2501"},"content":"        eventSampleTask.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"Jai2501"},"content":"        uiTest.printTaskMarkedAsDone(eventSampleTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"Jai2501"},"content":"        String retrieverResponse \u003d uiTest.getRetrieverResponse();","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"Jai2501"},"content":"        String expectedOutput \u003d \"Woof! Whose a Good Boy?\\n\" + \"Task Done!\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"Jai2501"},"content":"                + \"[E][X] Testing (at: Sep 12 2021)\";","lastModifiedDate":"2021-09-13"},{"lineNumber":208,"author":{"gitId":"Jai2501"},"content":"        assertEquals(expectedOutput, retrieverResponse);","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":210,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Jai2501":210}},{"path":"src/test/java/retriever/task/TaskDateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"public class TaskDateAndTimeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"    public void toString_aDateInStringFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Aug 21 2021\", new TaskDateAndTime(\"21/08/2021\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"    public void toString_aDateInputInStringFormat_success() {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Aug 23 2021\", new TaskDateAndTime(\"23/08/2021\").toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"    public void toString_aDateWronglyFormatted_success() {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"        assertEquals(\"Jan 21 2001\", new TaskDateAndTime(\"21/01/2001\").toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":22}},{"path":"src/test/java/retriever/task/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import retriever.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"import retriever.Ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDateFormatException;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDeadlineFormatException;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalEventFormatException;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalTaskNumberException;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalTodoFormatException;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    public TaskListStub(Storage taskStorage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"        super(taskStorage);","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"    public int taskListLength() {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"        return new ArrayList\u003cTask\u003e().size();","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"    public void deleteTask(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskDeleted(new Todo(\"Testing\"), new ArrayList\u003cTask\u003e().size());","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"    public void markTaskAsDone(String[] parsedUserInput) throws IllegalTaskNumberException, TaskNotFoundException {","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        Todo sampleTodo \u003d new Todo(\"Testing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"        sampleTodo.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskMarkedAsDone(sampleTodo);","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask(String userInput) throws IllegalDeadlineFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(new Deadline(\"Testing\", new TaskDateAndTime(\"12/09/2021\")),","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"                1);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask(String userInput) throws IllegalEventFormatException, IllegalDateFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(new Event(\"Testing\", new TaskDateAndTime(\"12/09/2021\")),","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"                1);","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"    public void addTodoTask(String userInput) throws IllegalTodoFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"        ui.printTaskAdded(new Todo(\"Testing\"), 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"    public void findTaskWithKeyword(String[] parsedUserInput) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        ui.printTasksFoundByKeyword(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"    public void viewScheduleForAParticularDay(String[] parsedUserInput) throws RetrieverException {","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"        ui.printTasksScheduledForTheDay(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Jai2501":70}},{"path":"src/test/java/retriever/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"package retriever.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"import retriever.StorageStub;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDateFormatException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.IllegalDeadlineFormatException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"import retriever.exception.RetrieverException;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"    public void taskListLength_checkingLengthOfEmptyList_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"        assertEquals(0, new TaskList(new StorageStub(\"file_name_stub\")).taskListLength());","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"deadline CS2103T iP /by 26/08/2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Jai2501"},"content":"            taskList.addDeadlineTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"event Apple WWDC 2021 /at 10/06/2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Jai2501"},"content":"            taskList.addEventTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Jai2501"},"content":"    public void addTodoTask_addingTaskUsingCorrectFormat_success() {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"todo laundry\";","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Jai2501"},"content":"            taskList.addTodoTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Jai2501"},"content":"        assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Jai2501"},"content":"    public void taskListLength_afterAddingSomeItems_success() throws RetrieverException {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Jai2501"},"content":"        TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Jai2501"},"content":"        taskList.addTodoTask(\"todo sleep\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Jai2501"},"content":"        taskList.addDeadlineTask(\"deadline CS2103T iP /by 26/08/2021\");","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Jai2501"},"content":"        assertEquals(2, taskList.taskListLength());","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Jai2501"},"content":"    public void addDeadlineTask_addingTaskUsingIncorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"deadline CS2103T iP /by 26-08-2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"Jai2501"},"content":"            taskList.addDeadlineTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Jai2501"},"content":"        } catch (IllegalDateFormatException | IllegalDeadlineFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Jai2501"},"content":"            assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Jai2501"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Jai2501"},"content":"    public void addEventTask_addingTaskUsingIncorrectDateFormat_exceptionThrown() {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Jai2501"},"content":"        boolean hasPassed \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Jai2501"},"content":"        String task \u003d \"event Apple WWDC 2021 /at 10th June 2021\";","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Jai2501"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Jai2501"},"content":"            TaskList taskList \u003d new TaskList(new StorageStub(\"file_name_stub\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Jai2501"},"content":"            taskList.addEventTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Jai2501"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Jai2501"},"content":"        } catch (RetrieverException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Jai2501"},"content":"            hasPassed \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"Jai2501"},"content":"            assertTrue(hasPassed);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Jai2501"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Jai2501"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Jai2501"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":106}},{"path":"tasksList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"E | 1 | sleep | 29/01/2090","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"E | 1 | Apple | 11/09/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"D | 1 | CS2103T | 23/08/2021","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"E | 1 | Have Dinner | 23/09/2022","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"D | 1 | CS2103T ip | 27/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"E | 0 | SOC Social Night | 28/08/2021","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"D | 0 | work | 23/09/2001","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"D | 1 | task | 21/09/2021","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"D | 1 | Testing | 12/09/2021","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"T | 0 | laundry","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"D | 1 | CS2103T iP | 17/09/2021","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Jai2501":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"Hi","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"todo fix bugs","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"deadline CS2103T week 1 ip /by 19th Aug","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"event Apple WWDC 2021 /at 11PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Jai2501"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jai2501"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jai2501"},"content":"event attend CS2100 lecture /at 4PM","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Jai2501"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jai2501"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jai2501"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jai2501"},"content":"event ST2334 tut /at 1PM","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jai2501"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jai2501"},"content":"todo code","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Jai2501"},"content":"deadline /at","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"done 6","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jai2501"},"content":"todo clean room","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Jai2501"},"content":"event Watch Netflix /at 12AM","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Jai2501"},"content":"delete 8","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Jai2501"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Jai2501"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jai2501":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Jai2501"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Jai2501"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Jai2501"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Jai2501"},"content":"java -classpath ../bin retriever/Retriever \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Jai2501":4}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"../src/main/java/retriever/Parser.java","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"../src/main/java/retriever/Retriever.java","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"../src/main/java/retriever/Storage.java","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Jai2501"},"content":"../src/main/java/retriever/Ui.java","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":4}},{"path":"text-ui-test/tasksList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jai2501"},"content":"T | 1 | fix bugs","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Jai2501"},"content":"T | 0 | code","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Jai2501"},"content":"T | 0 | clean room","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Jai2501":3}}]
