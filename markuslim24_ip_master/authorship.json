[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"# duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markuslim24":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"//checkstyle {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"//    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"//}","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markuslim24":4,"-":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"import duke.parser.DukeParser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":" * Represents the main Duke Program, a task manager.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"            Storage storage \u003d new Storage(\"./data/list1.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"            TaskList list \u003d storage.readList();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"            DukeParser parser \u003d new DukeParser(list, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"            UI.printGreeting();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"            String input \u003d UI.getUserInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"            while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"                    parser.parse(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"                    UI.printError(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"                } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"                    input \u003d UI.getUserInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"            UI.printBye();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"markuslim24":28,"-":4}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":" * Represents and handles the storage of the Duke Program\"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    private final File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"     * @param filePath The storage file location in the system.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        }catch(IOException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"            UI.printError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     * Reads the list from the storage file and translates it into a TaskList object.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     * @return A TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    public TaskList readList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"                String[] arr \u003d s.nextLine().split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"                String taskType \u003d arr[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"                        Task t \u003d new Todo(arr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"                        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"                            t.markComplete();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"                        list.addTask(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"                        Task d \u003d new Deadline(arr[2], LocalDateTime.parse(arr[3]","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"                                , DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"                        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"                            d.markComplete();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"                        list.addTask(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"                        Task e \u003d new Event(arr[2], LocalDateTime.parse(arr[3]","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"                                , DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"                        if (arr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"                            e.markComplete();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"                        list.addTask(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"                    default:","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"        } catch(IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"            UI.printError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"     * Writes a TaskList object into the storage file.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"     * @param list The TaskList to be written into the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"    public void writeList(TaskList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"            fw.write(list.toStorageString());","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"        } catch(IOException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"            UI.printError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"markuslim24":95}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":" * Represents the User interface of the Duke Program. Interfaces through the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"public class UI {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    protected static String greetingText \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    protected static String byeText \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    protected static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"     * Formats a string with a line spacing above and below it and returns it.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"     * @param text The string to format.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"     * @return The formatted string.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    private static String formatWithSpace(String text) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"        return \"\\n\" + text + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * Prints the greeting message to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        System.out.println(greetingText);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"     * Prints the goodbye message to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"        System.out.println(byeText);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"     * Prints a task list to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"     * @param list The TaskList to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"    public static void printList(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"        String s \u003d \"Here are the tasks in your list:\" + list.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"        System.out.println(formatWithSpace(s));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"     * Formats the amount of tasks in a list into a string.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"     * @param count The amount of tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"     * @return The formatted string.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"    public static String listTaskAmount(int count) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"        return(\"\\nNow you have \" + count + \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"     * Prints the \"task added\" message for a list.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"     * @param list The list with the new task added.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"    public static void printTaskAdded(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"        int taskAmount \u003d list.getTaskAmount();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"        System.out.println(","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"                formatWithSpace(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"                        + list.getTask(taskAmount)","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"                        + listTaskAmount(taskAmount)","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"                )","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"     * Prints the \"task done\" message for the specified task.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"     * @param task The specified task.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"    public static void printTaskDone(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"        System.out.println(formatWithSpace(\"Nice! I\u0027ve marked this task as done:\\n \" + task));","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"     * Prints the \"task deleted\" message for a specific task in a tasklist and the amount of tasks left.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"     * @param task The deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"     * @param list The list from which the task was deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"    public static void printTaskDeleted(Task task,TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"        System.out.println(","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"                formatWithSpace(\"Ok, I have removed the following task:\\n \"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"                    + task","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"                    + listTaskAmount(list.getTaskAmount())));","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"     * Receives a user input on the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"     * @return The input.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"    public static String getUserInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"     * Prints the error message to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"     * @param e The error.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"    public static void printError(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"markuslim24"},"content":"        System.out.println(formatWithSpace(e.getMessage()));","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"     * Prints the list of matching tasks to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"markuslim24"},"content":"     * @param list The list to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"    public static void printSearchList(TaskList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"        String s \u003d \"Here are the matching tasks in your list:\" + list.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"markuslim24"},"content":"        System.out.println(formatWithSpace(s));","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"markuslim24":117}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents all exceptions specific to the Duke program.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"     * @param errorMessage The error message;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":14}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents an exception caused when an unrecognized command is used in the Duke program","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"        super(\"Oops, unfortunately i am not yet smart enough to understand what you are saying\");","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":13}},{"path":"src/main/java/duke/exception/InvalidCommandParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents an exception caused when an unrecognized parameter is used for a recognized command.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class InvalidCommandParameterException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"     * Constructor for exception","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    public InvalidCommandParameterException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"        super(\"Oops, you have entered an invalid parameter for this command\");","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":13}},{"path":"src/main/java/duke/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents an exception caused when no such task is found for a command that needs a task number","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    public NoSuchTaskException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"        super(\"Hey, there is no such task!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":13}},{"path":"src/main/java/duke/parser/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import duke.exception.InvalidCommandParameterException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"import duke.UI;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":" * Represents the input parser of the Duke Program.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"public class DukeParser {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    TaskList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * @param list The list to handle.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     * @param storage The storage to handle.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    public DukeParser(TaskList list, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"     * Takes in raw input of user, processes it and execute the  appropriate action.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"     * @param rawInput","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"    public void parse(String rawInput) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        Scanner inputScanner \u003d new Scanner(rawInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        String checkForKeyword \u003d inputScanner.next();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"        switch (checkForKeyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"            case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"                handleList(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"            case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"                handleDone(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"                handleDelete(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"                handleTodo(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"                handleDeadline(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"                handleEvent(inputScanner);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"            case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"                handleFind(inputScanner);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"     * Action for list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"    public void handleList(Scanner inputScanner) throws InvalidCommandParameterException {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"            UI.printList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"     * Action for done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"    public void handleDone(Scanner inputScanner) throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"            , NoSuchTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextInt()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"            int taskPos \u003d inputScanner.nextInt() - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"            list.markDone(taskPos);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"            storage.writeList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"            UI.printTaskDone(list.getTask(taskPos + 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"     * Action for delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"markuslim24"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"    public void handleDelete(Scanner inputScanner) throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"            , NoSuchTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextInt()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"markuslim24"},"content":"            int taskPos \u003d inputScanner.nextInt() - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"            Task temp \u003d list.deleteTask(taskPos);","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"            storage.writeList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"            UI.printTaskDeleted(temp, list);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"markuslim24"},"content":"     * Action for todo command.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"markuslim24"},"content":"    public void handleTodo(Scanner inputScanner) throws InvalidCommandParameterException {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"markuslim24"},"content":"            String secondWord \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"markuslim24"},"content":"            list.addTask(new Todo(secondWord));","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"markuslim24"},"content":"            storage.writeList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"markuslim24"},"content":"            UI.printTaskAdded(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"markuslim24"},"content":"     * Action for deadline command.","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"markuslim24"},"content":"    public void handleDeadline(Scanner inputScanner) throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"markuslim24"},"content":"             {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"markuslim24"},"content":"            String[] contentAndDate \u003d inputScanner.nextLine().split(\"/by \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"markuslim24"},"content":"            String content \u003d contentAndDate[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"markuslim24"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(contentAndDate[1],formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"markuslim24"},"content":"            list.addTask(new Deadline(content, date));","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"markuslim24"},"content":"            storage.writeList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"markuslim24"},"content":"            UI.printTaskAdded(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"markuslim24"},"content":"     * Action for Event command.","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"markuslim24"},"content":"    public void handleEvent(Scanner inputScanner) throws InvalidCommandParameterException {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"markuslim24"},"content":"            String[] contentAndDate \u003d inputScanner.nextLine().split(\"/at \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"markuslim24"},"content":"            String content \u003d contentAndDate[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"markuslim24"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(contentAndDate[1],formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"markuslim24"},"content":"            list.addTask(new Event(content, date));","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"markuslim24"},"content":"            storage.writeList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"markuslim24"},"content":"            UI.printTaskAdded(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"markuslim24"},"content":"     * Action for Find Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"markuslim24"},"content":"     * @param inputScanner Command Parameters.","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"markuslim24"},"content":"     * @throws InvalidCommandParameterException","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"markuslim24"},"content":"    public void handleFind(Scanner inputScanner) throws InvalidCommandParameterException {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"markuslim24"},"content":"        if (inputScanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"markuslim24"},"content":"            String searchWord \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"markuslim24"},"content":"            TaskList searchList \u003d list.searchTask(searchWord);","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"markuslim24"},"content":"            UI.printSearchList(searchList);","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"markuslim24"},"content":"            throw new InvalidCommandParameterException();","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"markuslim24":188}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, MMM d,yyyy hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"     * @param content Main content of the Deadline Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"     * @param by Date of deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    public Deadline(String content, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"        super(content);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"     * String representation of a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"     * @return Deadline in string.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"     * String representation of a Deadline task for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"     * @return Deadline task in String(Storage format).","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"        String s1 \u003d super.toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"        String s2 \u003d String.format(\"D %s | %s\", s1, by);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"        return s2;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"markuslim24":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    final private LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, MMM d,yyyy hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"     * @param content Main Content of the event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"     * @param at Date of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    public Event(String content, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"        super(content);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"     * String representation of an event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * @return Event in string.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"     * String representation of an Event task for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"     * @return Event task in String(Storage format).","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"        String s1 \u003d super.toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"        String s2 \u003d String.format(\"E %s | %s\", s1, at);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"        return s2;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"markuslim24":43}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"    private final String content;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"     * @param content The task main content.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    public Task(String content) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"     * Returns true if task is marked completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     * Marks the task as complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"     * Checks if the task contains the search word","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"     * @param searchWord The word to look for in the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"     * @return True if the word exists in the Task, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"    public boolean contains(String searchWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"        return this.content.contains(searchWord);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"     * String representation of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"     * @return Task in string.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"        String cross \u003d this.isCompleted ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"        return \"[\" + cross + \"]\" + this.content;","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"     * String representation of a task for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"     * @return Task in String(Storage format).","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"        String done \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"        String s \u003d String.format(\"| %s | %s\", done, content);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"        return s;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"markuslim24":63}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":" * Represents a task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"     * Adds the specified Task to the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"     * @param task The Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"        list.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"     * Retrieves the nth Task from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"     * @param taskNumber The position of the task in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"     * @return The Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"        return this.list.get(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"     * Returns the amount of tasks in the specified list.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"markuslim24"},"content":"     * @return The amount of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"markuslim24"},"content":"    public int getTaskAmount() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"markuslim24"},"content":"        return list.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"markuslim24"},"content":"     * Marks the nth Task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"markuslim24"},"content":"     * @param taskPos The task position in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"markuslim24"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"markuslim24"},"content":"    public void markDone(int taskPos) throws NoSuchTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"markuslim24"},"content":"        if (taskPos \u003e\u003d 0 \u0026\u0026 taskPos \u003c list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"markuslim24"},"content":"            list.get(taskPos).markComplete();","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"markuslim24"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"markuslim24"},"content":"     * Deletes the nth task from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"markuslim24"},"content":"     * @param taskPos The task position in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"markuslim24"},"content":"     * @return The deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"markuslim24"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"markuslim24"},"content":"    public Task deleteTask(int taskPos) throws NoSuchTaskException {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"markuslim24"},"content":"        if (taskPos \u003e\u003d 0 \u0026\u0026 taskPos \u003c list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"markuslim24"},"content":"            Task temp \u003d list.get(taskPos);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"markuslim24"},"content":"            list.remove(taskPos);","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"markuslim24"},"content":"            return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"markuslim24"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"markuslim24"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"markuslim24"},"content":"     * Returns a Task List with tasks matching the search word.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"markuslim24"},"content":"     * @param searchWord The search word.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"markuslim24"},"content":"     * @return The task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"markuslim24"},"content":"    public TaskList searchTask(String searchWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"markuslim24"},"content":"        TaskList output \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"markuslim24"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"markuslim24"},"content":"            if (list.get(i).contains(searchWord)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"markuslim24"},"content":"                output.addTask(list.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"markuslim24"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"markuslim24"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"markuslim24"},"content":"     * String representation of the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"markuslim24"},"content":"     * @return String representation of the tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"markuslim24"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"markuslim24"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"markuslim24"},"content":"            s.append(\"\\n\").append(i + 1).append(\".\").append(list.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"markuslim24"},"content":"        return s.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"markuslim24"},"content":"     * String representation of the tasklist for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"markuslim24"},"content":"     * @return String representation of the tasklist(storage format).","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"markuslim24"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"markuslim24"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"markuslim24"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"markuslim24"},"content":"            s.append(list.get(i).toStorageString()).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"markuslim24"},"content":"        return s.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":115}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":" * Represents a Todo Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"     * @param content Main content of the Todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"    public Todo(String content) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"        super(content);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"     * String representation of a todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"     * @return Todo task in string.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"     * String representation of a Todo for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"     * @return Todo task in String(Storage format).","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"        String s1 \u003d super.toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"        String s2 \u003d String.format(\"T %s\", s1);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        return s2;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":34}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"markuslim24":4}},{"path":"src/test/java/duke/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"public class UITest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"markuslim24":9}},{"path":"src/test/java/duke/parser/DukeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"public class DukeParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"            DukeParser p \u003d new DukeParser(new TaskList(), new Storage(\"./data/list1.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"            p.parse(\"hello\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"            assertEquals(\"Oops, unfortunately i am not yet smart enough to understand what you are saying\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"markuslim24"},"content":"    public void parse_invalidCommandParameterDone_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"markuslim24"},"content":"            DukeParser p \u003d new DukeParser(new TaskList(), new Storage(\"./data/list1.txt\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"markuslim24"},"content":"            p.parse(\"done hello\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"markuslim24"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"markuslim24"},"content":"            assertEquals(\"Oops, you have entered an invalid parameter for this command\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"markuslim24":38}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"import duke.parser.DukeParser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"    public void markDone_noSuchTask_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"markuslim24"},"content":"            list.addTask(new Todo(\"test\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"            list.markDone(2);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"markuslim24"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"markuslim24"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"markuslim24"},"content":"            assertEquals(\"Hey, there is no such task!\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"markuslim24"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"markuslim24"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"markuslim24"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"markuslim24":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"markuslim24"},"content":"hello","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"markuslim24"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"markuslim24"},"content":"todo sleep","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"markuslim24"},"content":"deadline eat lunch /by 12/05/2021 1700","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"markuslim24"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"markuslim24"},"content":"deadline sleep /by 02/07/2021 2300","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"markuslim24"},"content":"event complete ip /at 15/08/2021 2359","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"markuslim24"},"content":"event sleep /at 19/08/2021 0000","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"markuslim24"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"markuslim24"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"markuslim24"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"markuslim24"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"markuslim24"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"markuslim24"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"markuslim24"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"markuslim24"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"markuslim24":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"markuslim24"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markuslim24":1,"-":20}}]
