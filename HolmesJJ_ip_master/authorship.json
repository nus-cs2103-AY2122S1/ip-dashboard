[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"import task.*;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import utils.CommandUtils;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * The project aims to build a product named Duke,","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * a Personal Assistant Chatbot that helps a person","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * to keep track of various things.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * This is the Main class that will contain the main method","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * to be executed at run-time.","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    private static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    private static void echo(String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + command);","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    private static Operation getOperation(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            return CommandUtils.extractOperation(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        return null;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    private static int getTaskNumber(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            number \u003d CommandUtils.extractTaskNumber(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return number;","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    private static String getTaskDescription(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            description \u003d CommandUtils.extractTaskDescription(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        return description;","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    private static void addTask(TaskManager taskManager, Operation operation, String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        switch (operation) {","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"            case TODO:","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                taskManager.addTask(todo);","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"                System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"                System.out.println(INDENTATION + \"  \" + todo.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"                System.out.println(INDENTATION + \"Now you have \" + taskManager.size() + \" \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"                        (taskManager.size() \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"                    String[] taskDetails \u003d CommandUtils.extractTaskDetails(description, \" /by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"                    String taskName \u003d taskDetails[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                    String byTime \u003d taskDetails[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"                    Deadline deadline \u003d new Deadline(taskName, byTime);","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"                    taskManager.addTask(deadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"  \" + deadline.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"Now you have \" + taskManager.size() + \" \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                            (taskManager.size() \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"            case EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"                    String[] taskDetails \u003d CommandUtils.extractTaskDetails(description, \" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"                    String taskName \u003d taskDetails[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"                    String atTime \u003d taskDetails[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"                    Event event \u003d new Event(taskName, atTime);","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"                    taskManager.addTask(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"  \" + event.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(INDENTATION + \"Now you have \" + taskManager.size() + \" \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"                            (taskManager.size() \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"                } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"                    System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"    private static void completeTask(TaskManager taskManager, int number) {","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"            taskManager.completeTask(number);","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(INDENTATION + \"  \" + taskManager.findTaskByNumber(number).toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"    private static void deleteTask(TaskManager taskManager, int number) {","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"            Task task \u003d taskManager.deleteTask(number);","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(INDENTATION + \"  \" + task.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(INDENTATION + \"Now you have \" + taskManager.size() + \" \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"                    (taskManager.size() \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(de.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"    private static void listTasks(TaskManager taskManager) {","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"        taskManager.printTasks();","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"    private static void bye() {","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"     * This is Main method.","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"     * @param args an array of command-line arguments for the application","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        greet();","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"        Operation operation \u003d getOperation(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        while (true) {","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"            if (operation \u003d\u003d Operation.BYE) {","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"                bye();","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"                break;","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.LIST) {","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"                listTasks(taskManager);","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.DONE) {","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"                int number \u003d getTaskNumber(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"                if (number \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"                    completeTask(taskManager, number);","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.DELETE) {","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"                int number \u003d getTaskNumber(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"                if (number \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"                    deleteTask(taskManager, number);","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.TODO ||","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"                    operation \u003d\u003d Operation.DEADLINE ||","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"                    operation \u003d\u003d Operation.EVENT) {","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"                String description \u003d getTaskDescription(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"                if (!description.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"                    addTask(taskManager, operation, description);","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"            command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"            operation \u003d getOperation(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":10,"HolmesJJ":193}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the DukeException class that extends from Exception.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Event.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * @param message exception message","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":21}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Deadline class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * Deadline task needs to be done before a specific time.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final String byTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param byTime a specific time of task that needs to be done before it","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline(String name, String byTime) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param byTime a specific time of task that needs to be done before it","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone task status: done or not done","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline(String name, String byTime, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * Get the specific time of task that needs to be done before it.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * @return the specific time of task that needs to be done before it","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public String getByTime() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        return byTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * Mark task status as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * @return task with done status","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        return new Deadline(super.getName(), getByTime(), true);","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * Print task with format:","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [D][X] Task1; else, [D][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byTime + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":65}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Event class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * Event task starts at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final String atTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Event.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param atTime a specific time of task start and end","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public Event(String name, String atTime) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.atTime \u003d atTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Event.","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param atTime a specific time of task start and end","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone task status: done or not done","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public Event(String name, String atTime, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        this.atTime \u003d atTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * Get the specific time of task start and end.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * @return the specific time of task start and end","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public String getAtTime() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        return atTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * Mark task status as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * @return task with done status","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        return new Event(super.getName(), getAtTime(), true);","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * Print task with format:","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [E][X] Task1; else, [E][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atTime + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":65}},{"path":"src/main/java/task/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Operation class that contains task operations.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public enum Operation {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    BYE(\"bye\");","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private final String value;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    Operation(String value) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Get value of operation.","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @return operation value","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public String getValue() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":35}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Task class that contains the properties","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * of a task.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param name task name","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Task.","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone task status: done or not done","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * Get status of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * @return task status","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        return isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * Mark task status as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * @return task with done status","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public abstract Task markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * Get name of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * @return task name","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    public String getName() {","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        return name;","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     * Print task with format:","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [X] Task1; else, [ ] Task1.","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"HolmesJJ":74}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * The is the TaskManager class that that","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * contains a list of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of TaskManager","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public TaskManager() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Add task to TaskManager","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * Get size of tasks","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @return tasks size","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    public int size() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     * Find task by number.","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * @param number number of task","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * @return       task by number if exists, else empty","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    public Task findTaskByNumber(int number) {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            return null;","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     * Complete task by number, start from 1.","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     * @param number number of task","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if task number is out of bounds","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public void completeTask(int number) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! Task number is out of bounds.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        tasks.set(index, tasks.get(index).markAsDone());","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     * Delete task by number, start from 1.","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     * @param number number of task","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if task number is out of bounds","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    public Task deleteTask(int number) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! Task number is out of bounds.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"     * Print tasks from TaskManager with format:","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"     *      1. Task1","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     *      2. Task2","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     *      ...","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"            String task \u003d INDENTATION + (i + 1) + \". \" + tasks.get(i).toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"HolmesJJ":98}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package task;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Todo class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * Todo task does not have any date/time attached to it.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Todo.","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * @param name task name","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Todo.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * @param name   task name","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone task status: done or not done","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Mark task status as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * @return task with done status","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    public Todo markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        return new Todo(super.getName(), true);","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * Print task with format:","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [T][X] Task1; else, [T][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":51}},{"path":"src/main/java/utils/CommandUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package utils;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import task.Operation;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * The is the CommandUtils class that extracts contents from command.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * @author  HU JIAJUN","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * @version %I%, %G%","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * @since   1.0","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class CommandUtils {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Extract operation from command.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @return operation from command if exists, else throw exception","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if operation is empty","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public static Operation extractOperation(String command) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The operation cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        String operation \u003d contents[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        if (operation.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The operation cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            if (operation.equals(Operation.TODO.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.TODO;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DEADLINE.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DEADLINE;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.EVENT.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.EVENT;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.LIST.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.LIST;","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DONE.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DONE;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DELETE.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DELETE;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.BYE.getValue())) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.BYE;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                throw new DukeException(INDENTATION + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     * Extract task number from command.","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * @return task number from command if it exists and is a positive integer,","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if task number is empty or not a positive integer","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public static int extractTaskNumber(String command) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"            number \u003d Integer.parseInt(contents[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The task number is not an integer.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        if (number \u003c 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The task number is not a positive integer.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        return number;","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     * Extract task description from command.","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"     * @return task description from command if it exists, else throw exception","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if task description is empty","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public static String extractTaskDescription(String command) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        String operation \u003d contents[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The description of a \" + operation + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"        String description \u003d contents[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The description of a \" + operation + \" cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        return description;","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"     * Extract task details that contains task name and task (at/by) time from task description.","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"     * @param  description extracted from task command","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     * @param  regex \" /at \" or \" /by \"","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"     * @return task details from description if they are not empty and can be extracted properly,","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeException if task details are empty or cannot be extracted properly","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"    public static String[] extractTaskDetails(String description, String regex) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        String[] details \u003d description.split(regex, 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeException(INDENTATION + \"☹ OOPS!!! The task details cannot be extracted properly.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        for (String detail: details) {","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"            if (detail.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"                throw new DukeException(INDENTATION + \"☹ OOPS!!! The task details cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        return details;","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":116}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":22}}]
