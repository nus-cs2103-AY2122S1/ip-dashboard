[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"jar {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    manifest {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Main\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    from {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"-":43,"HolmesJJ":26}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"D | 0 | return book | 2021-06-06 18:00","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"D | 1 | return book | 2021-08-08 10:00","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"E | 1 | project meeting | 2021-08-20 14:00-16:00","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":6}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"D | 0 | return book | 2021-06-06 18:00","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | join sports club","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"D | 1 | return book | 2021-08-08 10:00","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"E | 1 | project meeting | 2021-08-20 14:00-16:00","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HolmesJJ":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"## Introduction","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"### HomlesJJ の Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003e “Your mind is for having ideas, not holding them.” – David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"**HomlesJJ の Duke** frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"- text-based","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"- easy to learn","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"- ~~FAST~~ _SUPER_ FAST to use","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"## User Interface","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"![UI](Ui.png)","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"## Quick Start","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"1. download [CLI](https://github.com/HolmesJJ/ip/releases/tag/v0.4) or [GUI](https://github.com/HolmesJJ/ip/releases/tag/v0.5) version.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"2. Open terminal.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"3. Use `cd` command to navigate to the directory of jar file.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"4. Enter `java -jar duke-cli.jar` for CLI or `java -jar duke-gui.jar` for GUI (Prerequisites: [jdk](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html) installed).","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"5. add your tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"6. let it manage your tasks for you 😉","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"And it is **FREE!**","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"## Features","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"1. Adds task: adds a task to the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    1. [**`todo`**](#1.1): adds a todo task that without any date/time attached to it.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    2. [**`deadline`**](#1.2): adds a deadline task that need to be done before a specific date/time.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    3. [**`event`**](#1.3): adds an event task that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"2. [**`list`**](#2): lists all tasks in the system.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"3. [**`done`**](#3): marks a task as done by task number of the full tasks list.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"4. [**`find`**](#4): lists all tasks by searching for a keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"5. [**`coming`**](#5): lists all coming tasks within 3 hours.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"6. [**`delete`**](#6): deletes a task by task number of the full tasks list.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"7. [**`clear`**](#7): clear all tasks in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"8. [**`bye`**](#8): exits the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"1.1\"\u003e1.1\u003clabel\u003e `todo \u003cTASK_DESCRIPTION\u003e` - Adds a todo task.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"Adds a todo task to the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"todo read book","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":" [T][ ] read book","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"1.2\"\u003e1.2\u003clabel\u003e `deadline \u003cDESCRIPTION /by yyyy-MM-dd HH:mm\u003e` - Adds a deadline task.","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"Adds a deadline task to the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"deadline return book /by 2021-08-08 10:00","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":" [D][ ] return book (by: Jun 06 2021 06:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"1.3\"\u003e1.3\u003clabel\u003e `event \u003cDESCRIPTION /at yyyy-MM-dd HH:mm HH:mm\u003e` - Adds a event task.","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"Adds an event task to the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"event project meeting /at 2021-09-08 19:00 21:00","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":" [E][ ] project meeting (at: Sep 08 2021 07:00 PM-09:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"2\"\u003e2\u003clabel\u003e `list` - Lists all tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"Lists all tasks in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"1. [T][ ] read book","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"2. [D][ ] return book (by: Jun 06 2021 06:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"3. [E][ ] project meeting (at: Sep 08 2021 07:00 PM-09:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"3\"\u003e3\u003clabel\u003e `done \u003cTASK_NUMBER\u003e` - Marks a task as done by task number of the full tasks list.","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"Marks a task as done by task number of the full tasks list in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"done 1","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":" [T][X] read book","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"4\"\u003e4\u003clabel\u003e `find \u003cKEYWORD\u003e` - Lists all tasks by searching for a keyword.","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"Lists all tasks by searching for a keyword in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"find book","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"1. [T][X] read book","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"2. [D][ ] return book (by: Jun 06 2021 06:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"5\"\u003e5\u003clabel\u003e `coming` - Lists all coming tasks within 3 hours.","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"Lists all coming tasks within 3 hours in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"coming","lastModifiedDate":"2021-09-08"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"Here are the coming tasks in your list:","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"3. [E][ ] project meeting (at: Sep 08 2021 07:00 PM-09:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"6\"\u003e6\u003clabel\u003e `delete \u003cTASK_NUMBER\u003e` - Deletes a task by task number of the full tasks list.","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"Deletes a task by task number of the full tasks list in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"delete 3","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":" [E][ ] project meeting (at: Sep 08 2021 07:00 PM-09:00 PM)","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"7\"\u003e7\u003clabel\u003e `clear` - Clears all tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"Clears all tasks in the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"clear","lastModifiedDate":"2021-09-08"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"Expected outcome:","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"All tasks are cleared.","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"### \u003clabel id\u003d\"8\"\u003e8\u003clabel\u003e `bye` - Exits the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"Exits the system.","lastModifiedDate":"2021-09-08"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"Example of usage: ","lastModifiedDate":"2021-09-08"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"bye","lastModifiedDate":"2021-09-08"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"System exits.","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"## Development","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2021-09-08"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"For CLI","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"public class Duke implements Message {","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"    // ...","lastModifiedDate":"2021-09-08"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-08"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"For GUI","lastModifiedDate":"2021-09-08"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"public class Main {","lastModifiedDate":"2021-09-08"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-08"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"        Application.launch(DukeApp.class, args);","lastModifiedDate":"2021-09-08"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"You can also find the source code at [here](https://github.com/HolmesJJ/ip). 🤩 ","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"-":33,"HolmesJJ":196}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * The project aims to build a product named Duke,","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * a Personal Assistant Chatbot that helps a person","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * to keep track of various things.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * This is the Main class that will contain the main method","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * to be executed at run-time.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"public class Duke implements Message {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        storage \u003d new Storage(this);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Runs Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public void run() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        storage.loadTasks(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        ui.logo();","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        ui.greet();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            String command \u003d ui.readCommand();","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            Command c \u003d Parser.parse(command, this);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            if (c \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                continue;","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            c.execute();","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            c.execute(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            storage.saveTasksToFile(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * Runs entry point for the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * @param args an array of command-line arguments for the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * Displays messages.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    public void show(MessageType messageType, String... messages) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        ui.show(messages);","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"HolmesJJ":68}},{"path":"src/main/java/duke/DukeApp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.controller.DukeController;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"public class DukeApp extends Application {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private static final String DUKE_UI_FXML_PATH \u003d \"/view/DukeUi.fxml\";","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TITLE \u003d \"Duke\";","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final boolean IS_RESIZABLE \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @author se-edu-reused","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * with minor modifications","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * Initializes Stage and starts GUI.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * @param stage Stage of GUI.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeApp.class.getResource(DUKE_UI_FXML_PATH));","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            DukeController controller \u003d fxmlLoader.getController();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"            controller.setStageListener(stage);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            stage.setTitle(TITLE);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            stage.setResizable(IS_RESIZABLE);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            stage.show();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"Duke UI fxml file not found: \" + e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":45}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * @author se-edu-reused","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Reused from https://github.com/se-edu/addressbook-level3","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * with minor modifications","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * The main entry point to the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * This is a workaround for the following error when DukeApp is made the","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * entry point of the application:","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * The reason is that DukeApp extends Application. In that case, the","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"public class Main {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Runs entry point for the Duke JavaFx program.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param args an array of command-line arguments for the application.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        Application.launch(DukeApp.class, args);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":35}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeExtractCommandException;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.EventDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Operation;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.CommandUtils;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * This is the AddCommand class that add task.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private static final String REGEX_AT \u003d \" /at \";","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private static final String REGEX_BY \u003d \" /by \";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    private static final String REGEX_SPACE \u003d \" \";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    private final String command;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    private final Operation operation;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a AddCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param command Command from user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @param operation Operation.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public AddCommand(String command, Operation operation, Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    private String getTaskDescription(String command) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            description \u003d CommandUtils.extractTaskDescription(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        return description;","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    private void addTodoTask(TaskList taskList, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        getMessage().show(MessageType.NORMAL,","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                TASK_ADDED_MESSAGE,","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                \"  \" + todo.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                \"Now you have \" + taskList.getSize()","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                        + \" \" + (taskList.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                        + \" in the list.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    private void addDeadlineTask(TaskList taskList, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"            String[] taskDetails \u003d CommandUtils.extractTaskDetails(description, REGEX_BY);","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"            assert taskDetails.length \u003d\u003d 2","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                    : \"☹ OOPS!!! TaskDetails cannot be split to 2 parts.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"            String taskName \u003d taskDetails[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"            LocalDateTime byDateTime \u003d CommandUtils.extractDeadlineDateTime(taskDetails[1]);","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            Deadline deadline \u003d new Deadline(taskName, byDateTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.NORMAL,","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"                    TASK_ADDED_MESSAGE,","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"                    \"  \" + deadline.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"                    \"Now you have \" + taskList.getSize()","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"                            + \" \" + (taskList.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"                            + \" in the list.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    private void addEventTask(TaskList taskList, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"            String[] taskDetails \u003d CommandUtils.extractTaskDetails(description, REGEX_AT);","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"            assert taskDetails.length \u003d\u003d 2","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"                    : \"☹ OOPS!!! TaskDetails cannot be split to 2 parts.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"            String taskName \u003d taskDetails[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            EventDateTime eventDateTime \u003d CommandUtils","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                .extractEventDatetime(taskDetails[1], REGEX_SPACE);","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"            Event event \u003d new Event(taskName, eventDateTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"            taskList.addTask(event);","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.NORMAL,","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                    TASK_ADDED_MESSAGE,","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                    \"  \" + event.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"                    \"Now you have \" + taskList.getSize() + \" \"","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"                            + (taskList.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"                            + \" in the list.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"     * Adds task.","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        String description \u003d getTaskDescription(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        switch (operation) {","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        case TODO:","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"            addTodoTask(taskList, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"            addDeadlineTask(taskList, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        case EVENT:","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"            addEventTask(taskList, description);","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":128}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * This is the ClearCommand class that clears all tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TASK_CLEARED_MESSAGE \u003d \"All tasks are cleared.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a ClearCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public ClearCommand(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * Clears all tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        taskList.clearTasks();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        getMessage().show(MessageType.NORMAL, TASK_CLEARED_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":32}},{"path":"src/main/java/duke/command/ComingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.Constants;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * This is the ComingCommand class that lists tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class ComingCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String COMING_TASK_LISTED_MESSAGE \u003d","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"            \"Here are the coming tasks in your list:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a ComingCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public ComingCommand(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Finds coming tasks from TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        getMessage().show(MessageType.NORMAL, Stream.concat(","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                Arrays.stream(new String[] {COMING_TASK_LISTED_MESSAGE}),","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"                Arrays.stream(taskList.findComingTasks(Constants.COMING_TASK_HOUR_RANGE))","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        ).toArray(String[]::new));","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeExtractCommandException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.CommandUtils;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * This is the Command class that contains two execution methods.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private final Message message;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Command object.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public Command(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Command object.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param isExit System status: running or exited.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    Command(Message message, boolean isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * Returns a Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    Message getMessage() {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        return message;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * Executes operation.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        return isExit;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * Executes operation.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    public void execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     * Executes operation on TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task number.","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * @param command Command from user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    int getTaskNumber(String command) {","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            number \u003d CommandUtils.extractTaskNumber(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException | NumberFormatException","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                | DukeTaskNumberOutOfBoundsException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        return number;","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":82}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * This is the DeleteCommand class that deletes task.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TASK_REMOVED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private final String command;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DeleteCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param command Command from user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public DeleteCommand(String command, Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Deletes task by number extracted from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d getTaskNumber(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        if (number \u003c\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            Task task \u003d taskList.deleteTask(number);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.NORMAL,","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                    TASK_REMOVED_MESSAGE,","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                    \"  \" + task.toString(),","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                    \"Now you have \" + taskList.getSize()","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                            + \" \" + (taskList.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                            + \" in the list.\"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            );","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeTaskNumberOutOfBoundsException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":52}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * This is the DoneCommand class that completes task.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TASK_MARKED_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private final String command;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DoneCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param command Command from user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public DoneCommand(String command, Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Completes task by number extracted from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d getTaskNumber(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        if (number \u003c\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            taskList.completeTask(number);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.NORMAL,","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                    TASK_MARKED_MESSAGE,","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                    \"  \" + taskList.findTaskByNumber(number).toString()","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            );","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeTaskNumberOutOfBoundsException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":48}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * This is the ExitCommand class that show exit message.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a ExitCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    public ExitCommand(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        super(message, true);","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Shows exit message.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public void execute() {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        getMessage().show(MessageType.NORMAL, EXIT_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeExtractCommandException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.CommandUtils;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * This is the FindCommand class that lists matching tasks by keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private static final String MATCHING_TASK_LISTED_MESSAGE \u003d","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"            \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private final String command;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a FindCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @param command Command from user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public FindCommand(String command, Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Finds tasks by keyword extracted from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            String keyword \u003d CommandUtils.extractKeyword(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.NORMAL, Stream.concat(","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                    Arrays.stream(new String[]{MATCHING_TASK_LISTED_MESSAGE}),","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                    Arrays.stream(taskList.findTasks(keyword))","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            ).toArray(String[]::new));","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            getMessage().show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":49}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * This is the ListCommand class that lists tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TASK_LISTED_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a ListCommand object.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public ListCommand(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * Prints tasks from TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        getMessage().show(MessageType.NORMAL, Stream.concat(","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                Arrays.stream(new String[] {TASK_LISTED_MESSAGE}),","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"                Arrays.stream(taskList.printTasks())","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        ).toArray(String[]::new));","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":37}},{"path":"src/main/java/duke/constant/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.constant;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Constants class that contains constants","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * which will be used at anywhere.","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class Constants {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"     * Hour range of coming task.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    public static final int COMING_TASK_HOUR_RANGE \u003d 3;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":13}},{"path":"src/main/java/duke/constant/MessageType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.constant;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the MessageType class that contains task operations.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public enum MessageType {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"    NORMAL(\"normal\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    ERROR(\"error\");","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    private final String value;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    MessageType(String value) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * Returns value of message type.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @return MessageType value.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    public String getValue() {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"HolmesJJ":24}},{"path":"src/main/java/duke/controller/DukeController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.controller;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.Constants;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.controller.dialog.DukeDialogController;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.controller.dialog.UserDialogController;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import duke.thread.CustomThreadPool;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":" * Controller for DukeUi. Provides the layout for the other controls.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"public class DukeController extends AnchorPane implements Message {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    private static final String GREET \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    private static final int ONE_SECOND \u003d 1000;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    private static final CustomThreadPool customThreadPool \u003d new CustomThreadPool(","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"            Thread.NORM_PRIORITY","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    );","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    private ScrollPane chatPane;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    private Label comingTasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    private TextField tfInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    private ImageView ivSend;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public DukeController() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        storage \u003d new Storage(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"     * Passes Stage object to DukeController.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     * @param stage Stage is created after FXMLLoader is loaded.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    public void setStageListener(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        if (stage \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        stage.setOnCloseRequest(event -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"            exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"     * Adds DukeDialog with content.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"     * @param messageType Message type to identify the content color.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     * @param content Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"    public void addDukeDialog(MessageType messageType, String content) {","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        if (dialogContainer \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"            Color color \u003d messageType \u003d\u003d MessageType.NORMAL ? Color.BLACK : Color.RED;","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            // The reason of following approach is because the size of the dukeDialogController","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"            // will be returned only after it is added by the dialogContainer.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"            DukeDialogController preDukeDialogController \u003d new DukeDialogController(","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"                    content, color);","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"            preDukeDialogController.heightProperty()","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"                    .addListener(observable -\u003e replaceDukeDialog(","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"                            content, color, preDukeDialogController));","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().add(preDukeDialogController);","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"Duke dialog fxml file not found: \" + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    private void replaceDukeDialog(","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"            String content, Color color, DukeDialogController preDukeDialogController) {","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"            DukeDialogController dukeDialogController \u003d new DukeDialogController(","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"                    content, color, preDukeDialogController.getHeight());","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().add(dukeDialogController);","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"Duke dialog fxml file not found: \"","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().remove(preDukeDialogController);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"     * Adds UserDialog with content.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"     * @param content Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"    public void addUserDialog(String content) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"        if (dialogContainer \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"            // The reason of following approach is because the size of the userDialogController","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"            // will be returned only after it is added by the dialogContainer.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"            UserDialogController preUserDialogController \u003d new UserDialogController(content);","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"            preUserDialogController.heightProperty()","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                    .addListener(observable -\u003e replaceUserDialog(content, preUserDialogController));","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().add(preUserDialogController);","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"User dialog fxml file not found: \" + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"    private void replaceUserDialog(String content, UserDialogController preUserDialogController) {","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"        if (dialogContainer \u003d\u003d null || preUserDialogController \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"            UserDialogController userDialogController \u003d new UserDialogController(","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"                    content, preUserDialogController.getHeight());","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().add(userDialogController);","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"User dialog fxml file not found: \"","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"            dialogContainer.getChildren().remove(preUserDialogController);","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"     * Initializes components.","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"        dialogContainer.heightProperty()","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"                .addListener(observable -\u003e chatPane.setVvalue(chatPane.getVmax()));","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        ivSend.setPickOnBounds(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        ivSend.setOnMouseClicked((MouseEvent e) -\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"            handleInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"        tfInput.addEventHandler(KeyEvent.KEY_PRESSED, ev -\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"            if (ev.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"                handleInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        init();","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"    private void init() {","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        storage.loadTasks(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        addDukeDialog(MessageType.NORMAL, GREET);","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"        tfInput.setDisable(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        customThreadPool.execute(() -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"            while (true) {","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"                handleComingTasks();","lastModifiedDate":"2021-09-03"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"                try {","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"                    Thread.sleep(ONE_SECOND);","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"    private void handleComingTasks() {","lastModifiedDate":"2021-09-03"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"        Platform.runLater(() -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"                int tasks \u003d taskList.findComingTasks(Constants.COMING_TASK_HOUR_RANGE).length;","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"                comingTasks.setText(tasks + \" coming \"","lastModifiedDate":"2021-09-03"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"                        + (taskList.getSize() \u003c\u003d 1 ? \"task\" : \"tasks\") + \" in \"","lastModifiedDate":"2021-09-03"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"                        + Constants.COMING_TASK_HOUR_RANGE + \" hours!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"    private void handleInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        String input \u003d tfInput.getText();","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"        tfInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"        addUserDialog(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        Command c \u003d Parser.parse(input, this);","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"        if (c \u003d\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"        c.execute(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"        if (c.isExit()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"            exit();","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"        storage.saveTasksToFile(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"    private void exit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"        customThreadPool.release();","lastModifiedDate":"2021-09-03"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"        Platform.exit();","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"    public void show(MessageType messageType, String... messages) {","lastModifiedDate":"2021-09-08"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"        addDukeDialog(messageType, String.join(\"\\n\", messages));","lastModifiedDate":"2021-09-08"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":222}},{"path":"src/main/java/duke/controller/component/MessageBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.controller.component;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * MessageBox component.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"public class MessageBox extends Label {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PADDING \u003d 10;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private static final int PREF_WIDTH \u003d 200;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    private static final int MIN_HEIGHT \u003d 65;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private static final int FONT_SIZE \u003d 15;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    private static final boolean IS_WRAP_TEXT \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a MessageBox object.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @param content Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutX MessageBox layoutX.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutY MessageBox layoutY.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public MessageBox(String content, double layoutX, double layoutY) {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        init(layoutX, layoutY);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        setText(content);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a MessageBox object.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @param color Content text color.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutX MessageBox layoutX.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutY MessageBox layoutY.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * @param height MessageBox height.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    public MessageBox(String text, Color color, double layoutX, double layoutY, double height) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        init(layoutX, layoutY);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        setMinHeight(height);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        setText(text);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        setTextFill(color);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    private void init(double layoutX, double layoutY) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        setLayoutX(layoutX);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        setLayoutY(layoutY);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        setPadding(new Insets(PADDING));","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        setBackground(","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                new Background(","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                        new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        setPrefWidth(PREF_WIDTH);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        setFont(new Font(FONT_SIZE));","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        setWrapText(IS_WRAP_TEXT);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":63}},{"path":"src/main/java/duke/controller/dialog/DialogController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.controller.dialog;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.controller.DukeController;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.controller.component.MessageBox;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * Controller for DukeDialog.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"public class DialogController extends HBox {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param resource Fxml resource.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public DialogController(String resource) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeController.class.getResource(resource));","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @param resource Fxml resource.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * @param height DukeDialogController height.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public DialogController(String resource, double height) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        setMinHeight(height);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(DukeController.class.getResource(resource));","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        fxmlLoader.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * Adds MessageBox to dialog.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     * @param dialog Dialog for the MessageBox.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     * @param color Content text color.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutX MessageBox layoutX.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     * @param layoutY MessageBox layoutY.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    public void addMessageBox(","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            Pane dialog, String text, Color color, double layoutX, double layoutY) {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        // The reason of following approach is because the size of the messageBox","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        // will be returned only after it is added by the dialog.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        MessageBox preMessageBox \u003d new MessageBox(text, layoutX, layoutY);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        preMessageBox.heightProperty()","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                .addListener(observable -\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                    MessageBox messageBox \u003d new MessageBox(","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                            text, color, layoutX, layoutY, preMessageBox.getHeight());","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                    dialog.getChildren().add(messageBox);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                    dialog.getChildren().remove(preMessageBox);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                });","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        dialog.getChildren().add(preMessageBox);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":68}},{"path":"src/main/java/duke/controller/dialog/DukeDialogController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.controller.dialog;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * Controller for DukeDialog.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class DukeDialogController extends DialogController {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final double LAYOUT_X \u003d 75;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final double LAYOUT_Y \u003d 8;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String DUKE_DIALOG_FXML_PATH \u003d \"/view/DukeDialog.fxml\";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private Pane dialog;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content will be shown.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @param color Content text color.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public DukeDialogController(String text, Color color)","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"            throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        super(DUKE_DIALOG_FXML_PATH);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        addMessageBox(dialog, text, color, LAYOUT_X, LAYOUT_Y);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content will be shown.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * @param color Content text color.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * @param height DukeDialogController height.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public DukeDialogController(String text, Color color, double height)","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        super(DUKE_DIALOG_FXML_PATH, height);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        addMessageBox(dialog, text, color, LAYOUT_X, LAYOUT_Y);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":46}},{"path":"src/main/java/duke/controller/dialog/UserDialogController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.controller.dialog;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * Controller for UserDialog.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class UserDialogController extends DialogController {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final double LAYOUT_X \u003d 115;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final double LAYOUT_Y \u003d 8;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String USER_DIALOG_FXML_PATH \u003d \"/view/UserDialog.fxml\";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    @FXML","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private Pane dialog;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a UserDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public UserDialogController(String text)","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        super(USER_DIALOG_FXML_PATH);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        addMessageBox(dialog, text, Color.BLACK, LAYOUT_X, LAYOUT_Y);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a UserDialogController object.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * @param text Content that will be shown in the dialog.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * @param height UserDialogController height.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * @throws IOException If Fxml resource does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    public UserDialogController(String text, double height)","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        super(USER_DIALOG_FXML_PATH, height);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        addMessageBox(dialog, text, Color.BLACK, LAYOUT_X, LAYOUT_Y);","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":44}},{"path":"src/main/java/duke/exception/DukeExtractCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the DukeExtractCommandException class that extends from Exception","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * to catch the extract command exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class DukeExtractCommandException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeExtractCommandException object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Exception message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public DukeExtractCommandException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":17}},{"path":"src/main/java/duke/exception/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the DukeIoException class that extends from Exception","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * to catch the IO exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class DukeIoException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeIoException object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Exception message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public DukeIoException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HolmesJJ":17}},{"path":"src/main/java/duke/exception/DukeTaskNumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the DukeTaskNumberOutOfBoundsException class that extends from Exception","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * to catch the task number out of bounds exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class DukeTaskNumberOutOfBoundsException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeTaskNumberOutOfBoundsException object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Exception message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public DukeTaskNumberOutOfBoundsException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":17}},{"path":"src/main/java/duke/exception/DukeUnknownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the DukeUnknownException class that extends from Exception","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * to catch the unknown exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class DukeUnknownException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a DukeUnknownException object.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Exception message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    public DukeUnknownException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":17}},{"path":"src/main/java/duke/listener/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.listener;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * The is the Message interface.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"public interface Message {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     * Shows messages.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * @param messageType MessageType object.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     * @param messages Multiple message strings or messages array.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public void show(MessageType messageType, String... messages);","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * The is the Storage class for task operations.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"public class Storage {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final Message message;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public Storage(Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * Loads tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    public void loadTasks(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"            taskList.loadTasksFromFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeIoException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            message.show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     * Saves tasks to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    public void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            taskList.saveTasksToFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeIoException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            message.show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * The is the Deadline class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * Deadline task needs to be done before a specific time.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    public static final String ID \u003d \"D\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private static final String PRINT_DATE_PATTERN \u003d \"MMM dd yyyy\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final String PRINT_TIME_PATTERN \u003d \"hh:mm a\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final String SAVE_DATE_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String SAVE_TIME_PATTERN \u003d \"HH:mm\";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    private final LocalDateTime byDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * @param byDateTime A specific date and time of task that needs to be done before it.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline(String name, LocalDateTime byDateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * This is constructor method of Deadline.","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @param byDateTime A specific date and time of task that needs to be done before it.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone Task status: done or not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline(String name, LocalDateTime byDateTime, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the specific date and time of task that needs to be done before it.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * @return The specific date and time of task that needs to be done before it.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        return byDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    private String formatPrintDateTime() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"        String date \u003d byDateTime.format(DateTimeFormatter.ofPattern(PRINT_DATE_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        String time \u003d byDateTime.format(DateTimeFormatter.ofPattern(PRINT_TIME_PATTERN))","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                .toUpperCase();","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        return date + \" \" + time;","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    private String formatSaveDateTime() {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        String date \u003d byDateTime.format(DateTimeFormatter.ofPattern(SAVE_DATE_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        String time \u003d byDateTime.format(DateTimeFormatter.ofPattern(SAVE_TIME_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        return date + \" \" + time;","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * Formats Task to String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [D, 0, Task1, DateTime]; else, [D, 1, Task1, DateTime].","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task in String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    public String[] formatTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"        String done;","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        if (isDone()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"0\";","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"1\";","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        return new String[] {ID, done, super.getName(), formatSaveDateTime()};","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        return new Deadline(super.getName(), getByDateTime(), true);","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"     * Prints task.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [D][X] Task1; else, [D][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"        return \"[\" + ID + \"]\" + super.toString() + \" (by: \" + formatPrintDateTime() + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":98}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * The is the Event class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * Event task starts at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    public static final String ID \u003d \"E\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    private static final String PRINT_DATE_PATTERN \u003d \"MMM dd yyyy\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private static final String PRINT_TIME_PATTERN \u003d \"hh:mm a\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final String SAVE_DATE_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final String SAVE_TIME_PATTERN \u003d \"HH:mm\";","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private final EventDateTime atDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @param atDateTime A specific date, start time and end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public Event(String name, EventDateTime atDateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @param atDateTime A specific date, start time and end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone Task status: done or not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    public Event(String name, EventDateTime atDateTime, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        this.atDateTime \u003d atDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the specific date, start time and end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * @return The specific date, start time and end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"    public EventDateTime getAtDateTime() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"        return atDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    private String formatPrintDateTime() {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        String date \u003d atDateTime.getAtDate()","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(PRINT_DATE_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        String startTime \u003d atDateTime.getStartTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(PRINT_TIME_PATTERN)).toUpperCase();","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        String endTime \u003d atDateTime.getEndTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(PRINT_TIME_PATTERN)).toUpperCase();","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        return date + \" \" + startTime + \"-\" + endTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    private String formatSaveDateTime() {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        String date \u003d atDateTime.getAtDate()","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(SAVE_DATE_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        String startTime \u003d atDateTime.getStartTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(SAVE_TIME_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"        String endTime \u003d atDateTime.getEndTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                .format(DateTimeFormatter.ofPattern(SAVE_TIME_PATTERN));","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        return date + \" \" + startTime + \"-\" + endTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * Formats Task to String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [E, 0, Task1, DateTime]; else, [E, 1, Task1, DateTime].","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task in String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"    public String[] formatTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        String done;","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        if (isDone()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"0\";","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"1\";","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        return new String[] {ID, done, super.getName(), formatSaveDateTime()};","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"        return new Event(super.getName(), atDateTime, true);","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"     * Prints task.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [E][X] Task1; else, [E][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"        return \"[\" + ID + \"]\" + super.toString() + \" (at: \" + formatPrintDateTime() + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":104}},{"path":"src/main/java/duke/task/EventDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * The is the EventDateTime class that contains the specific date,","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * start time and end time of event.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class EventDateTime {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    private final LocalDate atDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a EventDateTime object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * @param atDate A specific date of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * @param startTime A specific start time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param endTime A specific end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    public EventDateTime(LocalDate atDate, LocalTime startTime, LocalTime endTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        this.atDate \u003d atDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the specific date of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * @return The specific date of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    public LocalDate getAtDate() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        return atDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the specific time of task start.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"     * @return The specific start time of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        return startTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * Returns the specific time of task end.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * @return The specific end time of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"        return endTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":54}},{"path":"src/main/java/duke/task/Operation.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Operation class that contains task operations.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"public enum Operation {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    CLEAR(\"clear\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    COMING(\"coming\"),","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    BYE(\"bye\");","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    private final String value;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    Operation(String value) {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * Returns value of operation.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * @return Operation value.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public String getValue() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        return value;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Task class that contains the properties","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * of a task.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    private final String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone Task status: done or not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * Returns status of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task status.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        return isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    public abstract Task markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * Returns name of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    public String getName() {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        return name;","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * Formats Task to String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task in String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    public abstract String[] formatTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     * Prints task.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [X] Task1; else, [ ] Task1.","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"HolmesJJ":76}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.DateTimeUtils;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import duke.util.FileUtils;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * The is the TaskList class that contains a list of tasks","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * and the operations of the tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    private static final String DIR_NAME \u003d \"data\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    private static final int MILLIS_TO_HOUR_UNIT_CONVERSION \u003d 1000 * 60 * 60;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Adds task to TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * @param task Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     * Returns size of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     * @return Tasks size.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task by number.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * @param number Number of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task by number if exists, else empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    public Task findTaskByNumber(int number) {","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            return null;","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"     * Completes task by number, start from 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     * @param number Number of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeTaskNumberOutOfBoundsException If task number is out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    public void completeTask(int number) throws DukeTaskNumberOutOfBoundsException {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeTaskNumberOutOfBoundsException(\"☹ OOPS!!! Task number is out of bounds.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        tasks.set(index, tasks.get(index).markAsDone());","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"     * Deletes task by number, start from 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"     * @param number Number of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeTaskNumberOutOfBoundsException If task number is out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    public Task deleteTask(int number) throws DukeTaskNumberOutOfBoundsException {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        int index \u003d number - 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeTaskNumberOutOfBoundsException(\"☹ OOPS!!! Task number is out of bounds.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"     * Clears all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    public void clearTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"        tasks.clear();","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"     * Prints tasks from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"    public String[] printTasks() {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + tasks.get(i).toString())","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"                        .collect(Collectors.toList()).toArray(String[]::new);","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"     * Loads tasks from file with path: src/data/duke.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"    public void loadTasksFromFile() throws DukeIoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e formattedTasks \u003d FileUtils.loadFile(DIR_NAME, FILE_NAME);","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"            formattedTasks.forEach(formattedTask -\u003e {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"                String[] contents \u003d formattedTask.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"                // Asserts that the task can be split to 3 or 4 parts by | symbol.","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"                assert contents.length \u003e\u003d 3 \u0026\u0026 contents.length \u003c\u003d 4","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"                        : \"☹ OOPS!!! Task cannot be split to 3 or 4 parts by | symbol.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"                String taskID \u003d contents[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"                String isDone \u003d contents[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"                String name \u003d contents[2];","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"                switch (taskID) {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"                case Todo.ID:","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"                    addTodoTask(isDone, name);","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"                case Deadline.ID:","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"                    // Asserts that the task can be split to 4 parts by | symbol.","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"                    assert contents.length \u003d\u003d 4","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"                            : \"☹ OOPS!!! Task cannot be split to 4 parts by | symbol.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"                    String byTime \u003d contents[3];","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"                    addDeadlineTask(isDone, name, byTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"                case Event.ID:","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"                    // Asserts that the task can be split to 4 parts by | symbol.","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"                    assert contents.length \u003d\u003d 4","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                            : \"☹ OOPS!!! Task cannot be split to 4 parts by | symbol.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"                    String atTime \u003d contents[3];","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"                    addEventTask(isDone, name, atTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"                    break;","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"                default:","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"                    break;","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"            });","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeIoException(\"☹ OOPS!!! Load tasks from file error.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"    private void addTodoTask(String isDone, String name) {","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"        Todo todo \u003d new Todo(name, isDone.equals(\"0\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"        addTask(todo);","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"    private void addDeadlineTask(String isDone, String name, String byTime) {","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"                name,","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"                DateTimeUtils.parseDateTime(byTime),","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"                isDone.equals(\"0\")","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        );","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        addTask(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"    private void addEventTask(String isDone, String name, String atTime) {","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"        String[] dateTimes \u003d atTime.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        String[] times \u003d dateTimes[1].split(\"-\", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"        // Asserts that the dateTimes can be split to 2 parts by space.","lastModifiedDate":"2021-09-03"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"        // The first part is date, the second part is times.","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        assert dateTimes.length \u003d\u003d 2","lastModifiedDate":"2021-09-03"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"                : \"☹ OOPS!!! DateTimes cannot be split to 2 parts by space.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"        // Asserts that the times can be split to 2 parts by - symbol.","lastModifiedDate":"2021-09-03"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"        // The first part is startTime, the second part is endTime.","lastModifiedDate":"2021-09-03"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"        assert times.length \u003d\u003d 2","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"                : \"☹ OOPS!!! Times cannot be split to 2 parts by - symbol.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"        String atDate \u003d dateTimes[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"        String startTime \u003d times[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"        String endTime \u003d times[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"        EventDateTime eventDateTime \u003d new EventDateTime(","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"                DateTimeUtils.parseDate(atDate),","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"                DateTimeUtils.parseTime(startTime),","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"                DateTimeUtils.parseTime(endTime)","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"        );","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"        Event event \u003d new Event(name, eventDateTime, isDone.equals(\"0\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"        addTask(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"     * Saves tasks to file with path: src/data/duke.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"    public void saveTasksToFile() throws DukeIoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e formattedTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"                .map(task -\u003e String.join(\" | \", task.formatTask()))","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"        boolean isSaved \u003d FileUtils.isFileSaved(DIR_NAME, FILE_NAME, formattedTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"        if (!isSaved) {","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeIoException(\"☹ OOPS!!! Save tasks to file error.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"     * Prints tasks which contains keyword from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"     * @param keyword Keyword of task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"     * @return String array of filtered tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":205,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"HolmesJJ"},"content":"    public String[] findTasks(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream()","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"HolmesJJ"},"content":"                .filter(task -\u003e task.getName().contains(keyword))","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"HolmesJJ"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"HolmesJJ"},"content":"        return IntStream.range(0, filteredTasks.size())","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"HolmesJJ"},"content":"                .mapToObj(i -\u003e (i + 1) + \". \" + filteredTasks.get(i).toString())","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"HolmesJJ"},"content":"                        .collect(Collectors.toList()).toArray(String[]::new);","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":215,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":216,"author":{"gitId":"HolmesJJ"},"content":"     * Prints tasks which is coming in hours.","lastModifiedDate":"2021-09-03"},{"lineNumber":217,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":218,"author":{"gitId":"HolmesJJ"},"content":"     * @param hour Hour range (current + hour) of coming tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":219,"author":{"gitId":"HolmesJJ"},"content":"     * @return String array of coming tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":220,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":221,"author":{"gitId":"HolmesJJ"},"content":"    public String[] findComingTasks(int hour) {","lastModifiedDate":"2021-09-03"},{"lineNumber":222,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cTask\u003e filteredTasks \u003d tasks.stream()","lastModifiedDate":"2021-09-03"},{"lineNumber":223,"author":{"gitId":"HolmesJJ"},"content":"            .filter(task -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":224,"author":{"gitId":"HolmesJJ"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2021-09-03"},{"lineNumber":225,"author":{"gitId":"HolmesJJ"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":226,"author":{"gitId":"HolmesJJ"},"content":"                    long deadlineTimeMillis \u003d deadline.getByDateTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":227,"author":{"gitId":"HolmesJJ"},"content":"                            .atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();","lastModifiedDate":"2021-09-03"},{"lineNumber":228,"author":{"gitId":"HolmesJJ"},"content":"                    long millisDifference \u003d deadlineTimeMillis - System.currentTimeMillis();","lastModifiedDate":"2021-09-03"},{"lineNumber":229,"author":{"gitId":"HolmesJJ"},"content":"                    long hourDifference \u003d millisDifference / MILLIS_TO_HOUR_UNIT_CONVERSION;","lastModifiedDate":"2021-09-03"},{"lineNumber":230,"author":{"gitId":"HolmesJJ"},"content":"                    return millisDifference \u003e\u003d 0 \u0026\u0026 hourDifference \u003c hour;","lastModifiedDate":"2021-09-03"},{"lineNumber":231,"author":{"gitId":"HolmesJJ"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-09-03"},{"lineNumber":232,"author":{"gitId":"HolmesJJ"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-09-03"},{"lineNumber":233,"author":{"gitId":"HolmesJJ"},"content":"                    long eventTimeMillis \u003d LocalDateTime.of(","lastModifiedDate":"2021-09-03"},{"lineNumber":234,"author":{"gitId":"HolmesJJ"},"content":"                            event.getAtDateTime().getAtDate(),","lastModifiedDate":"2021-09-03"},{"lineNumber":235,"author":{"gitId":"HolmesJJ"},"content":"                            event.getAtDateTime().getStartTime()","lastModifiedDate":"2021-09-03"},{"lineNumber":236,"author":{"gitId":"HolmesJJ"},"content":"                    ).atZone(ZoneId.systemDefault()).toInstant().toEpochMilli();","lastModifiedDate":"2021-09-03"},{"lineNumber":237,"author":{"gitId":"HolmesJJ"},"content":"                    long millisDifference \u003d eventTimeMillis - System.currentTimeMillis();","lastModifiedDate":"2021-09-03"},{"lineNumber":238,"author":{"gitId":"HolmesJJ"},"content":"                    long hourDifference \u003d millisDifference / MILLIS_TO_HOUR_UNIT_CONVERSION;","lastModifiedDate":"2021-09-03"},{"lineNumber":239,"author":{"gitId":"HolmesJJ"},"content":"                    return millisDifference \u003e\u003d 0 \u0026\u0026 hourDifference \u003c hour;","lastModifiedDate":"2021-09-03"},{"lineNumber":240,"author":{"gitId":"HolmesJJ"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":241,"author":{"gitId":"HolmesJJ"},"content":"                return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":242,"author":{"gitId":"HolmesJJ"},"content":"            }).collect(Collectors.toList());","lastModifiedDate":"2021-09-03"},{"lineNumber":243,"author":{"gitId":"HolmesJJ"},"content":"        return IntStream.range(0, filteredTasks.size())","lastModifiedDate":"2021-09-03"},{"lineNumber":244,"author":{"gitId":"HolmesJJ"},"content":"            .mapToObj(i -\u003e (i + 1) + \". \" + filteredTasks.get(i).toString())","lastModifiedDate":"2021-09-03"},{"lineNumber":245,"author":{"gitId":"HolmesJJ"},"content":"            .collect(Collectors.toList()).toArray(String[]::new);","lastModifiedDate":"2021-09-03"},{"lineNumber":246,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":247,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"HolmesJJ":247}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":" * The is the Todo class that extends from Task.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":" * Todo task does not have any date/time attached to it.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    public static final String ID \u003d \"T\";","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @param isDone Task status: done or not done.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Formats Task to String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [T, 0, Task1]; else, [T, 1, Task1].","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task in String array.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public String[] formatTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        String done;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        if (isDone()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"0\";","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            done \u003d \"1\";","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        return new String[] {ID, done, super.getName()};","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task with done status.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"    public Todo markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        return new Todo(super.getName(), true);","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * Prints task.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     * If task is done, [T][X] Task1; else, [T][ ] Task1.","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        return \"[\" + ID + \"]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":64}},{"path":"src/main/java/duke/thread/CustomRejectedExecutionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.thread;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.RejectedExecutionHandler;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.ThreadPoolExecutor;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * The is the CustomRejectedExecutionHandler class that","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" * handles the case when all threads are busy.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"public class CustomRejectedExecutionHandler implements RejectedExecutionHandler {","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * Executes default policy.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"     * @param runnable Runnable.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * @param executor ThreadPoolExecutor.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    public void rejectedExecution(Runnable runnable, ThreadPoolExecutor executor) {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":22}},{"path":"src/main/java/duke/thread/CustomThreadFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.thread;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.ThreadFactory;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":" * The is the CustomThreadFactory class that creates","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * thread based on the priority.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public class CustomThreadFactory implements ThreadFactory {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    private int priority \u003d Thread.NORM_PRIORITY;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a CustomThreadFactory object.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    public CustomThreadFactory() {","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a CustomThreadFactory object.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @param priority Thread priority: MIN_PRIORITY, NORM_PRIORITY, MAX_PRIORITY.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    public CustomThreadFactory(int priority) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Thread object based on the priority.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public Thread newThread(Runnable r) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        Thread t \u003d new Thread(r);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        t.setPriority(priority);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        return t;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":36}},{"path":"src/main/java/duke/thread/CustomThreadPool.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.thread;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.ArrayBlockingQueue;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.ExecutorService;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.ThreadPoolExecutor;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":" * Thread pool initialization instructions.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" * corePoolSize ---- 1","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" * maximumPoolSize ---- 1","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" * keepAliveTime The maximum survival time of idle threads","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" *               exceeding the number of corePoolSize in the thread pool ---- 0 + TimeUnit","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" * TimeUnit keepAliveTime ---- TimeUnit.MINUTES","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" * workQueue ---- new ArrayBlockingQueue\u003c\u003e(3) \u003d\u003d\u003d\u003d 3 capacity blocking queue","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":" * threadFactory ---- new CustomThreadFactory()","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":" * rejectedExecutionHandler When the number of submitted tasks exceeds the sum of","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" *                          maximumPoolSize + workQueue, means when the 4th task is submitted","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" *                          (the previous threads have not been executed,","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":" *                          sleep(100) is used in this test method),","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":" *                          the task will be handed by RejectedExecutionHandler","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":" *","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":" * The is the CustomThreadPool class that handles ThreadPool.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"public class CustomThreadPool {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    private static final int CORE_POOL_SIZE \u003d 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"    private static final int MAXIMUM_POOL_SIZE \u003d 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    private static final long KEEP_ALIVE_TIME \u003d 0L;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    private final ExecutorService mExecutorService;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a CustomThreadPool object.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     * @param poolSize ThreadPool size.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"    public CustomThreadPool(int poolSize) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        mExecutorService \u003d new ThreadPoolExecutor(","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                CORE_POOL_SIZE,","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                MAXIMUM_POOL_SIZE,","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                KEEP_ALIVE_TIME,","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                TimeUnit.MILLISECONDS,","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                new ArrayBlockingQueue\u003c\u003e(poolSize),","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                new CustomThreadFactory(),","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                new CustomRejectedExecutionHandler()","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a CustomThreadPool object.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     * @param poolSize ThreadPool size.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * @param priority ThreadPool priority.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    public CustomThreadPool(int poolSize, int priority) {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        mExecutorService \u003d new ThreadPoolExecutor(","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                CORE_POOL_SIZE,","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                MAXIMUM_POOL_SIZE,","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                KEEP_ALIVE_TIME,","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                TimeUnit.MILLISECONDS,","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                new ArrayBlockingQueue\u003c\u003e(poolSize),","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                new CustomThreadFactory(priority),","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                new CustomRejectedExecutionHandler()","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     * Executes Thread.","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     * @param runnable Runnable object.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public void execute(Runnable runnable) {","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        if (mExecutorService.isShutdown()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        mExecutorService.execute(runnable);","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"     * Returns status of ThreadPool ExecutorService.","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"     * @return ThreadPool ExecutorService status.","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"    public boolean isShutdown() {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"        return mExecutorService.isShutdown();","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"     * Releases ThreadPool ExecutorService.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"    public void release() {","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"        if (isShutdown()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"        mExecutorService.shutdown();","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":97}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":" * The is the Ui class for UI display.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"public class Ui {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    private static final String HORIZONTAL_LINE \u003d","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"            \"    ____________________________________________________________\";","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    public Ui() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * Displays logo.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public void logo() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     * Displays greet.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"    public void greet() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     * Displays command.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"    public void echo(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + command);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * Displays messages.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"    public void show(String... messages) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"        Arrays.stream(messages)","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                .forEach(message -\u003e System.out.println(INDENTATION + message));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"     * Displays bye.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"    public void bye() {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"     * Returns one line of command.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"     * @return One line of commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":80}},{"path":"src/main/java/duke/util/CommandUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.util;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeExtractCommandException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeUnknownException;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.EventDateTime;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Operation;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" * The is the CommandUtils class that extracts contents from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"public class CommandUtils {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     * Returns operation from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @return Operation from command if exists, else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If operation is empty or cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeUnknownException If operation is unknown.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    public static Operation extractOperation(String command)","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            throws DukeExtractCommandException, DukeUnknownException {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The operation cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        String operation \u003d contents[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        if (operation.equals(\"\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The operation cannot be empty.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"            if (operation.equals(Operation.TODO.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.TODO;","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DEADLINE.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DEADLINE;","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.EVENT.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.EVENT;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.LIST.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.LIST;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DONE.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DONE;","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.DELETE.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.DELETE;","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.CLEAR.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.CLEAR;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.FIND.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.FIND;","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.COMING.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.COMING;","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation.equals(Operation.BYE.getValue())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                return Operation.BYE;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"            } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                throw new DukeUnknownException(","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                        \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task number from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task number from command if it exists and is a positive integer,","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If task number is empty.","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"     * @throws NumberFormatException If task number is not a integer.","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeTaskNumberOutOfBoundsException If task number is not a positive integer.","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"    public static int extractTaskNumber(String command)","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"            throws DukeExtractCommandException, NumberFormatException,","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"        DukeTaskNumberOutOfBoundsException {","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The task number cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"            number \u003d Integer.parseInt(contents[1]);","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"            throw new NumberFormatException(\"☹ OOPS!!! The task number is not an integer.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"HolmesJJ"},"content":"        if (number \u003c 1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeTaskNumberOutOfBoundsException(","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The task number is not a positive integer.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"HolmesJJ"},"content":"        return number;","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task description from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task description from command if it exists and can be extracted properly,","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If task description is empty","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"HolmesJJ"},"content":"     *                                     or cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"HolmesJJ"},"content":"    public static String extractTaskDescription(String command) throws DukeExtractCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"HolmesJJ"},"content":"        String operation \u003d contents[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The description of a \"","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"HolmesJJ"},"content":"                            + operation + \" cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"HolmesJJ"},"content":"        String description \u003d contents[1];","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"HolmesJJ"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The description of a \"","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"HolmesJJ"},"content":"                            + operation + \" cannot be empty.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"HolmesJJ"},"content":"        return description;","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"HolmesJJ"},"content":"     * Returns task details that contains task name and task (at/by) time from task description.","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"HolmesJJ"},"content":"     * @param description Extracted from task command.","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"HolmesJJ"},"content":"     * @param regex \" /at \" or \" /by \".","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"HolmesJJ"},"content":"     * @return Task details from description if they exist and can be extracted properly,","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If task details are empty","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"HolmesJJ"},"content":"     *                                     or cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"HolmesJJ"},"content":"    public static String[] extractTaskDetails(String description, String regex)","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"HolmesJJ"},"content":"            throws DukeExtractCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"HolmesJJ"},"content":"        String[] details \u003d description.split(regex, 2);","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"HolmesJJ"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The task details cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"HolmesJJ"},"content":"        if (Arrays.stream(details).filter(detail -\u003e detail.equals(\"\"))","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"HolmesJJ"},"content":"                .toArray(String[]::new).length \u003e 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The task details cannot be empty.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"HolmesJJ"},"content":"        return details;","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"HolmesJJ"},"content":"     * Returns event date, start time and end time.","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"HolmesJJ"},"content":"     * @param dateTime Extracted from description.","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"HolmesJJ"},"content":"     * @param regex \" \".","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"HolmesJJ"},"content":"     * @return Date, start time and end time from datetime if they exist","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"HolmesJJ"},"content":"     *         and can be extracted properly, else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If dateTime are empty or cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"HolmesJJ"},"content":"    public static EventDateTime extractEventDatetime(String dateTime, String regex)","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"HolmesJJ"},"content":"            throws DukeExtractCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"HolmesJJ"},"content":"        String[] dateAndTimes \u003d dateTime.split(regex, 3);","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"HolmesJJ"},"content":"        if (dateAndTimes.length !\u003d 3) {","lastModifiedDate":"2021-09-03"},{"lineNumber":157,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":158,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The event date and time cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":159,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":160,"author":{"gitId":"HolmesJJ"},"content":"        String atDate \u003d dateAndTimes[0];","lastModifiedDate":"2021-09-03"},{"lineNumber":161,"author":{"gitId":"HolmesJJ"},"content":"        String startTime \u003d dateAndTimes[1];","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"HolmesJJ"},"content":"        String endTime \u003d dateAndTimes[2];","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"HolmesJJ"},"content":"            return new EventDateTime(DateTimeUtils.parseDate(atDate),","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"HolmesJJ"},"content":"                DateTimeUtils.parseTime(startTime), DateTimeUtils.parseTime(endTime));","lastModifiedDate":"2021-09-03"},{"lineNumber":166,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":168,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The event date and time cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":170,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":171,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":172,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":173,"author":{"gitId":"HolmesJJ"},"content":"     * Returns deadline ate and time.","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":175,"author":{"gitId":"HolmesJJ"},"content":"     * @param dateTime Extracted from description.","lastModifiedDate":"2021-09-03"},{"lineNumber":176,"author":{"gitId":"HolmesJJ"},"content":"     * @return DateTime format if it can be extracted properly, else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If dateTime cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":178,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"HolmesJJ"},"content":"    public static LocalDateTime extractDeadlineDateTime(String dateTime)","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"HolmesJJ"},"content":"        throws DukeExtractCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":182,"author":{"gitId":"HolmesJJ"},"content":"            return DateTimeUtils.parseDateTime(dateTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":184,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":185,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The deadline date and time cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":186,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":187,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":188,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":189,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"HolmesJJ"},"content":"     * Returns keyword from command.","lastModifiedDate":"2021-09-03"},{"lineNumber":191,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":192,"author":{"gitId":"HolmesJJ"},"content":"     * @return Keyword from command if it can be extracted properly,","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"HolmesJJ"},"content":"     *         else throw exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DukeExtractCommandException If keyword cannot be extracted properly.","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":196,"author":{"gitId":"HolmesJJ"},"content":"    public static String extractKeyword(String command) throws DukeExtractCommandException {","lastModifiedDate":"2021-09-03"},{"lineNumber":197,"author":{"gitId":"HolmesJJ"},"content":"        String[] contents \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-03"},{"lineNumber":198,"author":{"gitId":"HolmesJJ"},"content":"        if (contents.length !\u003d 2) {","lastModifiedDate":"2021-09-03"},{"lineNumber":199,"author":{"gitId":"HolmesJJ"},"content":"            throw new DukeExtractCommandException(","lastModifiedDate":"2021-09-03"},{"lineNumber":200,"author":{"gitId":"HolmesJJ"},"content":"                    \"☹ OOPS!!! The keyword cannot be extracted properly.\");","lastModifiedDate":"2021-09-03"},{"lineNumber":201,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"HolmesJJ"},"content":"        return contents[1];","lastModifiedDate":"2021-09-03"},{"lineNumber":203,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":204,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"HolmesJJ":204}},{"path":"src/main/java/duke/util/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":" * The is the DateTimeUtils class that parse date and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"public class DateTimeUtils {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    private static final String DATE_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    private static final String TIME_PATTERN \u003d \"HH:mm\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    private static final String DATE_TIME_PATTERN \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"     * Returns String of date to date format.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * @param date Date in String format.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     * @return Date format.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DateTimeParseException If the date cannot be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_PATTERN);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     * Returns String of time to time format.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"     * @param time Time in String format.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"     * @return Time format.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DateTimeParseException If the time cannot be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"    public static LocalTime parseTime(String time) throws DateTimeParseException {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(TIME_PATTERN);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        return LocalTime.parse(time, formatter);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"     * Returns String of dateTime to dateTime format.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"     * @param dateTime DateTime in String format.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"     * @return DateTime format.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"     * @throws DateTimeParseException If the dateTime cannot be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":52}},{"path":"src/main/java/duke/util/FileUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":" * The is the FileUtils class to do file operations.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"public class FileUtils {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"     * Returns list of contents from file.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"     * @param dirName Directory name.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"     * @param fileName File name.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"     * @return List of contents.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    public static List\u003cString\u003e loadFile(String dirName, String fileName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        Path rootPath \u003d Paths.get(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        Path dirPath \u003d Paths.get(rootPath.toAbsolutePath().toString(), dirName);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        if (!Files.exists(dirPath)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"            return contents;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"        Path filePath \u003d Paths.get(dirPath.toAbsolutePath().toString(), fileName);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        File file \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"        if (!file.exists() || file.isDirectory()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            return contents;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                String row \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"                contents.add(row);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        return contents;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"     * Returns true if list of contents are saved to file successfully, else return false.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"     * @param dirName Directory name.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"     * @param fileName File name.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"     * @param contents List of contents.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"     * @return Whether the contents are saved to file successfully.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"    public static boolean isFileSaved(String dirName, String fileName, List\u003cString\u003e contents) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"        Path rootPath \u003d Paths.get(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"        Path dirPath \u003d Paths.get(rootPath.toAbsolutePath().toString(), dirName);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"        if (!Files.exists(dirPath)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"            File dirFile \u003d new File(String.valueOf(dirPath));","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"            dirFile.mkdir();","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"        Path filePath \u003d Paths.get(dirPath.toAbsolutePath().toString(), fileName);","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"        File file \u003d new File(String.valueOf(filePath));","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"Create file error: \" + e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"HolmesJJ"},"content":"            FileWriter writer \u003d new FileWriter(filePath.toAbsolutePath().toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"HolmesJJ"},"content":"            for (String content : contents) {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"HolmesJJ"},"content":"                writer.write(content + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"HolmesJJ"},"content":"            writer.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"HolmesJJ"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"HolmesJJ"},"content":"            System.out.println(\"Write file error: \" + e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"HolmesJJ"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"HolmesJJ"},"content":"        return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HolmesJJ":86}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.ComingCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"import duke.constant.MessageType;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeExtractCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"import duke.exception.DukeUnknownException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"import duke.listener.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"import duke.task.Operation;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":" * The is the Parser class that extracts operation from command","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":" * and returns respective Command object.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"     * Returns respective Command objects according to user command.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"     * @param command User\u0027s command input.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"     * @param message Message interface.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"     * @return Respective Command object if exists, else return empty.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    public static Command parse(String command, Message message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"            Operation operation \u003d CommandUtils.extractOperation(command);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"            if (operation \u003d\u003d Operation.BYE) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                return new ExitCommand(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.LIST) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                return new ListCommand(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.DONE) {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                return new DoneCommand(command, message);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.DELETE) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"                return new DeleteCommand(command, message);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.CLEAR) {","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"                return new ClearCommand(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.FIND) {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                return new FindCommand(command, message);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.COMING) {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"                return new ComingCommand(message);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"            } else if (operation \u003d\u003d Operation.TODO","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"                || operation \u003d\u003d Operation.DEADLINE","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"                || operation \u003d\u003d Operation.EVENT) {","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                return new AddCommand(command, operation, message);","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        } catch (DukeExtractCommandException | DukeUnknownException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"            message.show(MessageType.ERROR, e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"        return null;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":58}},{"path":"src/main/resources/view/DukeDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003cfx:root type\u003d\"Pane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    \u003cPane fx:id\u003d\"dialog\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"            \u003cImageView fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"13.0\" layoutY\u003d\"14.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"                \u003cimage\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cImage url\u003d\"@../image/duke.png\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"                \u003c/image\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/Pane\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":18}},{"path":"src/main/resources/view/DukeUi.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"550.0\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"            prefWidth\u003d\"450.0\" style\u003d\"-fx-background-color: #EAEDF1;\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.controller.DukeController\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        \u003cScrollPane fx:id\u003d\"chatPane\" layoutX\u003d\"60.0\" layoutY\u003d\"40.0\" prefHeight\u003d\"470.0\" prefWidth\u003d\"390.0\"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"                    style\u003d\"-fx-background-color: #EAEDF1 #EAEDF1;\" fitToWidth\u003d\"true\" vbarPolicy\u003d\"NEVER\" pannable\u003d\"true\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"                        \u003cInsets bottom\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"        \u003cPane prefHeight\u003d\"550.0\" prefWidth\u003d\"60.0\" style\u003d\"-fx-background-color: #10232A;\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"                \u003cLine endX\u003d\"13.0\" layoutX\u003d\"32.0\" layoutY\u003d\"19.0\" startX\u003d\"-18.0\" stroke\u003d\"WHITE\" strokeLineCap\u003d\"ROUND\"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"                      strokeWidth\u003d\"3.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"                \u003cPane layoutY\u003d\"8.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"60.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"                \u003cLine endX\u003d\"13.0\" layoutX\u003d\"32.0\" layoutY\u003d\"28.0\" startX\u003d\"-18.0\" stroke\u003d\"WHITE\" strokeLineCap\u003d\"ROUND\"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"HolmesJJ"},"content":"                      strokeWidth\u003d\"3.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"HolmesJJ"},"content":"                \u003cLine endX\u003d\"13.0\" layoutX\u003d\"32.0\" layoutY\u003d\"37.0\" startX\u003d\"-18.0\" stroke\u003d\"WHITE\" strokeLineCap\u003d\"ROUND\"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"HolmesJJ"},"content":"                      strokeWidth\u003d\"3.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/Pane\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"HolmesJJ"},"content":"        \u003cSeparator layoutX\u003d\"60.0\" layoutY\u003d\"40.0\" prefHeight\u003d\"3.0\" prefWidth\u003d\"390.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel layoutX\u003d\"70.0\" layoutY\u003d\"10.0\" text\u003d\"HolmesJJ の Duke\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"HolmesJJ"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"HolmesJJ"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"HolmesJJ"},"content":"        \u003cLabel fx:id\u003d\"comingTasks\" layoutX\u003d\"250.0\" layoutY\u003d\"10.0\" text\u003d\"0 coming task in 3 hours!\"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"HolmesJJ"},"content":"               style\u003d\"-fx-text-fill: red\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"HolmesJJ"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"HolmesJJ"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"HolmesJJ"},"content":"        \u003cPane layoutX\u003d\"60.0\" layoutY\u003d\"510.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"390.0\" style\u003d\"-fx-background-color: #FFFFFF;\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"HolmesJJ"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"HolmesJJ"},"content":"                \u003cImageView fx:id\u003d\"ivSend\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\" layoutX\u003d\"350.0\" layoutY\u003d\"8.0\"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"HolmesJJ"},"content":"                           pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"HolmesJJ"},"content":"                        \u003cImage url\u003d\"@../image/send.png\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"HolmesJJ"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"HolmesJJ"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"HolmesJJ"},"content":"                \u003cTextField fx:id\u003d\"tfInput\" layoutX\u003d\"10.0\" layoutY\u003d\"5.0\" prefHeight\u003d\"30.0\" prefWidth\u003d\"320.0\"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"HolmesJJ"},"content":"                           promptText\u003d\"Type your command...\" disable\u003d\"true\"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"HolmesJJ"},"content":"                           style\u003d\"-fx-background-color: -fx-control-inner-background;\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"HolmesJJ"},"content":"                        \u003cFont size\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"HolmesJJ"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"HolmesJJ"},"content":"                \u003c/TextField\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/Pane\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"HolmesJJ"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":72}},{"path":"src/main/resources/view/UserDialog.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"\u003cfx:root type\u003d\"Pane\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"    \u003cPane fx:id\u003d\"dialog\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"            \u003cImageView fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" layoutX\u003d\"325.0\" layoutY\u003d\"15.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"                       preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"                \u003cimage\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"                    \u003cImage url\u003d\"@../image/user.png\"/\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"                \u003c/image\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    \u003c/Pane\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"HolmesJJ":18}},{"path":"src/test/java/duke/task/OperationTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"class OperationTest {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    void getValue_getTodoOperationValue_gotCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(\"todo\", Operation.TODO.getValue());","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    void values_getAllOperations_gotCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        Operation[] operations \u003d new Operation[]{","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"            Operation.TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"            Operation.DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"            Operation.EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"            Operation.LIST,","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"            Operation.DONE,","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"            Operation.DELETE,","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"            Operation.CLEAR,","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"            Operation.FIND,","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"            Operation.COMING,","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"            Operation.BYE","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        };","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        assertArrayEquals(operations, Operation.values());","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"HolmesJJ"},"content":"    void valueOf_getTodoOperation_gotCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(Operation.valueOf(\"TODO\"), Operation.TODO);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":36}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"class TodoTest {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"    void formatTask_formattedCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"        String[] expected \u003d new String[] {\"T\", \"1\", \"Read book\"};","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        assertArrayEquals(expected, todo.formatTask());","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    void markAsDone_markedCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        Todo doneTodo \u003d todo.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        assertTrue(doneTodo.isDone());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    void toString_convertedCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"        Todo todo \u003d new Todo(\"Read book\");","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        String expected \u003d \"[T][ ] Read book\";","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":31}},{"path":"src/test/java/duke/util/FileUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"class FileUtilsTest {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"    void loadFile_loadedCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e formattedTasks \u003d FileUtils.loadFile(\"data\", \"test.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"T | 0 | read book\");","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"D | 0 | return book | 2021-06-06 18:00\");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"T | 0 | join sports club\");","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"T | 1 | borrow book\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"D | 1 | return book | 2021-08-08 10:00\");","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"        expected.add(\"E | 1 | project meeting | 2021-08-20 14:00-16:00\");","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"        assertArrayEquals(expected.toArray(String[]::new), formattedTasks.toArray(String[]::new));","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HolmesJJ"},"content":"    void loadFile_wrongFilePath_returnedEmptyList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e formattedTasks \u003d FileUtils.loadFile(\"data\", \"wrong_file_path.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HolmesJJ"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"        assertEquals(0, formattedTasks.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HolmesJJ"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HolmesJJ"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":32}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"D | 0 | return book | 2021-06-06 18:00","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"T | 0 | join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"D | 1 | return book | 2021-08-08 10:00","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"E | 1 | project meeting | 2021-08-20 14:00-16:00","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HolmesJJ":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HolmesJJ"},"content":"clear","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HolmesJJ"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"HolmesJJ"},"content":"deadline return book /by 2021-06-06 18:00","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HolmesJJ"},"content":"event project meeting /at 2021-08-06 14:00 16:00","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HolmesJJ"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"HolmesJJ"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":"deadline return book /by 2021-08-08 10:00","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"event project meeting /at 2021-08-20 14:00 16:00","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"delete 8","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HolmesJJ"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"find book","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"HolmesJJ"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"HolmesJJ":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"HolmesJJ"},"content":"REM exclude the files for GUI","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"HolmesJJ"},"content":"dir /s /B ..\\src\\main\\*.java^","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"HolmesJJ"},"content":" | findstr /v \"DukeApp.java\"^","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"HolmesJJ"},"content":" | findstr /v \"Main.java\"^","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"HolmesJJ"},"content":" | findstr /v \"controller\"^","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"HolmesJJ"},"content":" \u003e sources.txt","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"HolmesJJ"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"HolmesJJ":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"HolmesJJ"},"content":"# exclude the files for GUI","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"HolmesJJ"},"content":"find ../src/main/java \\( -iname \"*.java\" \\","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"HolmesJJ"},"content":"    ! -iname \"*DukeApp.java\" \\","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"HolmesJJ"},"content":"    ! -iname \"*Main.java\" \\","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"HolmesJJ"},"content":"    -not -path \"*/controller/*\" \\","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"HolmesJJ"},"content":"\\) \u003e sources.txt","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"HolmesJJ"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"HolmesJJ"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"HolmesJJ"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"HolmesJJ":9}}]
