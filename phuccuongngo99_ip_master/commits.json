{"authorDailyContributionsMap":{"phuccuongngo99":[{"date":"2021-08-17","commitResults":[{"hash":"9f88731747187e54ccc269dd418e68e96d9fe30f","messageTitle":"Implement Level-1 of Duke","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"c1d38d3abd65778a4d5975b434f25299979c5c05","messageTitle":"Implement add task and task list","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":4}}},{"hash":"91491993d1becb6aea86d7fc02588ce09d86ca72","messageTitle":"Add feature mark task as done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":4}}},{"hash":"748dd095ef4ece36a8edda792dd92e92b201f108","messageTitle":"Refractor integer checking function to Util class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":12}}}]},{"date":"2021-08-18","commitResults":[{"hash":"620983c453b1c5fc199bed0b76714b7dc4381f11","messageTitle":"Encapsulate relevant var \u0026 func to TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":7}}},{"hash":"7bb910fbde6189c9834d1bbfb134a51c9b4f31c7","messageTitle":"Duke: Extract a start command keyword.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":10}}},{"hash":"aea656d21f33e8a5891b006ab82e3f89dd8c1165","messageTitle":"Add ToDos, Events, Deadlines features","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":13}}},{"hash":"189d7ac9ae6a6f31ab0c9feedd68ee20854d4a92","messageTitle":"Put all task classes to 1 folder","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"66cd6a45c77de33059e20fc0a256a0d571b7db85","messageTitle":"Add Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"sh":{"insertions":0,"deletions":0}}},{"hash":"e4d5fd7a85bc55abf0a3ac75d4b3298a65683d15","messageTitle":"Refractor relevant codes to TaskManager class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":63}}},{"hash":"7361bf82995b1e7c4693228ab518944a16b5249d","messageTitle":"Add Exceptions if user input is invalid","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"64bef31f97d2cef76fff20cd8f8c957818286789","messageTitle":"Modify TaskManager \u0026 Duke to work with exception","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":11}}},{"hash":"6193babb93c73608acf97354dfd3e69d3195b64a","messageTitle":"Move all exceptions to 1 folder","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"101d0f3e209418ff22bfab5bedde6e00938ea7f2","messageTitle":"Fix typo in function name in Util class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"c6ae1ddd824f596ea27ed297a04f83af0b9ab6d2","messageTitle":"Change Duke to only echo exception message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"fbfe2563cc1b579ceda4145bc5ca8231e1984e0a","messageTitle":"Add delete feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"1a0c1597fdc04f0772c0d25badd05cf86c528030","messageTitle":"Fix bug not printing out when 0 task left","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"94f3882a4b0d69b4e17263394fd80fecb6424ea6","messageTitle":"Update input \u0026 expected for Level-6 test","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0}}}]},{"date":"2021-08-19","commitResults":[{"hash":"28e17aeddb5f9295be2223f9ac4ac7f2b6d56eab","messageTitle":"Fix type in EXPECTED.TXT","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":236,"deletions":156}}},{"hash":"154ec70dded3f94b4d2aa6071729bc2720418e87","messageTitle":"Move Util class to utils folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"905c65fa920a998d57ab208c311740180c89939c","messageTitle":"Change minor to exceptions folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"377770587cceaaa1a3820e2b10497b2ccb5ee013","messageTitle":"Change minor to tasks folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"285ef25f4e4ed2c8007e36c1a71afe49e8968a02","messageTitle":"Add commands classes in commands folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":213,"deletions":76}}},{"hash":"7f4c21ad392b1e876e08af48da6ffb4744ef751c","messageTitle":"Change Duke.java to work with new code","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":12}}}]},{"date":"2021-08-23","commitResults":[{"hash":"60da0d51a4161f249c766b03c6cff9761284ee45","messageTitle":"Add isExit() to Command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":5}}},{"hash":"ac82c1fb5b5fd8ab37ab308c4aeddf92a32e1f10","messageTitle":"Add loading data feature","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":127,"deletions":3}}},{"hash":"6f52b37b01f42e719c88c50e7997e9c8dc407a6d","messageTitle":"Add support to parse Date but not time","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}}]},{"date":"2021-08-24","commitResults":[{"hash":"e2799b81121c91fbfc9d70c894be939f43fc14e8","messageTitle":"Refractor relevant code to Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":184,"deletions":140}}}]},{"date":"2021-08-27","commitResults":[{"hash":"5a6398829fac8946cd39724ecd62f82fa2cf06d5","messageTitle":"Move storage codes to storage folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"7ff10289bc734b723ad8cb9b6d15f8d0e558c6f0","messageTitle":"Add Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":91,"deletions":21}}},{"hash":"4fa6cb0e0d25bed3110dea8ac0be052d1023377c","messageTitle":"Add Ui and Parser class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":95}}},{"hash":"9803c9b25cd07341c91402dd52f80208f8e2e742","messageTitle":"Organize folders into duke package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":422,"deletions":395},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":2,"deletions":2}}},{"hash":"8f1aabaa5a6eb3afbd7aa838c186fe62bfda3352","messageTitle":"Add JUnit test for Parser \u0026 TaskList","messageBody":"","tags":["A-Junit"],"fileTypesAndContributionMap":{"java":{"insertions":174,"deletions":81},"md":{"insertions":1,"deletions":1}}},{"hash":"4b5eb26c3c026fd78e361a9a98964f1a9aad3406","messageTitle":"Minor add in header documentation","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"d04549954fd01bc07c4a93068b44dca50aaddb8a","messageTitle":"Implement Find feature by keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":0}}},{"hash":"88fb4044c270ff7778502a509fc356f8ac7ad24f","messageTitle":"Add Javadoc to all Command subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":18}}},{"hash":"65abd4ddfc8e9620d1fef62dea4753d18aa99c8c","messageTitle":"Add Javadoc to Exceptions subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"e29b8b9eeff0bf5fee2eb9292df87b1e87d55049","messageTitle":"Add class javadoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":1}}},{"hash":"b4aa8eec6ceffa603f15a2b1c53e781731805ccb","messageTitle":"Fix code style and add more JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":1}}},{"hash":"7438b938400b75febb5fff589388e93ba49eb3be","messageTitle":"Fix bug in find feature","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}}]},{"date":"2021-09-01","commitResults":[{"hash":"88a58badb3c3f92c0bb7511612b0f37d237a692b","messageTitle":"Ignore data folder","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":0}}}]},{"date":"2021-09-03","commitResults":[{"hash":"bed9e942011e126551d2da4cbb60e767b48f21d4","messageTitle":"Add Gradle for testing","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1},"java":{"insertions":5,"deletions":2}}},{"hash":"5f5f21ef242695579a628ee0e71b225fcedee7e2","messageTitle":"Add GUI to Duke, remove CLI GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":251,"deletions":75}}},{"hash":"fa167e1667a0e1b902e81a51f5bb93856c30c955","messageTitle":"Add Varargs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":10}}},{"hash":"d978fd973ad4fd812629704c9cba3910ae998072","messageTitle":"Add assertion to code","messageBody":"There\u0027s no assertion within the entire code base\n\nThere should be assertion to check for illegal variable values entered by users\n\nLet\u0027s add assertions in a few place. First, to check if user delete a task\nnumber that\u0027s within task list length. Second, to check that storage doesn\u0027t\ninitialize an empty task list on its own.\n\nIt\u0027s better to let the program fails by assertion than cryptic runtime exception.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":5}}},{"hash":"668403bf60ae07f2a640aa8ba17413c6636e74f0","messageTitle":"Change code slightly according to ensure CodeQuality","messageBody":"There are magic values within tasks class and storage class\n\nLet\u0027s refractor them into constant class\n\nWe should do this to reduce to 1 single source of\nvalue. This will help us easily change the value.\n","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":6}}}]},{"date":"2021-09-04","commitResults":[{"hash":"36b95148fc74f78d51f7311d6059e94f64e99187","messageTitle":"Add features to track task done so far","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":7}}},{"hash":"887a1811113b68a8cae628f4eaa097d872e45457","messageTitle":"Fix bug keep increasing num task done","messageBody":"When user execute done command on already done\ntask, the number of task done increases\n\nThis is clearly a bug since the number of\ntask done so far shouldn\u0027t be updated if\nusers select done on the done task\n\nLet\u0027s add a check within TaskList to only\nincrement if the task is not done beforehand\n\nIt\u0027s done this way as number of done task\nshould be the responsibility of taskList\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"e378d819b05a995eddcc8f27e888e0cef680d7b8","messageTitle":"Minor style change","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2021-09-17","commitResults":[{"hash":"75f2de3830943478301ed2678100a5d5d131918d","messageTitle":"Add Ui and User Guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":61,"deletions":13}}},{"hash":"6ae17f494921121337ebc1fa02138b8a35ec92c2","messageTitle":"Fix all current checkstyle problem","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":115,"deletions":45}}},{"hash":"866e20f67afb5ac236c3ac40e284804fd9401ab7","messageTitle":"Fix docs and checkstyle in test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":33}}}]},{"date":"2021-09-20","commitResults":[{"hash":"883f0c2f9412ac880464beb6b416e1571f8b39fc","messageTitle":"Add tests for Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":7}}},{"hash":"3ed6434c326dbe0551d47b59ae42bf28244f1635","messageTitle":"Add feedbacks for other exceptions","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"phuccuongngo99":{"java":1665,"md":62,"fxml":35,"sh":2,"bat":1,"gradle":17,"txt":16}},"authorContributionVariance":{"phuccuongngo99":87119.375},"authorDisplayNameMap":{"phuccuongngo99":"CS2103T-T15-3 NGO ..UONG"}}
