[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"    mainClassName \u003d \"bubbles.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"    archiveBaseName \u003d \"bubbles\"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"javafx {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiongjya":24,"-":44}},{"path":"data/bubbles.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"T | 1 | go for lunch in utown","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"T | 0 | eat dinner","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"D | 0 | complete 2103t | by 2021-08-30","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"xiongjya":3}},{"path":"src/main/java/bubbles/Bubbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import bubbles.tasks.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Message;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" * Bubbles - a Personal Assistant Chatbot that","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":" * helps a user to keep track of various tasks,","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":" * namely ToDos, Deadlines and Events.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"public class Bubbles {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    private String filePath \u003d \"data/bubbles.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * A public constructor to initialize the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    public Bubbles() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"        storage.loadFile(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"        taskList \u003d storage.getTaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"        ui \u003d new Ui(storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     * Main method for the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Creates a new Bubbles object and gets the bot running.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"        new Bubbles().run();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"    private void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        System.out.println(Message.separateMessage(Message.WELCOME.toString()));","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"        while (!(input \u003d ui.readCommand()).equals(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"            System.out.println(taskList.taskListener(input));","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        ui.exit();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"            storage.writeTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"            return Message.EXIT.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"        message \u003d taskList.taskListener(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":64}},{"path":"src/main/java/bubbles/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":12}},{"path":"src/main/java/bubbles/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import bubbles.controller.MainWindow;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"/** A GUI for Bubbles using FXML. */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"            Scene scene \u003d new Scene(fxmlLoader.load());","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBubbles(new Bubbles());","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":27}},{"path":"src/main/java/bubbles/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.controller;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        displayPicture.setClip(new Circle(50, 50, 50));","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"    public static DialogBox getBubblesDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":63}},{"path":"src/main/java/bubbles/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.controller;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import bubbles.Bubbles;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Message;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    private Bubbles bubbles;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Blossom.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"    private final Image bubblesImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bubbles.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     * Initializes the components of the Main Window.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBubblesDialog(Message.WELCOME.toString(), bubblesImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"    public void setBubbles(Bubbles b) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"        bubbles \u003d b;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Bubble\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"        String response \u003d bubbles.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"                DialogBox.getBubblesDialog(response, bubblesImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        // After receiving the exit message from user, shut down the bot","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"        if (response.equals(Message.EXIT.toString())) {","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"            // Display the exit message and then exit after 1s","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"                @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"                public void run() {","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"            }, 2000);","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":75}},{"path":"src/main/java/bubbles/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception that is thrown","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * when the description of the Task is empty.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    private String taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for the EmptyTaskException.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     * @param taskType The type of Task (ToDo, Deadline or Event).","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    public EmptyTaskException(String taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        super(taskType);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty. ☹\";","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":28}},{"path":"src/main/java/bubbles/exceptions/IndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception that is thrown","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * when the index of the task that the user wants to perform an action to (eg. mark","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * as done, or to delete the Task) is out of bounds of the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"public class IndexOutOfBoundsException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for the IndexOutOfBoundsException.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * @param message The message containing details of the IndexOutOfBoundsException.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    public IndexOutOfBoundsException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! The number you have entered is out of bounds, please enter another number! ☹\";","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":26}},{"path":"src/main/java/bubbles/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.exceptions;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception when Bubbles receives","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * an invalid command/command the bot does not understand.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for the InvalidCommandException.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * @param message The message containing details of the InvalidCommandException.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I do not know what this means. ☹\";","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":25}},{"path":"src/main/java/bubbles/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks that need to be","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * done before a specific date/time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    private Deadline(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        this.dueDate \u003d Task.formatDate(dueDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * Acts as a public constructor of a Deadline Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Deadline, including the due date.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Deadline is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     * @return The created Deadline Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public static Deadline addDeadline(String input, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        Deadline item \u003d new Deadline(arr[0], isDone, arr[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Formats the Deadline Object to store in the hard disk File.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the Deadline Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *          of the Deadline Task).","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"D | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        format +\u003d \" | by \";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.dueDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Deadline.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        String date \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        String due \u003d \"(by: \" + date + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[D] [\" + this.getStatus() + \"] \" + this.description + \" \" + due;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":69}},{"path":"src/main/java/bubbles/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks that start at","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * a specific time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private LocalDate eventTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    private Event(String description, boolean isDone, String eventTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        this.eventTime \u003d Task.formatDate(eventTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * Acts as a public constructor of an Event Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Event, including the Event date.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Event is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     * @return The created Event Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public static Event addEvent(String input, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        Event item \u003d new Event(arr[0], isDone, arr[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Formats the Event Object to store in the hard disk File.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the Event Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *          of the Event Task).","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"E | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        format +\u003d \" | at \";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.eventTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Event.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        String date \u003d this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        String time \u003d \"(at: \" + date + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[E] [\" + this.getStatus() + \"] \" + this.description + \" \" + time;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":69}},{"path":"src/main/java/bubbles/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A class that represents a Task object - a piece of","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * work to be done or undertaken.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"public class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for a Task Object, initializing the","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * field description (of the task), and whether the task has","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     * been completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the task has been completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"     * Retrieves the status of the task, whether is has been","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"     * completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     * @return \"X\" if completed, \" \" if not yet.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"     * Parent method for format() of a basic Task Object, simply","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"     * returns the String representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"        return this.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"     * Formats the date input from the user (in the form of yyyy-mm-dd),","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"     * and store the date in the form of a LocalDate object.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"     * @param dateInput Date input form the user, formatted in yyyy-mm-dd.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"     * @return LocalDate Object representing the input date.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    public static LocalDate formatDate(String dateInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"        // assume that the acceptable format for dates related to deadline and event are in the form of","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"        // \"year-month-day\"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        LocalDate ld \u003d LocalDate.parse(dateInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        return ld;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the Task.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":75}},{"path":"src/main/java/bubbles/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.util.List;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import bubbles.exceptions.EmptyTaskException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"import bubbles.exceptions.IndexOutOfBoundsException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"import bubbles.exceptions.InvalidCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Message;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":" * A list of Task objects, that contains and tracks the Tasks the Bubbles bot","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":" * user has entered (including previous entries read from the hard dusk file).","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"public class TaskList {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    private int count;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    public enum TaskType {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"        DEADLINE,","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"        EVENT,","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        TODO","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for a TaskList Object,","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"     * that initializes an empty ArrayList for storing the Tasks and","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"     * keeps a counter for the number of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"        this.count \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     * TaskListener that accepts any input from the user (except \"bye\") and","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     * handles the input by calling other methods/throwing an exception to indicate","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"     * that such command does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"     * @param input A String input by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"    public String taskListener(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            String command \u003d arr[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"            switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"                return addTask(TaskType.TODO, input);","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"                return addTask(TaskType.DEADLINE, input);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"            case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"                return addTask(TaskType.EVENT, input);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"            case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"                return listTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"            case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"                return markAsDone(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"                return deleteTask(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"            case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"                return findTask(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"            case \"help\":","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"                return help();","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"                throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"            return Message.separateMessage(e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"     * Lists out the tasks in the TaskList by printing it out, after","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"     * the user\u0027s \"list\" command.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"xiongjya"},"content":"    public String listTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"xiongjya"},"content":"        int n \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"xiongjya"},"content":"        StringBuilder message \u003d new StringBuilder(Message.FORMAT_LINE + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"xiongjya"},"content":"        message.append(\"Below are some of the tasks in your list!\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"xiongjya"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"xiongjya"},"content":"            message.append((n + 1) + \". \" + t + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"xiongjya"},"content":"            n++;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"xiongjya"},"content":"        message.append(Message.FORMAT_LINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"xiongjya"},"content":"        return message.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"xiongjya"},"content":"     * Adds a Task of the specific task type (ToDo, Deadline or Event)","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"xiongjya"},"content":"     * into the TaskList. Prints the total number of tasks in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"xiongjya"},"content":"     * after.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"xiongjya"},"content":"     * @param t The type of Task.","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Task (including date for Deadline/Event).","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"xiongjya"},"content":"    public String addTask(TaskType t, String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"xiongjya"},"content":"            Task recentlyAdded \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"xiongjya"},"content":"            switch (t) {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"xiongjya"},"content":"            case TODO:","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"xiongjya"},"content":"                if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"xiongjya"},"content":"                    ToDo.addToDo(\"\", false);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"xiongjya"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d ToDo.addToDo(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"xiongjya"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d Deadline.addDeadline(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"xiongjya"},"content":"            case EVENT:","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d Event.addEvent(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"xiongjya"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"xiongjya"},"content":"                assert false : \"taskType is not one of the expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"xiongjya"},"content":"            assert recentlyAdded !\u003d null : \"Task is null and has yet to be created\";","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"xiongjya"},"content":"            this.tasks.add(recentlyAdded);","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"xiongjya"},"content":"            this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"xiongjya"},"content":"            String taskCount \u003d \"Now you have \" + this.count + \" task(s) in the list!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"xiongjya"},"content":"            return Message.separateMessage(Message.ADD + \"     \" + recentlyAdded + \"\\n\" + taskCount);","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"xiongjya"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"xiongjya"},"content":"            return Message.separateMessage(e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"xiongjya"},"content":"     * Adds a Task of the specific task type (ToDo, Deadline or Event)","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"xiongjya"},"content":"     * into the TaskList. Does not print the total number of tasks in the list after.","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"xiongjya"},"content":"     * @param taskType The type of Task.","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Task (including date for Deadline/Event).","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Task is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"xiongjya"},"content":"    public void addTask(String taskType, String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"xiongjya"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"xiongjya"},"content":"            addToDo(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"xiongjya"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"xiongjya"},"content":"            addDeadline(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"xiongjya"},"content":"            addEvent(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"xiongjya"},"content":"     * Adds a ToDo (Task) to the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":161,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the ToDo.","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the ToDo is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"xiongjya"},"content":"    public void addToDo(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"xiongjya"},"content":"            this.tasks.add(ToDo.addToDo(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"xiongjya"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"xiongjya"},"content":"            System.out.println(Message.separateMessage(e.toString()));","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"xiongjya"},"content":"        int previousCount \u003d this.count;","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"xiongjya"},"content":"        assert this.count - previousCount \u003d\u003d 1 : \"Count of tasks in task list did not increment as expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"xiongjya"},"content":"     * Adds a Deadline (Task) to the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Deadline (including the due date).","lastModifiedDate":"2021-09-03"},{"lineNumber":182,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Deadline is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"xiongjya"},"content":"    public void addDeadline(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"xiongjya"},"content":"        this.tasks.add(Deadline.addDeadline(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"xiongjya"},"content":"        int previousCount \u003d this.count;","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"xiongjya"},"content":"        assert this.count - previousCount \u003d\u003d 1 : \"Count of tasks in task list did not increment as expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"xiongjya"},"content":"     * Adds an Event (Task) to the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Event (including the event date).","lastModifiedDate":"2021-09-03"},{"lineNumber":197,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Event is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":198,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"xiongjya"},"content":"    public void addEvent(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"xiongjya"},"content":"        this.tasks.add(Event.addEvent(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"xiongjya"},"content":"        int previousCount \u003d this.count;","lastModifiedDate":"2021-09-08"},{"lineNumber":203,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"xiongjya"},"content":"        assert this.count - previousCount \u003d\u003d 1 : \"Count of tasks in task list did not increment as expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"xiongjya"},"content":"     * Marks the indicated task (of the corresponding task number in the","lastModifiedDate":"2021-09-03"},{"lineNumber":210,"author":{"gitId":"xiongjya"},"content":"     * input) as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"xiongjya"},"content":"     * @param input The user input that includes the \"done\" command and number","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"xiongjya"},"content":"     *              of task that user wants to mark as done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":214,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"xiongjya"},"content":"    public String markAsDone(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":216,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"xiongjya"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"xiongjya"},"content":"            if (index \u003e\u003d this.count || index \u003c 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":221,"author":{"gitId":"xiongjya"},"content":"                throw new IndexOutOfBoundsException(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"xiongjya"},"content":"                Task t \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"xiongjya"},"content":"                t.setAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"xiongjya"},"content":"                assert t.isDone : \"Task should be set to done, but is_done status is still false;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":227,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":228,"author":{"gitId":"xiongjya"},"content":"                return Message.separateMessage(Message.DONE + \"     \" + t + \"\\n\" + Message.REWARD);","lastModifiedDate":"2021-09-08"},{"lineNumber":229,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"xiongjya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"xiongjya"},"content":"            return Message.separateMessage(e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":232,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"xiongjya"},"content":"     * Deletes a Task from the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":237,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"xiongjya"},"content":"     * @param input The user input that includes the \"delete\" command and number","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"xiongjya"},"content":"     *              of task that user wants to delete permanently.","lastModifiedDate":"2021-09-03"},{"lineNumber":240,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"xiongjya"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":242,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"xiongjya"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"xiongjya"},"content":"            if (index \u003e\u003d this.count || index \u003c 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":247,"author":{"gitId":"xiongjya"},"content":"                throw new IndexOutOfBoundsException(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"xiongjya"},"content":"                int previousCount \u003d this.count;","lastModifiedDate":"2021-09-08"},{"lineNumber":250,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":251,"author":{"gitId":"xiongjya"},"content":"                Task removed \u003d this.tasks.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"xiongjya"},"content":"                this.count--;","lastModifiedDate":"2021-09-08"},{"lineNumber":253,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":254,"author":{"gitId":"xiongjya"},"content":"                assert previousCount - this.count \u003d\u003d 1 : \"Count of tasks in task list did not decrement as expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":255,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"xiongjya"},"content":"                String taskCount \u003d \"Now you have \" + count + \" task(s) in the list!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":258,"author":{"gitId":"xiongjya"},"content":"                return Message.separateMessage(Message.DELETE + \"     \" + removed + \"\\n\" + taskCount);","lastModifiedDate":"2021-09-08"},{"lineNumber":259,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"xiongjya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"xiongjya"},"content":"            return Message.separateMessage(e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":262,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"xiongjya"},"content":"     * Finds tasks with the corresponding keywords in the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":267,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"xiongjya"},"content":"     * @param input The user input that includes the \"find\" command and keyword(s) that the user","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"xiongjya"},"content":"     *              wants to search for within the tasks in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":270,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"xiongjya"},"content":"    public String findTask(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":272,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"xiongjya"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":275,"author":{"gitId":"xiongjya"},"content":"                                        .stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":276,"author":{"gitId":"xiongjya"},"content":"                                        .filter(task -\u003e task.toString().contains(arr[1]))","lastModifiedDate":"2021-09-08"},{"lineNumber":277,"author":{"gitId":"xiongjya"},"content":"                                        .collect(Collectors.toList());","lastModifiedDate":"2021-09-08"},{"lineNumber":278,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":279,"author":{"gitId":"xiongjya"},"content":"        StringBuilder message \u003d new StringBuilder(Message.FORMAT_LINE + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":280,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"xiongjya"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":282,"author":{"gitId":"xiongjya"},"content":"            message.append(\"There are no matching tasks in your list. ☹\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":283,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"xiongjya"},"content":"            message.append(\"Here are the matching tasks in your list!\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":285,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":286,"author":{"gitId":"xiongjya"},"content":"            int n \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":287,"author":{"gitId":"xiongjya"},"content":"            for (Task t : filteredTasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":288,"author":{"gitId":"xiongjya"},"content":"                message.append((n) + \". \" + t + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":289,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"xiongjya"},"content":"                n++;","lastModifiedDate":"2021-08-26"},{"lineNumber":291,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":293,"author":{"gitId":"xiongjya"},"content":"            assert n \u003d\u003d filteredTasks.size() + 1 : \"Task numbers displayed for tasks \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":294,"author":{"gitId":"xiongjya"},"content":"                    \"(containing matching keywords) did not increment as expected;\";","lastModifiedDate":"2021-09-08"},{"lineNumber":295,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":296,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":297,"author":{"gitId":"xiongjya"},"content":"        message.append(Message.FORMAT_LINE);","lastModifiedDate":"2021-09-02"},{"lineNumber":298,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":299,"author":{"gitId":"xiongjya"},"content":"        return message.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":300,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":301,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":302,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":303,"author":{"gitId":"xiongjya"},"content":"     * Returns the help string to guide users on how to use Bubbles.","lastModifiedDate":"2021-09-08"},{"lineNumber":304,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":305,"author":{"gitId":"xiongjya"},"content":"     * @return A String that provides a short list of commands users can use with Bubbles.","lastModifiedDate":"2021-09-08"},{"lineNumber":306,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":307,"author":{"gitId":"xiongjya"},"content":"    public String help() {","lastModifiedDate":"2021-09-08"},{"lineNumber":308,"author":{"gitId":"xiongjya"},"content":"        return Message.separateMessage(Message.HELP.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":309,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":310,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":311,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"xiongjya"},"content":"     * Returns the stored array of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"xiongjya"},"content":"     * @return ArrayList of Tasks that are stored in this TaskList Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":315,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":316,"author":{"gitId":"xiongjya"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":317,"author":{"gitId":"xiongjya"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":318,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":319,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":319}},{"path":"src/main/java/bubbles/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import bubbles.exceptions.EmptyTaskException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks without any","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * date/time attached to it.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    private ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * Acts as a public constructor of a ToDo Object, throw an EmptyTaskException","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     * if the input from the user is empty (after the \"todo\" command).","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the ToDo.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the ToDo is done/completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * @return The created ToDo Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * @throws EmptyTaskException Exception thrown when the ToDo description is empty.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    public static ToDo addToDo(String input, boolean isDone) throws EmptyTaskException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"            throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        ToDo item \u003d new ToDo(input, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Formats the ToDo Object to store in the hard disk File.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the ToDo Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *          of the ToDo Task).","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"T | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"     * Returns the String representation of the ToDo.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[T] [\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":65}},{"path":"src/main/java/bubbles/util/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.util;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * Stores the messages which UI uses to print, currently only includes","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * Greeting and Departure messages.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public enum Message {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    FORMAT_LINE(\"--------------------------------------------------\"),","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    LOGO(\"Hello from\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"),","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    ADD(\"Received order! I\u0027ve added this task:\\n\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    DELETE(\"Noted! I\u0027ve removed this task:\\n\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    DONE(\"Good job! I\u0027ve marked this task as done:\\n\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    REWARD(\"Bubbles will reward you with a piece of candy!\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    WELCOME(\"You should do what you want to do!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"            + \"Hello I\u0027m Bubbles from the Powerpuff Girls, what are you up to?\"),","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    HELP(\"Don\u0027t worry, Bubbles is here to help!\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"            + \"Supported commands: todo, deadline, event, list, done, delete, find, help, bye;\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"            + \"Note: You must include `/by` for deadlines, and `/at` for events\"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"            + \"after your task description! The date must be entered in the form\"","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"            + \"of yyyy-mm-dd, or else I won\u0027t be able to understand your command. ☹\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    EXIT(\"Bye-bye! Hope to see you again soon!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"    private String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    Message(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"    public static String separateMessage(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"        return FORMAT_LINE + \"\\n\" + message + \"\\n\" + FORMAT_LINE;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"     * Returns a string representation of the message.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"     * @return A string representation of the message.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        return this.message;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":47}},{"path":"src/main/java/bubbles/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.util;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that deals with making sense of the","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * user command.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * Breaks down the line of input read from the file saved on the local hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * Creates and returns an array that contains the necessary information for the","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     * Bubbles bot to easily update its task list with what is being read from","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     * the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * @param task A line of input read from the file saved on the local hard disk.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     * @return Object array which the first argument refers to the task category (ToDo,","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     *          Deadline, Event), the second argument refers to the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     *          (and date), and the last argument refers to whether the task had been","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     *          completed.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    public Object[] formatTask(String task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"        int n \u003d arr.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"        String taskType \u003d arr[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"        String completed \u003d arr[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"        if (completed.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"        input +\u003d arr[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"        if (n \u003e 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"            String[] date \u003d arr[3].split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"            input \u003d input + \" /\" + date[0] + \" \" + date[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        Object[] inputs \u003d {taskType, input, isDone};","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"        return inputs;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":46}},{"path":"src/main/java/bubbles/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.util;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"import bubbles.tasks.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"import bubbles.tasks.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":" * A class that deals with loading bubbles.tasks from the file","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":" * saved on the hard disk, followed by saving the tasks in the Bubbles bot","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":" * back into the file after the program ends.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    private File bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     * A public constructor to initialise a Storage Object for the","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"     * Bubbles bot. Each Storage Object has the File that it reads from and writes to,","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"     * the parser that decodes the user\u0027s inputs, and a task list for the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"    public Storage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     * Loads the reference file of the Storage Object based on the filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * argument provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @param filePath The path to the designated file with respect to the root working","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *                 directory.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    public void loadFile(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        bubbles \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"            taskList \u003d readFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"            createFile(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"    private void createFile(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d filePath.split(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"        File dir \u003d new File(arr[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"        dir.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"            System.out.println(\"There is an error while creating the database!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"    private TaskList readFile() throws FileNotFoundException {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        Scanner sc \u003d new Scanner(bubbles);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"            Object[] inputs \u003d parser.formatTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"            taskList.addTask((String) inputs[0], (String) inputs[1], (Boolean) inputs[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"xiongjya"},"content":"     * Overwrites the content of the File (referenced by this Storage","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"xiongjya"},"content":"     * Object) with the tasks in the taskList. Done when the Bubbles bot is","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"xiongjya"},"content":"     * terminated.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"xiongjya"},"content":"    public void writeTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"xiongjya"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"xiongjya"},"content":"            FileWriter fw \u003d new FileWriter(bubbles, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"xiongjya"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"xiongjya"},"content":"                String task \u003d t.format();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"xiongjya"},"content":"                fw.write(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"xiongjya"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"xiongjya"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"xiongjya"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"xiongjya"},"content":"     * Getter for the taskList of this Storage Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"xiongjya"},"content":"     * @return The taskList of this Storage Object.","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"xiongjya"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"xiongjya"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":109}},{"path":"src/main/java/bubbles/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.util;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A class that deals with interactions with the user,","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * mainly accepting user input and echoing back to the user","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * through System output.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"public class Ui {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    /* The Storage Object where the final list of tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     * would be updated to, after the Bubbles bot program","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * terminates.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    /** Constructor for Ui. */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    public Ui(Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"     * Echos the user input through printing out the input","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"     * String onto the System output line.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    public void echo() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"                System.out.println(Message.separateMessage(Message.EXIT.toString()));","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"                System.out.println(Message.separateMessage(input));","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"        sc.close();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"     * Echos the (accepted forms of) user input after formatting,","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"     * where the accepted commands are to add ToDo/Deadline/Event tasks,","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"     * marking tasks as done, deleting tasks, listing out all of the","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"     * tasks and saying good-bye.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"     * Closes the scanner, write the tasks into the local storage","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * and prints the Exit message.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the Exit message.","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    public String exit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"        sc.close();","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        storage.writeTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        return (Message.separateMessage(Message.EXIT.toString()));","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bubbles.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"xiongjya":23}},{"path":"src/test/java/bubbles/BubblesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class BubblesTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":12}},{"path":"src/test/java/bubbles/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import bubbles.util.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    public void testFormatTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        String task \u003d \"E | 1 | meeting with cs2101 groupmates | at 2021-08-25\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"        Object[] arr \u003d {\"E\", \"meeting with cs2101 groupmates /at 2021-08-25\", true};","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        // as we are testing the items in the Object array, we have to test the items in the array one by one","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"        // instead of testing assertEquals() on two arrays, which would definitely return false","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"        // as the two arrays are completely different objects","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"            assertEquals(arr[i], p.formatTask(task)[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":23}},{"path":"src/test/java/bubbles/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    // as we are printing out the output, we can test what we sent to System.out.println() for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    public void testDeadlineFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        Deadline d \u003d Deadline.addDeadline(\"buy groceries /by 2021-08-30\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        assertEquals(\"D | 0 | buy groceries | by 2021-08-30\", d.format());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"        Deadline d \u003d Deadline.addDeadline(\"complete cs2103t tutorial /by 2021-08-27\", true);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"        assertEquals(\"[D] [X] complete cs2103t tutorial (by: Aug 27 2021)\", d.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"todo read book","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"java -classpath ..\\bin bubbles.Bubbles \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiongjya":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"java -classpath ../bin Bubbles \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiongjya":1,"-":37}}]
