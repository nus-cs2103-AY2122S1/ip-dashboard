[{"path":"data/bubbles.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"T | 1 | complete level-8","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"D | 1 | finish a-moreclasses | by 2021-08-26","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"E | 1 | complete 2105 tutorial | at 2021-08-26","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":3}},{"path":"src/main/java/bubbles/Bubbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":" * Bubbles - a Personal Assistant Chatbot that","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * helps a user to keep track of various tasks,","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * namely ToDos, Deadlines and Events.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"class Bubbles {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    private String FILEPATH \u003d \"data/bubbles.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * A public constructor to initialize the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    public Bubbles() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"        storage.loadFile(FILEPATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     * Main method for the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"     * Creates a new Bubbles object and gets the bot running.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"     * @param args The command line arguments","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        new Bubbles().run();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    private void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        String introduction \u003d \"You should do what you want to do!\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"                + \"Hello I\u0027m Bubbles from the Powerpuff Girls, what are you up to?\";","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        formatting(introduction);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        ui.echoTask(this.storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"    private static void formatting(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        String separator \u003d \"-----------------------------------------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        System.out.println(separator + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"                + str + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"                + separator);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":55}},{"path":"src/main/java/bubbles/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks that need to be","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * done before a specific date/time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"class Deadline extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    private Deadline(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        this.dueDate \u003d Task.formatDate(dueDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * Act as a public constructor of a Deadline Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Deadline, including the due date","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Deadline is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     * @return The created Deadline Object","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public static Deadline addDeadline(String input, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        Deadline item \u003d new Deadline(arr[0], isDone, arr[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Format the Deadline Object to store in the hard disk File.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the Deadline Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *          of the Deadline Task)","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"D | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        format +\u003d \" | by \";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.dueDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        String date \u003d this.dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        String due \u003d \"(by: \" + date + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[D] [\" + this.getStatus() + \"] \" + this.description + \" \" + due;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":69}},{"path":"src/main/java/bubbles/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception that is thrown","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * when the description of the Task is empty.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"class EmptyTaskException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    private String taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * A public constrcutor for the EmptyTaskException.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     * @param taskType The type of Task (ToDo, Deadline or Event)","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    public EmptyTaskException(String taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        super(taskType);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty. ☹\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":28}},{"path":"src/main/java/bubbles/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks that start at","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * a specific time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private LocalDate eventTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    private Event(String description, boolean isDone, String eventTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        this.eventTime \u003d Task.formatDate(eventTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * Act as a public constructor of an Event Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Event, including the Event date","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Event is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     * @return The created Event Object","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public static Event addEvent(String input, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        Event item \u003d new Event(arr[0], isDone, arr[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * Format the Event Object to store in the hard disk File.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the Event Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     *          of the Event Task)","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"E | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        format +\u003d \" | at \";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.eventTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        String date \u003d this.eventTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        String time \u003d \"(at: \" + date + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[E] [\" + this.getStatus() + \"] \" + this.description + \" \" + time;","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":69}},{"path":"src/main/java/bubbles/IndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception that is thrown","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * when the index of the task that the user wants to perform an action to (eg. mark","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * as done, or to delete the Task) is out of bounds of the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"class IndexOutOfBoundsException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * A public constrcutor for the IndexOutOfBoundsException.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * @param message The message containing details of the IndexOutOfBoundsException.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    public IndexOutOfBoundsException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! The number you have entered is out of bounds, please enter another number! ☹\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":26}},{"path":"src/main/java/bubbles/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that represents the exception when the Bubbles bot receives","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * an invalid command/command the bot does not understand.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"     * A public constrcutor for the InvalidCommandException.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * @param message The message containing details of the InvalidCommandException.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        return \"☹ OOPS!!! I\u0027m sorry, but I do not know what this means. ☹\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":25}},{"path":"src/main/java/bubbles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A class that deals with making sense of the","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * user command.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"     * Breaks down the line of input read from the file saved on the local hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"     * Creates and returns an array that contains the necessary information for the","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"     * Bubbles bot to easily update its task list with what is being read from","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     * the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     * @param task A line of input read from the file saved on the local hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * @return Object array which the first argument refers to the task category (ToDo,","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     *          Deadline, Event), the second argument refers to the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     *          (and date), and the last argument refers to whether the task had been","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     *          completed","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    public Object[] formatTask(String task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        int n \u003d arr.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        String taskType \u003d arr[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        String completed \u003d arr[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        if (completed.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"        input +\u003d arr[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"        if (n \u003e 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"            String[] date \u003d arr[3].split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"            input \u003d input + \" /\" + date[0] + \" \" + date[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"        Object[] inputs \u003d {taskType, input, isDone};","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        return inputs;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":45}},{"path":"src/main/java/bubbles/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":" * A class that deals with loading bubbles.tasks from the file","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":" * saved on the hard disk, followed by saving the tasks in the Bubbles bot","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":" * back into the file after the program ends.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    private File bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * A public constructor to initialise a Storage Object for the","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * Bubbles bot. Each Storage Object has the File that it reads from and writes to,","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     * the parser that decodes the user\u0027s inputs, and a task list for the Bubbles bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"    public Storage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"     * Loads the reference file of the Storage Object based on the filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"     * argument provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     * @param filePath The path to the designated file with respect to the root working","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     *                 directory","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"    public void loadFile(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"        bubbles \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"            taskList \u003d readFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"            createFile(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"    private void createFile(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d filePath.split(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"        File dir \u003d new File(arr[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"        dir.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"            System.out.println(\"There is an error while creating the database!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"    private TaskList readFile() throws FileNotFoundException {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        Scanner sc \u003d new Scanner(bubbles);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"        TaskList toDoList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"            Object[] inputs \u003d parser.formatTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"            toDoList.addTask((String) inputs[0], (String) inputs[1], (Boolean) inputs[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"        return toDoList;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"     * Overwrites the content of the File (referenced by this Storage","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"xiongjya"},"content":"     * Object) with the tasks in the taskList. Done when the Bubbles bot is","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"xiongjya"},"content":"     * terminated.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"xiongjya"},"content":"    public void writeTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"xiongjya"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"xiongjya"},"content":"            FileWriter fw \u003d new FileWriter(bubbles, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"xiongjya"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"xiongjya"},"content":"                String task \u003d t.format();","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"xiongjya"},"content":"                fw.write(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"xiongjya"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"xiongjya"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"xiongjya"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"xiongjya"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"xiongjya"},"content":"     * Getter for the taskList of this Storage Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"xiongjya"},"content":"     * @return The taskList of this Storage Object","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"xiongjya"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"xiongjya"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":106}},{"path":"src/main/java/bubbles/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A class that represents a Task object - a piece of","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * work to be done or undertaken.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for a Task Object, initializing the","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     * fields description (of the task), and whether the task has","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     * been completed yet.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the task has been completed","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"     * Retrieve the status of the task, whether is has been","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"     * completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     * @return \"X\" if completed, \" \" if not yet","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"     * Parent method for format() of a basic Task Object, simply","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"     * returns the String representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"        return this.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"     * To format the date input from the user (in the form of yyyy-mm-dd),","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"     * and store the date in the form of a LocalDate object.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"     * @param dateInput Date input form the user, formatted in yyyy-mm-dd","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"     * @return LocalDate Object representing the input date","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"    public static LocalDate formatDate(String dateInput) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"        // assume that the acceptable format for dates related to deadline and event are in the form of","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"        // \"year-month-day\"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        LocalDate ld \u003d LocalDate.parse(dateInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        return ld;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[\" + getStatus() + \"] \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":75}},{"path":"src/main/java/bubbles/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A list of Task objects, that contains and tracks the Tasks the Bubbles bot","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * user has entered (including previous entries read from the hard dusk file).","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    private final String SEPARATOR \u003d \"-----------------------------------------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    private enum taskType {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        ToDo,","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"        Deadline,","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        Event","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"    private int count;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     * A public constructor for a TaskList Object,","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"     * that initializes an empty ArrayList for storing the Tasks and","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"     * keeps a counter for the number of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        this.count \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"     * TaskListener that accepts any input from the user (except \"bye\") and","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"     * handles the input by calling other methods/throwing an exception to indicate","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"     * that such command does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * @param input A String input by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"    public void taskListener(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"            String command \u003d arr[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"            switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"                addTask(taskType.ToDo, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"                addTask(taskType.Deadline, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"            case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"                addTask(taskType.Event, input);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"            case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"                listTasks();","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"            case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"                markAsDone(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"                deleteTask(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"                throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"                    + e","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"     * List out the tasks in the TaskList by printing it out, after","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"     * the user\u0027s \"list\" command.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"xiongjya"},"content":"    public void listTasks() {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"xiongjya"},"content":"        int n \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"xiongjya"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"xiongjya"},"content":"        System.out.println(\"Below are some of the tasks in your list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"xiongjya"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"xiongjya"},"content":"            System.out.println((n + 1) + \". \" + t);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"xiongjya"},"content":"            n++;","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"xiongjya"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"xiongjya"},"content":"     * Add a Task of the specific task type (ToDo, Deadline or Event)","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"xiongjya"},"content":"     * into the TaskList. Prints the total number of tasks in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"xiongjya"},"content":"     * after.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"xiongjya"},"content":"     * @param t The type of Task","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Task (including date for Deadline/Event)","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"xiongjya"},"content":"    public void addTask(taskType t, String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"xiongjya"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"xiongjya"},"content":"            Task recentlyAdded \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"xiongjya"},"content":"            switch (t) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"xiongjya"},"content":"            case ToDo:","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"xiongjya"},"content":"                if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"xiongjya"},"content":"                    recentlyAdded \u003d ToDo.addToDo(\"\", false);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"xiongjya"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d ToDo.addToDo(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"xiongjya"},"content":"            case Deadline:","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d Deadline.addDeadline(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"xiongjya"},"content":"            case Event:","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"xiongjya"},"content":"                recentlyAdded \u003d Event.addEvent(arr[1], false);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"xiongjya"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"xiongjya"},"content":"            this.tasks.add(recentlyAdded);","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"xiongjya"},"content":"            this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"xiongjya"},"content":"            String taskCount \u003d \"Now you have \" + count + \" task(s) in the list!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"xiongjya"},"content":"                    + \"Received order! I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"xiongjya"},"content":"                    + \"     \" + recentlyAdded + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"xiongjya"},"content":"                    + taskCount + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"xiongjya"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"xiongjya"},"content":"                    + e","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"xiongjya"},"content":"     * Add a Task of the specific task type (ToDo, Deadline or Event)","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"xiongjya"},"content":"     * into the TaskList. Does not print the total number of tasks in the list after.","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"xiongjya"},"content":"     * @param taskType The type of Task","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Task (including date for Deadline/Event)","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Task is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"xiongjya"},"content":"    public void addTask(String taskType, String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"xiongjya"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"xiongjya"},"content":"            addToDo(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"xiongjya"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"xiongjya"},"content":"            addDeadline(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"xiongjya"},"content":"            addEvent(input, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"xiongjya"},"content":"     * Add a ToDo (Task) to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the ToDo is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"xiongjya"},"content":"    public void addToDo(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"xiongjya"},"content":"            this.tasks.add(ToDo.addToDo(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"xiongjya"},"content":"        } catch (EmptyTaskException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"xiongjya"},"content":"                    + e","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"xiongjya"},"content":"     * Add a Deadline (Task) to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Deadline (including the due date)","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Deadline is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"xiongjya"},"content":"    public void addDeadline(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"xiongjya"},"content":"        this.tasks.add(Deadline.addDeadline(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"xiongjya"},"content":"     * Add an Event (Task) to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the Event (including the event date)","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the Event is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"xiongjya"},"content":"    public void addEvent(String input, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"xiongjya"},"content":"        this.tasks.add(Event.addEvent(input, isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"xiongjya"},"content":"        this.count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"xiongjya"},"content":"     * Mark the indicated task (of the corresponding task number in the","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"xiongjya"},"content":"     * input) as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"xiongjya"},"content":"     * @param input The user input that includes the \"done\" command and number","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"xiongjya"},"content":"     *              of task that user wants to mark as done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"xiongjya"},"content":"    public void markAsDone(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"xiongjya"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"xiongjya"},"content":"            if (index \u003e\u003d count) {","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"xiongjya"},"content":"                throw new IndexOutOfBoundsException(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"xiongjya"},"content":"                Task t \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"xiongjya"},"content":"                t.setAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"xiongjya"},"content":"                String encouragement \u003d \"Good job! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"xiongjya"},"content":"                String reward \u003d \"Bubbles will reward you with a piece of candy.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"xiongjya"},"content":"                System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"xiongjya"},"content":"                        + encouragement + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"xiongjya"},"content":"                        + \"     \" + t + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"xiongjya"},"content":"                        + reward + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"xiongjya"},"content":"                        + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"xiongjya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"xiongjya"},"content":"                    + e","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"xiongjya"},"content":"     * Delete a Task from the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":231,"author":{"gitId":"xiongjya"},"content":"     * @param input The user input that includes the \"delete\" command and number","lastModifiedDate":"2021-08-26"},{"lineNumber":232,"author":{"gitId":"xiongjya"},"content":"     *              of task that user wants to delete permanently","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"xiongjya"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"xiongjya"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"xiongjya"},"content":"            String[] arr \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"xiongjya"},"content":"            int index \u003d Integer.parseInt(arr[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":239,"author":{"gitId":"xiongjya"},"content":"            if (index \u003e\u003d count) {","lastModifiedDate":"2021-08-19"},{"lineNumber":240,"author":{"gitId":"xiongjya"},"content":"                throw new IndexOutOfBoundsException(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":241,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"xiongjya"},"content":"                Task removed \u003d this.tasks.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"xiongjya"},"content":"                count--;","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"xiongjya"},"content":"                String taskCount \u003d \"Now you have \" + count + \" task(s) in the list!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"xiongjya"},"content":"                System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"xiongjya"},"content":"                        + \"Noted! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"xiongjya"},"content":"                        + \"     \" + removed + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"xiongjya"},"content":"                        + taskCount + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"xiongjya"},"content":"                        + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"xiongjya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":253,"author":{"gitId":"xiongjya"},"content":"            System.out.println(SEPARATOR + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"xiongjya"},"content":"                    + e","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"xiongjya"},"content":"                    + SEPARATOR);","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"xiongjya"},"content":"     * Returns the stored array of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"xiongjya"},"content":"     * @return ArrayList of Tasks that are stored in this TaskList Object.","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"xiongjya"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"xiongjya"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":266,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":267,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":267}},{"path":"src/main/java/bubbles/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":" * A child class of Task, representing the tasks without any","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":" * date/time attached to it.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"class ToDo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    private ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     * Act as a public constructor of a ToDo Object, throw an EmptyTaskException","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     * if the input from the user is empty (after the \"todo\" command).","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"     * @param input The description of the ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"     * @param isDone Whether the ToDo is done/completed","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"     * @return The created ToDo Object","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"     * @throws EmptyTaskException Exception thrown when the ToDo description is empty","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    public static ToDo addToDo(String input, boolean isDone) throws EmptyTaskException {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"            throw new EmptyTaskException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"        ToDo item \u003d new ToDo(input, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"        return item;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"     * Format the ToDo Object to store in the hard disk File.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"     * @return String representing the ToDo Object (different from the String representation","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"     *          of the ToDo Task)","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"    public String format() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"        String format \u003d \"T | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"1 | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"            format +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"        format +\u003d this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"        return format;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"     * Return the String representation of the ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"     * @return The String representation of the ToDo.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"        String res \u003d \"[T] [\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"        return res;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":63}},{"path":"src/main/java/bubbles/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":" * A class that deals with interactions with the user,","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":" * mainly accepting user input and echoing back to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":" * through System output.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"     * Echos the user input through printing out the input","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"     * String onto the System output line.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    //deals with interactions with the user","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    public void echo() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"                String farewell \u003d \"Bye-bye! Hope to see you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xiongjya"},"content":"                formatting(farewell);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xiongjya"},"content":"                formatting(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"xiongjya"},"content":"        sc.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"xiongjya"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xiongjya"},"content":"     * Echos the (accepted forms of) user input after formatting,","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"xiongjya"},"content":"     * where the accepted commands are to add ToDo/Deadline/Event tasks,","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"xiongjya"},"content":"     * marking tasks as done, deleting tasks, listing out all of the","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"xiongjya"},"content":"     * tasks and saying good-bye.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"xiongjya"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"xiongjya"},"content":"     * @param storage The Storage Object where the final list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"xiongjya"},"content":"     *                would be updated to, after the Bubbles bot program","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"xiongjya"},"content":"     *                terminates","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"xiongjya"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"xiongjya"},"content":"    public void echoTask(Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"xiongjya"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"xiongjya"},"content":"        TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"xiongjya"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"xiongjya"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"xiongjya"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xiongjya"},"content":"                storage.writeTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xiongjya"},"content":"                String farewell \u003d \"Bye-bye! Hope to see you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xiongjya"},"content":"                formatting(farewell);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"xiongjya"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"xiongjya"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"xiongjya"},"content":"                taskList.taskListener(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xiongjya"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"xiongjya"},"content":"    private static void formatting(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"xiongjya"},"content":"        String separator \u003d \"-----------------------------------------------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"xiongjya"},"content":"        System.out.println(separator + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"xiongjya"},"content":"                + str + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"xiongjya"},"content":"                + separator);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":72}},{"path":"src/test/java/bubbles/BubblesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class BubblesTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":12}},{"path":"src/test/java/bubbles/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    public void testFormatTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        String task \u003d \"E | 1 | meeting with cs2101 groupmates | at 2021-08-25\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        Object[] arr \u003d {\"E\", \"meeting with cs2101 groupmates /at 2021-08-25\", true};","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"        // as we are testing the items in the Object array, we have to test the items in the array one by one","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"        // instead of testing assertEquals() on two arrays, which would definitely return false","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"        // as the two arrays are completely different objects","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"            assertEquals(arr[i], p.formatTask(task)[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":22}},{"path":"src/test/java/bubbles/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"package bubbles.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xiongjya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xiongjya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xiongjya"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xiongjya"},"content":"    // as we are printing out the output, we can test what we sent to System.out.println() for printing","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xiongjya"},"content":"    public void testDeadlineFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xiongjya"},"content":"        Deadline d \u003d Deadline.addDeadline(\"buy groceries /by 2021-08-30\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xiongjya"},"content":"        assertEquals(\"D | 0 | buy groceries | by 2021-08-30\", d.format());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xiongjya"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xiongjya"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xiongjya"},"content":"    public void testDeadlineToString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xiongjya"},"content":"        Deadline d \u003d Deadline.addDeadline(\"complete cs2103t tutorial /by 2021-08-27\", true);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"        assertEquals(\"[D] [X] complete cs2103t tutorial (by: Aug 27 2021)\", d.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xiongjya"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xiongjya"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xiongjya":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xiongjya"},"content":"todo read book","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"xiongjya":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xiongjya"},"content":"java -classpath ..\\bin bubbles.Bubbles \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiongjya":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"xiongjya"},"content":"java -classpath ../bin Bubbles \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xiongjya":1,"-":37}}]
