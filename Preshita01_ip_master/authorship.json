[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    protected String timeToDisplay;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"        int date \u003d Integer.parseInt(by.substring(0, 2));","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        int month \u003d Integer.parseInt(by.substring(3, 5));","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        int year \u003d Integer.parseInt(by.substring(6, 10));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        int hour \u003d Integer.parseInt(by.substring(11, 13));","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        int min \u003d Integer.parseInt(by.substring(14, 16));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"        LocalDateTime taskDate \u003d LocalDateTime.of(year, month, date, hour, min);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        this.timeToDisplay \u003d taskDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"        deadline \u003d taskDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + timeToDisplay + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"    public String toPrintToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"public class Duke {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"            storage.retrieveFileContents();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"            System.err.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    public void run() throws IOException, DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        String instruction \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"        while (!Parser.parseCommand(instruction).equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"                if (Parser.parseCommand(instruction).equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"                    int index \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"                    if (TaskList.getCounter() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"                        System.out.println(\"\\tThere are currently no tasks on your list :)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"                        Parser.parseList();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"                        //printFileContents(\"data/jarvis.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseDone(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseDelete(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseTodo(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseDeadline(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseEvent(instruction);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"                } else if (Parser.parseCommand(instruction).equals(\"today\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"                    Parser.parseToday();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"                    throw new DukeException(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                            \"know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"                System.err.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"----------------------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"            instruction \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"\\t\" + \"Bye! Hope to see you soon :)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"----------------------------------\");","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"    public static void main (String[]args) throws IOException, DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"        new Duke(\"data/jarvis.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Preshita01"},"content":"    private static void printFileContents (String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Preshita01"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Preshita01"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Preshita01"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\" + s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":76}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    protected String message;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        return message;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    protected String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    protected String timeToDisplay;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    protected LocalDateTime eventTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"        int date \u003d Integer.parseInt(time.substring(0, 2));","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        int month \u003d Integer.parseInt(time.substring(3, 5));","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        int year \u003d Integer.parseInt(time.substring(6, 10));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        int hour \u003d Integer.parseInt(time.substring(11, 13));","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        int min \u003d Integer.parseInt(time.substring(14, 16));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"        LocalDateTime taskDate \u003d LocalDateTime.of(year, month, date, hour, min);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        this.timeToDisplay \u003d taskDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"        eventTime \u003d taskDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"    public LocalDateTime getEventTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        return this.eventTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timeToDisplay + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"    public String toPrintToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"    public static void Parser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"    public static String parseCommand(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"        String keyWord \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"done\";","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"delete\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"today\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"today\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        } else if (command.startsWith(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"            keyWord \u003d \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"        return keyWord;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    public static void parseDone(String instruction) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"        int taskNum \u003d Integer.parseInt(instruction.substring(5)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"        if (taskNum \u003e\u003d TaskList.getCounter()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"            throw new DukeException(\"\\tHmm, I don\u0027t have task \" + (taskNum + 1) +","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"                    \" in my list. Please key in \u0027list\u0027 if you\u0027d like to \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"                    \"view your list of tasks again!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"            TaskList.getTaskList().get(taskNum).markAsDoneAndUpdate();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\tGood job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\\t\" + TaskList.getTaskList().get(taskNum).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"    public static void parseDelete(String instruction) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"        int taskNum \u003d Integer.parseInt(instruction.substring(7)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"        if (taskNum \u003e\u003d TaskList.getCounter()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"            throw new DukeException(\"\\tHmm, I don\u0027t have task \" + (taskNum + 1) +","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"                    \" in my list. Please key in \u0027list\u0027 if you\u0027d like to \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"                    \"view your list of tasks again!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\tNoted. I\u0027ve removed this task from your main list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\\t\" + TaskList.getTaskList().get(taskNum).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"            TaskList.deleteTaskAndUpdate(TaskList.getTaskList().get(taskNum));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\tNow you have \" + TaskList.getCounter() +","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                    \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"    public static void parseTodo(String instruction) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"        if (instruction.length() \u003c 5) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"            throw new DukeException(\"\\tOOPS!!! The description of a todo \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"                    \"cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"            String taskDescription \u003d instruction.substring(4);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"            Todo newTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"            TaskList.addTaskAndUpdate(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\tGot it! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\\t\" + newTodo.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\tNow you have \" + TaskList.getCounter() +","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Preshita01"},"content":"                    \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Preshita01"},"content":"    public static void parseDeadline(String instruction) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Preshita01"},"content":"        if (instruction.length() \u003c 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Preshita01"},"content":"            throw new DukeException(\"\\tOOPS!!! The description of a deadline \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Preshita01"},"content":"                    \"cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Preshita01"},"content":"            String taskDescription \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Preshita01"},"content":"            int currIndex \u003d 8;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Preshita01"},"content":"            while (currIndex \u003c instruction.length() \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Preshita01"},"content":"                    !instruction.substring(currIndex).startsWith(\" /\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Preshita01"},"content":"                taskDescription +\u003d instruction.substring(currIndex, currIndex + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Preshita01"},"content":"                currIndex++;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Preshita01"},"content":"            if (currIndex \u003d\u003d instruction.length() ||","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Preshita01"},"content":"                    currIndex + 5 \u003e\u003d instruction.length()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"I think you forgot to key in your deadline! Please key it\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Preshita01"},"content":"                        \" in as dd/mm/yyyy hh:mm (in 24 hours format)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Preshita01"},"content":"            } else if (instruction.charAt(currIndex + 7) !\u003d \u0027/\u0027 \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"Preshita01"},"content":"                    instruction.charAt(currIndex + 10) !\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"Please format the date as dd/mm/yyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Preshita01"},"content":"            } else if (instruction.substring(currIndex).length() \u003c 20){","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"Please include the time in the 24 hour \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Preshita01"},"content":"                        \"format (e.g. 15:00)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Preshita01"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Preshita01"},"content":"                String by \u003d instruction.substring(currIndex + 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"Preshita01"},"content":"                Task newDeadline \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Preshita01"},"content":"                TaskList.addTaskAndUpdate(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\tGot it! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\t\\t\" + newDeadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\tNow you have \" + TaskList.getCounter() +","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Preshita01"},"content":"                        \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Preshita01"},"content":"    public static void parseEvent(String instruction) throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Preshita01"},"content":"        if (instruction.length() \u003c 7) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Preshita01"},"content":"            throw new DukeException(\"\\tOOPS!!! The description of a event \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"Preshita01"},"content":"                    \"cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"Preshita01"},"content":"            String taskDescription \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Preshita01"},"content":"            int currIndex \u003d 5;","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Preshita01"},"content":"            while (currIndex \u003c instruction.length() \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Preshita01"},"content":"                    !instruction.substring(currIndex).startsWith(\" /\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Preshita01"},"content":"                taskDescription +\u003d instruction.substring(currIndex, currIndex + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"Preshita01"},"content":"                currIndex++;","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Preshita01"},"content":"            if (currIndex \u003d\u003d instruction.length() ||","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Preshita01"},"content":"                    currIndex + 5 \u003e\u003d instruction.length()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"\\tI think you forgot to key in your event timing!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"Preshita01"},"content":"            } else if (instruction.charAt(currIndex + 7) !\u003d \u0027/\u0027 \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Preshita01"},"content":"                    instruction.charAt(currIndex + 10) !\u003d \u0027/\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"Please format the date as dd/mm/yyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"Preshita01"},"content":"            } else if (instruction.substring(currIndex).length() \u003c 20){","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Preshita01"},"content":"                throw new DukeException(\"Please include the time in the 24 hour \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Preshita01"},"content":"                        \"format (e.g. 15:00)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Preshita01"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Preshita01"},"content":"                String by \u003d instruction.substring(currIndex + 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Preshita01"},"content":"                Task newEvent \u003d new Event(taskDescription, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Preshita01"},"content":"                TaskList.addTaskAndUpdate(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\tGot it! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\t\\t\" + newEvent.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\tNow you have \" + TaskList.getCounter() +","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Preshita01"},"content":"                        \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Preshita01"},"content":"    public static void parseList() throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"Preshita01"},"content":"        int num \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"Preshita01"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTaskList().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\" + num + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Preshita01"},"content":"                    TaskList.getTaskList().get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"Preshita01"},"content":"            num++;","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"Preshita01"},"content":"    public static void parseToday() throws DukeException, IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"\\tTasks scheduled for today are: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"Preshita01"},"content":"        int num \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"Preshita01"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTaskList().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"Preshita01"},"content":"            if (TaskList.getTaskList().get(i) instanceof Todo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"Preshita01"},"content":"                System.out.println(\"\\t\\t\" + num + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"Preshita01"},"content":"                        TaskList.getTaskList().get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"Preshita01"},"content":"                num++;","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"Preshita01"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"Preshita01"},"content":"                int currYear \u003d LocalDateTime.now().getYear();","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"Preshita01"},"content":"                int currMonth \u003d LocalDateTime.now().getMonthValue();","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"Preshita01"},"content":"                int currDate \u003d LocalDateTime.now().getDayOfMonth();","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"Preshita01"},"content":"                LocalDateTime start \u003d LocalDateTime.of(currYear, currMonth, currDate, 0, 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"Preshita01"},"content":"                LocalDateTime end \u003d LocalDateTime.of(currYear, currMonth, currDate, 23, 59);","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"Preshita01"},"content":"                if (TaskList.getTaskList().get(i) instanceof Deadline \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"Preshita01"},"content":"                        (((Deadline) TaskList.getTaskList().get(i)).getDeadline()).isAfter(start) \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"Preshita01"},"content":"                        (((Deadline) TaskList.getTaskList().get(i)).getDeadline()).isBefore(end)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"Preshita01"},"content":"                    System.out.println(\"\\t\\t\" + num + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"Preshita01"},"content":"                            TaskList.getTaskList().get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"Preshita01"},"content":"                    num++;","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"Preshita01"},"content":"                } else if (TaskList.getTaskList().get(i) instanceof Event \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"Preshita01"},"content":"                        (((Event) TaskList.getTaskList().get(i)).getEventTime()).isAfter(start) \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"Preshita01"},"content":"                        (((Event) TaskList.getTaskList().get(i)).getEventTime()).isBefore(end)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"Preshita01"},"content":"                    System.out.println(\"\\t\\t\" + num + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"Preshita01"},"content":"                            TaskList.getTaskList().get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"Preshita01"},"content":"                    num++;","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"Preshita01"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"Preshita01"},"content":"            System.out.println(\"\\t\\tLooks like there is nothing due today!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":184}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    protected String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"            dir.mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"            File tmp \u003d new File(dir, \"jarvis.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"            tmp.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"            System.err.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    public void retrieveFileContents() throws FileNotFoundException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"            String currLine \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"            currLine \u003d currLine.substring(2);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"            if (currLine.startsWith(\"[T]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"                String description \u003d \" \" + currLine.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"                Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"                TaskList.addTask(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                if (currLine.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"                    newTodo.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"            } else if (currLine.startsWith(\"[D]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"                int currIndex \u003d 7;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"                while (!currLine.substring(currIndex).startsWith(\"by: \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"                    currIndex++;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"                String description \u003d \" \" + currLine.substring(7, currIndex - 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"                String by \u003d currLine.substring(currIndex + 4, currLine.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"                Task newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"                TaskList.addTask(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"                if (currLine.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"                    newDeadline.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"            } else if (currLine.startsWith(\"[E]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"                int currIndex \u003d 7;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"                while (!currLine.substring(currIndex).startsWith(\"at: \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                    currIndex++;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"                String description \u003d \" \" + currLine.substring(7, currIndex - 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"                String by \u003d currLine.substring(currIndex + 4, currLine.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                Task newEvent \u003d new Event(description, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"                TaskList.addTask(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"                if (currLine.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"                    newEvent.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":63}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    public void markAsDoneAndUpdate() throws IOException{","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        for (int i \u003d 0; i \u003c TaskList.getTaskList().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"                //writeToFile(\"data/jarvis.txt\", i + \".\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"                writeToFile(\"data/jarvis.txt\", (i + 1) + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"                        TaskList.getTaskList().get(i).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"                //appendToFile(\"data/jarvis.txt\", i + \".\" );","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                appendToFile(\"data/jarvis.txt\", (i + 1) + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"                        TaskList.getTaskList().get(i).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"    public String toPrintToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"        return this.getStatusIcon() + this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    private static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    private static int counter;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        counter \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        return TaskList.taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"    public static int getCounter() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"        return TaskList.counter;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"    public static void addTask(Task currTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"        TaskList.taskList.add(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"        TaskList.counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    public static void addTaskAndUpdate(Task currTask) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"        TaskList.taskList.add(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"        TaskList.counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"        appendToFile(\"data/jarvis.txt\", (counter) + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"                TaskList.getTaskList().get(counter - 1).toPrintToFile()","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"    public static void deleteTask(Task currTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"        TaskList.taskList.remove(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Preshita01"},"content":"        TaskList.counter--;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Preshita01"},"content":"    public static void deleteTaskAndUpdate(Task currTask) throws IOException{","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Preshita01"},"content":"        TaskList.taskList.remove(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Preshita01"},"content":"        counter--;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Preshita01"},"content":"        if (TaskList.getTaskList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Preshita01"},"content":"            writeToFile(\"data/jarvis.txt\", \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Preshita01"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Preshita01"},"content":"            for (int i \u003d 0; i \u003c TaskList.getTaskList().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Preshita01"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Preshita01"},"content":"                    writeToFile(\"data/jarvis.txt\", (i + 1) + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Preshita01"},"content":"                            TaskList.getTaskList().get(i).toPrintToFile()","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Preshita01"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Preshita01"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Preshita01"},"content":"                    appendToFile(\"data/jarvis.txt\", (i + 1) + \".\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Preshita01"},"content":"                            TaskList.getTaskList().get(i).toPrintToFile()","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Preshita01"},"content":"                            + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Preshita01"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Preshita01"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Preshita01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Preshita01"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Preshita01"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Preshita01"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Preshita01"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Preshita01"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Preshita01"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Preshita01"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Preshita01"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":72}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    public String toPrintToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":16}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"                \"       __       ___      .______     ____    ____  __       _______.\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"                \"      |  |     /   \\\\     |   _  \\\\    \\\\   \\\\  /   / |  |     /       |\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"                \"      |  |    /  ^  \\\\    |  |_)  |    \\\\   \\\\/   /  |  |    |   (----`\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"                \".--.  |  |   /  /_\\\\  \\\\   |      /      \\\\      /   |  |     \\\\   \\\\    \\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"                \"|  `--\u0027  |  /  _____  \\\\  |  |\\\\  \\\\----.  \\\\    /    |  | .----)   |   \\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"                \" \\\\______/  /__/     \\\\__\\\\ | _| `._____|   \\\\__/     |__| |_______/    \\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"                \"                                                                    \\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"----------------------------------\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"Hi! I am Jarvis, your personal assistant :)\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        System.out.println(\"----------------------------------\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"import duke.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"import duke.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"    public void todoCreation_todoTask_success(){","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"        assertEquals(new Todo(\" return book\").toString(), \"[T][ ] return book\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"    public void eventCreation_eventTask_success(){","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"        assertEquals(new Event(\" return book\", \"23/08/2021 17:00\").toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"                \"[E][ ] return book (at: 23 Aug 2021 17:00)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Preshita01"},"content":"    public void deadlineCreation_deadlineTask_success(){","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Preshita01"},"content":"        assertEquals(new Deadline(\" return book\", \"23/08/2021 17:00\").toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Preshita01"},"content":"                \"[D][ ] return book (by: 23 Aug 2021 17:00)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Preshita01"},"content":"    public void deadlinePrintToFile_deadlineTask_success(){","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Preshita01"},"content":"        assertEquals(new Deadline(\" return book\", \"23/08/2021 17:00\").toPrintToFile(),","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Preshita01"},"content":"                \"[D][ ] return book (by: 23/08/2021 17:00)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Preshita01"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Preshita01"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Preshita01"},"content":"    public void parseCommand_doneTask_success() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Preshita01"},"content":"        assertEquals(Parser.parseCommand(\"done 1\"), \"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Preshita01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Preshita01"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Preshita01":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Preshita01"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Preshita01"},"content":"todo return book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Preshita01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Preshita01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Preshita01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Preshita01"},"content":"event watch movie /at Sat 9-11.30pm","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Preshita01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Preshita01"},"content":"todo buy groceries","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Preshita01"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Preshita01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Preshita01"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Preshita01"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Preshita01"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Preshita01"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Preshita01"},"content":"deadline go fishing /by Friday","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Preshita01"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Preshita01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Preshita01"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Preshita01":18}}]
