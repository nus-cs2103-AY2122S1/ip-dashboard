{"authorDailyContributionsMap":{"Preshita01":[{"date":"2021-08-18","commitResults":[{"hash":"062f1bb78011a09f747f1d931e0954e5d796442c","messageTitle":"Add greet, echo and exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"a8ef9eb590c3179dbebca9139b8e4ae10883efc1","messageTitle":"Add ability to store input by users and display them back when required","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"2463ac901892249a64f94411d1052aaefee9e63e","messageTitle":"Add Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":0}}},{"hash":"f2a4d12e9f0fc0943c6c2d5d3323b97b9f2e5653","messageTitle":"Add mark as done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":13}}},{"hash":"6d7d25a767534b50081226fa9287a90c26fb8877","messageTitle":"Add Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"d25aa6480b7b438d8ec425b6b0913550c61011e7","messageTitle":"Add Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"bb971f0818238741d103c177848b3ffece956e82","messageTitle":"Add Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"eebcd2ca6c5a68ce20d8940c583ef8bc0ce7c8c5","messageTitle":"Add ToDos, Events and Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":7}}},{"hash":"1563a4f9ac24367d4901459019999937b89317d9","messageTitle":"Add indents","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":67,"deletions":65}}},{"hash":"35c291b8c50f5a7d2a8d5859d92998ccd93aea4b","messageTitle":"Add test cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0}}},{"hash":"ee8faf7650776cda0c5b5a05d02ee8585f11c6b1","messageTitle":"Add DukeException.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"5e885fa3a14dbf63d3232b7dec6eb3370a562dd9","messageTitle":"Add invalid and incomplete instructions exceptions","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":78}}}]},{"date":"2021-08-19","commitResults":[{"hash":"7f87fff551e07ea230b1e19f1c8e7489ef106df7","messageTitle":"Replace Task array with ArrayList\u003cTask\u003e","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"1da561c59018d3c90621436650cb6c3c4a00e366","messageTitle":"Add delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"a53c66b74738571481789cf6e26157fb23f16f92","messageTitle":"Remove unwanted space in return statement for toString","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"995f9c69c418b63b85c8f9934efd3367ab1540d1","messageTitle":"Change chatbot name to Jarvis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":8}}},{"hash":"bbdb993299b5a5e4de3209ec81f184a7c8f5da4d","messageTitle":"Add delete test case","messageBody":"","tags":["Level-6.1"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0}}},{"hash":"b2f54f6d76b8c8a564f587faa28a0f9ecf45ca84","messageTitle":"Rename to Jarvis.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":11}}},{"hash":"96d17bee12ede49a8b72bc0ef8d8da0826b1d66e","messageTitle":"Rename to JarvisException.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"4ed11e2da43adb59750afd0cd9f12dd1261e4fa8","messageTitle":"Rename file back to DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"7328cec7f9e403ed39b887442088dc358fe1e9b7","messageTitle":"Rename file back to Duke.java and edit some print statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":140}}}]},{"date":"2021-08-21","commitResults":[{"hash":"bad87a56f13e066c367dd1b933bbb254434699cf","messageTitle":"Remove unnecessary space","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":114}}},{"hash":"b842b323adf52fce9b95d5be8e6cbc8df23234d3","messageTitle":"Remove unnecessary space","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]},{"date":"2021-08-23","commitResults":[{"hash":"039dbec6dd2477f9348214d61bc04703d2f1dd59","messageTitle":"Change \u0027by\u0027 to \u0027at\u0027 for event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":0}}},{"hash":"db59f90c078e9ae76b72d128641f2dd7dc5d2761","messageTitle":"Change \u0027by\u0027 to \u0027at\u0027 for event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b5ba5d2b49cfc0ee7fab279fe25f0cea92790632","messageTitle":"Restore Task.java to Level-6 version","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":55}}},{"hash":"4355b2fbef95a24db071b5d43bb2c62c5082f817","messageTitle":"Add additional add, markAsDone and delete functions to indicate when overwrite tasks saved on hard disk","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":0}}},{"hash":"e97dc17eab73dbb1c73893203a090356cfe37deb","messageTitle":"Save the tasks in the hard disk automatically whenever the task list changes","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":11}}},{"hash":"a46a9076b226a04bf4ef72818d8c21fea2ab1ec7","messageTitle":"Store deadline as a LocalDateTime object in Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"7a71a3b6315a7a926dbf73470435a7ec0dad568a","messageTitle":"Add new error messages for wrongly formatted deadline inputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}},{"hash":"1298dfd208f845e956df0ab71b5b87e394593fa2","messageTitle":"Store event time as a LocalDateTime object in Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"8a602551219ba12be0f0df476f178273ca8dbec2","messageTitle":"Add new error messages for wrongly formatted event times","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"63f6c69f9cdd9b65bf4b63d5c4751405fd003201","messageTitle":"Add getDeadline to retrieve the deadline as a LocalDateTime object in Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"153ce7bcd06c0a6081b5e8a378bdcfbb0ca6ae9e","messageTitle":"Add getEventTime to retrieve the event time as a LocalDateTime object in Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"f30cd7bb7fa364ed830a8716f6011a7567f000ae","messageTitle":"Add \u0027today\u0027 command to retrieve tasks for the current day","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":1}}},{"hash":"019b978e2766f5bab834cff414496b05346a8f56","messageTitle":"Add toPrintToFile() to differentiate between 2 types of date time stamps used","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"a2c007e8fcb53bf62ecaa6027729a8c38b8cc750","messageTitle":"Add toPrintToFile() to differentiate between 2 types of date time stamps used","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":1}}},{"hash":"53644bced1d451b7e8ab10d9c956e9f6eb01f809","messageTitle":"Add toPrintToFile() to differentiate between 2 types of date time stamps used","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"b3b0787034177043955d8dbec1f36f0ea31398de","messageTitle":"Add toPrintToFile() to differentiate between 2 types of date time stamps used","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":51}}},{"hash":"78f10e8f6fa3c44a66b3019034a070193fb3f5cb","messageTitle":"Add Parser.java to deal with making sense of the user command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":183,"deletions":0}}},{"hash":"d4f824d6e71f8e2b8fe711bcd42497a5e437f044","messageTitle":"Add Storage.java to deal with loading tasks from the file and saving tasks in the file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":0}}},{"hash":"6880682f775cd8242ef07ca46a02089a457402fa","messageTitle":"Add TaskList.java to contain the task list and other list functions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":0}}},{"hash":"56c61e6e237cd6c6ae32a16f201bc18053aaf020","messageTitle":"Add Ui.java to deal with interactions with the user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"a778528874fcb47ff3da25b337e271f9cb27498f","messageTitle":"Refactor the code to extract out closely related code as classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":223}}},{"hash":"4989c06128905169fe8ad3845a6d292e84558df0","messageTitle":"Refactor code into \u0027duke\u0027 package","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"48725763b3e9e3f730068b959f1d9044a5e1b105","messageTitle":"Add DukeTest.java","messageBody":"","tags":["v1.0","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"dfcc0e0d4596024ba16a2c110667dc318aaef4cd","messageTitle":"Add getDescription() function in Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"a37b20f9c7d74c5bece9ef11d1cc2496980e453a","messageTitle":"Add parseFind() function for new \u0027find\u0027 command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":0}}},{"hash":"7817a9423ce3ade12a912278815800934aa0bda8","messageTitle":"Add \u0027find\u0027 command","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2021-08-24","commitResults":[{"hash":"4b1c9bc4584fc81b0038a52fe62303cac88c8c2b","messageTitle":"Add documentation for all java methods","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":275,"deletions":7}}},{"hash":"fa3f0c29491bcfa6641a238a3a6248bc53af1653","messageTitle":"Tweak code to comply with a coding standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":16}}}]},{"date":"2021-08-30","commitResults":[{"hash":"a8b74e71cf7ae56453eeafe8bf484f567aa6b22e","messageTitle":"Add Gradle to automate running of unit tests","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"bat":{"insertions":103,"deletions":103}}},{"hash":"b6ce3ce98efffe5ec5471131c23e2123a6b45bdc","messageTitle":"Change toString() to toPrintToFile() in Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2021-08-31","commitResults":[{"hash":"8f2d8844f4b182c328cf9e01e93fd4ff3ef4d7ec","messageTitle":"Add Main.java to create a GUI using FXML","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"30ba8504ab667fbccae9b4ab081b4467d4246170","messageTitle":"Add DialogBox.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":0}}},{"hash":"456dcbfc05d72d2f7db441cc3f9ed90bdf1145d4","messageTitle":"Add MainWindow.fxml","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":24,"deletions":0}}},{"hash":"32ee5a4bba080b530909a99ab366076cc4f8bd9e","messageTitle":"Add DialogBox.fxml","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":18,"deletions":0}}},{"hash":"283ee952257a7d01e6a9bcd4959194e758184f78","messageTitle":"Add MainWindow.java as the controller class specified in MainWindow.fxml","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":0}}},{"hash":"04420e38d21140f9facc39feb148931fc39c8374","messageTitle":"Add Launcher.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"b3fe607476613d606e9f8a8741a2f1731d955523","messageTitle":"Add getResponse() method in Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":43}}},{"hash":"a110f31d55cf6d0218217e0bdcc9006e0beed8af","messageTitle":"Modify all methods to return strings in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":45}}},{"hash":"cf034c6def19ccac1c3d5a5250013d3679b86ec7","messageTitle":"Add more dependencies to create GUI","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"9e05c6edb37e3fbf5455a86ad783d24915532b43","messageTitle":"Rectify Event.java to record both the start and end times of an event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":10}}},{"hash":"c837954857b996cf2c6c9cb3055315dea6fb5e9a","messageTitle":"Modify parseToday() to check that task ends before the end of the day","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":5}}},{"hash":"e821fbc1ea623b8f9488e94f70073de100b656bb","messageTitle":"Add a greeting at the start","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":4,"deletions":0}}},{"hash":"4b070d8fdc427e1a0c988f1eeaf500aa2aa10a96","messageTitle":"Add a greeting at the start","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"605f0f567adf4e3bc2978900eee425a54c1427e3","messageTitle":"Add JavaDoc for initialize() in MainWindow.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"7901b0d49cdb2c871d75f629e28d3b9f028ae371","messageTitle":"Remove unused import statement","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":0,"deletions":1}}}]},{"date":"2021-09-05","commitResults":[{"hash":"75cd6261768b7bd873170267c06b9f79364c0f8c","messageTitle":"Change \u0027preHeight\u0027 to \u0027maxHeight\u0027 to allow all of user\u0027s tasks to be displayed","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"e7ba3b5f61839439174bf61d8c410be0a1e8ba8f","messageTitle":"Add more dependencies to pack JavaFX libraries into a generated JAR file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0}}},{"hash":"6f8e104825d107db4228780c9c6afe7fa0177230","messageTitle":"Add java asserts","messageBody":"Java asserts helps to check and document important assumptions that\nshould hold at various points in the code.\n\nThis is useful as programmers can be alerted if they are breaching\nthese assumptions elsewhere in the code.\n\nLet\u0027s,\n* include more java asserts for methods create task objects based on\nthe user input to check if the given details are valid/sensible\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":3}}},{"hash":"8f86a296fcca64418e2e1ccb7535cb4c89dbc495","messageTitle":"Code quality: structure code logically and add empty line between description and parameter section in javadoc comments","messageBody":"The body of most methods is written as one block with no line breaks\nin between to identify the various parts of the body that handle\ndifferent parts of the logic. There is also no empty line between the\ndescription and parameter section in javadoc comments.\n\nGrouping method bodies according to the logic they handle and adding\nline breaks to separate the parts improves readability of the code.\nAdding empty lines between the description and parameter section of the\njavadoc comments also improve readability.\n\nLet\u0027s,\n* group method bodies according to the logic they handle and add line\nbreaks to separate the parts\n* add empty lines between the description and parameter section of the\njavadoc comments\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"1089f26400fd1f1edb0b40b2c43b079f65092425","messageTitle":"Code quality: add empty line between description and parameter section in javadoc comments","messageBody":"There is no empty line between the description and parameter section in\njavadoc comments.\n\nAdding empty lines between the description and parameter section of the\njavadoc comments also improve readability.\n\nLet\u0027s,\n* add empty lines between the description and parameter section of the\njavadoc comments\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"a059863d29112206208fffbfc852fbc01433c49b","messageTitle":"Code quality: structure code logically, add more guiding comments, add empty line between description and parameter section in javadoc comments","messageBody":"The body of most methods is written as one block with no line breaks\nin between to identify the various parts of the body that handle\ndifferent parts of the logic. Comments are also minimal, which makes it\nhard to easily understand the logic of the code.There is also no empty\nline between the description and parameter section in javadoc comments.\n\nGrouping method bodies according to the logic they handle and adding\nline breaks to separate the parts improves readability of the code.\nAdding more guiding comments and empty lines between the description and\nparameter section of the javadoc comments also improve readability.\n\nLet\u0027s,\n* group method bodies according to the logic they handle and add line\nbreaks to separate the parts\n* add more in-line comments for non-trivial lines of code\n* add empty lines between the description and parameter section of the\njavadoc comments\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":2}}},{"hash":"00344b0a32401c88fa6333025ba2023dbf63a56d","messageTitle":"Code quality: add empty line between description and parameter section in javadoc comments","messageBody":"There is no empty line between the description and parameter section in\njavadoc comments.\n\nAdding empty lines between the description and parameter section of the\njavadoc comments also improve readability.\n\nLet\u0027s,\n* add empty lines between the description and parameter section of the\njavadoc comments\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":5}}},{"hash":"3fc33835302163d9c1d6bf74c46c04d1b7c28472","messageTitle":"Code quality: add empty line between description and parameter section in javadoc comments","messageBody":"There is no empty line between the description and parameter section in\njavadoc comments.\n\nAdding empty lines between the description and parameter section of the\njavadoc comments also improves readability.\n\nLet\u0027s,\n* add empty lines between the description and parameter section of the\njavadoc comments\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":5}}},{"hash":"70f7986bd40ec6549a2ef16534cda6e2b4ceb65a","messageTitle":"Code quality: structure code logically and store string outputs as constants","messageBody":"The body of most methods is written as one block with no line breaks\nin between to identify the various parts of the body that handle\ndifferent parts of the logic. Specific strings at different parts of the\ncode also makes it harder to understand why the string is returned\nthere, as well as to modify it.\n\nGrouping method bodies according to the logic they handle and adding\nline breaks to separate the parts improves readability of the code.\nStoring the strings to be returned as aptly-named constants and then\ncalling on the constants themselves makes it easier to understand and\nmodify the strings.\n\nLet\u0027s,\n* group method bodies according to the logic they handle and add line\nbreaks to separate the parts\n* add private constants outside of the methods and assign them to the\nvarious string outputs\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":30}}},{"hash":"f9340a63766a1077893379f8c746a04558e0627b","messageTitle":"Code quality: structure code logically, store string outputs as constants, add empty line between description and parameter section in javadoc comments and add more guiding comments","messageBody":"The body of most methods is written as one block with no line breaks\nin between to identify the various parts of the body that handle\ndifferent parts of the logic. Specific strings at different parts of the\ncode also makes it harder to understand why the string is returned\nthere, as well as to modify it. There is also no empty line between the\ndescription and parameter section in javadoc comments. Comments are\nalso minimal, which makes it hard to easily understand the logic of the\ncode.\n\nGrouping method bodies according to the logic they handle and adding\nline breaks to separate the parts improves readability of the code.\nStoring the strings to be returned as aptly-named constants and then\ncalling on the constants themselves makes it easier to understand and\nmodify the strings. Adding more guiding comments and empty lines between\nthe description and parameter section of the javadoc comments also\nimprove readability. Adding more guiding comments and empty lines\nbetween the description and parameter section of the javadoc comments\nalso improve readability.\n\nLet\u0027s,\n* group method bodies according to the logic they handle and add line\nbreaks to separate the parts\n* add private constants outside of the methods and assign them to the\nvarious string outputs\n* add empty lines between the description and parameter section of the\njavadoc comments\n* add more in-line comments for non-trivial lines of code\n","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":25}}}]},{"date":"2021-09-06","commitResults":[{"hash":"2084469dc7617adb67e7a739c285f245f5d26cd8","messageTitle":"Add Note.java to store user notes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":0}}},{"hash":"ecbf78dbb1cdf3624ae720e285078a6c5ca7df84","messageTitle":"Add NoteList.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":113,"deletions":0}}},{"hash":"4454a1a1968333fd7d7c11fbc7299d04c4091206","messageTitle":"Create a duke object using filepath to user tasks and notes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"f5632b54f09f6252ad1f0242546d1667d0a800f7","messageTitle":"Note class: add parse methods for notes","messageBody":"Since the \u0027Note\u0027 class is a new addition to allow users to store their\nnotes using Jarvis, there are no methods to manipulate user inputs for\ncreating or deleting notes.\n\nParse methods for the \u0027Note\u0027 class are needed to create and delete note\nobjects.\n\nLet\u0027s,\n* add basic parse methods for notes, such as \u0027parseNote\u0027 and\n\u0027parseDeleteNote\u0027\n","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"d594db2648cdb57fa75dda3e3e58f43ef52a9681","messageTitle":"Modify constructor to retrieve user notes and modify \u0027getResponse()\u0027 to recognise \u0027note\u0027, \u0027notes\u0027 and \u0027delete note\u0027 commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":6}}},{"hash":"1552e60dace4b6d50fb781314687a6cb39b9c426","messageTitle":"Modify Storage constructor to create a file in user\u0027s hard disk to store users\u0027 notes and modify \u0027retrieveFileContents()\u0027 to retrieve these notes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":35}}}]},{"date":"2021-09-13","commitResults":[{"hash":"fb403ced0919d8963eb3dedf9b1e5d1755e95f76","messageTitle":"Refactor code by shifting any output strings by Jarvis to Ui.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":48}}},{"hash":"47458ab3e8366b6693a0718e1943118a34ef79c6","messageTitle":"Refactor code by shifting Jarvis\u0027 first greeting to the user to Ui.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"d57c812a70aaae8723e6bbd54814cda311f12b02","messageTitle":"Refactor code by shifting any output strings by Jarvis to Ui.java and any writings to the note file in user\u0027s hard disk to Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":43}}},{"hash":"5a6d8317e98566df9c861c2c64e13c33db56c899","messageTitle":"Refactor code by shifting any output strings by Jarvis to Ui.java and any writings to the note file in user\u0027s hard disk to Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":171}}},{"hash":"3030e8a337b7e9b8038d165d26a1227526493024","messageTitle":"Refactor code by including all writings to the task and note files in user\u0027s hard disk to Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":99,"deletions":1}}},{"hash":"75cc0ad51efe2f5dc42234b939dd6d4bc795b0da","messageTitle":"Refactor code by shifting any writings to the task file in user\u0027s hard disk to Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":22}}},{"hash":"5e39c3184853888310a3417c01b79f2597ed789a","messageTitle":"Refactor code by shifting any output strings by Jarvis to Ui.java and any writings to the task file in user\u0027s hard disk to Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":44}}},{"hash":"d2aed42e8d3c8dfd0e7e8462ceeaed97ec0b17c0","messageTitle":"Refactor code by shifting any output strings by Jarvis to Ui.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":183,"deletions":17}}},{"hash":"83dd2272910c3afd658288bf21d53a3355e62e25","messageTitle":"Change the header comments for javadoc comments for methods to start in the form of \u0027returns\u0027, \u0027creates\u0027, etc.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"88d668383d88b678dc6ab0247990cc7922631336","messageTitle":"Add javadoc comments and change the header comments of the javadoc comments for methods such that they starts from \u0027returns\u0027, \u0027creates\u0027, etc.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":3}}},{"hash":"251f43213a1851aa28ae6e9d1ed40fd87e8fefb9","messageTitle":"Add javadoc comments and shift any outputs by Jarvis to Ui.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":13}}},{"hash":"85a6c777f41bb9c91ab67cd44346d68c61af6d72","messageTitle":"Add in-line comments and change the header comments of the javadoc comments for methods such that they starts from \u0027returns\u0027, \u0027creates\u0027, etc.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":19}}},{"hash":"e7da2601f3cccf2d7ea28eabedcb4ca2d679abf4","messageTitle":"Add javadoc comments and in-line comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"b71a627db106cf01c300449a9b4b64bb49839d47","messageTitle":"Add javadoc comments and in-line comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":13}}},{"hash":"8848922ca7adcc0cfefc88ec2195c58fa954885e","messageTitle":"Format the header comments of the javadoc comments for the methods in this class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}}]},{"date":"2021-09-14","commitResults":[{"hash":"2438246d8724c3626a2ab7d92cd399cc6ac938a8","messageTitle":"Add javadoc comments and in-line comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":15}}},{"hash":"9a3a83846e6466afb78024164c8d5b28e68cfcb3","messageTitle":"Add javadoc comments and in-line comments. Refactor code by shifting any outputs by Jarvis to Ui.java.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":75}}},{"hash":"3ee96fb6514101874f75f6bf715e7d2d2d0b0863","messageTitle":"Add javadoc and in-line comments. Refactor code by abstracting chunks of a long method to improve readability.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":58}}},{"hash":"6416cac9a0064076704ba7aea01746a653d3ddd5","messageTitle":"Change the header comments of the javadoc comments for methods such that they starts from \u0027returns\u0027, \u0027creates\u0027, etc.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":35}}},{"hash":"a7f8a6262298bd4f4c789beec27aa0d0f07efac9","messageTitle":"Add javadoc comments and change the header comments of the javadoc comments for methods such that they starts from \u0027returns\u0027, \u0027creates\u0027, etc.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":8}}},{"hash":"bb86ba56d73285158264bbfe50e7717637f1689a","messageTitle":"Add a space between the header comments and parameter description for javadoc comments for the methods.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"4703554c3fed555778eb348f1a8c6138612cd687","messageTitle":"Add javadoc and in-line comments.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":9}}},{"hash":"88a3803760e4954d986a881e1ce792fd32e39862","messageTitle":"Change retrieveTaskFileContents() to retrieveNoteFileContents()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"8c5c781aa35c5abadddc51de057fbda90e9aa105","messageTitle":"Add a space between package and import lines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"1aec22720baa28ec3633fdbbec564d8e2518c38a","messageTitle":"Shift Jarvis\u0027 first greeting to Ui.java.","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":5}}},{"hash":"e70673e58a0253060b59998bae09412025a5c0b3","messageTitle":"Format the tags correctly","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"e05b3548222671b66f33b4ae598f6d99f9d897b5","messageTitle":"Update to the correct expected output for the eventCreation test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"2711bdf2005e2013eba7403379679566214fad2d","messageTitle":"Add a skyblue background for Jarvis and user responses and print error messages in brown","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"bcfe6e6f13bb5277ef1f684e334f82f2d43b9524","messageTitle":"Adjust padding between dialog boxes","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"4dd45bc06c6d7bcafd4d8eead9faa8d92c37a3ad","messageTitle":"Add a User Guide","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":106,"deletions":16}}},{"hash":"6a44b4997dd01c4a5d6a83b18333cfd97b9b5bcd","messageTitle":"Add line breaks for improved readability","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":16,"deletions":2}}},{"hash":"544d4a634ccbdb98a44d6b42c38890d0a2e488de","messageTitle":"Modify listTasks() and listNotes() methods to have a header line before printing out the lists","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"11f8f058db1a19e88a20f04624999c82c443fd89","messageTitle":"Add end() method to close the application","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"12a137222ee099d25437fe5b219008e7a14ba68b","messageTitle":"Add a call to Main.end() to close the application when user keys in the command \u0027bye\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"c2e35b6871b810de678c80c0031686baebb8007f","messageTitle":"Update User Guide to include \u0027Quick Start\u0027 and \u0027Acknowledgements\u0027","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":21,"deletions":2}}},{"hash":"063172d51465917db347eba28abc2c09c8eecb1f","messageTitle":"Update README.md to include the link to its JAR file","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}},{"hash":"c7bd4499f56f27ac008248afa456629027157488","messageTitle":"Remove unused code","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":14}}},{"hash":"ecb42daad28e55ea4af89e8af4fb03421b86e598","messageTitle":"Remove unnecessary tab for some Jarvis outputs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"03bbf796b87d0d531a233e4a3e181ab564d07d41","messageTitle":"Rename \u0027duke\u0027 to \u0027jarvis\u0027 to match the name of the chatbot","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"fxml":{"insertions":1,"deletions":1},"java":{"insertions":72,"deletions":66},"md":{"insertions":6,"deletions":3}}},{"hash":"4a29bed7a5752332a6d2afd6e903fa4bc1f502b6","messageTitle":"Update the link to download the latest JAR file","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}},{"hash":"0b2486b3ecb1b1f84f173e32e130cbfbbdc0ec9a","messageTitle":"Adjust top and bottom padding between dialog boxes","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1}}},{"hash":"b911fc4c76cc72a4f9b6e23a4c92cc3edb2b30a3","messageTitle":"Update README.md to the latest version found in docs/README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":156,"deletions":24}}},{"hash":"2afef096d1ca2008ba3980a8e9cb4284eb69b397","messageTitle":"Rename booleans to sound like booleans, such as from \u0027eventIsAfterDayStarts\u0027 to \u0027isEventAfterDayStarts\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"4cc49d4288c0e1e9c21590a2d942ced2af63c4c6","messageTitle":"Remove unnecessary space","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":0,"deletions":1}}},{"hash":"9faeee8ba5b81fa79c179cdf8425d6bd63b16b56","messageTitle":"Fix bug in the delete methods: Error message should be shown for wrongly keyed in delete commands and negative task/note number","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":19}}},{"hash":"b73584780c85ed09a23521a93907c260ff47c70a","messageTitle":"Fix bug for delete methods: Detect for \u0027delete note\u0027 command first before \u0027delete\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"8316323a6e054e330e66fb6f514eb50371ac9f40","messageTitle":"Refactor error message for invalid task/note numbers so that it will be highlighted in red in the GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"e6bb6dfa27289f912d0a54f4f8c71e1a9bf31c5e","messageTitle":"Add additional error messages to handle more user errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"101061d3a6ddded22b6777dc3f6bb2d4e4f09d6f","messageTitle":"Modify error messages for parseEvent()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}}]},{"date":"2021-09-15","commitResults":[{"hash":"48a2a10568741ffba5db947d3c183792acc1e0cb","messageTitle":"Add error handling for non-numerical and invalid date and time inputs for deadline tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":18}}},{"hash":"996e03decc1ab6feaf610f14783f0b01ddf6b0bf","messageTitle":"Add error handling for non-numerical and invalid date and time inputs for event tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":23}}},{"hash":"61072ed314c88228782a3678020261461f092889","messageTitle":"Add new error responses for Jarvis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":7}}},{"hash":"5034ceab609ec861493b8f92c5bad99458ffbae3","messageTitle":"Add handling of JarvisException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"6ff81c1a3e61a25306d1c7c706f5ad77b30b1785","messageTitle":"Modify method signatures to include JarvisException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"2a0b6f02f8267fea75937eb4acbc297a88bc6e40","messageTitle":"Modify some method signatures to include JarvisException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"5ee37fbbf80ebb697d5f48e6ff8f2e18267df71f","messageTitle":"Modify error handling message in parseEvent() to a more appropriate message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"eea7036e317d41367cd072f0ea14e04351a36c74","messageTitle":"Modify the conditions that trigger an \u0027empty description\u0027 error in parseEvent()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":32}}},{"hash":"d110e0e3cef66456407b05200e220971ec8437e3","messageTitle":"Modify the conditions that trigger an \u0027empty description\u0027 error in parseDeadline()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":30}}},{"hash":"3adc384db227cb97feb9cb1b7288ee5c6b195ad1","messageTitle":"Add new error messages for Jarvis","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"c8d9a20288810aab0aca43cdd657e1220c2ac732","messageTitle":"Add javadoc and in-line comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":4}}}]},{"date":"2021-09-16","commitResults":[{"hash":"d1424d00a01642405d585203c457dd95c6c8b8bf","messageTitle":"Modify the conditions that trigger an \u0027empty description\u0027 error in parseTodo()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":9}}},{"hash":"dcc4abf823b35be036a91f9579f61312b04aff32","messageTitle":"Handle possible user error where user keys in the description but not the date and timings for a deadline task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"2cb5b81a79443066cd254359bbc829eacd92039b","messageTitle":"Modify the conditions that trigger an \u0027incomplete done command\u0027 in parseDone()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"c08df3caac21032d03d6423cdc148be1761d3333","messageTitle":"Add new error message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"beedfb816bb9418a7121109561cf9316fac891e8","messageTitle":"Add new error message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"ba8cbc9f5ad20acfea6017f7301da576ab888c9c","messageTitle":"Modify conditions to trigger \u0027missing search word/phrase\u0027 error in findTasks()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":6}}},{"hash":"dacc7f56357895332d2eb4a238760c4ea57f8f93","messageTitle":"Add new error message to be highlighted in red","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"39f985ff627d5de7eb94ab61106ee292afbefab0","messageTitle":"Modify the conditions to trigger an \u0027incorrectly formatted note\u0027 error in parseNote()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":3}}},{"hash":"18a512320cabfd5be117a2a411f112d9b619f5fa","messageTitle":"Add new error message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}},{"hash":"e7ceda47b2ca05621fc02a01f8feebfcd58f0edc","messageTitle":"Add new error message to be highlighted in red","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"b2d6dcc95425d8b3a8bc07cc533e563f25a36b86","messageTitle":"Modify conditions to trigger \u0027incomplete command\u0027 error messages in parseEvent() and parseDeadline()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":12}}},{"hash":"ca2dd33a50856558a0f293a8b9e0d918ec2351dd","messageTitle":"Modify error messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":6}}},{"hash":"36e423be804be2ed5e19c468c8b7c5885dced912","messageTitle":"Modify error messages to be highlighted in red","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"72cb19dfd11167582db15faed6fcb8348f899f28","messageTitle":"Add a stage title","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"Preshita01":{"java":1809,"md":291,"fxml":43,"sh":0,"bat":0,"gradle":18,"txt":18}},"authorContributionVariance":{"Preshita01":89322.53},"authorDisplayNameMap":{"Preshita01":"CS2103T-W16-3 PAND..HITA"}}
