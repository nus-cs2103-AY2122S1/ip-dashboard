[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"# Biscuit project template","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"3. After that, locate the `src/main/java/Biscuit.java` file, right-click it, and choose `Run Biscuit.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":2,"-":22}},{"path":"src/main/java/Biscuit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" * Biscuit is a Personal Assistant Chatbot that helps a person to keep track of various things","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"public class Biscuit {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    private static List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        String logo \u003d","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"                \"████████████████████████████████████████\\n\"+","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"                \"█▄─▄─▀█▄─▄█─▄▄▄▄█─▄▄▄─█▄─██─▄█▄─▄█─▄─▄─█\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"                \"██─▄─▀██─██▄▄▄▄─█─███▀██─██─███─████─███\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"                \"▀▄▄▄▄▀▀▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▄▀▀▄▄▄▀▀▄▄▄▀▀\\n\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"                \"      ████████████████████\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"                \"    ██░░░░░░░░░░░░░░░░░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"                \"  ██░░░░██░░░░░░░░░░░░██░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"                \"  ██░░░░██░░██░░░░██░░██░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"                \"  ██░░████░░░░░░░░░░░░████░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"                \"    ██  ██░░░░████░░░░██  ██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                \"        ██░░░░░██░░░░░██                  ██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                \"          ██░░░░░░░░██░░████████        ██░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"                \"        ██░░████████░░░░░░░░░░░░██      ██░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░░░░░░░░░░░░░░░░░░░░░██  ██░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░██\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                \"      ██░░░░░░██░░░░░░██░░░░░░░░░░████\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                \"████████████████████████████████████████\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        String separator \u003d \"────────────────────────────────────────\";","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(\"Woof from\\n\" + logo);","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(\"Woof! I\u0027m Biscuit.\\nWhat can I do for you?\\n\" + separator);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        Storage storage \u003d new Storage(\"data/biscuit.csv\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            list \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        } catch (BiscuitException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"            System.out.println(\"Something went wrong, could not load data...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        while (isContinue) {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                String[] processedInput \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(separator);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"                switch (processedInput[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                    case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"                    case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"                        addTask(processedInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"                        storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"                    case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"                        doneTask(processedInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"                        storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"                    case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"                        deleteTask(processedInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"                        storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"                    case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"                        if (list.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"                            System.out.println(\"List is currently empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"                        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"                            System.out.println(i + 1 + \". \" + list.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"                    case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"                        System.out.println(\"Bye! Hope to see you again soon! 8\u003d\u003d8\");","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"                        isContinue \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"                    default:","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"                        throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"            } catch (BiscuitException be) {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(be.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(\"Woof! Looks like something went wrong, please try again.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"            } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(separator);","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"     * Adds specified task into list","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInput task user wants to add","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException invalid input by user","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"    public static void addTask(String[] userInput) throws BiscuitException {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"            Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"            switch (userInput[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"                    String[] deadlineData \u003d userInput[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"                    if (deadlineData.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"                        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"                            task \u003d new Deadline(deadlineData[0].trim(), LocalDate.parse(deadlineData[1], formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"                            throw new BiscuitException(\"Woof! Please use the date format of dd-MM-yyy (eg. 02-22-1999).\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"                        }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"                    } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"                        throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! The date/time for deadline cannot be empty.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"                                \"Please use the format: deadline \u003cname\u003e /by dd-MM-yyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"                        String[] eventData \u003d userInput[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"                        if (eventData.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"                            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"                                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"                                task \u003d new Event(eventData[0].trim(), LocalDateTime.parse(eventData[1], formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"                                throw new BiscuitException(\"Woof! Please use the date format of dd-MM-yyy HH:mm (eg. 02-22-1999 22:02).\");","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"                            }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"                        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"                            throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! The date/time for event cannot be empty.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"                                    \"Please use the format: event \u003cname\u003e /at dd-MM-yyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"                    task \u003d new ToDo(userInput[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"            list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\\n\\t\" + task","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"                    + \"\\nNow you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! The description of \" + userInput[0] + \" cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"     * Mark specified task as done","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInput task user wants to mark as done","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException invalid input by user","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"    public static void doneTask(String[] userInput) throws BiscuitException {","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"MarcusTXK"},"content":"                Task current \u003d list.get(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"MarcusTXK"},"content":"                current.setDone(true);","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done, woof!\\n\\t\" + current);","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"MarcusTXK"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! Please enter a valid number\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"MarcusTXK"},"content":"                        (list.size() \u003d\u003d 1 ? \" of 1\" : \" from 1 to \" + list.size()) + \".\");","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! The done task number cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"MarcusTXK"},"content":"     * Delete specified task","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInput task user wants to delete","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException invalid input by user","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"MarcusTXK"},"content":"    public static void deleteTask(String[] userInput) throws BiscuitException {","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"MarcusTXK"},"content":"        if (userInput.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"MarcusTXK"},"content":"                int index \u003d Integer.parseInt(userInput[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"MarcusTXK"},"content":"                Task toDelete \u003d list.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"MarcusTXK"},"content":"                list.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(\"Noted. I\u0027ve removed the following task:\\n\\t\" + toDelete);","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"MarcusTXK"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"MarcusTXK"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! Please enter a valid number\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"MarcusTXK"},"content":"                        (list.size() \u003d\u003d 1 ? \" of 1\" : \" from 1 to \" + list.size()) + \".\");","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"໒(◉ᴥ◉)७ OOPS!!! The delete task number cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MarcusTXK":188,"-":3}},{"path":"src/main/java/BiscuitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":" * Custom Exception thrown for invalid inputs to Biscuit","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"public class BiscuitException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    public BiscuitException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":8}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":" * Deadline class: For tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        super(description, Type.DEADLINE);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public Deadline(boolean isDone, String description, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, Type.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description + \" (by: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"dd LLL yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":30}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" * Event class: For tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    public Event(String description, LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        super(description, Type.EVENT);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public Event(boolean isDone, String description, LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, Type.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description + \" (at: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"dd LLL yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":31}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"import java.io.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Constructor for Storage","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * @param filePath path to file","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * Saves changes made to file in filePath","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Unable to save","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public void save() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            try (PrintWriter printWriter \u003d new PrintWriter(new File(filePath))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"                list.stream().map(this::convertToCsv).forEach(printWriter::println);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Something went wrong and I was unable to save your most recent change.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     * Loads list of tasks from file in file path","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     * @return List of files","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Unable to load save file","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cTask\u003e load() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            File fileToSave \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            if (!fileToSave.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                fileToSave.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                fileToSave.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"            try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"                    list.add(convertToTask(scanner.nextLine()));","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Could not create save file to save data to.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"     * Converts task to csv string","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"     * @param task task to convert","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"     * @return csv string","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    private String convertToCsv(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        String csv \u003d task.getType().toString() + \",\" + task.isDone() + \",\"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"                + escapeSpecialCharacters(task.getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        switch (task.getType()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"            csv +\u003d \",\" + escapeSpecialCharacters(deadline.getDate().toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"            csv +\u003d \",\" + escapeSpecialCharacters(event.getDate().toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        return csv;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"     * Converts csv string to task","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"     * @param csv csv string to convert","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"     * @return task","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid csv string","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"    private Task convertToTask(String csv) throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"            // regex adapted from https://stackoverflow.com/questions/1757065/java-splitting-a-comma-separated-string-but-ignoring-commas-in-quotes","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"            // splits by commas, but ignores commas in quotes","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"            String[] values \u003d csv.split(\",(?\u003d(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", -1);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"            boolean isDone \u003d Boolean.parseBoolean(values[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"            String description \u003d unescapeSpecialCharacters(values[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"            switch (Task.Type.valueOf(values[0])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"                return new Deadline(isDone, description, LocalDate.parse(values[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"                return new Event(isDone, description, LocalDateTime.parse(values[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"            case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"                return new ToDo(isDone, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"Woof! Invalid save data, could not load saved tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Invalid save data, could not load saved tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"     * Escapes special characters of commas, quotes and new lines","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"     * @param data data to escape","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"     * @return string with special characters escaped","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"    private String escapeSpecialCharacters(String data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // @@author MarcusTXK--reused","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Reused from https://www.baeldung.com/java-csv","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String escapedData \u003d data.replaceAll(\"\\\\R\", \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (data.contains(\",\") || data.contains(\"\\\"\") || data.contains(\"\u0027\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            data \u003d data.replace(\"\\\"\", \"\\\"\\\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            escapedData \u003d \"\\\"\" + data + \"\\\"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return escapedData;","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Unescapes special characters of commas, quotes and new lines","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param data data to unescape","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @return string with special characters unescaped","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private String unescapeSpecialCharacters(String data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (data.contains(\",\") || data.contains(\"\\\"\") || data.contains(\"\u0027\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            data \u003d data.replace(\"\\\"\\\"\",\"\\\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            data \u003d data.substring(1, data.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return data;","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":120,"-":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":" * Task class representing a pending task a User has","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"     * Types of tasks available","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    public enum Type {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"        TODO,","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        EVENT","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    private Type type;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public Task(String description, Type type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public Task(boolean isDone, String description, Type type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * Get checkbox based on status","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @return checkbox either empty or crossed","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    protected String getCheckBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     * Get box containing type of Task abbreviated by a letter","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * @return box containing task of Type","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    protected String getTypeBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        String taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        switch (this.type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"            taskType\u003d \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        return \"[\" + taskType + \"]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    public Type getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"        return type;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"MarcusTXK":75}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":" * ToDo class: For tasks without any date/time attached to it","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":" * e.g., visit new theme park","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"        super(description, Type.TODO);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, Type.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"invalid inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"deadline missing by","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"event missing at","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"done 9001","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"delete 420","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"java -classpath ..\\bin Biscuit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":1,"-":20}}]
