[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"# Biscuit project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"This is a project template for a greenfield Java project. It\u0027s named after my dog _Biscuit_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"3. After that, locate the `src/main/java/Biscuit.java` file, right-click it, and choose `Run Biscuit.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"Woof from","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"████████████████████████████████████████","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"█▄─▄─▀█▄─▄█─▄▄▄▄█─▄▄▄─█▄─██─▄█▄─▄█─▄─▄─█","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"██─▄─▀██─██▄▄▄▄─█─███▀██─██─███─████─███","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"▀▄▄▄▄▀▀▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▄▀▀▄▄▄▀▀▄▄▄▀▀","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"      ████████████████████","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    ██░░░░░░░░░░░░░░░░░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"  ██░░░░██░░░░░░░░░░░░██░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"  ██░░░░██░░██░░░░██░░██░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"  ██░░████░░░░░░░░░░░░████░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    ██  ██░░░░████░░░░██  ██","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        ██░░░░░██░░░░░██                  ██","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"          ██░░░░░░░░██░░████████        ██░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        ██░░████████░░░░░░░░░░░░██      ██░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░░░░░░░░░░░░░░░░░░░░░██  ██░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░██","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"      ██░░░░░░██░░░░░░██░░░░░░░░░░████","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"████████████████████████████████████████","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":26,"-":15}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-params:5.5.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    mainClassName \u003d \"biscuit.Biscuit\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    archiveBaseName \u003d \"biscuit\"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":18,"-":44}},{"path":"src/main/java/biscuit/Biscuit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" * Biscuit is a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"public class Biscuit {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Biscuit class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     * @param filePath file path to save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    public Biscuit(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        } catch (BiscuitException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        return storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        return ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        return taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MarcusTXK":44,"-":2}},{"path":"src/main/java/biscuit/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Main;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":13}},{"path":"src/main/java/biscuit/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":" * Add command to add task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"public class AddCommand extends biscuit.commands.Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs AddCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    public AddCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.ADD, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     * Adds specified task into list.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws BiscuitException {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        if (userInputs.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            switch (userInputs[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"                task \u003d getDeadline();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                task \u003d getEvent();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"                task \u003d getToDo();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"            storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"            return \"Got it. I\u0027ve added this task:\\n\\t\" + task","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The description of \"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                    + userInputs[0] + \" cannot be empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"     * Creates deadline command.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"     * @return Deadline command.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    private Deadline getDeadline() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        String[] deadlineData \u003d userInputs[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        if (deadlineData.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"                return new Deadline(deadlineData[0].trim(), LocalDate.parse(deadlineData[1], formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"Woof! Please use the date format of dd-MM-yyy (eg. 02-22-2021).\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The date/time for deadline cannot be empty.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"                    + \"Please use the format: deadline \u003cname\u003e /by dd-MM-yyy\");","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"     * Creates event command.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"     * @return Event command.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"    private Event getEvent() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        String[] eventData \u003d userInputs[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"        if (eventData.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"                return new Event(eventData[0].trim(), LocalDateTime.parse(eventData[1], formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"Woof! Please use the date format of \"","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"                        + \"dd-MM-yyy HH:mm (eg. 02-22-2021 22:02).\");","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The date/time for event cannot be empty.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"                    + \"Please use the format: event \u003cname\u003e /at dd-MM-yyy HH:mm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"     * Creates todo command.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"     * @return ToDo command.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"    private ToDo getToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"        return new ToDo(userInputs[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":117}},{"path":"src/main/java/biscuit/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" * Abstract class for User Commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    /** Types of commands available. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public enum CommandType {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        ADD,","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        DELETE,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        DONE,","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        LIST,","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"        FIND,","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        EXIT,","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    protected CommandType commandType;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    protected String[] userInputs;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Command class.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @param commandType Type of command.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs  User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    protected Command(CommandType commandType, String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        this.userInputs \u003d userInputs;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * Execute command from userInput.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws BiscuitException;","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * Checks if command type is EXIT.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"     * @return Boolean of is Exit type.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        return commandType.equals(CommandType.EXIT);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"     * Gets command type of command.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"     * @return Command type.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        return commandType;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":65}},{"path":"src/main/java/biscuit/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" * Delete command to delete task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs DeleteCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public DeleteCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.DELETE, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * Deletes specified task from list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws BiscuitException {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        if (userInputs.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                int index \u003d Integer.parseInt(userInputs[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                Task toDelete \u003d taskList.getTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                taskList.removeTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                return \"Noted. I\u0027ve removed the following task:\\n\\t\" + toDelete","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! Please enter a valid number\"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                        + (taskList.size() \u003d\u003d 1 ? \" of 1\" : \" from 1 to \" + taskList.size()) + \".\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The delete task number cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":50}},{"path":"src/main/java/biscuit/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" * Done command to mark task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs DoneCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public DoneCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.DONE, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * Marks specified task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws BiscuitException {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        if (userInputs.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                Task current \u003d taskList.getTask(Integer.parseInt(userInputs[1]) - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                current.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                storage.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                return \"Nice! I\u0027ve marked this task as done, woof!\\n\\t\" + current;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! Please enter a valid number\"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                        + (taskList.size() \u003d\u003d 1 ? \" of 1\" : \" from 1 to \" + taskList.size()) + \".\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The done task number cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":48}},{"path":"src/main/java/biscuit/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * Exit command to exit Biscuit.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs ExitCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public ExitCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.EXIT, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * Exits from Biscuit.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        return \"Bye! Hope to see you again soon! 8\u003d\u003d8\";","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":33}},{"path":"src/main/java/biscuit/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":" * Find command to find a task by searching for a keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs FindCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public FindCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.FIND, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * Finds tasks matching keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws BiscuitException {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        if (userInputs.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"            int count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                Task current \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                if (current.getDescription().contains(userInputs[1])) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                    message.append(count).append(\". \").append(taskList.getTask(i));","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                    count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                message \u003d new StringBuilder(\"No matching tasks found.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! The search keyword cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        return message.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":52}},{"path":"src/main/java/biscuit/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * List command to list tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs ListCommand class.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInputs User input array with this structure: [command, details].","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    public ListCommand(String[] userInputs) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"        super(CommandType.LIST, userInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * Lists tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskList Task list to add.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * @param ui       Ui to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * @param storage  Storage to save to.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @return Response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            message \u003d new StringBuilder(\"List is currently empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                message.append(i).append(\". \").append(taskList.getTask(i)).append(\"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        return message.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":41}},{"path":"src/main/java/biscuit/exceptions/BiscuitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":" * Custom Exception thrown for invalid inputs to Biscuit.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"public class BiscuitException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs BiscuitException class.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"     * @param errorMessage Error message to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    public BiscuitException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":15}},{"path":"src/main/java/biscuit/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.AddCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.DeleteCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" * Parser class deals with making sense of the user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Parser class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    private Parser() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * Parses user input to get command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     * @param userInput Input by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @return Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid command by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    public static Command parse(String userInput) throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"        String[] processedInputs \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        switch (processedInputs[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"            return new AddCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"            return new DoneCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"            return new DeleteCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"            return new ListCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"            return new FindCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"            return new ExitCommand(processedInputs);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"\\u0ED2(\\u25C9\\u1D25\\u25C9)\\u096D OOPS!!! I\u0027m sorry, but I don\u0027t know what that means...\");","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":55}},{"path":"src/main/java/biscuit/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":" * Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Storage class.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @param filePath Path to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * Saves changes made to file in filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Unable to save.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public void save() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"            try (PrintWriter printWriter \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                tasks.stream().map(this::convertToCsv).forEach(printWriter::println);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Something went wrong and I was unable to save your most recent change.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * Loads list of tasks from file in file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     * @return List of files.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Unable to load save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    public List\u003cTask\u003e load() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"            File fileToSave \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            if (!fileToSave.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"                fileToSave.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"                fileToSave.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"            try (Scanner scanner \u003d new Scanner(new File(filePath))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"                    tasks.add(convertToTask(scanner.nextLine()));","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Could not create save file to save data to.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"     * Converts task to csv string.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"     * @param task Task to convert.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"     * @return Csv string.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    private String convertToCsv(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        String csv \u003d task.getType().toString() + \",\" + task.isDone() + \",\"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"                + escapeSpecialCharacters(task.getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"        switch (task.getType()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"            csv +\u003d \",\" + escapeSpecialCharacters(deadline.getDate().toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"            csv +\u003d \",\" + escapeSpecialCharacters(event.getDate().toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        return csv;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"     * Converts csv string to task.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"     * @param csv Csv string to convert.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"     * @throws BiscuitException Invalid csv string.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"    private Task convertToTask(String csv) throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"            // splits csv string by commas, but ignores commas in quotes","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"            String[] values \u003d csv.split(\",(?\u003d(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", -1);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"            boolean isDone \u003d Boolean.parseBoolean(values[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"            String description \u003d unescapeSpecialCharacters(values[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"            switch (Task.TaskType.valueOf(values[0])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"                return new Deadline(isDone, description, LocalDate.parse(values[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"            case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"                return new Event(isDone, description, LocalDateTime.parse(values[3]));","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"            case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"                return new ToDo(isDone, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"MarcusTXK"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"MarcusTXK"},"content":"                throw new BiscuitException(\"Woof! Invalid save data, could not load saved tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"MarcusTXK"},"content":"            throw new BiscuitException(\"Woof! Invalid save data, could not load saved tasks.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"MarcusTXK"},"content":"     * Escapes special characters of commas, quotes and new lines.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"MarcusTXK"},"content":"     * @param data Data to escape.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"MarcusTXK"},"content":"     * @return String with special characters escaped.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"MarcusTXK"},"content":"    private String escapeSpecialCharacters(String data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"MarcusTXK"},"content":"        // Solution below adapted from https://www.baeldung.com/java-csv","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"MarcusTXK"},"content":"        String escapedData \u003d data.replaceAll(\"\\\\R\", \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"MarcusTXK"},"content":"        if (escapedData.contains(\",\") || escapedData.contains(\"\\\"\") || escapedData.contains(\"\u0027\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"MarcusTXK"},"content":"            escapedData \u003d escapedData.replace(\"\\\"\", \"\\\"\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"MarcusTXK"},"content":"            escapedData \u003d \"\\\"\" + escapedData + \"\\\"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"MarcusTXK"},"content":"        return escapedData;","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"MarcusTXK"},"content":"     * Unescapes special characters of commas, quotes and new lines.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"MarcusTXK"},"content":"     * @param data Data to unescape.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"MarcusTXK"},"content":"     * @return String with special characters unescaped.","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"MarcusTXK"},"content":"    private String unescapeSpecialCharacters(String data) {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"MarcusTXK"},"content":"        if (data.contains(\",\") || data.contains(\"\\\"\") || data.contains(\"\u0027\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"MarcusTXK"},"content":"            data \u003d data.replace(\"\\\"\\\"\", \"\\\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"MarcusTXK"},"content":"            data \u003d data.substring(1, data.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"MarcusTXK"},"content":"        return data;","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":157}},{"path":"src/main/java/biscuit/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" * Deadline class: For tasks that need to be done before a specific date/time.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * eg. submit report by 11/10/2019 5pm.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"     * @param date        Date task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * Used when need to set isDone.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @param isDone      Boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @param date        Date task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    public Deadline(boolean isDone, String description, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, TaskType.DEADLINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * Gets Task date.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task date.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     * Returns string representation of Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * @return Deadline String.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description + \" (by: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"dd LLL yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":56}},{"path":"src/main/java/biscuit/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" * Event class: For tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":" * eg. team project meeting on 2/10/2019 2-4pm.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"     * @param date        Date task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    public Event(String description, LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"     * Used when need to set isDone.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"     * @param isDone      Boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * @param date        Date task is due.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    public Event(boolean isDone, String description, LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, TaskType.EVENT);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"     * Gets Task date.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task date.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     * Returns string representation of Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * @return Event String.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description + \" (at: \"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"dd LLL yyyy hh:mm a\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":56}},{"path":"src/main/java/biscuit/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":" * Task class representing a pending task a User has.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"    /** Types of tasks available. */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        TODO,","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        EVENT","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    private final TaskType taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskType    Task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public Task(String description, TaskType taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     * Used when need to set isDone.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"     * @param isDone      Boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"     * @param taskType    Task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    public Task(boolean isDone, String description, TaskType taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"     * Gets checkbox based on status.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"     * @return Checkbox either empty or crossed.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    protected String getCheckBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * Gets box containing type of biscuit.tasks.Task abbreviated by a letter.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * @return Box containing task of Type.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    protected String getTypeBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        String type;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"            type \u003d \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"            type \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"            type \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        return \"[\" + type + \"]\";","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"     * Gets Task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task type.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"    public TaskType getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        return taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"     * Gets boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"     * @return Boolean of is task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"     * Sets boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"     * @param done Boolean of is task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"MarcusTXK"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"MarcusTXK"},"content":"     * Gets task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"MarcusTXK"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"MarcusTXK"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"MarcusTXK"},"content":"     * Returns string representation of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task String.","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"MarcusTXK":119}},{"path":"src/main/java/biscuit/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" * TaskList class contains the task list and operations to edit the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs TaskList class.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     * @param tasks Task List.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     * Adds task to list.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @param task Task to add.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * Gets size of list.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     * @return Size of list.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"     * Gets task at index.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"     * @param index Index of task to get.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"     * @return Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * Removes task at index.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"     * @param index Index of task to remove.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"     * Checks if list is empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"     * @return Boolean of is task empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":66}},{"path":"src/main/java/biscuit/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":" * ToDo class: For tasks without any date/time attached to it.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":" * eg. visit new theme park.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs ToDo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs ToDo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * Used when need to set isDone.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"     * @param isDone      Boolean of if task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"        super(isDone, description, TaskType.TODO);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"     * Returns string representation of ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"     * @return ToDo String.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        return getTypeBox() + getCheckBox() + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":38}},{"path":"src/main/java/biscuit/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * Returns dialog box for user.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * @param text Text to display.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     * @param img Image to display.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * @return Dialog box.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"     * Returns dialog box for biscuit.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"     * @param text Text to display.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"     * @param img Image to display.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"     * @return Dialog box.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"    public static DialogBox getBiscuitDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":73}},{"path":"src/main/java/biscuit/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import java.util.List;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.Biscuit;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":" * A GUI for Biscuit using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    private String defaultPath \u003d \"data/biscuit.csv\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"            // Get command-line argument for file path of save file","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"            List\u003cString\u003e params \u003d getParameters().getRaw();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"            if (params.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"                defaultPath \u003d params.get(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"            Biscuit biscuit \u003d new Biscuit(defaultPath);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBiscuit(biscuit);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":39}},{"path":"src/main/java/biscuit/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.Biscuit;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.parser.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"    private Biscuit biscuit;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    private Image biscuitImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBiscuit.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"     * Initialises MainWindow and outputs welcome message","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"        String logo \u003d \"\\n  \\u2588\\u2584\\u2584\\u2003\\u2588\\u2003\\u2588\\u2580\\u2003\\u2588\\u2580\"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                + \"\\u2580\\u2003\\u2588\\u2591\\u2588\\u2003\\u2588\\u2003\\u2580\\u2588\\u2580\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                + \"  \\u2588\\u2584\\u2588\\u2003\\u2588\\u2003\\u2584\\u2588\\u2003\\u2588\\u2584\\u2584\"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                + \"\\u2003\\u2588\\u2584\\u2588\\u2003\\u2588\\u2003\\u2591\\u2588\\u2591\\n\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                DialogBox.getBiscuitDialog(logo + \"Woof! I\u0027m Biscuit.\\nWhat can I do for you?\", biscuitImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    public void setBiscuit(Biscuit b) {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"        biscuit \u003d b;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Biscuit\u0027s reply and then appends them","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"            input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"            response \u003d command.execute(biscuit.getTaskList(), biscuit.getUi(), biscuit.getStorage());","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"        } catch (BiscuitException be) {","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"            response \u003d be.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"            response \u003d \"Woof! Looks like something went wrong, please try again.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        } finally {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"                    DialogBox.getBiscuitDialog(response, biscuitImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"            );","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":77}},{"path":"src/main/java/biscuit/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":" * Ui class deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"     * Constructs Ui class.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"     * Prints welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        String logo \u003d \"████████████████████████████████████████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"                + \"█▄─▄─▀█▄─▄█─▄▄▄▄█─▄▄▄─█▄─██─▄█▄─▄█─▄─▄─█\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"                + \"██─▄─▀██─██▄▄▄▄─█─███▀██─██─███─████─███\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"                + \"▀▄▄▄▄▀▀▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▄▀▀▄▄▄▀▀▄▄▄▀▀\\n\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ████████████████████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"                + \"    ██░░░░░░░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░░░██░░██░░░░██░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░████░░░░░░░░░░░░████░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"                + \"    ██  ██░░░░████░░░░██  ██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"                + \"        ██░░░░░██░░░░░██                  ██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"                + \"          ██░░░░░░░░██░░████████        ██░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"                + \"        ██░░████████░░░░░░░░░░░░██      ██░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░░░░░░░░░░░░░██  ██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                + \"████████████████████████████████████████\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(\"Woof from\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(\"Woof! I\u0027m Biscuit.\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"     * Prints line separator.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(\"────────────────────────────────────────\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"     * Prints message.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"     * @param message Message to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"     * Prints error.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"     * @param error Error to display.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"     * Reads user\u0027s next command.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"     * @return User\u0027s command.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"biscuit.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"MarcusTXK":19}},{"path":"src/test/java/biscuit/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import biscuit.exceptions.BiscuitException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" * Unit test for Parser class.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"    void parse_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"invalid input\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"        assertThrows(BiscuitException.class, () -\u003e Parser.parse(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    @ValueSource(strings \u003d {\"todo test\", \"event test /at 02-22-2021 22:02\", \"deadline test /by 02-22-2021\"})","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    void parse_AddCommand_success(String input) throws BiscuitException {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(Command.CommandType.ADD, command.getCommandType());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"    void parse_deleteCommand_success() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(Command.CommandType.DELETE, command.getCommandType());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"    void parse_doneCommand_success() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"done 1\";","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(Command.CommandType.DONE, command.getCommandType());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"    void parse_listCommand_success() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(Command.CommandType.LIST, command.getCommandType());","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"        assertFalse(command.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"    void parse_exitCommand_success() throws BiscuitException {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"        String input \u003d \"bye\";","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(Command.CommandType.EXIT, command.getCommandType());","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"        assertTrue(command.isExit());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":66}},{"path":"src/test/java/biscuit/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"package biscuit.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"/***","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":" * Unit test for Ui class.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"MarcusTXK"},"content":"class UiTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"MarcusTXK"},"content":"    private final ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"MarcusTXK"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"MarcusTXK"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"MarcusTXK"},"content":"    @AfterEach","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"MarcusTXK"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"MarcusTXK"},"content":"        System.setOut(System.out);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"MarcusTXK"},"content":"    void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"MarcusTXK"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"MarcusTXK"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"MarcusTXK"},"content":"        String welcomeMessage \u003d \"Woof from\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"MarcusTXK"},"content":"                + \"████████████████████████████████████████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"MarcusTXK"},"content":"                + \"█▄─▄─▀█▄─▄█─▄▄▄▄█─▄▄▄─█▄─██─▄█▄─▄█─▄─▄─█\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"MarcusTXK"},"content":"                + \"██─▄─▀██─██▄▄▄▄─█─███▀██─██─███─████─███\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"MarcusTXK"},"content":"                + \"▀▄▄▄▄▀▀▄▄▄▀▄▄▄▄▄▀▄▄▄▄▄▀▀▄▄▄▄▀▀▄▄▄▀▀▄▄▄▀▀\\n\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ████████████████████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"MarcusTXK"},"content":"                + \"    ██░░░░░░░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░░░██░░██░░░░██░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"MarcusTXK"},"content":"                + \"  ██░░████░░░░░░░░░░░░████░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"MarcusTXK"},"content":"                + \"    ██  ██░░░░████░░░░██  ██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"MarcusTXK"},"content":"                + \"        ██░░░░░██░░░░░██                  ██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"MarcusTXK"},"content":"                + \"          ██░░░░░░░░██░░████████        ██░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"MarcusTXK"},"content":"                + \"        ██░░████████░░░░░░░░░░░░██      ██░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░░░░░░░░░░░░░██  ██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░░░░░░░░░██░░░░░░░░░░░░██░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░░░░░██\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"MarcusTXK"},"content":"                + \"      ██░░░░░░██░░░░░░██░░░░░░░░░░████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"MarcusTXK"},"content":"                + \"████████████████████████████████████████\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"MarcusTXK"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"MarcusTXK"},"content":"                + \"Woof! I\u0027m Biscuit.\\nWhat can I do for you?\"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"MarcusTXK"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"MarcusTXK"},"content":"                + \"────────────────────────────────────────\"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"MarcusTXK"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(welcomeMessage, outputStream.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"MarcusTXK"},"content":"    void showLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"MarcusTXK"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"MarcusTXK"},"content":"        ui.showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(\"────────────────────────────────────────\" + System.lineSeparator(), outputStream.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"MarcusTXK"},"content":"    void showMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"MarcusTXK"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"MarcusTXK"},"content":"        String message \u003d \"Dummy Message\";","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"MarcusTXK"},"content":"        ui.showMessage(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(message + System.lineSeparator(), outputStream.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"MarcusTXK"},"content":"    void showError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"MarcusTXK"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"MarcusTXK"},"content":"        String error \u003d \"Dummy Error\";","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"MarcusTXK"},"content":"        ui.showError(error);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(error + System.lineSeparator(), outputStream.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"MarcusTXK"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"MarcusTXK"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"MarcusTXK"},"content":"    void readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"MarcusTXK"},"content":"        String command \u003d \"Dummy input\";","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"MarcusTXK"},"content":"        InputStream inputStream \u003d new ByteArrayInputStream(command.getBytes());","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"MarcusTXK"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"MarcusTXK"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"MarcusTXK"},"content":"        String actualCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"MarcusTXK"},"content":"        assertEquals(command, actualCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"MarcusTXK"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"MarcusTXK"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"MarcusTXK":96}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MarcusTXK"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"MarcusTXK"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"MarcusTXK"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"MarcusTXK"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"MarcusTXK"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"MarcusTXK"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"MarcusTXK"},"content":"invalid inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"MarcusTXK"},"content":"deadline missing by","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"MarcusTXK"},"content":"event missing at","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"MarcusTXK"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"MarcusTXK"},"content":"done 9001","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"MarcusTXK"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"MarcusTXK"},"content":"delete 420","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"MarcusTXK"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"MarcusTXK":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MarcusTXK"},"content":"java -classpath ..\\bin biscuit.Biscuit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"MarcusTXK"},"content":"java -classpath ../bin Biscuit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MarcusTXK":1,"-":37}}]
