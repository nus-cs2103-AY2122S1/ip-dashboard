[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"# JWBot project template","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"3. After that, locate the `src/main/java/JWBot.java` file, right-click it, and choose `Run JWBot.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"somekoreanboi":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"        this.at \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":14}},{"path":"src/main/java/JWBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"public class JWBot {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"        String greeting \u003d \"Wassup bro! I\u0027m JWBot\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"                + \"How can I help you?\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"        String byeMessage \u003d \"You leaving already? See you soon bro!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(byeMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK bro, the tasks in your list are: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"somekoreanboi"},"content":"                for (int i \u003d 1; i \u003c items.size() + 1; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"somekoreanboi"},"content":"                    System.out.println(i + \". \" + items.get(i - 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"somekoreanboi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"Bro, now you have \" + items.size() + \" tasks stored in the list!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"somekoreanboi"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"somekoreanboi"},"content":"                String[] separated \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"somekoreanboi"},"content":"                int index \u003d Integer.parseInt(separated[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"somekoreanboi"},"content":"                items.get(index - 1).markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK Bro, I noted you\u0027ve done this task:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"somekoreanboi"},"content":"                        items.get(index - 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"somekoreanboi"},"content":"            } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"somekoreanboi"},"content":"                String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"somekoreanboi"},"content":"                String[] separated \u003d content.split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"somekoreanboi"},"content":"                Deadline deadline \u003d new Deadline(separated[0], separated[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"somekoreanboi"},"content":"                items.add(deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK bro, I just added: \" + deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"somekoreanboi"},"content":"            } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"somekoreanboi"},"content":"                String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"somekoreanboi"},"content":"                Todo todo \u003d new Todo(content);","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"somekoreanboi"},"content":"                items.add(todo);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK bro, I just added: \" + todo);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"somekoreanboi"},"content":"            } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"somekoreanboi"},"content":"                String content \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"somekoreanboi"},"content":"                String[] separated \u003d content.split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"somekoreanboi"},"content":"                Event event \u003d new Event(separated[0], separated[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"somekoreanboi"},"content":"                items.add(event);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK bro, I just added: \" + event);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"somekoreanboi"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"somekoreanboi"},"content":"                items.add(new Task(input));","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"somekoreanboi"},"content":"                System.out.println(\"OK bro, I just added: \" + input);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"somekoreanboi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"somekoreanboi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":57}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"somekoreanboi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"somekoreanboi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"somekoreanboi"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"somekoreanboi"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"somekoreanboi"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"somekoreanboi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"somekoreanboi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"somekoreanboi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"somekoreanboi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"somekoreanboi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"somekoreanboi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"somekoreanboi"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"somekoreanboi"},"content":"java -classpath ..\\bin JWBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"somekoreanboi"},"content":"Pause","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"somekoreanboi":2,"-":20}}]
