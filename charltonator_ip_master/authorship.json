[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * Deadline class that inherits from Task and includes a Date (the deaadline of the Task)","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"    private String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"     * Constructor.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"     * @param title the Task title","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"     * @param date the deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"    public Deadline(String title, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"        super(title);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"     * Retrieve info of the deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"     * @return a String","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        return \"[D][ ]\" + this.getTitle() + \"(by: \" + this.date + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"     * toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[D][ ]\" + this.getTitle() + \"(by: \" + this.date + \")\");","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[D][X]\" + this.getTitle() + \"(by: \" + this.date + \")\");","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"        GreetingBot newBot \u003d new GreetingBot();","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"        newBot.startBot();","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"charltonator":10,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * A class that is an exception to be thrown for errors relating to the Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"     * Constructor for the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"     * @param message the message to be printed.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"     * the toString method of the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"     * @return a String","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"        return this.getMessage();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":25}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * An Event class that inherits from Task and includes a time for the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"    private String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"     * Constructor.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"     * @param title title of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"     * @param date time of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    public Event(String title, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"        super(title);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"     * Returns basic info about the Event.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"        return \"[E][ ]\" + this.getTitle() + \"(at: \" + this.date + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"     * toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[E][ ]\" + this.getTitle() + \"(at: \" + this.date + \")\");","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[E][X]\" + this.getTitle() + \"(at: \" + this.date + \")\");","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":42}},{"path":"src/main/java/GreetingBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * Code for the main skeleton of the Bot. When Duke is run, An instance of this class is created and used to run it.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"public class GreetingBot {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"     * The list of tasks that belongs to the bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"    private LinkedList\u003cTask\u003e myList \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"     * Constructor that takes in nothing.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"    public GreetingBot() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"     * Method that runs the main functions of the bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"    public void startBot() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"        greet();","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"        store();","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"        exit();","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"     * Method that greets the user when bot is first run.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"    private void greet() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"        String greetingMessage \u003d \"What\u0027s up! I\u0027m Duke! What can I help you with?\";","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        System.out.println(greetingMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"     * Method that reads input and decides what method to call to deal with the input.","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"charltonator"},"content":"    private void store() {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"charltonator"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"                String nextLine \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"charltonator"},"content":"                if (nextLine.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"charltonator"},"content":"                    list(myList);","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"                } else if (nextLine.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"charltonator"},"content":"                } else if (nextLine.startsWith(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"charltonator"},"content":"                    setDone(nextLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"charltonator"},"content":"                } else if (nextLine.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"charltonator"},"content":"                    deleteTask(nextLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"charltonator"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"charltonator"},"content":"                    newTask(nextLine);","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"charltonator"},"content":"                    int totalTasks \u003d myList.size();","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"charltonator"},"content":"                    System.out.println(\"Now you have \" + totalTasks + \" tasks in the list. You\u0027re welcome!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"charltonator"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"charltonator"},"content":"            catch (DukeException ex) {","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"charltonator"},"content":"                System.out.println(ex.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"charltonator"},"content":"                continue;","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"charltonator"},"content":"     * Method that is called to set a task to done.","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"charltonator"},"content":"     * @param nextLine","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"charltonator"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"charltonator"},"content":"    private void setDone(String nextLine) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"charltonator"},"content":"        String[] splitWords \u003d nextLine.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"charltonator"},"content":"        if (splitWords.length \u003d\u003d 1 \u0026\u0026 splitWords[0].equals(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Dude I don\u0027t think you told me which task you\u0027re talking about!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"charltonator"},"content":"        } else if (!splitWords[0].equals(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Dude, I don\u0027t understand your instructions!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"charltonator"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"charltonator"},"content":"            int taskNumber \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"charltonator"},"content":"            if (taskNumber \u003e myList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"Dude I don\u0027t think you have a list THAT long!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"charltonator"},"content":"            } else if (myList.get(taskNumber - 1).getDone()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"This task is already done man!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"charltonator"},"content":"                myList.get(taskNumber - 1).setDone(true);","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"charltonator"},"content":"        catch (NumberFormatException ex) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Woah, enter the task number properly..\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"charltonator"},"content":"     * Method that is called to delete a task from the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"charltonator"},"content":"     * @param nextLine","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"charltonator"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"charltonator"},"content":"    private void deleteTask(String nextLine) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"charltonator"},"content":"        String[] splitWords \u003d nextLine.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"charltonator"},"content":"        if (splitWords.length \u003d\u003d 1 \u0026\u0026 splitWords[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Dude I don\u0027t think you told me which task you\u0027re talking about!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"charltonator"},"content":"        } else if (!splitWords[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Dude, I don\u0027t understand your instructions!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"charltonator"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"charltonator"},"content":"            int taskNumber \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"charltonator"},"content":"            if (taskNumber \u003e myList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"Dude I don\u0027t think you have a list THAT long!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"charltonator"},"content":"                String infoOfTask \u003d myList.get(taskNumber - 1).toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"charltonator"},"content":"                myList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"charltonator"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + infoOfTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"charltonator"},"content":"        catch (NumberFormatException ex) {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Woah, enter the task number properly..\");","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"charltonator"},"content":"     * method that is called to create a new Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"charltonator"},"content":"     * @param nextLine","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"charltonator"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"charltonator"},"content":"    private void newTask(String nextLine) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"charltonator"},"content":"        if (nextLine.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"charltonator"},"content":"            if (nextLine.replaceAll(\"\\\\s\", \"\").length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"Seems like your todo task was incomplete!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"charltonator"},"content":"                String[] splitLine \u003d nextLine.split(\"todo\");","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"charltonator"},"content":"                String title \u003d splitLine[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"charltonator"},"content":"                Task nextTask \u003d new Todo(title);","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"charltonator"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"charltonator"},"content":"                myList.add(nextTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"charltonator"},"content":"                System.out.println(nextTask.getInfo());","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"charltonator"},"content":"        } else if (nextLine.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"charltonator"},"content":"            if (nextLine.replaceAll(\"\\\\s\", \"\").length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"Seems like your deadline task was incomplete!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"charltonator"},"content":"                String[] splitLine \u003d nextLine.split(\"/by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"charltonator"},"content":"                String date \u003d splitLine[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"charltonator"},"content":"                String title \u003d splitLine[0].split(\"deadline\")[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"charltonator"},"content":"                Task nextTask \u003d new Deadline(title, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"charltonator"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"charltonator"},"content":"                myList.add(nextTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"charltonator"},"content":"                System.out.println(nextTask.getInfo());","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"charltonator"},"content":"        } else if (nextLine.startsWith(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"charltonator"},"content":"            if (nextLine.replaceAll(\"\\\\s\", \"\").length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"charltonator"},"content":"                throw new DukeException(\"Seems like your event task was incomplete!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"charltonator"},"content":"                String[] splitLine \u003d nextLine.split(\"/at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"charltonator"},"content":"                String date \u003d splitLine[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"charltonator"},"content":"                String title \u003d splitLine[0].split(\"event\")[1];","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"charltonator"},"content":"                Task nextTask \u003d new Event(title, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"charltonator"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"charltonator"},"content":"                myList.add(nextTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"charltonator"},"content":"                System.out.println(nextTask.getInfo());","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Dude I don\u0027t understand what you\u0027re saying!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"charltonator"},"content":"     * Method that is called to display the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"charltonator"},"content":"     * @param myList","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"charltonator"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"charltonator"},"content":"    private void list(LinkedList\u003cTask\u003e myList) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"charltonator"},"content":"        if (myList.isEmpty()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"charltonator"},"content":"            throw new DukeException(\"Yo! Your list looks empty to me!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"charltonator"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"charltonator"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"charltonator"},"content":"        while(counter \u003c myList.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"charltonator"},"content":"            System.out.println((counter + 1) + \".\" + myList.get(counter).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"charltonator"},"content":"            counter +\u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"charltonator"},"content":"     * Method to echo the input by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"charltonator"},"content":"    private void echo() {","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"charltonator"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"charltonator"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"charltonator"},"content":"            String nextLine \u003d inputScanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"charltonator"},"content":"            if (nextLine.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"charltonator"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"charltonator"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"charltonator"},"content":"                System.out.println(nextLine);","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"charltonator"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"charltonator"},"content":"     * Method to print the exit message and stop the program.","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"charltonator"},"content":"    private void exit() {","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"charltonator"},"content":"        String exitMessage \u003d \"Leaving just like that? Fine. See you soon I guess.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"charltonator"},"content":"        System.out.println(exitMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":217,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":218,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":218}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * A Task class which provides the basic skeleton for what a Task should have.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"    private boolean done;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"    private String title;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"     * Constructor.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"     * @param title the title of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    public Task(String title) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"     * Method to set the status of the Task to done.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"     * @param status the value that done is to be set to.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"    public void setDone(boolean status) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"        done \u003d status;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"        System.out.println(String.format(\"Nice! I\u0027ve marked this task as done:\\n[X]\" + this.title));","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"     * Retrieve the status of the task (done or not).","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"     * @return a boolean.","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"        return this.done;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"     * Method that returns the title of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"    public String getTitle() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"        return this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"charltonator"},"content":"     * Method that retrieves info of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"charltonator"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"charltonator"},"content":"        return \"[ ] \" + this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"charltonator"},"content":"     * Overriden toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"charltonator"},"content":"     * @return a String.","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"charltonator"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"charltonator"},"content":"        if (!done) {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"charltonator"},"content":"            return \"[ ] \" + this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"charltonator"},"content":"            return \"[X] \" + this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":69}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":" * Todo class which inherits from a Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charltonator"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"charltonator"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charltonator"},"content":"     * Constructor for a Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charltonator"},"content":"     * @param title takes in the title of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charltonator"},"content":"    public Todo(String title)  {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"charltonator"},"content":"        super(title);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"charltonator"},"content":"        if (title.replaceAll(\"\\\\s+\", \"\").length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charltonator"},"content":"     * method to get the info of this Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"charltonator"},"content":"     * @return a String that describes the Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"charltonator"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"charltonator"},"content":"        return \"[T][ ]\" + this.getTitle();","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"charltonator"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"charltonator"},"content":"     * The toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"charltonator"},"content":"     * @return a String describing the Todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"charltonator"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"charltonator"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"charltonator"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"charltonator"},"content":"        if (!this.getDone()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[T][ ]\" + this.getTitle());","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"charltonator"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"charltonator"},"content":"            return String.format(\"[T][X]\" + this.getTitle());","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"charltonator"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"charltonator"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"charltonator"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"charltonator"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"charltonator"},"content":"deadline buy food /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"charltonator"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"charltonator":2}}]
