[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"### DUKE ","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen (source)","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"Hi this is my Duke program! It\u0027s","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"- _Fun_ üëç ","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"- Easy to use","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"- text-based","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"Steps to use:","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"1. Download from [here](https://github.com/nus-cs2103-AY2122S1/ip/pull/461)","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"2. Run","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"3. **Use!**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"Features:","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"- [x] Managing tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"- [ ] GUI","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"Sample code `main` :","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"```java","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernardwan":22,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernardwan":16,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"todo | 0 | Do","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"event | 0 | Dinner with Friends  | 2021-10-10","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"todo | 0 | test","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"todo | 0 | test","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"todo | 0 | ts","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"todo | 0 | test3","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"todo | 0 | test44","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"todo | 0 | sdfaafd","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"bernardwan":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"Magnolia is a desktop app for managing your tasks. It is simple and lightweight.","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"Tasks can be added to the list through simple commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"### Add Task","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"Adds a task to the list. There are 4 tasks. Todos, Events, Deadlines, and Withins.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"* Todos are the most simple task with just a description","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"* Events also have a date in which it occurs","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"* Deadlines have the deadline of the task","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"* Within tasks have 2 dates for the timeframe to complete the task","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"### Delete Task","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"Delete task from list.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"### Find Task","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"Find tasks in list using keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"### List Tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"Show a list of all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"### Mark Task","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"Mark task as complete","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"### `Add Task` ","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"Add task to list.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"Format: ","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"* `todo DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"* `event DESCRIPTION at DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"* `deadline DESCRIPTION by DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"* `within DESCRIPTION between DATE and DATE`","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"Date in YYYY-MM-DD format","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"* `todo Clean Room`","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"* `within Cancel Subscription between 2021-09-10 and 2021-10-05`","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"* `event Dinner with Family at 2021-09-17`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"### `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"Deletes task from list.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"Format: `delete NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"Number is index of task to be deleted","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"Example of usage: `delete 3`","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"### `find`","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"Finds tasks that matches keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"Format: `find KEYWORDS`","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"Example of usage: `find homework`","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"### `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"Lists all tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"### `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"Marks task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"Format: `done NUMBER`","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"Number is index of task to be marked","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"Example of usage: `done 4`","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"bernardwan":70,"-":17}},{"path":"src/main/java/duke/Command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.Parser.Type;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":" * Command to add task to list","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    private Type type;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    private String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     * Constructor for AddCommand","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"     * @param type Type of task","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"     * @param description Description of task","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    public AddCommand(Type type, String description) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * Adds task to list","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"     * @return Confirmation message","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when incorrect input","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        switch (type) {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        case todo:","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"            task \u003d new Task.Todo(description, false);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        case deadline:","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"            String[] temp1 \u003d description.split(\"by \");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"                task \u003d new Task.Deadline(temp1[0], false, temp1[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Format of deadline command is: \u0027deadline DESCRIPTION by DATE\u0027\");","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"        case event:","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"            String[] temp2 \u003d description.split(\"at \");","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"                task \u003d new Task.Event(temp2[0], false, temp2[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Format of event command is: \u0027event DESCRIPTION at DATE\u0027\");","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        case within:","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"            String[] temp3 \u003d description.split(\"between | and \");","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"                task \u003d new Task.Within(temp3[0], false, temp3[1], temp3[2]);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Format of within command is: \u0027within DESCRIPTION between DATE and DATE\u0027\");","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        assert task !\u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (\"Added: \" + task.getTaskType() + task.getStatusIcon() + \" \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (\"There are \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"     * Checks if Command is ExitCommand","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"     * @return false","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":90}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"     * Executes command based on which command it is","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"     * @return Confirmation message","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"     * Checks if Command is ExitCommand","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"     * @return true if ExitCommand","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":26}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":" * Command to delete task from list","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"    private int index;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * Constructs delete command","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * @param index Index of task to be deleted","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"     * Delete task from list","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     * @return Confirmation message","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when problem deleting task","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        assert tasks.size() \u003d\u003d size - 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (\"Deleted:\\n\" + task.getDescription() + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (\"There are \" + tasks.size() + \" tasks remaining in the list\");","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":47}},{"path":"src/main/java/duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":" * Command to mark task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    private int index;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * Constructs done command","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     * @param index Index of task to be marked as done","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"     * Marks task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * @return Confirmation message","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when problem saving tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d tasks.doneTask(this.index);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        return (\"Marked as done:\\n\" + task.getDescription());","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":43}},{"path":"src/main/java/duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":" * Command to exit program","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"     * Exits program","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * @return Confirmation message","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":28}},{"path":"src/main/java/duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":" * Command to find tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    private String keyword;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * Constructs find command","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     * @param keyword keyword used to search tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"     * Finds tasks that matches keyword","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * @return List of tasks found","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.getList();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        list.removeIf(task -\u003e !task.getDescription().contains(this.keyword));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"            result +\u003d (\"No matching tasks found.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"            result +\u003d (list.size() + \" matching task(s):\" + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"            result +\u003d (new TaskList(list).allTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"bernardwan":49}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":" * Command to list all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"     * List all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"     * @param tasks Current TaskList","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"     * @param ui Ui object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * @param storage Storage object of bot","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     * @return List of all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (\"All tasks:\" + \"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        result +\u003d (tasks.allTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":31}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":" * Dialog box of chat box. From JavaFX tutorial.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"        displayPicture.setClip(new Circle(displayPicture.getFitWidth() / 2,","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"                displayPicture.getFitHeight() / 2.1, 37));","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"     * Get user dialog","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"     * @param text User text","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"     * @param img User image","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"     * @return User dialog box","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"     * Get bot dialog","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"     * @param text Bot text","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"     * @param img Bot image","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"     * @return Bot dialog box","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"        db.flip();","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":74}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.Command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":" * Main class of the bot","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * Constructs Duke object with Ui, Storage and Tasklist.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public Duke() {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * Executes command and returns the reply","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * @param input User input entered","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     * @return The reply by bot","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"            return output;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":43,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":" * DukeException when any error in task bot","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bernardwan":11}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":" * Launches application","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     * Starts window. From JavaFX tutorial.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"     * @param stage Stage used","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls. From JavaFX tutorial.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/default_user.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/magnolia.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greet(), dukeImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"     * the dialog container. Clears the user input after processing. From JavaFX tutorial.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import duke.Command.AddCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import duke.Command.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import duke.Command.DeleteCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import duke.Command.DoneCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.Command.ExitCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import duke.Command.FindCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import duke.Command.ListCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":" * Class with methods to parse user input","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * List of valid commands","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    public enum Type {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"        bye,","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        list,","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        done,","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        delete,","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        find,","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        todo,","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"        deadline,","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"        event,","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"        within","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * Parses the input provided into relevant Commands","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"     * @param input String of next line of user input","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"     * @return Relevant Command corresponding to input","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when invalid input","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"        Type firstWord \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"            firstWord \u003d Type.valueOf(input.split(\" \")[0]);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"            throw new DukeException(\"Sorry, I don\u0027t understand what that means. :(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        assert firstWord !\u003d null;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        String errorMsg;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"        case bye:","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        case list:","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"        case done:","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"            errorMsg \u003d \"Sorry, please enter an integer after \u0027done\u0027. (e.g. done 2)\";","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"            int index \u003d Integer.parseInt(secondParameter(input, errorMsg)) - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        case delete:","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            errorMsg \u003d \"Sorry, please enter an integer after \u0027delete\u0027. (e.g. delete 2)\";","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"            int index2 \u003d Integer.parseInt(secondParameter(input, errorMsg)) - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"            return new DeleteCommand(index2);","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        case find:","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"            errorMsg \u003d \"Sorry, please enter a keyword after \u0027find\u0027.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"            String remaining \u003d secondParameter(input, errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"            return new FindCommand(remaining);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"            errorMsg \u003d \"Sorry, tasks must include descriptions.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"            String remaining2 \u003d secondParameter(input, errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"            return new AddCommand(firstWord, remaining2);","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * Gets the parameter after the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     * @param input Input to be parsed","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"     * @param error Error Message if nothing after command","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"     * @return String of second parameter","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when nothing after command","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    private static String secondParameter(String input, String error) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"            return input.split(\" \", 2)[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"            throw new DukeException(error);","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":" * Class that handles storing and loading data","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    private String filepath;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     * Constructs new storage object","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"     * @param filepath filepath to store data","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * Loads task data from storage","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * @return ArrayList of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException when file not found","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        File listData \u003d new File(filepath);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"        Scanner reader;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"            reader \u003d new Scanner(listData);","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"            String line \u003d reader.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"            String[] data \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"            switch (data[0]) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"                list.add(new Task.Todo(data[2], data[1].equals(\"0\") ? false : true));","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"                list.add(new Task.Deadline(data[2], data[1].equals(\"0\") ? false : true, data[3]));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"                list.add(new Task.Event(data[2], data[1].equals(\"0\") ? false : true, data[3]));","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            case \"within\":","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"                list.add(new Task.Within(data[2], data[1].equals(\"0\") ? false : true, data[3], data[4]));","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"                break;","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"            default:","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Invalid input\");","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"        reader.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        return list;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"     * Saves all tasks in TaskList to filepath of storage","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * @param list TaskList to be saved","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"            File listData \u003d new File(filepath);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"            FileWriter myWriter \u003d new FileWriter(listData);","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"            myWriter.write(list.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":83}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":" * Task class that includes Todos, Events, Deadline and Within.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"public class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"    protected boolean isComplete;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * Constructs generic Task object","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     * @param description Description of task","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     * @param isComplete Completion status of Task","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"    private Task(String description, boolean isComplete) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"     * Returns the corresponding status icon","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     * @return Corresponding status icon","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        return (isComplete ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"        return this.description;","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"    public void setComplete(boolean complete) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        this.isComplete \u003d complete;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"         * Constructs Todo task","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"         * @param description Description for the task","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"         * @param status Completion status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"        public Todo(String description, boolean status) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"            super(description, status);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"        public String getTaskType() {","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"            return \"[T]\";","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"         * Formats task information into String format to be saved onto storage","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"         * @return String containing task info","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"        public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"            return \"todo\" + \" | \" + (this.isComplete ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"        private LocalDate by;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"         * Constructs Deadline task","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"         * @param description Description for the task","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"         * @param status Completion status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"         * @param by Deadline of task in YYYY-MM-DD format","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        public Deadline(String description, boolean status, String by) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"            super(description, status);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"                this.by \u003d LocalDate.parse(by, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Please enter date in format YYYY-MM-DD\");","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"        public String getTaskType() {","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"            return \"[D]\";","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"bernardwan"},"content":"         * Returns description of task including deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"         * @return Description of task including deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"        public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"            return super.getDescription() + \"(by: \"","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"                    + this.by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"         * Formats task information into String format to be saved onto storage","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"         * @return String containing task info","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"        public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"            return \"deadline\" + \" | \" + (this.isComplete ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"    public static class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"        private LocalDate at;","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"bernardwan"},"content":"         * Constructs Event task","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"bernardwan"},"content":"         * @param description Description for the task","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"bernardwan"},"content":"         * @param status Completion status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"bernardwan"},"content":"         * @param at Deadline of task in YYYY-MM-DD format","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"bernardwan"},"content":"        public Event(String description, boolean status, String at) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"bernardwan"},"content":"            super(description, status);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"bernardwan"},"content":"                this.at \u003d LocalDate.parse(at, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"bernardwan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Please enter date in format YYYY-MM-DD\");","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"bernardwan"},"content":"        public String getTaskType() {","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"bernardwan"},"content":"            return \"[E]\";","lastModifiedDate":"2021-08-20"},{"lineNumber":146,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":147,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":148,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"bernardwan"},"content":"         * Returns description of task including date","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"bernardwan"},"content":"         * @return Description of task including date","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":154,"author":{"gitId":"bernardwan"},"content":"        public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":155,"author":{"gitId":"bernardwan"},"content":"            return super.getDescription() + \"(at: \"","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"bernardwan"},"content":"                    + this.at.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":158,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":159,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"bernardwan"},"content":"         * Formats task information into String format to be saved onto storage","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"bernardwan"},"content":"         * @return String containing task info","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"bernardwan"},"content":"        public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"bernardwan"},"content":"            return \"event\" + \" | \" + (this.isComplete ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.at;","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":170,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"bernardwan"},"content":"    public static class Within extends Task {","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"bernardwan"},"content":"        private LocalDate firstDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"bernardwan"},"content":"        private LocalDate secondDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"bernardwan"},"content":"         * Constructs Within task","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"bernardwan"},"content":"         * @param description Description for the task","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"bernardwan"},"content":"         * @param status Completion status of task","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"bernardwan"},"content":"         * @param firstDate Starting timeframe of task in YYYY-MM-DD format","lastModifiedDate":"2021-09-10"},{"lineNumber":181,"author":{"gitId":"bernardwan"},"content":"         * @param secondDate Ending timeframe of task in YYYY-MM-DD format","lastModifiedDate":"2021-09-10"},{"lineNumber":182,"author":{"gitId":"bernardwan"},"content":"         * @throws DukeException When date format is incorrect","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"bernardwan"},"content":"        public Within(String description, boolean status, String firstDate, String secondDate) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"bernardwan"},"content":"            super(description, status);","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"bernardwan"},"content":"            try {","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"bernardwan"},"content":"                this.firstDate \u003d LocalDate.parse(firstDate, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"bernardwan"},"content":"                this.secondDate \u003d LocalDate.parse(secondDate, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"bernardwan"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"bernardwan"},"content":"                throw new DukeException(\"Please enter date in format YYYY-MM-DD\");","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"bernardwan"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":194,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":195,"author":{"gitId":"bernardwan"},"content":"        public String getTaskType() {","lastModifiedDate":"2021-09-10"},{"lineNumber":196,"author":{"gitId":"bernardwan"},"content":"            return \"[W]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":197,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":198,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":199,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-09-10"},{"lineNumber":200,"author":{"gitId":"bernardwan"},"content":"         * Returns description of task including date","lastModifiedDate":"2021-09-10"},{"lineNumber":201,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-09-10"},{"lineNumber":202,"author":{"gitId":"bernardwan"},"content":"         * @return Description of task including date","lastModifiedDate":"2021-09-10"},{"lineNumber":203,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-09-10"},{"lineNumber":204,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":205,"author":{"gitId":"bernardwan"},"content":"        public String getDescription() {","lastModifiedDate":"2021-09-10"},{"lineNumber":206,"author":{"gitId":"bernardwan"},"content":"            return super.getDescription() + \"(between \"","lastModifiedDate":"2021-09-10"},{"lineNumber":207,"author":{"gitId":"bernardwan"},"content":"                    + this.firstDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG))","lastModifiedDate":"2021-09-10"},{"lineNumber":208,"author":{"gitId":"bernardwan"},"content":"                    + \" and \"","lastModifiedDate":"2021-09-10"},{"lineNumber":209,"author":{"gitId":"bernardwan"},"content":"                    + this.secondDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";","lastModifiedDate":"2021-09-10"},{"lineNumber":210,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":211,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":212,"author":{"gitId":"bernardwan"},"content":"        /**","lastModifiedDate":"2021-09-10"},{"lineNumber":213,"author":{"gitId":"bernardwan"},"content":"         * Formats task information into String format to be saved onto storage","lastModifiedDate":"2021-09-10"},{"lineNumber":214,"author":{"gitId":"bernardwan"},"content":"         *","lastModifiedDate":"2021-09-10"},{"lineNumber":215,"author":{"gitId":"bernardwan"},"content":"         * @return String containing task info","lastModifiedDate":"2021-09-10"},{"lineNumber":216,"author":{"gitId":"bernardwan"},"content":"         */","lastModifiedDate":"2021-09-10"},{"lineNumber":217,"author":{"gitId":"bernardwan"},"content":"        @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":218,"author":{"gitId":"bernardwan"},"content":"        public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":219,"author":{"gitId":"bernardwan"},"content":"            return \"within\" + \" | \" + (this.isComplete ? \"1\" : \"0\") + \" | \" + this.description + \" | \"","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"bernardwan"},"content":"                    + this.firstDate + \" | \" + this.secondDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":221,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":222,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":223,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":224,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"bernardwan":224}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":" * Handles any interaction with task list","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"     * Constructs an empty TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     * Constructs a TaskList using an ArrayList of Tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"     * @param list ArrayList of Tasks to be used","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"     * Adds Task to TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"     * @param task","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        list.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"bernardwan"},"content":"     * Returns a copy of the list","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"bernardwan"},"content":"     * @return ArrayList copy containing all of the tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"bernardwan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cTask\u003e list \u003d (ArrayList\u003cTask\u003e) this.list.clone();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"bernardwan"},"content":"        return list;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"bernardwan"},"content":"     * Obtains Task from TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"bernardwan"},"content":"     * @param index Index of task to be retrieved","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"bernardwan"},"content":"     * @return Task corresponding to index","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"bernardwan"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"bernardwan"},"content":"        Task task;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"bernardwan"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"bernardwan"},"content":"            task \u003d list.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"bernardwan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"bernardwan"},"content":"            throw new DukeException(\"Sorry, there are only \" + list.size() + \" tasks.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"bernardwan"},"content":"        return task;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"bernardwan"},"content":"     * Deletes Task from TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"bernardwan"},"content":"     * @param index Index of task to be deleted","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"bernardwan"},"content":"     * @return Task that was deleted from list","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"bernardwan"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"bernardwan"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"bernardwan"},"content":"        return task;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"bernardwan"},"content":"     * Sets Task from TaskList to completed","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"bernardwan"},"content":"     * @param index Index of task to be completed","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"bernardwan"},"content":"     * @return Task that was completed","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"bernardwan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"bernardwan"},"content":"    public Task doneTask(int index) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d getTask(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"bernardwan"},"content":"        task.setComplete(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"bernardwan"},"content":"        return task;","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"bernardwan"},"content":"     * Outputs list of all Tasks with descriptions","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"bernardwan"},"content":"     * @return List of all Tasks with descriptions","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"bernardwan"},"content":"    public String allTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"bernardwan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"bernardwan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"bernardwan"},"content":"        for (Task item : list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"bernardwan"},"content":"            result +\u003d i + \". \" + item.getTaskType() + item.getStatusIcon() + \" \" + item.getDescription() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"bernardwan"},"content":"            i++;","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"bernardwan"},"content":"        return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"bernardwan"},"content":"     * Returns size of list","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"bernardwan"},"content":"     * @return Current size of task list","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"bernardwan"},"content":"    public int size() {","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"bernardwan"},"content":"        return list.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"bernardwan"},"content":"     * Gets toString() of all tasks in list","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"bernardwan"},"content":"     * @return String containing all tasks in list","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"bernardwan"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"bernardwan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"bernardwan"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"bernardwan"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"bernardwan"},"content":"            data +\u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"bernardwan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"bernardwan"},"content":"        return data;","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":127}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":" * UI related methods","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"     * Greets user with a simple message","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"    public static String greet() {","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"        return (\"Hello! I\u0027m Magnolia\\n\" + \"What can I do for you?\");","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"     * Shows user an error message","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"     * @param message Error message to be shown","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bernardwan":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"Infinity\" prefWidth\u003d\"300.0\" style\u003d\"-fx-background-color: white; -fx-border-insets: 10; -fx-background-insets: 10; -fx-padding: 10; -fx-border-radius: 14; -fx-background-radius: 14;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 10; -fx-border-insets: 10; -fx-background-insets: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"            \u003cFont name\u003d\"Courier New\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: cornflowerblue; -fx-padding: 15;\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernardwan":26}},{"path":"src/test/java/dukeTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package dukeTest;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":" * Test class for TaskList class","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"    public void addTaskTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"bernardwan"},"content":"        TaskList test \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d new Task.Deadline(\"test\", false, \"2021-12-12\");","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"bernardwan"},"content":"        test.addTask(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"bernardwan"},"content":"        assertEquals(task,","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"bernardwan"},"content":"                test.getTask(0));","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"bernardwan"},"content":"    public void removeTaskTest() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d new Task.Deadline(\"test\", false, \"2021-12-12\");","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"bernardwan"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"bernardwan"},"content":"        temp.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"bernardwan"},"content":"        TaskList test \u003d new TaskList(temp);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"bernardwan"},"content":"        test.deleteTask(0);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"bernardwan"},"content":"        assertEquals(new TaskList().size(), test.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bernardwan":36}},{"path":"src/test/java/dukeTest/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernardwan"},"content":"package dukeTest;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"bernardwan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernardwan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"bernardwan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"bernardwan"},"content":"import duke.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernardwan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"bernardwan"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"bernardwan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"bernardwan"},"content":"    public void toStringTest() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"bernardwan"},"content":"        Task task \u003d new Task.Deadline(\"Clean room\", false, \"2021-12-12\");","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"bernardwan"},"content":"        assertEquals(\"deadline | 0 | Clean room | 2021-12-12\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"bernardwan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"bernardwan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"bernardwan":19}}]
