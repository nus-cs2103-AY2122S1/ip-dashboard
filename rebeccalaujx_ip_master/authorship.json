[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rebeccalaujx":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"repositories {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"dependencies {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"rebeccalaujx":21,"-":46}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"D | 0 |  hey | Feb 02 2020","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Assertions","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"rebeccalaujx":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    private void flip() {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"        db.flip();","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"        return db;","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"rebeccalaujx":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":" * Main Duke class.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"public class Duke {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"    public Duke() { }","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"     * @param filePath Path of the .txt file the tasks are stored in.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            System.out.println(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"            ui.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"            ui.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     * Runs the Duke program.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"                Command c \u003d Parser.parse(new Input(scanner.nextLine().trim()));","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"                ui.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"        scanner.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"     * Main argument for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"rebeccalaujx"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"rebeccalaujx"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"rebeccalaujx"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"rebeccalaujx"},"content":"            Command c \u003d Parser.parse(new Input(input));","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"rebeccalaujx"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"rebeccalaujx"},"content":"            return ui.getErrorMessage(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":78,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":" * DukeException class to handle errors in Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"     * @param message Error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"        super(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":16}},{"path":"src/main/java/duke/Input.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"public class Input {","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"    private String input;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"    public Input(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"    public String getDescription(String tag) {","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"        if (tag.equals(\"todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"            return input.replaceFirst(\"^todo\", \"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"            return this.input.replaceFirst(\"^deadline\", \"\").split(\" /\")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"            return this.input.replaceFirst(\"^event\", \"\").split(\" /\")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"        return \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    public String getDate(String tag) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        if (tag.equals(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"            return this.input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            return this.input.substring(input.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"        return \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    public int getIndex(String tag) {","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"        if (tag.equals(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"            return Integer.valueOf(this.input.substring(7)) - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"            return Integer.valueOf(this.input.substring(5)) - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        return 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"        return this.input.substring(5);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean checkIfContains(String keyword) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"        return this.input.contains(keyword);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean hasCommandWordOnly(String tag) {","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"        if (tag.equals(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"            return (this.input.equals(\"delete\") || input.equals(\"delete \"));","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"            return (equals(\"done\") || input.equals(\"done \"));","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"        return this.input.equals(o);","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"    public String checkType() {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"            return \"bye\";","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"            return \"list\";","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"rebeccalaujx"},"content":"            return \"done\";","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"rebeccalaujx"},"content":"            return \"delete\";","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"rebeccalaujx"},"content":"            return \"find\";","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"rebeccalaujx"},"content":"            return \"todo\";","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"rebeccalaujx"},"content":"            return \"deadline\";","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"rebeccalaujx"},"content":"            return \"event\";","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"rebeccalaujx"},"content":"            return \"error\";","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"rebeccalaujx":83}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"rebeccalaujx":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            stage.show();","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"rebeccalaujx":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     * Initialises the MainWindow.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     * Setter for Duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"     * @param d Instance of Duke used.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"rebeccalaujx":63}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":" * Class for parsing the user commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns commands according to the uder input.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"     * @return The respective commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    public static Command parse(Input input) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        String tag \u003d input.checkType();","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"        if (tag.equals(\"bye\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"list\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"find\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"            return new FindCommand(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"todo\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (tag.equals(\"event\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"            return new EventCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"            return new ErrorCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":48}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.File;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":" * Storage class for saving the tasks to the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    private String filePath;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    private PrintWriter writer;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    private TaskList ls;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * @param filePath Path for the .txt file that the tasks are stored in.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"     * Rewrites the .txt file according to the updated TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls The current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"    public void rewriteFile(TaskList ls) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"            FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"            writer \u003d new PrintWriter(fw);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"        for (int i \u003d 0; i \u003c ls.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"            Task task \u003d ls.getTask(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"            String desc \u003d task.getDesc();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"            String addOns \u003d task.additionalDates();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"            if (taskString.startsWith(\"\\t[T]\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"                writer.println(\"T\" + (task.isDone() ? \" | 1 | \" : \" | 0 | \") + desc);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"            } else if (taskString.startsWith(\"\\t[D]\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"                writer.println(\"D\" + (ls.getTask(i).isDone() ? \" | 1 | \" : \" | 0 | \")","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"                        + desc + \" | \" + addOns);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"            } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"                writer.println(\"E\" + (task.isDone() ? \" | 1 | \" : \" | 0 | \")","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"                        + desc + \" | \" + addOns);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"        writer.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"rebeccalaujx"},"content":"     * Loads the saved tasks in the hard disk into a TaskList object.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A TaskList object representative of the current tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws IOException If there are issues with reading the file in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"rebeccalaujx"},"content":"    public TaskList load() throws IOException, DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"rebeccalaujx"},"content":"        TaskList ls \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"rebeccalaujx"},"content":"        File directory \u003d new File(\"duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"rebeccalaujx"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"rebeccalaujx"},"content":"            directory.mkdir();","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"rebeccalaujx"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"rebeccalaujx"},"content":"        data.createNewFile();","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"rebeccalaujx"},"content":"        Scanner s \u003d new Scanner(data);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"rebeccalaujx"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"rebeccalaujx"},"content":"            ls.addTask(parseTask(s.nextLine()));","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"rebeccalaujx"},"content":"        return ls;","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"rebeccalaujx"},"content":"     * Parses the String representation of the tasks and returns their Task representation.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input String representation of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Task representation of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"rebeccalaujx"},"content":"    public Task parseTask(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.startsWith(\"T\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"rebeccalaujx"},"content":"            String taskDesc \u003d input.substring(7);","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"rebeccalaujx"},"content":"            Todo tTask \u003d new Todo(taskDesc);","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"rebeccalaujx"},"content":"            return tTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"rebeccalaujx"},"content":"        } else if (input.startsWith(\"D\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"rebeccalaujx"},"content":"            String taskDesc \u003d input.substring(7);","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"rebeccalaujx"},"content":"            String taskDate \u003d getDate(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"rebeccalaujx"},"content":"            Deadline dTask \u003d new Deadline(taskDesc, taskDate);","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"rebeccalaujx"},"content":"            return dTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"rebeccalaujx"},"content":"            String taskDesc \u003d input.substring(7);","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"rebeccalaujx"},"content":"            String taskDate \u003d getDate(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"rebeccalaujx"},"content":"            Event eTask \u003d new Event(taskDesc, taskDate);","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"rebeccalaujx"},"content":"            return eTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"rebeccalaujx"},"content":"     * Gets the date of the tasks for Deadlines and Events.","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input String representation of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"rebeccalaujx"},"content":"     * @return String representation of the date of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"rebeccalaujx"},"content":"    public String getDate(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"rebeccalaujx"},"content":"        int endIndex \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"rebeccalaujx"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"rebeccalaujx"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"rebeccalaujx"},"content":"            if (input.charAt(i) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"rebeccalaujx"},"content":"                if (count \u003d\u003d 3) {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"rebeccalaujx"},"content":"                    endIndex \u003d i;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"rebeccalaujx"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"rebeccalaujx"},"content":"        return input.substring(endIndex);","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"rebeccalaujx":134}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Find;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates the Ui in Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private Scanner sc;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    private String input \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    public Ui() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns welcome statement.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Welcome statement.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"Hello from\\n\" + logo + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"                + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns closing statement.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Closing statement.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"    public String goodbye() {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns Ui for adding task to list.","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"     * @param size Updated number of items on the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Ui for adding task to list.","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"    public String addTaskToList(Task task, int size) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"        String taskToString \u003d task.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"Got it. I\u0027ve added this task: \\n\" + taskToString","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints Ui for setting task as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"     * @param task Done task.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"    public String setTaskAsDone(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"        assert !task.equals(null) : \"task does not exist\";","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints Ui for removing task from the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"rebeccalaujx"},"content":"     * @param task Task to be removed.","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"rebeccalaujx"},"content":"     * @param size Updated number of items on the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"rebeccalaujx"},"content":"    public String removeTaskFromList(Task task, int size) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"rebeccalaujx"},"content":"        assert !task.equals(null) : \"task does not exist\";","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"rebeccalaujx"},"content":"        String taskToString \u003d task.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"Noted. I\u0027ve removed this task: \\n\" + taskToString","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"rebeccalaujx"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints the current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"rebeccalaujx"},"content":"     * @param taskList The current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"rebeccalaujx"},"content":"    public String printTaskList(TaskList taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"rebeccalaujx"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"rebeccalaujx"},"content":"            return \"There are currently no tasks in your list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"rebeccalaujx"},"content":"            String ls \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"rebeccalaujx"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"rebeccalaujx"},"content":"                ls +\u003d (i + 1) + \".\" + taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"rebeccalaujx"},"content":"            return ls;","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"rebeccalaujx"},"content":"     * Searches for the keyword among current Tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"rebeccalaujx"},"content":"     * @param word Keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"rebeccalaujx"},"content":"     * @param find Current Find object.","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"rebeccalaujx"},"content":"     * @return String representation of the Tasks that include the keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"rebeccalaujx"},"content":"    public String printListWithKeyword(TaskList ls, String word, Find find) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"rebeccalaujx"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"rebeccalaujx"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"rebeccalaujx"},"content":"        for (int i \u003d 0; i \u003c ls.getSize(); i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"rebeccalaujx"},"content":"            Task task \u003d ls.getTask(i);","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"rebeccalaujx"},"content":"            if (task.getDesc().toLowerCase().contains(word.toLowerCase())) {","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"rebeccalaujx"},"content":"                find.setFound();","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"rebeccalaujx"},"content":"                result +\u003d count + \".\" + ls.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"rebeccalaujx"},"content":"                count++;","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"rebeccalaujx"},"content":"        return result;","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints a message when all current Tasks do not contain the keyword provided.","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"rebeccalaujx"},"content":"     * @param word Keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"rebeccalaujx"},"content":"    public String noResultsFound(String word) {","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"There were no tasks that included your keyword: \" + word + \".\");","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints DukeException errors.","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"rebeccalaujx"},"content":"     * @param e Error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"rebeccalaujx"},"content":"    public String getErrorMessage(Exception e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"rebeccalaujx"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns String representation of Task status.","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"rebeccalaujx"},"content":"     * @param status Boolean representation of Task status, true for done and false for undone.","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"rebeccalaujx"},"content":"     * @return String representation of Task status, \"X\" for done and \" \" for undone.","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"rebeccalaujx"},"content":"    public String taskStatusIcon(boolean status) {","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"rebeccalaujx"},"content":"        return (status ? \"X\" : \" \");","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":150}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":" * Abstract class to encapsulate commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public abstract String execute(TaskList ls, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system whether the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     * @return True if command is \"bye\".","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rebeccalaujx":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to create Deadline tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private String taskDesc \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    private String deadline \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input User\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public DeadlineCommand(Input input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        this.taskDesc \u003d input.getDescription(\"deadline\");","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.checkIfContains(\"/by\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"            this.deadline \u003d input.getDate(\"deadline\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * Creates a new Deadline object and adds it to the current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If Deadline object is invalid due to invalid input.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"        Deadline dTask \u003d new Deadline(taskDesc, deadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(dTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"        storage.rewriteFile(ls);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.addTaskToList(dTask, ls.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":54}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to delete tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public DeleteCommand(Input input) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.hasCommandWordOnly(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"A number must follow after the command word \u0027delete\u0027.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            this.taskNumber \u003d input.getIndex(\"delete\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"OOPS! Please enter a valid task number.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"     * Removes task from current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d ls.getSize()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"Item does not exist in the list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"        Task task \u003d ls.getTask(taskNumber);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        ls.removeTask(taskNumber);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"        storage.rewriteFile(ls);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.removeTaskFromList(task, ls.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rebeccalaujx":60}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to mark tasks as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public DoneCommand(Input input) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.hasCommandWordOnly(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"A number must follow after the command word \u0027done\u0027.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            this.taskNumber \u003d input.getIndex(\"done\");;","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"OOPS! Please enter a valid task number.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"     * Marks item as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        if (taskNumber \u003c 0 || taskNumber \u003e\u003d ls.getSize()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"Item does not exist in the list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"        Task task \u003d ls.getTask(taskNumber);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        task.setDone();","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"        storage.rewriteFile(ls);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.setTaskAsDone(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rebeccalaujx":60}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":" * Command to throw an DukeException error is the user input is not a valid command.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"     * Throws a DukeException error if the user input is not a valid command.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is not a valid command.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to create Event tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private String taskDesc \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    private String eventDate \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public EventCommand(Input input) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        this.taskDesc \u003d input.getDescription(\"event\");","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        if (input.checkIfContains(\"/at\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"            this.eventDate \u003d input.getDate(\"event\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"☹ OOPS!!! Please use the /at command to include the time of event.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     * Creates a new Event object and adds it to the current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"        Event eTask \u003d new Event(taskDesc, eventDate);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(eTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        storage.rewriteFile(ls);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.addTaskToList(eTask, ls.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":" * Command to signal for the system to exit.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"     * Exits the program.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.goodbye();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * @return True.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rebeccalaujx":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Find;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to signal the system to search for given keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private String keyword;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    public FindCommand(Input input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"        this.keyword \u003d input.getKeyword();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"     * Searches for the keyword in the current tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is invalid","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        Find f \u003d new Find(keyword, ls);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        return f.findWord();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"rebeccalaujx":47}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":" * Command to print current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.printTaskList(ls);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rebeccalaujx":35}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Input;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Command to create Todo tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private String taskDesc;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    public TodoCommand(Input input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"        this.taskDesc \u003d input.getDescription(\"todo\");","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"     * Creates a new Todo object and adds it to the current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current list.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ui Current Ui.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * @param storage Current version of the saved tasks in the hard disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    public String execute(TaskList ls, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        Todo tTask \u003d new Todo(taskDesc);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(tTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"        storage.rewriteFile(ls);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.addTaskToList(tTask, ls.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals to the system that the command is not an exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"     * @return False.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"rebeccalaujx":49}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates Deadline tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * @param deadline Date of deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is not valid.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    public Deadline(String description, String deadline) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        if (deadline.equals(\"\") || deadline.equals(\" \")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"☹ OOPS!!! The deadline of this task must be indicated.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"                LocalDate localDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"                this.deadline \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"                throw new DukeException(\"duke.task.Deadline should be in a yyyy-mm-dd format.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        return \"\\t[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the date of the deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A String representation of the date of the deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    public String additionalDates() {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates Event tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    protected String at;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @param description Description of Event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * @param at Date of event.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user inpyt is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"        if (at.equals(\"\") || at.equals(\" \")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"☹ OOPS!!! The time of the event must be indicated.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"            try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"                LocalDate localDate \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"                this.at \u003d localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"                throw new DukeException(\"duke.task.Event date should be in a yyyy-mm-dd format.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the Event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A String representation of the Event task","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"        return \"\\t[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the date of the event.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A String representation of the date of the event.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    public String additionalDates() {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"        return this.at;","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":56}},{"path":"src/main/java/duke/task/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates searches for keywords among current Tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"public class Find {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"    private boolean isFound;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"    private String word;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"    private TaskList ls;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"    private String result;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Find.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @param word Keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     * @param ls Current TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public Find(String word, TaskList ls) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        this.isFound \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        this.word \u003d word;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        this.ls \u003d ls;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * Prints out the list of Tasks that include the keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"    public String findWord() {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"        if (!this.isFound) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"            return this.result \u003d ui.printListWithKeyword(ls, word, this);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        if (this.result.isEmpty()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"            return ui.noResultsFound(word);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"            return this.result;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"     * Signals that there are Tasks with the keyword by setting the isFound boolean to true.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    public void setFound() {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"        this.isFound \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"rebeccalaujx":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"public class Task {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"        if (description.equals(\"\") || description.equals(\" \")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"            this.description \u003d description.substring(1);","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * Represents undone tasks with a space and done tasks with an \"X\".","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     * @return \" \" for undone tasks and \"X\" for done tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        return ui.taskStatusIcon(isDone);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A String representation of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"[\" + getStatusIcon() + \"] \" + description);","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns the task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Task description","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"    public String getDesc() {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"        return this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"rebeccalaujx"},"content":"     * Sets tasks as done by setting the isDone boolean to true.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"rebeccalaujx"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"rebeccalaujx"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"rebeccalaujx"},"content":"     * Checks the status of the task by checking the status of the isDone boolean.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"rebeccalaujx"},"content":"     * @return True of the task is done, false if the task is undone.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"rebeccalaujx"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"rebeccalaujx"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns additional dates (if any).","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Additional dates.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"rebeccalaujx"},"content":"    public String additionalDates() {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"rebeccalaujx"},"content":"        return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates Tasklists.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"public class TaskList {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"    private ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"        this.tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * Adds task to current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * @param task Task to be added to current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        this.tasklist.add(task);","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     * Removes task from current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * @param index Index of the task to be removed from current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"        this.tasklist.remove(index);","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"     * Retrieves task from current TaskList by their index.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"     * @param index Index of the task to be retrieved.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Task at the index.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"rebeccalaujx"},"content":"        return this.tasklist.get(index);","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns the number of items in the current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rebeccalaujx"},"content":"     * @return Number of items in the current TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"rebeccalaujx"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"rebeccalaujx"},"content":"        return this.tasklist.size();","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":54}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":" * Class that encapsulates Todo tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"     * Returns a String representation of the Todo task.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"     * @return A String representation of the Todo task.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"        return (\"\\t[T]\" + super.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"rebeccalaujx":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"rebeccalaujx":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" * Tests the functionality of the Deadline class.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     * Tests the creating of a Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"    public void testCreateDeadline() throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        Task dTask \u003d new Deadline(\"read book\", \"2001-07-07\");","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        assertEquals(\"\\t[D][ ] read book (by: Jul 07 2001)\", dTask.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"     * Tests the markAsDone() method in the Deadline class.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    public void testMarkAsDone() throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"        Task dTask \u003d new Deadline(\"read book\", \"2001-07-07\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        dTask.setDone();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        assertEquals(true, dTask.isDone());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"rebeccalaujx":37}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"package duke.task;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"rebeccalaujx"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rebeccalaujx"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rebeccalaujx"},"content":" * Tests the functionality of the TaskList class.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rebeccalaujx"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rebeccalaujx"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rebeccalaujx"},"content":"     * Tests the addTask(Task task) method in the TaskList class.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rebeccalaujx"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rebeccalaujx"},"content":"    public void testAddTask() throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rebeccalaujx"},"content":"        Task dTask \u003d new Deadline(\"read book\", \"2001-07-07\");","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"rebeccalaujx"},"content":"        TaskList ls \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(dTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"rebeccalaujx"},"content":"        assertEquals(\"\\t[D][ ] read book (by: Jul 07 2001)\", ls.getTask(0).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"rebeccalaujx"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"rebeccalaujx"},"content":"     * Tests the getSize() method in the TaskList class.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rebeccalaujx"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rebeccalaujx"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rebeccalaujx"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rebeccalaujx"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rebeccalaujx"},"content":"    public void testGetSize() throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rebeccalaujx"},"content":"        Task dTask \u003d new Deadline(\"read book\", \"2001-07-07\");","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rebeccalaujx"},"content":"        TaskList ls \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(dTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(dTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"rebeccalaujx"},"content":"        ls.addTask(dTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rebeccalaujx"},"content":"        assertEquals(3, ls.getSize());","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rebeccalaujx"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rebeccalaujx"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"rebeccalaujx":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rebeccalaujx"},"content":"todo borrow book","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"rebeccalaujx"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"rebeccalaujx"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"rebeccalaujx"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"rebeccalaujx"},"content":"bye","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"rebeccalaujx":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rebeccalaujx"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rebeccalaujx":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"rebeccalaujx"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rebeccalaujx":1,"-":33}}]
