[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"     id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"javafx {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.base\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"//checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"//    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"//}","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"didymental":11}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"T | 1 | add do cs2100","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"T | 0 | add task","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"didymental":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeNoSuchTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeUnableLoadTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" * Represents a Duke chatbot that can add tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":" * to users\u0027 to-do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    private boolean isOpen;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    private TaskList listOfTasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     * Constructor for Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        this.listOfTasks \u003d TaskList.makeNewTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        this.storage \u003d new Storage(Duke.FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"            this.loadSavedTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        } catch (IOException | DukeUnableLoadTask e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"            System.err.println(GUI.printErrorMessage(e));","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"     * Opens and starts the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"    public void openDukeChatBot() {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"        this.isOpen \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"     * Closes the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"    public void closeDukeChatBot() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"        this.isOpen \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * Takes the task from user input and adds it to the","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     * task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"     * @param item item to be added into the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"     * @return item in the type Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"    public Task addTaskToList(String item) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        assert !item.equals(\"\") : \"description of task cannot be empty\";","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"        Task task \u003d Task.createTask(item);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.addTaskToList(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"        return task;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"     * Returns the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"     * @return task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"     * Sets the task at the specified index to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"     * @param i index of the task that is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"    public void setTaskAsDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"     * Removes task specified by the index from task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"     * @param i index of the task that is to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"     * @return task that is removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"     * @throws DukeNoSuchTask","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"    public Task deleteTask(int i) throws DukeNoSuchTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.deleteTask(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"     * Saves the tasks into the storage file.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in writing the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"        System.out.println(\"Saving tasks\");","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"        this.storage.saveTasks(this.listOfTasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"     * Loads tasks from the storage file into the given Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in reading the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"     * @throws DukeUnableLoadTask if there is a corruption in tasks of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"    public void loadSavedTasks() throws IOException, DukeUnableLoadTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"        this.storage.loadSavedTasks(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"     * Finds the task from task list with matching keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"     * @param keyword keyword that user wishes to find.","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"didymental"},"content":"     * @return task that contains the keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"didymental"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"didymental"},"content":"        TaskList tasksFound \u003d this.listOfTasks.findTasks(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"didymental"},"content":"        return tasksFound;","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"didymental"},"content":"    private void createFileIfNoFile() {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"didymental"},"content":"        File output \u003d new File(this.FILE_PATH);","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"didymental"},"content":"        if (!output.isFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"didymental"},"content":"            output.getParentFile().mkdirs(); // if user does not have existing file path","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"didymental"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"didymental"},"content":"                output.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"didymental"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"didymental"},"content":"                throw new DukeException(e.getMessage(), e);","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"didymental"},"content":"    private String parseUserInput(String input) throws IOException, DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"didymental"},"content":"        String userInput \u003d input.strip();","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"didymental"},"content":"        Command toExecute \u003d Parser.parse(userInput, this);","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"didymental"},"content":"        return toExecute.execute(this.listOfTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"didymental"},"content":"     * Gets the response from the duke based on user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"didymental"},"content":"     * @param input user input into the textfield.","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"didymental"},"content":"     * @return duke response based on user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if user input violates given rules.","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"didymental"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"didymental"},"content":"        if (!this.isOpen) {","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"didymental"},"content":"            return \"PROBLEM\";","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"didymental"},"content":"        createFileIfNoFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"didymental"},"content":"            return parseUserInput(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"didymental"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"didymental"},"content":"            throw new DukeException(e.getMessage(), e);","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"didymental"},"content":"     * Returns the greeting message for initialising Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"didymental"},"content":"     * @return greeting message.","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"didymental"},"content":"    public static String getGreeting() {","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"didymental"},"content":"        return GUI.printOpeningMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"-":2,"didymental":167}},{"path":"src/main/java/duke/GUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents the GUI that interacts with the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"public class GUI {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     * The logo of Duke chatBot.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    private static final String DUKE_LOGO \u003d","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"            \"\\t\\t____        _        \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"            \"\\t\\t|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"            \"\\t\\t| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"            \"\\t\\t| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"            \"\\t\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * Formats the reply in a bubble.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * @param reply reply message that is to be formatted.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     * @return formatted reply that is sent to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    private static String formatDukeMessage(String reply) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        return reply ;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"     * Prints the opening message when Duke chatBot first boots up.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    public static String printOpeningMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"                \"HELLO! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"                \"To ease your experience, here are some commands you can type: \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027list\u0027: view all tasks in your task list\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027todo\u0027: add a todo task in your task list\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027deadline\u0027: add a deadline task in your task list\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027event\u0027: add an event task in your task list\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027delete\u0027: delete a task from your task list\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027find\u0027: find a task based on the given keyword\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"                \"\\t \u0027bye\u0027: exit chat\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"                \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"     * Prints the closing message when Duke chatBot is closed.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    public static String printClosingMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"     * Prints the error messages when Duke chatBot catches an exception.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"     * @param e exception that is thrown.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"    public static String printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(e.getMessage() + \"\\n\"); // Error in red","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"     * Prints the reply from Duke chatBot to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"     * @param message message that is formatted and sent to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"    public static String printReply(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"     * Prints the success message once task is added.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"     * @param total total number of tasks in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"    public static String printAddedTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"                \"\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"                \"Now you have \" + total + \" in your list.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"     * Prints the success message when task is deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"     * @param total total number of tasks in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"    public static String printDeleteTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"                \"\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"                \"Now you have \" + total + \" in your list.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"     * Prints the success message when task is marked as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"     * @param task task to be marked as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"    public static String printDoneMessage(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"                \"\\t\" + task + \"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"     * Prints the success message when task is found.","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"     * @param tasks list of tasks saved by the Duke chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"     * @return tasks that match the user keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"    public static String printFindMessage(TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"        return GUI.formatDukeMessage(\"Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"                tasks.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":113}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    private final Duke dukeChatbot \u003d new Duke();","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(dukeChatbot);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"            stage.setTitle(\"Your friendly Duke Chatbot\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":31}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * Represents the Parser that parses all commands from user.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"     * Represents the action command keyed in by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    public enum Action {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        FIND(\"find\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        TASK(\"task\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"        NOT_FOUND(\"not found\");","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        private final String actionCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        private Action(String actionCommmand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"            this.actionCommand \u003d actionCommmand;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"        /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"         * Returns the Action type ENUM for each string","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"         * @param s action word typed in by user","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"         * @return Action that corresponds to the user\u0027s entry","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"        public static Action getAction(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"            for (Action a : values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                if (a.actionCommand.equals(s)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"                    return a;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"            return NOT_FOUND;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"     * Interprets the full command entered in by the user and","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"     * routes the command accordingly.","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"     * @param userInput full command inputted by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"     * @param d Duke chatbot that is in use.","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"     * @return Command action that is interpreted from the user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in reading the file.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if there is an error from Duke\u0027s internal system.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    public static Command parse(String userInput, Duke d) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        Action actionCommand \u003d Parser.determineActionType(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"        Command c \u003d getCommand(actionCommand, d, userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        return c;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"    private static String getFirstWord(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"        String[] arrString \u003d s.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"        return arrString[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"    private static int getSecondNum(String s) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"        String[] arrString \u003d s.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"            String second \u003d arrString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"            Integer.parseInt(second);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"            throw new DukeDoneIncorrectArgument();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"            throw new DukeDoneIncorrectArgument();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"        return Integer.parseInt(arrString[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"    private static String getKeyword(String s) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"        String[] arrString \u003d s.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"            String second \u003d arrString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"            throw new DukeFindIncorrectArgument();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"        return arrString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"    private static Action determineActionType(String input) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"        String firstWord \u003d Parser.getFirstWord(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"        String type \u003d firstWord.equals(\"todo\") || firstWord.equals(\"event\") || firstWord.equals(\"deadline\")","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"                ? \"task\" : firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"        Action actionCommand \u003d Action.getAction(type);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"        return actionCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"    private static Command getCommand(Action actionCommand, Duke d, String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"        Command c;","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"        switch (actionCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"        case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"            c \u003d new ByeCommand(d);","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"            c \u003d new ListCommand(d);","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"            c \u003d new DoneCommand(d, Parser.getSecondNum(userInput));","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"didymental"},"content":"            c \u003d new DeleteCommand(d, Parser.getSecondNum(userInput));","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"didymental"},"content":"        case FIND:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"didymental"},"content":"            c \u003d new FindCommand(d, Parser.getKeyword(userInput));","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"didymental"},"content":"        case TASK:","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"didymental"},"content":"            c \u003d new TaskCommand(d, userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"didymental"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"didymental"},"content":"            assert false: \"Command not found\";","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectCommandWord(new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"didymental"},"content":"        return c;","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeUnableLoadTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" * Represents the storage file that stores the user\u0027s tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * @param filePath file path to the storage file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     * Saves tasks from the given list of tasks to the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"     * @param listOfTasks the list of tasks keyed in by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in writing the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    public void saveTasks(TaskList listOfTasks) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"        StringBuffer tasksToWrite \u003d new StringBuffer();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        consolidateTasks(listOfTasks, tasksToWrite);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"        writeTasksToFile(tasksToWrite);","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    private void consolidateTasks(TaskList listOfTasks, StringBuffer tasksToWrite) {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"        int len \u003d listOfTasks.getTotalNumber();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"            tasksToWrite.append(listOfTasks.getTask(i).saveToFile() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"    private void writeTasksToFile(StringBuffer tasksToWrite) throws IOException {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.FILE_PATH, false);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"        fileWriter.write(tasksToWrite.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"     * Loads tasks from the storage file into the given Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that the user is interacting with.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in reading the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     * @throws DukeUnableLoadTask if there is a corruption in tasks of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"    public void loadSavedTasks(Duke duke) throws IOException, DukeUnableLoadTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"        File f \u003d new File(this.FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"        Scanner sc \u003d new Scanner(f); // Scanner with file as source","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        processTasksToDuke(sc, duke);","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"    private void processTasksToDuke(Scanner sc, Duke duke) {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"        int i \u003d 1; // index counter","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"            String entry \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"            String[] pastEntry \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"            String taskType \u003d pastEntry[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"            String isDone \u003d pastEntry[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"            case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"todo \" + pastEntry[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"            case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"deadline \" + pastEntry[2] + \" /by \" + pastEntry[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"            case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"event \" + pastEntry[2] + \" /at \" + pastEntry[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"                throw new DukeUnableLoadTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"            i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":99}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents the user interface that interacts with the user for text.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     * The logo of Duke chatBot.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    private static final String DUKE_LOGO \u003d \"\\t\\t____        _        \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"            \"\\t\\t|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"            \"\\t\\t| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"            \"\\t\\t| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"            \"\\t\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * Formats the reply in a bubble.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     * @param reply reply message that is to be formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     * @return formatted reply that is sent to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    private static String formatDukeMessage(String reply) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        return \"\\t____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"                reply +","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"                \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"     * Prints the opening message when Duke chatBot first boots up.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    public static void printOpeningMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(Ui.DUKE_LOGO + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"                        \"\\tHELLO! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"                        \"\\tTo ease your experience, here are some commands you can type: \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027list\u0027: view all tasks in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027todo\u0027: add a todo task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027deadline\u0027: add a deadline task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027event\u0027: add an event task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027delete\u0027: delete a task from your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027bye\u0027: exit chat\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"                        \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"                )","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"     * Prints the closing message when Duke chatBot is closed.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"    public static void printClosingMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tBye. Hope to see you again soon!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"     * Prints the error messages when Duke chatBot catches an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"     * @param e exception that is thrown.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"    public static void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"        System.err.println(Ui.formatDukeMessage(e.getMessage() + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"     * Prints the reply from Duke chatBot to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"     * @param message message that is formatted and sent to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"    public static void printReply(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(message));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"     * Prints the success message once task is added.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"     * @param total total number of tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"    public static void printAddedTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"                \"\\tNow you have \" + total + \" in your list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"     * Prints the success message when task is deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"     * @param task task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"     * @param total total number of tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"    public static void printDeleteTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"                \"\\tNow you have \" + total + \" in your list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"     * Prints the success message when task is marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"     * @param task task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"    public static void printDoneMessage(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"    public static void printFindMessage(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tHere are the matching tasks in your list:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"                tasks.toString()));","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":111}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * Represents a general bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     * Constructor for the Bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"     * @param duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    public ByeCommand(Duke duke) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        this.duke.closeDukeChatBot();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        return GUI.printClosingMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * Represents a general user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    protected Duke duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    protected Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     * Constructor for Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * @param duke","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    public Command(Duke duke) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     * Executes the command, depending on the child type.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     * @param taskList task list of the user that the chat bot has stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in saving the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if there is any internal Duke chatbot related errors.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    public abstract String execute(TaskList taskList) throws IOException, DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" * Represents the general delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    private final int INDEX;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    /** Constructor for the Delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    public DeleteCommand(Duke duke, int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        this.INDEX \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        Task taskRemoved \u003d this.duke.deleteTask(this.INDEX);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        this.duke.saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        return GUI.printDeleteTaskMessage(taskRemoved, taskList.getTotal());","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":32}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * Represents the general done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    private final int INDEX;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"     * Constructor for the Done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * @param index index of the task that is to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    public DoneCommand(Duke duke, int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        this.INDEX \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        this.duke.setTaskAsDone(this.INDEX);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        this.duke.saveTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        return GUI.printDoneMessage(taskList.getTask(this.INDEX - 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    public FindCommand(Duke duke, String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        TaskList tasksFound \u003d this.duke.findTasks(this.keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        return GUI.printFindMessage(tasksFound);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":20}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * Represents the general list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     * Constructor for the List command.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    public ListCommand(Duke duke) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        return GUI.printReply(taskList.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":25}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" * Represents the general task command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * Constructor for the Task command.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * @param description full command in String inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    public TaskCommand(Duke duke, String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        super(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    public String execute(TaskList taskList) throws IOException, DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        Task taskAdded \u003d this.duke.addTaskToList(DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        this.duke.saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        return GUI.printAddedTaskMessage(taskAdded, taskList.getTotal());","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":33}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.controller;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"import static javafx.scene.paint.Color.color;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    private HBox message;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"        displayPicture.setClip(new Circle(25, 25, 25));","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     * Gets the user input and transform it into a text bubble.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"     * @param s user input into the Textfield.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"     * @param iv pre-loaded profile picture of the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"     * @return DialogBox that encompasses the user input and the profile picture.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    public static DialogBox getUserDialog(String s, Image iv) {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"        DialogBox db \u003d new DialogBox(s, iv);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"        db.message.setBackground(new Background(new BackgroundFill(color(0.2, 0.58, 1),","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"                new CornerRadii(15),","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"                null)));","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"     * Gets the duke response adn transforms it into a text bubble.","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"     * @param s duke response based on user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"     * @param iv pre-loaded picture of Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"     * @return DialogBox that encompasses duke response and duke picture.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    public static DialogBox getDukeDialog(String s, Image iv) {","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"        DialogBox db \u003d new DialogBox(s, iv);","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"        db.message.setBackground(new Background(new BackgroundFill(color(0.9, 0.9, 0.9),","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"                new CornerRadii(15),","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"                null)));","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"    public static DialogBox getOpeningMessage(String s, Image iv) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"        DialogBox db \u003d new DialogBox(s, iv);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"        db.flip();","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"        db.message.setBackground(new Background(new BackgroundFill(color(0.9, 0.9, 0.9),","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"                new CornerRadii(15),","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"                null)));","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"        return db;","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"     * Transform error messages from Duke into a brighter colour to get attention","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"     * of user.","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"    public void modifyColorForError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"        this.dialog.setTextFill(color(1,1,1));","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"        this.setBackground(new Background(new BackgroundFill(color(1, 0, 0),","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"                new CornerRadii(15),","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"                null)));","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":110}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.controller;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.GUI;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"     * Initialises the main window.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"        // Display greeting upon initialisation","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                DialogBox.getOpeningMessage(displayGreeting(), dukeImage));","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"     * Sets a Duke object as the duke chatbot.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"     * @param d duke object.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        d.openDukeChatBot();","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        String input \u003d userInput.getText().strip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"        String response \u003d \" \";","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        DialogBox userDB \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"        DialogBox dukeDB \u003d null;","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"            response \u003d this.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"            userDB \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"            dukeDB \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"            System.out.println(\"here\");","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"            dukeDB.modifyColorForError();","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"                userDB,","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"                dukeDB","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"     * Returns the response from Duke based on the input from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"     * @param input user input from keying into the TextField.","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"     * @return response from Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        String toReturn \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"            toReturn \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"            toReturn \u003d GUI.printErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"            throw e;","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"        } finally {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"            return toReturn;","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"     * Displays the greeting message when app is initialised.","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"     * @return opening message.","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"    private String displayGreeting() {","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"        return Duke.getGreeting();","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":105}},{"path":"src/main/java/duke/exception/DukeDoneIncorrectArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Argument Exception class that is thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * when the user does not enter an integer after \u0027done\u0027 or \u0027delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeDoneIncorrectArgument extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeDoneIncorrectArgument Exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    public DukeDoneIncorrectArgument() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        super(\"⚠️ After the keyword, you have to enter an integer.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the parent exception class that is thrown when","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * there is an error with Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * Constructor for the parent exception class.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        super(errorMessage, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":14}},{"path":"src/main/java/duke/exception/DukeFindIncorrectArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Argument Exception class that is thrown","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * when the user does not enter an integer after \u0027done\u0027 or \u0027delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeFindIncorrectArgument extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeDoneIncorrectArgument Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    public DukeFindIncorrectArgument() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        super(\"⚠️ After the keyword, you have to enter ONE keyword.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":15}},{"path":"src/main/java/duke/exception/DukeIncorrectCommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the error object that is thrown when","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * the user keys in an invalid or incorrect command","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectCommandWord extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * Constructor to create the DukeIncorrectCommandWord Exception object","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * @param err error that is to be thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectCommandWord(Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        super(\"⚠️ OOPS! I\u0027m sorry, but I don\u0027t know what that means! ⚠️\", err);","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":16}},{"path":"src/main/java/duke/exception/DukeIncorrectInputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Inputs Exception class that is thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * when the user enters wrong commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectInputs extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * Constructor for DukeIncorrectInputs exception object.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * @param errorMessage string message to be shown","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * @param err error object that the incorrect input is related to.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectInputs(String errorMessage, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        super(errorMessage, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":16}},{"path":"src/main/java/duke/exception/DukeIncorrectTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents the IncorrectTaskDescription Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" * that is thrown when the user does not enter description","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * after wanting to add a task according to the format.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectTaskDescription extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    private static final String PREFIX \u003d \"To log a\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    private static final String SUFFIX \u003d \", you have to log the \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"            \"\\ndescription with the date like this:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeIncorrectTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectTaskDescription(Deadline deadline, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        super(DukeIncorrectTaskDescription.PREFIX + \" deadline\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"                DukeIncorrectTaskDescription.SUFFIX + \"\\t{deadline description} /by {yyyy-mm-dd}\", err);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeIncorrectTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is an event.","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectTaskDescription(Event event, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        super(DukeIncorrectTaskDescription.PREFIX + \"n event\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"                DukeIncorrectTaskDescription.SUFFIX + \"\\t{event description} /at {yyyy-mm-dd}\", err);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":34}},{"path":"src/main/java/duke/exception/DukeMissingTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" * Represents the IncorrectTaskDescription Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * that is thrown when the user does not enter description","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * after wanting to add a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class DukeMissingTaskDescription extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    private static final String PREFIX \u003d \"⚠️ OOPS!! The description of a\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    private static final String SUFFIX \u003d \" cannot be empty. ⚠️\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(ToDo todo, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        super(DukeMissingTaskDescription.PREFIX + \" todo\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.SUFFIX, err);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(Deadline deadline, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        super(DukeMissingTaskDescription.PREFIX + \" deadline\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.SUFFIX, err);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is an event.","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(Event event, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"        super(DukeMissingTaskDescription.PREFIX + \"n event\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.SUFFIX, err);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":42}},{"path":"src/main/java/duke/exception/DukeNoSuchTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the DukeNoSuchTask Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * that is thrown when the user wants to get a task","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * that does not exist within the list of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"public class DukeNoSuchTask extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeNoSuchTask exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    public DukeNoSuchTask(Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        super(\"There is no such task saved in the list.\", err);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":15}},{"path":"src/main/java/duke/exception/DukeUnableLoadTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the DukeUnableLoadTask Exception class","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * that is thrown when the saved file is corrupted and","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * unable to be loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"public class DukeUnableLoadTask extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeUnableLoadTask exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    public DukeUnableLoadTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        super(\"Duke was unable to load your file\", new Throwable());","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"didymental":15}},{"path":"src/main/java/duke/exception/DukeUnableToFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Argument Exception class that is thrown","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * when the user does not enter an integer after \u0027done\u0027 or \u0027delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"public class DukeUnableToFind extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeDoneIncorrectArgument Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    public DukeUnableToFind() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        super(\"⚠️ Sorry! I am unable to find any task with this keyword!\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"                        \"Do note that there should only be ONE keyword after the\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"                        \"command \u0027find\u0027.\",","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":19}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeIncorrectTaskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" * Represents a Deadline object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * Constructor for the Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * @param arrString user input sliced into an array.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if Duke cannot create the Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    protected Deadline(String[] arrString) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"        super(arrString.length \u003c 2 ? \" \" : arrString[0]);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        String date \u003d arrString[1] \u003d\u003d null ? \" \" : arrString[1].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"            this.deadlineDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectTaskDescription(this, new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"     * String representation of the Deadline object","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"        return \"[D]\" + super.toString() + \"(by: \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        return \"D | \" + super.saveToFile() + \"| \" + this.deadlineDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeIncorrectTaskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" * Represents an Event object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    private LocalDate dateOfEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * Constructor for the Event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * @param arrString user input sliced into an array.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if Duke cannot create the Event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    protected Event(String[] arrString) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"        super(arrString.length \u003c 2 ? \" \" : arrString[0]);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        String date \u003d arrString[1] \u003d\u003d null ? \" \" : arrString[1].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"            this.dateOfEvent \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectTaskDescription(this, new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"     * String representation of the Event object","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"        return \"[E]\" + super.toString() + \"(at: \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"                this.dateOfEvent.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        return \"E | \" + super.saveToFile() + \"| \" + this.dateOfEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * Represents a Task object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" * A Task can be a ToDo, Deadline or Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    protected Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * Creates a new Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     * @param task String description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if Duke cannot create the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    public static Task createTask(String task) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        String[] taskArr \u003d task.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        String firstWord \u003d taskArr[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        if (taskArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"            deriveTaskError(firstWord);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"        Task toCreate \u003d deriveTask(firstWord, taskArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        return toCreate;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"    private static void deriveTaskError(String firstWord) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"            throw new DukeMissingTaskDescription(new ToDo(\" \"), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"            throw new DukeMissingTaskDescription(new Deadline(new String[2]), new IllegalArgumentException());","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        case \"event\":","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"            throw new DukeMissingTaskDescription(new Event(new String[2]), new IllegalArgumentException());","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectCommandWord(new IllegalArgumentException());","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"    private static Task deriveTask(String firstWord, String[] taskArr) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"            return new ToDo(taskArr[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"            checkFormat(firstWord, taskArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"            return new Deadline(taskArr[1].split(\"/by\", 2));","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"        case \"event\":","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"            checkFormat(firstWord, taskArr);","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"            return new Event(taskArr[1].split(\"/at\", 2));","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectCommandWord(new IllegalArgumentException());","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"    private static void checkFormat(String firstWord, String[] taskArr) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"            if (taskArr[1].split(\"/by\", 2).length \u003c 2){","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"                String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"                throw new DukeIncorrectTaskDescription(new Deadline(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"        case \"event\":","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"            if (taskArr[1].split(\"/at\", 2).length \u003c 2){","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"                String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"                throw new DukeIncorrectTaskDescription(new Event(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"     * Sets the task to be done","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"     * Represents the format in which the File is saved to hard-drive.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"        String checker \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"        return checker + \" | \" + this.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"     * String representation of the Task object","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"        String checker \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"        return \"[\" + checker + \"]\" + \" \" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":110}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeIncorrectInputs;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeNoSuchTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeUnableToFind;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * Represents a Task List that stores the log of","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" * tasks in the users\u0027 to-do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    private TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * Returns the total number of tasks in the list in String.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    public String getTotal() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        int total \u003d this.listOfTasks.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        return total + (total \u003d\u003d 1 ? \" task\" : \" tasks\");","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"     * Returns the total number of tasks in the list in String.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    public int getTotalNumber() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"     * Add a task into the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"     * @param task the task to be added into the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"     * Create a TaskList object.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"     * @return a new TaskList that has no tasks stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"    public static TaskList makeNewTaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"        return new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     * Sets the status of the specified task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"     * @param i Index of the task in the task list, that","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"     *          is to be set as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"     * @throws DukeIncorrectInputs if the command entered violates given","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    public void setTaskAsDone(int i) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"        if (i \u003c 1 || i \u003e this.listOfTasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"            throw new DukeNoSuchTask(new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.get(i - 1).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"     * Returns the task at the specified position.","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     * @param i Index of the task in the task list, that","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"     *          is to be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"     * Removes the specified task from the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"     * @param i index of the task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"     * @return task that is removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"     * @throws DukeIncorrectInputs if the command entered violates given","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"     * rules.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"    public Task deleteTask(int i) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"        if (i \u003c 1 || i \u003e this.listOfTasks.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"            throw new DukeNoSuchTask(new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.remove(i - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"     * Finds the tasks based on the keyword from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"     * @param keyword keyword from user.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"     * @return all tasks that have the keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"     * @throws DukeIncorrectInputs if the command entered violates given","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"     * rules.","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"    public TaskList findTasks(String keyword) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"        int len \u003d this.listOfTasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"        TaskList tasksWithKey \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"            if (this.listOfTasks.get(i).task.toLowerCase().contains(keyword)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"                tasksWithKey.listOfTasks.add(this.listOfTasks.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"        if (tasksWithKey.getTotalNumber() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"            throw new DukeUnableToFind();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"        return tasksWithKey;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"didymental"},"content":"     * String representation of the TaskList object.","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"didymental"},"content":"        if (this.listOfTasks.size() \u003d\u003d 0) { // if there is no task within list","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"didymental"},"content":"            return \"\\tYou have not added any tasks to your list.\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"didymental"},"content":"                    + \"\\tLog any task you wish to add.\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"didymental"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"didymental"},"content":"        String toPrint \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"didymental"},"content":"        for (Task task : this.listOfTasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"didymental"},"content":"            toPrint \u003d toPrint + \"\\t\" + i + \". \" + task + \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"didymental"},"content":"            i++;","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"didymental"},"content":"        return toPrint;","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":133}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents a ToDo object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     * Constructor for the Todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     * @param description description of the todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    protected ToDo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * String representation of the ToDo object","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        return \"T | \" + super.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":32}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"      \u003cHBox fx:id\u003d\"message\" maxHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"            fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"                    prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" spacing\u003d\"5\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"didymental":25}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeIncorrectTaskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import duke.exception.DukeMissingTaskDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    public void addToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"        String command \u003d \"todo read book\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        assertEquals(toCompare.toString(), \"[T][ ] read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    public void addDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        String command \u003d \"deadline CS2103 iP /by 2021-08-24\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        assertEquals(\"[D][ ] CS2103 iP (by: Aug 24 2021)\", toCompare.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    public void addEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        String command \u003d \"event CS2103 tutorial /at 2021-08-25\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        assertEquals(\"[E][ ] CS2103 tutorial (at: Aug 25 2021)\", toCompare.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    public void toDoCommand_noDescription_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"        String command \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"            Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"        String expected \u003d new DukeMissingTaskDescription(","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"                (ToDo) Task.createTask(\"todo read book\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"                    new IllegalArgumentException()).getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"        assertEquals(expected, message);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"    public void deadlineCommand_noDescription_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"        String command \u003d \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"            Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"        String expected \u003d new DukeIncorrectTaskDescription(","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"                (Deadline) Task.createTask(\"deadline CS2103 iP /by 2021-08-24\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException()).getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"        assertEquals(expected, message);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    public void eventCommand_noDescription_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"        String command \u003d \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"            Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"        String expected \u003d new DukeIncorrectTaskDescription(","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"                (Event) Task.createTask(\"event CS2103 tutorial /at 2021-08-25\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException()).getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"        assertEquals(expected, message);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"    public void deadlineCommand_wrongFormat_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"        String command \u003d \"deadline CS2103 iP by 2021-08-24\";","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"            Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"        String expected \u003d new DukeIncorrectTaskDescription(","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"                (Deadline) Task.createTask(\"deadline CS2103 iP /by 2021-08-24\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException()).getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"        assertEquals(expected, message);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"didymental"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"    public void eventCommand_wrongFormat_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"        String command \u003d \"event CS2103 tutorial at 2021-08-25\";","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"            Task toCompare \u003d Task.createTask(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"            message \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"        String expected \u003d new DukeIncorrectTaskDescription(","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"didymental"},"content":"                (Event) Task.createTask(\"event CS2103 tutorial /at 2021-08-25\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException()).getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"didymental"},"content":"        assertEquals(expected, message);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":119}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"done zero","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"deadline iP due /by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"deadline iP due by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"deadline iP due /at 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"todo buy financial calculator","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"todo recap cs2100 lecture","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"event lazpitch /at 2021-08-30","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"event lazpitch at 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"event lazpitch /by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"123456","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"done one","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"done one by one","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"done 100","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"done -100","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"read book","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"delete one","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"delete one by one","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"todo add book","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"todo take book","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"todo throw book","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"todo return book","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":58}}]
