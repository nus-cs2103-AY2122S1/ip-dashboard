[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"D | 1 | iP | 2021-08-24","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":1}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents a general bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     * Constructor for the bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * @param duke chatbot that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * @param sc scanner that is in use.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    public ByeCommand(Duke duke, Scanner sc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        super(duke, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        Ui.printClosingMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        this.duke.closeDukeChatBot();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"        this.sc.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":23}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents a general user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    protected Duke duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    protected Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * Constructor for Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     * @param duke","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     * @param sc","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    public Command(Duke duke, Scanner sc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * Executes the command, depending on the child type.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * @param taskList task list of the user that the chat bot has stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in saving the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     * @throws DukeException if there is any internal Duke chatbot related errors.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    public abstract void execute(TaskList taskList) throws IOException, DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":27}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents a Deadline object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    protected Deadline(String[] arrString) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        super(arrString.length \u003c 2 ? \" \" : arrString[0]);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        String date \u003d arrString[1] \u003d\u003d null ? \" \" : arrString[1].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"            this.deadlineDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectTaskDescription(this, new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     * String representation of the Deadline object","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        return \"[D]\" + super.toString() + \"(by: \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"                this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        return \"D | \" + super.saveToFile() + \"| \" + this.deadlineDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":39}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * Represents the general delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    public DeleteCommand(Duke duke, Scanner sc, int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        super(duke, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    public void execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        Task taskRemoved \u003d this.duke.deleteTask(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        Ui.printDeleteTaskMessage(taskRemoved, taskList.getTotal());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        this.duke.saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":21}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * Represents the general done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private final int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    public DoneCommand(Duke duke, Scanner sc, int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        super(duke, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    public void execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        this.duke.setTaskAsDone(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        Ui.printDoneMessage(taskList.getTask(this.index - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        duke.saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents a Duke chatbot that can add tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" * to users\u0027 to-do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    private boolean isOpen;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    private TaskList listOfTasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     * Constructor for Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    private Duke() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        this.listOfTasks \u003d TaskList.makeNewTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        this.storage \u003d new Storage(Duke.FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     * Opens and starts the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    private void openDukeChatBot() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        this.isOpen \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        Ui.printOpeningMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"     * Closes the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"    public void closeDukeChatBot() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"        this.isOpen \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"     * Takes the task from user input and adds it to the","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"     * task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"     * @param item item to be added into the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"     * @return item in the type Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    public Task addTaskToList(String item) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"        Task task \u003d Task.createTask(item);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.addTaskToList(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"        return task;","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     * Returns the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * @return task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     * Sets the task at the specified index to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"     * @param i index of the task that is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"    public void setTaskAsDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     * Removes task specified by the index from task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"     * @param i index of the task that is to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"     * @return task that is removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"     * @throws DukeNoSuchTask","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    public Task deleteTask(int i) throws DukeNoSuchTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.deleteTask(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"     * Saves the tasks into the storage file.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in writing the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"    public void saveTasks() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"        this.storage.saveTasks(this.listOfTasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"     * Loads tasks from the storage file into the given Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in reading the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"     * @throws DukeUnableLoadTask if there is a corruption in tasks of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"    public void loadSavedTasks() throws IOException, DukeUnableLoadTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"        this.storage.loadSavedTasks(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"didymental"},"content":"     * Runs the chatbot Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"didymental"},"content":"     * @param args user inputs that will turn into commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"didymental"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"didymental"},"content":"        d.openDukeChatBot();","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"didymental"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"didymental"},"content":"        File output \u003d new File(d.FILE_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"didymental"},"content":"        if (!output.isFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"didymental"},"content":"            output.getParentFile().mkdirs(); // if user does not have existing file path","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"didymental"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"didymental"},"content":"                output.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"didymental"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"didymental"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"didymental"},"content":"            d.loadSavedTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"didymental"},"content":"        } catch (IOException | DukeUnableLoadTask e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"didymental"},"content":"            Ui.printErrorMessage(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"didymental"},"content":"        while (d.isOpen) {","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"didymental"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"didymental"},"content":"                String userInput \u003d sc.nextLine().strip();","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"didymental"},"content":"                Command toExecute \u003d Parser.parse(userInput, d, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"didymental"},"content":"                toExecute.execute(d.listOfTasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"didymental"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"didymental"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"-":6,"didymental":126}},{"path":"src/main/java/DukeDoneIncorrectArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Argument Exception class that is thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * when the user does not enter an integer after \u0027done\u0027.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"public class DukeDoneIncorrectArgument extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeDoneIncorrectArgument Exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    public DukeDoneIncorrectArgument() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        super(\"\\t⚠️ After the keyword, you have to enter an integer.\",","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"                new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the parent exception class that is thrown when","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * there is an error with Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"     * Constructor for the parent exception class.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    public DukeException(String errorMessage, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        super(errorMessage, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":12}},{"path":"src/main/java/DukeIncorrectCommandWord.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the error object that is thrown when","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * the user keys in an invalid or incorrect command","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectCommandWord extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     * Constructor to create the DukeIncorrectCommandWord Exception object","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * @param err error that is to be thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectCommandWord(Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        super(\"\\t⚠️ OOPS! I\u0027m sorry, but I don\u0027t know what that means! ⚠️\", err);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":14}},{"path":"src/main/java/DukeIncorrectInputs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the Incorrect Inputs Exception class that is thrown","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * when the user enters wrong commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * I made the class just in case of expansion of exceptions that","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * may occur from Duke that are not due to incorrect inputs.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectInputs extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     * Constructor for DukeIncorrectInputs exception object.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"     * @param errorMessage string message to be shown","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * @param err error object that the incorrect input is related to.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectInputs(String errorMessage, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        super(errorMessage, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":16}},{"path":"src/main/java/DukeIncorrectTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the IncorrectTaskDescription Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * that is thrown when the user does not enter description","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * after wanting to add a task according to the format.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class DukeIncorrectTaskDescription extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private static final String prefix \u003d \"To log a\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    private static final String suffix \u003d \", you have to log the \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"            \"\\n\\tdescription with the date like this:\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeIncorrectTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectTaskDescription(Deadline deadline, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        super(\"\\t\" + DukeIncorrectTaskDescription.prefix + \" deadline\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"                DukeIncorrectTaskDescription.suffix + \"\\t\\t{deadline description} /by {yyyy-mm-dd}\", err);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeIncorrectTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is an event.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    public DukeIncorrectTaskDescription(Event event, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        super(\"\\t\" + DukeIncorrectTaskDescription.prefix + \"n event\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"                DukeIncorrectTaskDescription.suffix + \"\\t\\t{event description} /at {yyyy-mm-dd}\", err);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":29}},{"path":"src/main/java/DukeMissingTaskDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the IncorrectTaskDescription Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * that is thrown when the user does not enter description","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * after wanting to add a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"public class DukeMissingTaskDescription extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    private static final String prefix \u003d \"⚠️ OOPS!! The description of a\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private static final String suffix \u003d \" cannot be empty. ⚠️\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a todo.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(ToDo todo, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"        super(\"\\t\" + DukeMissingTaskDescription.prefix + \" todo\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.suffix, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is a deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(Deadline deadline, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        super(\"\\t\" + DukeMissingTaskDescription.prefix + \" deadline\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.suffix, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeMissingTaskDescription exception. Uses","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"     * runtime polymorphism to deduce that the task is an event.","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    public DukeMissingTaskDescription(Event event, Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"        super(\"\\t\" + DukeMissingTaskDescription.prefix + \"n event\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"                DukeMissingTaskDescription.suffix, err);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":36}},{"path":"src/main/java/DukeNoSuchTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the DukeNoSuchTask Exception class","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * that is thrown when the user wants to get a task","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * that does not exist within the list of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"public class DukeNoSuchTask extends DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     * Constructor for the DukeNoSuchTask exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    public DukeNoSuchTask(Throwable err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        super(\"\\tThere is no such task saved in the list.\", err);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":13}},{"path":"src/main/java/DukeUnableLoadTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"public class DukeUnableLoadTask extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"    public DukeUnableLoadTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"        super(\"Duke was unable to load your file\", new Throwable());","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"didymental":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * Represents an Event object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    private LocalDate dateOfEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    protected Event(String[] arrString) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"        super(arrString.length \u003c 2 ? \" \" : arrString[0]);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        String date \u003d arrString[1] \u003d\u003d null ? \" \" : arrString[1].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"            this.dateOfEvent \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectTaskDescription(this, new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     * String representation of the Event object","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"        return \"[E]\" + super.toString() + \"(at: \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"                this.dateOfEvent.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"        return \"E | \" + super.saveToFile() + \"| \" + this.dateOfEvent;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":39}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents the general list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    public ListCommand(Duke duke, Scanner sc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"        super(duke, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        Ui.printReply(taskList.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"     * Represents the action command keyed in by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    public enum Action {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"        TASK(\"task\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        ERRORS(\"error\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        private final String actionCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        private Action(String actionCommmand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"            this.actionCommand \u003d actionCommmand;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"         * Returns the Action type ENUM for each string","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"         * @param s action word typed in by user","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"         * @return Action that corresponds to the user\u0027s entry","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"         */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        public static Action getAction(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"            for (Action a : values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"                if (a.actionCommand.equals(s)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"                    return a;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"            return ERRORS;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"    private static String getFirstWord(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"        String[] arrString \u003d s.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"        return arrString[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"    private static int getSecondNum(String s) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"        String[] arrString \u003d s.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"            String second \u003d arrString[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"            Integer.parseInt(second);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"            throw new DukeDoneIncorrectArgument();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"            throw new DukeDoneIncorrectArgument();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"        return Integer.parseInt(arrString[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"    public static Command parse(String userInput, Duke d, Scanner sc) throws IOException, DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"        String firstWord \u003d Parser.getFirstWord(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"        firstWord \u003d firstWord.equals(\"todo\") || firstWord.equals(\"event\") || firstWord.equals(\"deadline\")","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"                ? \"task\" : firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"        Action actionCommand \u003d Action.getAction(firstWord);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"        switch (actionCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"        case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"            c \u003d new ByeCommand(d, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"            c \u003d new ListCommand(d, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"            c \u003d new DoneCommand(d, sc, Parser.getSecondNum(userInput));","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"            c \u003d new DeleteCommand(d, sc, Parser.getSecondNum(userInput));","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"        case TASK:","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"            c \u003d new TaskCommand(d, sc, userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"        case ERRORS:","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectCommandWord(new IllegalArgumentException());","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"        return c;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":85}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * Represents the storage file that stores the user\u0027s tasklist.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    private final String FILE_PATH;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     * @param filePath file path to the storage file.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        this.FILE_PATH \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     * Saves tasks from the given list of tasks to the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"     * @param listOfTasks the list of tasks keyed in by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in writing the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    public void saveTasks(TaskList listOfTasks) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        StringBuffer tasksToWrite \u003d new StringBuffer();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"        int len \u003d listOfTasks.getTotalNumber();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"            tasksToWrite.append(listOfTasks.getTask(i).saveToFile() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"        fileWriter.write(tasksToWrite.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"     * Loads tasks from the storage file into the given Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"     * @param duke Duke chatbot that the user is interacting with.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"     * @throws IOException if there is an error in reading the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"     * @throws DukeUnableLoadTask if there is a corruption in tasks of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    public void loadSavedTasks(Duke duke) throws IOException, DukeUnableLoadTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"        File f \u003d new File(this.FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        Scanner sc \u003d new Scanner(f); // Scanner with file as source","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"        int i \u003d 1; // index counter","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"            String entry \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"            String[] pastEntry \u003d entry.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"            String taskType \u003d pastEntry[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"            String isDone \u003d pastEntry[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"            case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"todo \" + pastEntry[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"            case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"deadline \" + pastEntry[2] + \" /by \" + pastEntry[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"            case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"                duke.addTaskToList(\"event \" + pastEntry[2] + \" /at \" + pastEntry[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"                    duke.setTaskAsDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"                throw new DukeUnableLoadTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"            i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":82}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents a Task object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * A Task can be a ToDo, Deadline or Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    protected Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * Creates a new Task object","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     * @param task String description of the task","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    public static Task createTask(String task) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        String[] taskArr \u003d task.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"        String firstWord \u003d taskArr[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"        if (firstWord.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"           if (taskArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"               throw new DukeMissingTaskDescription(new ToDo(\" \"), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"           }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"           return new ToDo(taskArr[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        } else if (firstWord.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"           if (taskArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"               String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"               throw new DukeMissingTaskDescription(new Deadline(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"           } else if (taskArr[1].split(\"/by\", 2).length \u003c 2){","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"               String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"               throw new DukeIncorrectTaskDescription(new Deadline(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"           }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"           return new Deadline(taskArr[1].split(\"/by\", 2));","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"        } else if (firstWord.equals(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"           if (taskArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"               String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"               throw new DukeMissingTaskDescription(new Event(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"           } else if (taskArr[1].split(\"/at\", 2).length \u003c 2){","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"               String[] emptyString \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"               throw new DukeIncorrectTaskDescription(new Event(emptyString), new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"           }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"           return new Event(taskArr[1].split(\"/at\", 2));","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"            throw new DukeIncorrectCommandWord(new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * Sets the task to be done","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     * Represents the format in which the File is saved to hard-drive.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"        String checker \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"        return checker + \" | \" + this.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     * String representation of the Task object","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"        String checker \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"        return \"[\" + checker + \"]\" + \" \" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":77}},{"path":"src/main/java/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * Represents the general task command.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"    private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    public TaskCommand(Duke duke, Scanner sc, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        super(duke, sc);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"    public void execute(TaskList taskList) throws IOException, DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"        Ui.printAddedTaskMessage(this.duke.addTaskToList(description), taskList.getTotal());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"        this.duke.saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":19}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" * Represents a Task List that stores the log of","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * tasks in the users\u0027 to-do list.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"    private TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"        this.listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     * Returns the total number of tasks in the list in String.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    public String getTotal() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"        int total \u003d this.listOfTasks.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"        return total + (total \u003d\u003d 1 ? \" task\" : \" tasks\");","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"     * Returns the total number of tasks in the list in String.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    public int getTotalNumber() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"     * Add a task into the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"     * @param task the task to be added into the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"    public void addTaskToList(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"     * Create a TaskList object.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"     * @return a new TaskList that has no tasks stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"    public static TaskList makeNewTaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"        return new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"     * Sets the status of the specified task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"     * @param i Index of the task in the task list, that","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"     *          is to be set as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"    public void setTaskAsDone(int i) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"        if (i \u003c 1 || i \u003e this.listOfTasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"            throw new DukeNoSuchTask(new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        this.listOfTasks.get(i - 1).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     * Returns the task at the specified position.","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"     * @param i Index of the task in the task list, that","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"     *          is to be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"    public Task deleteTask(int i) throws DukeIncorrectInputs {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"        if (i \u003c 1 || i \u003e this.listOfTasks.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"            throw new DukeNoSuchTask(new IllegalArgumentException());","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"        return this.listOfTasks.remove(i - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"     * String representation of the TaskList object.","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"        if (this.listOfTasks.size() \u003d\u003d 0) { // if there is no task within list","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"            return \"\\tYou have not added any tasks to your list.\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"                    + \"\\tLog any task you wish to add.\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        String toPrint \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"        for (Task task : this.listOfTasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"            toPrint \u003d toPrint + \"\\t\" + i + \". \" + task + \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"            i++;","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"didymental"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"didymental"},"content":"        return toPrint;","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":95}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents a ToDo object that can be added","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" * to users\u0027 task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":" * @author Ne Zhijian, Didymus A0218159Y","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"    protected ToDo(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"        super(s);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"     * String representation of the ToDo object","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"    public String saveToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"        return \"T | \" + super.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"didymental":26}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":" * Represents the user interface that interacts with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"     * The logo of Duke chatBot.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"    private static final String DUKE_LOGO \u003d \"      ____        _        \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"            \"     |  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"            \"     | | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"            \"     | |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"            \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"     * Formats the reply in a bubble.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"     * @param reply reply message that is to be formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"     * @return formatted reply that is sent to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"    private static String formatDukeMessage(String reply) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"        return \"\\t____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"                reply +","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"                \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"     * Prints the opening message when Duke chatBot first boots up.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"    public static void printOpeningMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(Ui.DUKE_LOGO + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"                        \"\\tHELLO! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"                        \"\\tTo ease your experience, here are some commands you can type: \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027list\u0027: view all tasks in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027todo\u0027: add a todo task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027deadline\u0027: add a deadline task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027event\u0027: add an event task in your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027delete\u0027: delete a task from your task list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"                        \"\\t\\t \u0027bye\u0027: exit chat\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"                        \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"                )","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"     * Prints the closing message when Duke chatBot is closed.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"    public static void printClosingMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tBye. Hope to see you again soon!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"     * Prints the error messages when Duke chatBot catches an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"     * @param e exception that is thrown.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"    public static void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"        System.err.println(Ui.formatDukeMessage(e.getMessage() + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"didymental"},"content":"     * Prints the reply from Duke chatBot to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"didymental"},"content":"     * @param message message that is formatted and sent to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"didymental"},"content":"    public static void printReply(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(message));","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"didymental"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"didymental"},"content":"     * Prints the success message once task is added.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"didymental"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"didymental"},"content":"     * @param total total number of tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"didymental"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"didymental"},"content":"    public static void printAddedTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tGot it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"didymental"},"content":"                \"\\tNow you have \" + total + \" in your list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"didymental"},"content":"    public static void printDeleteTaskMessage(Task task, String total) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tNoted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"didymental"},"content":"                \"\\tNow you have \" + total + \" in your list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"didymental"},"content":"    public static void printDoneMessage(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"didymental"},"content":"        System.out.println(Ui.formatDukeMessage(\"\\tNice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"didymental"},"content":"                \"\\t\\t\" + task + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"didymental"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"didymental"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"didymental"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"didymental":91}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"didymental"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"didymental"},"content":"done zero","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"didymental"},"content":"deadline iP due /by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"didymental"},"content":"deadline iP due by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"didymental"},"content":"deadline iP due /at 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"didymental"},"content":"todo buy financial calculator","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"didymental"},"content":"todo recap cs2100 lecture","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"didymental"},"content":"event lazpitch /at 2021-08-30","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"didymental"},"content":"event lazpitch at 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"didymental"},"content":"event lazpitch /by 2021-08-19","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"didymental"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"didymental"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"didymental"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"didymental"},"content":"123456","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"didymental"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"didymental"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"didymental"},"content":"done one","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"didymental"},"content":"done one by one","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"didymental"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"didymental"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"didymental"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"didymental"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"didymental"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"didymental"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"didymental"},"content":"done 100","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"didymental"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"didymental"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"didymental"},"content":"done -100","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"didymental"},"content":"read book","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"didymental"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"didymental"},"content":"delete one","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"didymental"},"content":"delete one by one","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"didymental"},"content":"todo add book","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"didymental"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"didymental"},"content":"todo take book","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"didymental"},"content":"todo throw book","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"didymental"},"content":"todo return book","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"didymental"},"content":"delete 5","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"didymental"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"didymental"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"didymental"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"didymental"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"didymental"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"didymental"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"didymental"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"didymental":58}}]
