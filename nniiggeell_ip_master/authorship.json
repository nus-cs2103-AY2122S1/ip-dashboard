[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"# Lebron Chat Bot","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are ","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"instructions on how to use it.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"Refer [HERE](https://github.com/nniiggeell/ip/tree/A-Release#readme) to view the user guide and find out more about ","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"what Lebron can do!","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project ","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"first)","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in ","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"[here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"4. After that, locate the `src/main/java/Lebron/Launcher.java` file, right-click it, and choose `Run Launcher.main()` ","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"(if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see ","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"the GUI open and Lebron\u0027s welcome message!","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"## Download the JAR","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"Prerequisites: Java 11","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"1. Download the latest JAR from [here](https://github.com/nniiggeell/ip/releases).","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"2. Run the JAR.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"3. Enjoy!","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":11,"nniiggeell":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    mainClassName \u003d \"lebron.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"    archiveBaseName \u003d \"lebron\"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    //toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    sourceSets \u003d []","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":43,"nniiggeell":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"**LebronChatBot** is a desktop app that can help you manage your tasks and to-do lists.","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"It is text-based and optimised for use via a GUI. If you can type fast, **LebronChatBot** manage your tasks ","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"faster than traditional GUI apps.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"### Simple Task Management","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"Quickly create any task and Lebron will take note of them. You can store todos, deadlines and events here!","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"### Date and Time","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"Lebron accepts date and time for the **deadline** and **event** tasks. This will allow you to store more","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"information about your tasks!","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"### `list` - Lists the tasks currently stored by Lebron","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"Shows a list of all tasks in LebronChatBot.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"[T][] wash the dishes","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"### `done` - Marks a task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"Example of usage: done 1","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"Note: ","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"* The index must be a positive integer 1,2,3...","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"* The index must not exceed the number of tasks currently stored by Lebron.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"[T][X] wash the dishes","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"### `todo` - Add a *todo* task in Lebron","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"Example of usage: todo clean my room","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"[T][] clean my room","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"### `deadline` - Add a *deadline* task in Lebron","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"Format: `deadline DESCRIPTION /by DATETIME`","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"Example of usage: deadline 2103 iP /by 2021-09-17 2359","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"* The format of the DATETIME must be **YYYY-MM-DD HHmm**","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"[D][] c2103 iP (by: 17 Sep 2021 23:59)","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"### `event` - Add an *event* task in Lebron","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"Format: `event DESCRIPTION /at DATETIME`","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"Example of usage: event movie night /at 2021-09-18 0001","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"* The format of the DATETIME must be **YYYY-MM-DD HHmm**","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"[E][] movie night (at: 18 Sep 2021 00:01)","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"Now you have 4 tasks in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"### `delete` - Delete a task from Lebron","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"Example of usage: delete 3","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"* The index must be a positive integer 1,2,3...","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"* The index must not exceed the number of tasks currently stored by Lebron.","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"[D][] c2103 iP (by: 17 Sep 2021 23:59)","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"### `find` - Find tasks that have descriptions containing the given keywords","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"Shows a list of all tasks in LebronChatBot that contain the given keywords.","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"Example of usage: find clean","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"nniiggeell"},"content":"* if you enter more than 1 keyword (ie *find* clean my), lebron will search for tasks that match the string \"clean my\". ","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"nniiggeell"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"nniiggeell"},"content":"1. [T][] clean my room","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"nniiggeell"},"content":"### `undo` - Undo your last \"undo-able\" action","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"nniiggeell"},"content":"Undo-able actions are actions that change the state of the Tasks stored by Lebron. These are todo,","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"nniiggeell"},"content":"deadline, event, delete, done commands. ","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"nniiggeell"},"content":"Format: `undo`","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"nniiggeell"},"content":"* Lebron will always undo the latest \"undo-able\" action, if possible.","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"nniiggeell"},"content":"I have removed your last action.","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"nniiggeell"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"nniiggeell"},"content":"### `bye` - Ends the program","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"nniiggeell"},"content":"Lebron replies and quickly ends the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"nniiggeell"},"content":"Format: `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"nniiggeell"},"content":"Note:","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"nniiggeell"},"content":"* The program will terminate.","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"nniiggeell"},"content":"Example output:","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":152,"author":{"gitId":"nniiggeell"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":154,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"-":17,"nniiggeell":137}},{"path":"src/main/java/lebron/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.controller.Bridge;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"//Credit to Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        Application.launch(Bridge.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":15}},{"path":"src/main/java/lebron/Lebron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.ToDo;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"import java.util.EmptyStackException;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"import java.util.Stack;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":" * This class represents the chat bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"public class Lebron {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    public static final String FILE_PATH \u003d \"./build/libs/data/lebron.txt\";","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    private Stack\u003cTaskList\u003e previousStates \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     * Available commands that the bot can understand.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    public enum Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"        FIND(\"find\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        UNDO(\"undo\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"        OTHER(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        private final String text;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        Command(String text) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"            this.text \u003d text;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"         * Creates a Command enum value from a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"         * @param text the text.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"         * @return the desired Command enum.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"        public static Command fromString(String text) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"            for (Command c : Command.values()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"                if (c.text.equalsIgnoreCase(text)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"                    return c;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"            return OTHER;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"     * Constructor for the chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"    public Lebron() {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e loadList \u003d storage.loadFileContents(FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"        this.previousStates.push(new TaskList(loadList));","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"     * Runs the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"     * @param text the input text.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"     * @return the reply received from the bot given an input.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"    public String run(String text) {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"            String commandWord \u003d parser.parseText(text);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"            String[] splitWords \u003d parser.split(text);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"            Command command \u003d Command.fromString(commandWord);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"            switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"            case BYE:","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandBye();","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"            case LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandList();","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandDone(splitWords);","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"            case TODO:","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandToDo(splitWords);","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandDeadline(splitWords);","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"            case EVENT:","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandEvent(splitWords);","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"            case DELETE:","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandDelete(splitWords);","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"            case FIND:","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d this.commandFind(splitWords);","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"            case UNDO:","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"                this.commandUndo();","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"                reply \u003d ui.replyUndo();","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"nniiggeell"},"content":"            case OTHER:","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"nniiggeell"},"content":"                throw new LebronException(\"    OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"nniiggeell"},"content":"            default:","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"nniiggeell"},"content":"            return reply;","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"nniiggeell"},"content":"        } catch (LebronException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"nniiggeell"},"content":"            return ui.printException(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"nniiggeell"},"content":"     * Retrieves the TaskList at the top of the stack, which is the current state.","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"nniiggeell"},"content":"     * @return the TaskList at the top of the stack.","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"nniiggeell"},"content":"    private TaskList getLatestState() {","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"nniiggeell"},"content":"        return previousStates.peek();","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is bye.","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"nniiggeell"},"content":"    private String commandBye() {","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyExit();","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is list.","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"nniiggeell"},"content":"    private String commandList() {","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyDisplay(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is undo. Will remove the current state of the TaskList from the stack.","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"nniiggeell"},"content":"    private void commandUndo() throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"nniiggeell"},"content":"        if (previousStates.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    I can\u0027t undo any further!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"nniiggeell"},"content":"            this.previousStates.pop();","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"nniiggeell"},"content":"            storage.saveToFile(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"nniiggeell"},"content":"        } catch (EmptyStackException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    OOPS! I have no memory of your last action! Try doing something first!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is done.","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"nniiggeell"},"content":"    private String commandDone(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please specify which task you wish \"","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"nniiggeell"},"content":"                    + \"to complete.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":182,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"nniiggeell"},"content":"        if (Integer.parseInt(splitWords[1]) \u003e getLatestState().getSize()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The task is not yet created!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"nniiggeell"},"content":"        if (Integer.parseInt(splitWords[1]) \u003c 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The number you provide must be more than 1\");","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify which task is done.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":191,"author":{"gitId":"nniiggeell"},"content":"            int pos \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"nniiggeell"},"content":"            TaskList newTaskList \u003d getLatestState().getCopy(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"nniiggeell"},"content":"            Task task \u003d getLatestState().markDone(pos - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"nniiggeell"},"content":"            previousStates.push(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"nniiggeell"},"content":"            storage.saveToFile(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"nniiggeell"},"content":"            return ui.replyMarkDone(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"nniiggeell"},"content":"        catch (NumberFormatException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":199,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Make sure you input a valid number!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":200,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":202,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":206,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":208,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"nniiggeell"},"content":"    private String commandToDo(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":212,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The description of a ToDo \"","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"nniiggeell"},"content":"                    + \"cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":214,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":215,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify task and description.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new ToDo(splitWords[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"nniiggeell"},"content":"        TaskList newTaskList \u003d getLatestState().getCopy(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"nniiggeell"},"content":"        newTaskList.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"nniiggeell"},"content":"        previousStates.push(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"nniiggeell"},"content":"        storage.saveToFile(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyAdd(newTaskList.getLst(), task);","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":223,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":224,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":225,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":227,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":228,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":229,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":230,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":231,"author":{"gitId":"nniiggeell"},"content":"    private String commandDeadline(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":232,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":233,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The description of a Deadline \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":234,"author":{"gitId":"nniiggeell"},"content":"                    \"cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":235,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":236,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify task and description.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":237,"author":{"gitId":"nniiggeell"},"content":"        String[] splitBy \u003d splitWords[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"nniiggeell"},"content":"        if (splitBy.length \u003c 2 || splitBy[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":239,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that the \u0027/by\u0027 keyword \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":240,"author":{"gitId":"nniiggeell"},"content":"                    \"is used and that a due date and time is given.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":241,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":242,"author":{"gitId":"nniiggeell"},"content":"        assert splitBy.length \u003d\u003d 2 : \"There should be a description and a datetime.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":243,"author":{"gitId":"nniiggeell"},"content":"        String[] dateTimeArr \u003d splitBy[1].split(\" \", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":244,"author":{"gitId":"nniiggeell"},"content":"        if (dateTimeArr.length \u003c 2 || dateTimeArr[1].equals(\"\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":245,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that your date and time is \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":246,"author":{"gitId":"nniiggeell"},"content":"                    \"valid and formatted as \u0027yyyy-MM-dd\u0027 \u0027HHmm\u0027.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":247,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":248,"author":{"gitId":"nniiggeell"},"content":"        assert dateTimeArr.length \u003d\u003d 2 : \"There should be a date and time.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Deadline(splitBy[0], dateTimeArr[0],","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"nniiggeell"},"content":"                dateTimeArr[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"nniiggeell"},"content":"        TaskList newTaskList \u003d getLatestState().getCopy(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"nniiggeell"},"content":"        newTaskList.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"nniiggeell"},"content":"        previousStates.push(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"nniiggeell"},"content":"        storage.saveToFile(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyAdd(newTaskList.getLst(), task);","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":257,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":258,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":259,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is event.","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":261,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":262,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":263,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":264,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":265,"author":{"gitId":"nniiggeell"},"content":"    private String commandEvent(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":266,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":267,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The description of an Event \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":268,"author":{"gitId":"nniiggeell"},"content":"                    \"cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":269,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":270,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify task and description.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":271,"author":{"gitId":"nniiggeell"},"content":"        String[] splitAt \u003d splitWords[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":272,"author":{"gitId":"nniiggeell"},"content":"        if (splitAt.length \u003c 2 || splitAt[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":273,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that the \u0027/at\u0027 keyword \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":274,"author":{"gitId":"nniiggeell"},"content":"                    \"is used and that a due date is given.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":275,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":276,"author":{"gitId":"nniiggeell"},"content":"        assert splitAt.length \u003d\u003d 2 : \"There should be a description and a datetime.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":277,"author":{"gitId":"nniiggeell"},"content":"        String[] dateTimeArr \u003d splitAt[1].split(\" \", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":278,"author":{"gitId":"nniiggeell"},"content":"        if (dateTimeArr.length \u003c 2 || dateTimeArr[1].equals(\"\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":279,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that your date and time is \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":280,"author":{"gitId":"nniiggeell"},"content":"                    \"valid and formatted as \u0027yyyy-MM-dd\u0027 \u0027HHmm\u0027.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":281,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":282,"author":{"gitId":"nniiggeell"},"content":"        assert dateTimeArr.length \u003d\u003d 2 : \"There should be a date and time.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":283,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Event(splitAt[0], dateTimeArr[0], dateTimeArr[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":284,"author":{"gitId":"nniiggeell"},"content":"        TaskList newTaskList \u003d getLatestState().getCopy(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":285,"author":{"gitId":"nniiggeell"},"content":"        newTaskList.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":286,"author":{"gitId":"nniiggeell"},"content":"        previousStates.push(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":287,"author":{"gitId":"nniiggeell"},"content":"        storage.saveToFile(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":288,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyAdd(newTaskList.getLst(), task);","lastModifiedDate":"2021-09-17"},{"lineNumber":289,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":290,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":291,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":292,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is delete.","lastModifiedDate":"2021-09-17"},{"lineNumber":293,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":294,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":295,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":296,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":297,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":298,"author":{"gitId":"nniiggeell"},"content":"    private String commandDelete(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":299,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":300,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please specify which task you wish \"","lastModifiedDate":"2021-09-08"},{"lineNumber":301,"author":{"gitId":"nniiggeell"},"content":"                    + \"to delete.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":302,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":303,"author":{"gitId":"nniiggeell"},"content":"        if (Integer.parseInt(splitWords[1]) - 1 \u003e getLatestState().getSize()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":304,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The task is not yet created!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":305,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":306,"author":{"gitId":"nniiggeell"},"content":"        if (Integer.parseInt(splitWords[1]) \u003c 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":307,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! The number you provide must be more than 1\");","lastModifiedDate":"2021-09-17"},{"lineNumber":308,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":309,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify which task to delete.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":310,"author":{"gitId":"nniiggeell"},"content":"        int pos \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":311,"author":{"gitId":"nniiggeell"},"content":"        TaskList newTaskList \u003d getLatestState().getCopy(getLatestState());","lastModifiedDate":"2021-09-17"},{"lineNumber":312,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d newTaskList.delete(pos - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":313,"author":{"gitId":"nniiggeell"},"content":"        previousStates.push(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":314,"author":{"gitId":"nniiggeell"},"content":"        storage.saveToFile(newTaskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":315,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyDelete(task, newTaskList.getSize());","lastModifiedDate":"2021-09-17"},{"lineNumber":316,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":317,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":318,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":319,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where commandWord is find.","lastModifiedDate":"2021-09-17"},{"lineNumber":320,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":321,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed user input.","lastModifiedDate":"2021-09-16"},{"lineNumber":322,"author":{"gitId":"nniiggeell"},"content":"     * @return the response from the bot.","lastModifiedDate":"2021-09-16"},{"lineNumber":323,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the input is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":324,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":325,"author":{"gitId":"nniiggeell"},"content":"    private String commandFind(String[] splitWords) throws LebronException {","lastModifiedDate":"2021-09-16"},{"lineNumber":326,"author":{"gitId":"nniiggeell"},"content":"        if (splitWords.length \u003c 2 || splitWords[1].equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":327,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please specify some words to search for.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":328,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":329,"author":{"gitId":"nniiggeell"},"content":"        assert splitWords.length \u003d\u003d 2 : \"There should be 2 items to specify a string to search for.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":330,"author":{"gitId":"nniiggeell"},"content":"        String keyword \u003d splitWords[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":331,"author":{"gitId":"nniiggeell"},"content":"        return ui.replyFind(getLatestState(), keyword);","lastModifiedDate":"2021-09-17"},{"lineNumber":332,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":333,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":333}},{"path":"src/main/java/lebron/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class parses the instructions given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    //default constructor","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     * Splits the text and returns the first word which is the command word.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     * @param text the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"     * @return the first word.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    public String parseText(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        String[] splitWords \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"        String commandWord \u003d splitWords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        return commandWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     * Splits the text into 2 portions.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     * The first word is the first element in the array, the rest is the second element.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     * @param text the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     * @return an array where the first element is the first word, and the second element is the rest of the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    public String[] split(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        String[] splitWords \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        return splitWords;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":34}},{"path":"src/main/java/lebron/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":" * Represents a storage class to handle writing and loading from a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    private File file;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     * @param filePath the file path","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            //if file does not exist","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"            if (!file.isFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"            this.file \u003d file;","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"            System.out.println(\"Something went wrong when creating/finding directory: \"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     * Loads the file contents and saves it in an arraylist.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"     * @param filePath the file path.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"     * @return an ArrayList containing tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"    public ArrayList\u003cTask\u003e loadFileContents(String filePath) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"                String[] splitWords \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"                String taskName \u003d splitWords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"                String isDoneValue \u003d splitWords[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"                Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"                switch (taskName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"                    this.handleCaseToDo(splitWords, isDoneValue, taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"                    this.handleCaseDeadline(splitWords, isDoneValue, taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"                    this.handleCaseEvent(splitWords, isDoneValue, taskList);","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"                    System.out.println(\":( OOPS! There is a task that I don\u0027t recognise.\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"            return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"            System.out.println(\"Something went wrong when loading file contents \"","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"     * Saves the current list of tasks into the specified file.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"            for (int i \u003d 0; i \u003c taskList.getLst().size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"                String textToAppend \u003d taskList.getItem(i).getStringForFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"                builder.append(textToAppend).append(\"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"            fw.write(builder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"            System.out.println(\"Something went wrong when saving file contents \"","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"                    + e.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where the task is a ToDo.","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed input from text file.","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"     * @param isDoneValue \"1\" if task is done, \"0\" if task is not done.","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the tasklist.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"    private void handleCaseToDo(String[] splitWords, String isDoneValue, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new ToDo(splitWords[2]);","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"        if (isDoneValue.equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"nniiggeell"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"nniiggeell"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where the task is a Deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed input from text file.","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"nniiggeell"},"content":"     * @param isDoneValue \"1\" if task is done, \"0\" if task is not done.","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the tasklist.","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"nniiggeell"},"content":"    private void handleCaseDeadline(String[] splitWords, String isDoneValue, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"nniiggeell"},"content":"            String deadline \u003d splitWords[3];","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"nniiggeell"},"content":"            String[] dateTimeDeadline \u003d deadline.split(\" \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"nniiggeell"},"content":"            Task task \u003d new Deadline(splitWords[2], dateTimeDeadline[0], dateTimeDeadline[1]);","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"nniiggeell"},"content":"            if (isDoneValue.equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"nniiggeell"},"content":"                task.markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"nniiggeell"},"content":"            taskList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"nniiggeell"},"content":"        } catch (LebronException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"nniiggeell"},"content":"            System.err.println(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"nniiggeell"},"content":"     * Handles the case where the task is an Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"nniiggeell"},"content":"     * @param splitWords the parsed input from text file.","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"nniiggeell"},"content":"     * @param isDoneValue \"1\" if task is done, \"0\" if task is not done.","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the tasklist.","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"nniiggeell"},"content":"    private void handleCaseEvent(String[] splitWords, String isDoneValue, ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"nniiggeell"},"content":"            String at \u003d splitWords[3];","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"nniiggeell"},"content":"            String[] dateTimeEvent \u003d at.split(\" \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"nniiggeell"},"content":"            Task task \u003d new Event(splitWords[2], dateTimeEvent[0], dateTimeEvent[1]);","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"nniiggeell"},"content":"            if (isDoneValue.equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"nniiggeell"},"content":"                task.markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"nniiggeell"},"content":"            taskList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"nniiggeell"},"content":"        } catch (LebronException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"nniiggeell"},"content":"            System.err.println(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":162}},{"path":"src/main/java/lebron/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * Represents a response the bot makes to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    private static final String HORIZONTAL_LINE \u003d \"    \"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"            + \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private int count;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * Handles the greet event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    public String greet() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        return (\"    Hello! I\u0027m LebronChatBot\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"                + \"    What can I do for you?\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the add event.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"     * @param lst the TaskList that the user wants to add the task to.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    public String replyAdd(ArrayList\u003cTask\u003e lst, Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(lst.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        return (\"    Got it. I\u0027ve added this task: \\n\" + \"    \"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"                + task.toString() + \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the exit event when the user says bye.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"    public String replyExit() {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"        return (\"    Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the display list event when the user says list.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"     * @param lst The TaskList to be displayed.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"    public String replyDisplay(TaskList lst) {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"        StringBuilder reply \u003d new StringBuilder(\"    Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"        for (int i \u003d 0; i \u003c lst.getSize(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"            reply.append(\"    \").append(count).append(\". \").append(lst.getItem(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"            count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"        return reply.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the markDone event.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"     * @param task The task that is marked done.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"    public String replyMarkDone(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"        return \"    Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"                + \"    \" + task.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the delete event.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"     * @param task the task in the list to delete.","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"     * @param size the size of the TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"    public String replyDelete(Task task, int size) {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(size);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"        return \"    Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"                + \"    \" + task.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"                + \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the find event.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"     * @param lst the current TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"     * @param keyword the keyword.","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired response.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"    public String replyFind(TaskList lst, String keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"        StringBuilder reply \u003d new StringBuilder(\"    Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"        for (int i \u003d 0; i \u003c lst.getSize(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"            if (lst.getItem(i).getName().contains(keyword)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"                reply.append(\"    \").append(count).append(\". \")","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"                        .append(lst.getItem(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"        return reply.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the undo event.","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"nniiggeell"},"content":"     * @return a reply.","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"nniiggeell"},"content":"    public String replyUndo() {","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"nniiggeell"},"content":"        return \"    I have removed your last action.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"nniiggeell"},"content":"     * Prints out the given message.","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"nniiggeell"},"content":"     * @param message the given message.","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"nniiggeell"},"content":"     * @return the error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"nniiggeell"},"content":"    public String printException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"nniiggeell"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":136}},{"path":"src/main/java/lebron/controller/Bridge.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.controller;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import lebron.Lebron;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"//Credit to Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"public class Bridge extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    private Lebron lebron;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        lebron \u003d new Lebron();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Bridge.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLebron(lebron);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":36}},{"path":"src/main/java/lebron/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.controller;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"//Credit to Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":62}},{"path":"src/main/java/lebron/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.controller;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"import lebron.Lebron;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"//Credit to Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    private final Image lebronImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lebron.jpg\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blank.png\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    private Lebron lebron;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"     * Initialises the main window.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"                DialogBox.getDukeDialog(\"    Hello! I\u0027m LebronChatBot\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"                        + \"    What can I do for you?\\n\", lebronImage)","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    public void setLebron(Lebron l) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        lebron \u003d l;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"        String lebronText \u003d getResponse(userInput.getText());","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"        if (userText.equals(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"                DialogBox.getDukeDialog(lebronText, lebronImage)","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"        return lebron.run(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":72}},{"path":"src/main/java/lebron/exception/LebronException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * Represents exceptions that are specific to the program.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"public class LebronException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     * Creates a DukeException with the given error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * @param errorMessage the error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    public LebronException(String errorMessage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"nniiggeell":16}},{"path":"src/main/java/lebron/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Deadline event.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private final String strTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    private final String strDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     * @param date the date of the deadline in yyyy-mm-dd.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * @param time the time of the deadline in HHmm.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    public Deadline(String description, String date, String time) throws LebronException {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            this.strDate \u003d date;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"            this.strTime \u003d time;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"            this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that your date and time is \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"                    \"valid and formatted as \u0027yyyy-MM-dd\u0027 \u0027HHmm\u0027.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"                + \" \" + this.time + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"     * Produces the desired format for storing to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired string.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"    public String getStringForFile() {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"        return \"D | \" + super.getDoneValue() + \" | \" + super.getName() + \" | \" + this.date + \" \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"                time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"     * Overrides the makeCopy() method in Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"     * @return the copied task.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the date/time is in wrong format.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"    public Deadline makeCopy() throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"        return new Deadline(this.getName(), this.strDate, this.strTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":68}},{"path":"src/main/java/lebron/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Events event.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private final String strTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    private final String strDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     * @param date the date of the start of the event.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * @param time the time of the start of the event.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    public Event(String description, String date, String time) throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            this.strDate \u003d date;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"            this.strTime \u003d time;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"            this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"    :( OOPS! Please check that your date and time is \" +","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"                    \"valid and formatted as \u0027yyyy-MM-dd\u0027 \u0027HHmm\u0027.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"                + \" \" + this.time + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"     * Producess the desired format for storing to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired string.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"    public String getStringForFile() {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"        return \"E | \" + super.getDoneValue() + \" | \" + super.getName() + \"| \" + this.date + \" \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"                time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"     * Overrides the makeCopy() method in Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"     * @return the copied task.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the date/time is in wrong format.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"    public Event makeCopy() throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"        return new Event(this.getName(), this.strDate, this.strTime);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":68}},{"path":"src/main/java/lebron/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * This class represents a Task the user gives to the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    private final String name;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"     * @param name the name of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * Marks the task as true.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"     * Returns the status icon of the tast, X if true, blank if false.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"     * @return X if true, blank if false.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        return (isDone ? \"X\" : \" \"); // markAsDone done task with X","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"     * Returns the name of the Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     * @return name of the Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"        return this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     * Gets the value representing if the task is done.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"     * @return 1 if the task is done, 0 if the task is not done.","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"    public String getDoneValue() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"     * Produces the desired format for storing to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired string.","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"    public String getStringForFile() {","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"        return \" | \" + getDoneValue() + \" | \" + name;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"    public Task makeCopy() throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"        return new Task(this.getName());","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"        String format \u003d String.format(\"[%s] \", this.getStatusIcon());","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"        return format + this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":77}},{"path":"src/main/java/lebron/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * Represents the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private final int position;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"     * @param lst The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        this.tasks \u003d lst;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"        this.position \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"     * Handles the add event.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"     * @param task the Task that the user wants to add.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"     * Handles the markDone event when the user says done, marking the Task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the Task in the ArrayList lst.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"     * @return the task that was marked done.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    public Task markDone(int pos) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d tasks.get(pos);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"        return task;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"     * THandles the delete response.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the task in the list to delete.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"     * @return the task that was deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    public Task delete(int pos) throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"        if (pos \u003e tasks.size() - 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"            throw new LebronException(\"Invalid index!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d tasks.remove(pos);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"        return task;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"     * Handles the undo event.","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"     * @throws LebronException if the list is empty.","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"    public void undo() throws LebronException {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"       if (this.tasks.isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"           throw new LebronException(\"Oops! Your list is already empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"       }","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"       tasks.remove(tasks.size() - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"    public ArrayList\u003cTask\u003e getLst() {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"     * Retrieves the task from the list given an index.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"     * @param position the index.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"     * @return the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"    public Task getItem(int position) {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"        return this.tasks.get(position);","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"     * Gets a copy of the TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the TaskList to copy.","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"     * @return the copied TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"    public TaskList getCopy(TaskList taskList) throws LebronException {","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"            Task task \u003d taskList.getItem(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"            Task newTask \u003d task.makeCopy();","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"            //if done","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"            if (task.getDoneValue().equals(\"1\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"                newTask.markAsDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"            lst.add(newTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"        return new TaskList(lst);","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":114}},{"path":"src/main/java/lebron/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class represents the ToDo event.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     * Produces the desired format for storing to file.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     * @return the desired string.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    public String getStringForFile() {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        return \"T | \" + super.getDoneValue() + \" | \" + super.getName();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"     * Overrides the makeCopy() method in Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"     * @return the copied task.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"    public ToDo makeCopy() {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"        return new ToDo(this.getName());","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" \u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"                \u003cFont name\u003d\"Segoe UI Symbol\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lebron.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your command here...\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" textFill\u003d\"#184b81\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"                \u003cFont name\u003d\"Segoe UI Symbol\" size\u003d\"12.0\" /\u003e\u003c/font\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"nniiggeell":23}},{"path":"src/test/java/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    void toFile() throws LebronException {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        Deadline deadline \u003d new Deadline(\"work\", \"2021-08-30\", \"0830\");","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"D | 0 | work | 2021-08-30 0830\", deadline.getStringForFile());","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":17}},{"path":"src/test/java/test/LebronTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.Lebron;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"class LebronTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        Lebron lebron \u003d new Lebron();","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"    I can\u0027t undo any further!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"                lebron.run(\"undo\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"    OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\", lebron.run(\"hello\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"    OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\", lebron.run(\"whats up\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"    Bye. Hope to see you again soon!\\n\", lebron.run(\"bye\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"    Bye. Hope to see you again soon!\\n\", lebron.run(\"bye\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"nniiggeell":22}},{"path":"src/test/java/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.Lebron;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.exception.LebronException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    private Lebron lebron \u003d new Lebron();","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    TaskListTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    void add() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        taskList.add(new TaskStub(\"yolo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    void markDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        taskList.markDone(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"bob\", taskList.getLst().get(0).getName());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    void delete() throws LebronException {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        taskList.delete(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":46}},{"path":"src/test/java/test/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"    private String name;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     * @param name the name of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    public TaskStub(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        super(name);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    public String getDoneValue() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        return \"1\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    public String getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        return name;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"        name \u003d \"bob\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":30}},{"path":"src/test/java/test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    void getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    void getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"Do work\", task.getName());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    void toFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\" | 0 | Do work\", task.getStringForFile());","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":29}},{"path":"src/test/java/test/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package test;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.Lebron;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    public String replyAdd(ArrayList\u003cTask\u003e lst, Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        return \"hi\";","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":8}}]
