[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Deadline event.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"    private String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * @param by the deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class represents the chat bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"//CHANGE TO CASE SWITCH","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"//Remove pos from TASKS use the int after done to put inside Response","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    public enum Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        OTHER(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        private String text;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        Command(String text) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"            this.text \u003d text;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        public static Command fromString(String text) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"            for (Command c : Command.values()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"                if (c.text.equalsIgnoreCase(text)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"                    return c;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"            return OTHER;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        final String horizontalLine \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        //System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        Response response \u003d new Response();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        int position \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        response.greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"        String text \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"        while (!text.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"            String[] splitWords \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"            String commandWord \u003d splitWords[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"            Command command \u003d  Command.fromString(commandWord);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"            switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"                case LIST:","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"                    response.display();","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"                case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"                    int pos \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"                    response.markDone(pos - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"                        response.echo(new ToDo(splitWords[1]));","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"                        System.err.println(horizontalLine +","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"                                \"    :( OOPS! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"                                horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"                        String[] splitBy \u003d splitWords[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"                        response.echo(new Deadline(splitBy[0], splitBy[1]));","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"                        System.err.println(horizontalLine +","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"                                \"    :( OOPS! The description or a time of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"                                horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"                        String[] splitAt \u003d splitWords[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"                        response.echo(new Events(splitAt[0], splitAt[1]));","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"                        System.err.println(horizontalLine +","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"                                \"    :( OOPS! The description or a time of an event cannot be empty.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"                                horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"                    int pos2 \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"                    response.delete(pos2 - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"                case OTHER:","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"                    System.out.println(horizontalLine +","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"                            \"    :( OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"                            horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"            text \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"        response.exit();","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":8,"nniiggeell":96}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Events event.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"    private String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * @param at the start","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":22}},{"path":"src/main/java/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * Represents a response the bot makes to the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"public class Response {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    private final String horizontalLine \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    private ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    private int count;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    public Response() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        this.lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the greet event.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    public void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine +","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"                \"    Hello! I\u0027m LebronChatBot\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"                \"    What can I do for you?\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"                horizontalLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the echo event.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"     * @param task the Task that the user wants to add","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"    public void echo(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        lst.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(lst.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine + \"    Got it. I\u0027ve added this task: \\n\" + \"    \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"                task.toString() + \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"                horizontalLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the exit event when the user says bye.","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    public void exit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine +","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"                \"    Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"                horizontalLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the display list event when the user says list.","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    public void display() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine + \"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"        lst.forEach(item -\u003e {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"            System.out.println(\"    \" + count + \". \" + item.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"            count++;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"        });","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the markDone event when the user says done, marking the Task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the Task in the ArrayList lst","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"    public void markDone(int pos) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d lst.get(pos);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"        task.mark();","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine + \"    Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"                \"    \" + task.toString() +","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"                \"\\n\" + horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the delete response.","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the task in the list to delete","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"    public void delete(int pos) {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d lst.remove(pos);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(lst.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(horizontalLine + \"    Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"                \"    \" + task.toString() +","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"                \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"                +  horizontalLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nniiggeell":88}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":" * This class represents a Task the user gives to the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"    private String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * @param name the name of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * This method marks the task as true.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    public void mark() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * This method returns the status icon of the tast, X if true, blank if false.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     * @return X if true, blank if false","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"     * This method returns the name of the Task","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"     * @return name of the Task","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    public String getName() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        return this.name;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"        String format \u003d String.format(\"[%s] \", this.getStatusIcon());","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        return format + this.name;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":46}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":" * This class represents the ToDo event.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":8}}]
