[{"path":"Test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    void toFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"        Deadline deadline \u003d new Deadline(\"work\", \"2021-08-30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"D | 0 | work | 2021-08-30\", deadline.toFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":13}},{"path":"Test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    void add() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        taskList.add(new TaskStub(\"yolo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(2, taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    void markDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        taskList.markDone(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"bob\", taskList.getLst().get(0).getName());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    void delete() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        lst.add(new TaskStub(\"swag\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        TaskList taskList \u003d new TaskList(lst);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        taskList.delete(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":38}},{"path":"Test/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"public class TaskStub extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"    String name;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"     * @param name the name of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    public TaskStub(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"        super(name);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    public String getDoneValue() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        return \"1\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    public String getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        return name;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    public void mark() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        name \u003d \"bob\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":28}},{"path":"Test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    void getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\" \",task.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    void getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\"Do work\",task.getName());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    void toFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d new Task(\"Do work\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        assertEquals(\" | 0 | Do work\", task.toFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":25}},{"path":"Test/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"import lebron.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"    public void replyAdd(ArrayList\u003cTask\u003e lst, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":12}},{"path":"src/main/java/lebron/Lebron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Events;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":" * This class represents the chat bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"public class Lebron {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    private static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    public enum Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        FIND(\"find\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        OTHER(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        private String text;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"        Command(String text) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"            this.text \u003d text;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"         * Creates a Command enum value from a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"         * @param text the text.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"         * @return the desired Command enum.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"        public static Command fromString(String text) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"            for (Command c : Command.values()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"                if (c.text.equalsIgnoreCase(text)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"                    return c;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"            return OTHER;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"     * Constructor for the chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"     * @throws IOException if stream to file is missing or invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"    public Lebron() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"            ArrayList\u003cTask\u003e loadList \u003d storage.loadFileContents(FILE_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"            taskList \u003d new TaskList(loadList);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"            ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"            taskList \u003d new TaskList(loadList);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"     * Runs the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"     * @throws IOException if stream to file is missing or invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"        int position \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"        ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"        String text \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"        while (!text.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"            String commandWord \u003d parser.parseText(text);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"            String[] splitWords \u003d parser.split(text);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"            Command command \u003d Command.fromString(commandWord);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"            switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"            case LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"                ui.replyDisplay(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"                int pos \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"                taskList.markDone(pos - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"                storage.saveToFile(taskList.getLst());","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"            case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"                    taskList.add(new ToDo(splitWords[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"                    storage.saveToFile(taskList.getLst());","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"                    System.err.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"                            \"    :( OOPS! The description of a todo cannot be empty.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"                            HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"                    String[] splitBy \u003d splitWords[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"                    taskList.add(new Deadline(splitBy[0], splitBy[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"nniiggeell"},"content":"                    storage.saveToFile(taskList.getLst());","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"nniiggeell"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"nniiggeell"},"content":"                    System.err.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"nniiggeell"},"content":"                            \"    :( OOPS! The description or a time of a deadline cannot be empty.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"nniiggeell"},"content":"                            HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"nniiggeell"},"content":"            case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"nniiggeell"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"nniiggeell"},"content":"                    String[] splitAt \u003d splitWords[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"nniiggeell"},"content":"                    taskList.add(new Events(splitAt[0], splitAt[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"nniiggeell"},"content":"                    storage.saveToFile(taskList.getLst());","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"nniiggeell"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"nniiggeell"},"content":"                    System.err.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"nniiggeell"},"content":"                            \"    :( OOPS! The description or a time of an event cannot be empty.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"nniiggeell"},"content":"                            HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"nniiggeell"},"content":"            case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"nniiggeell"},"content":"                int pos2 \u003d Integer.parseInt(splitWords[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"nniiggeell"},"content":"                taskList.delete(pos2 - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"nniiggeell"},"content":"                storage.saveToFile(taskList.getLst());","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"nniiggeell"},"content":"            case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"nniiggeell"},"content":"                String keyword \u003d splitWords[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"nniiggeell"},"content":"                ui.replyFind(taskList, keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"nniiggeell"},"content":"            case OTHER:","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"nniiggeell"},"content":"                System.out.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"nniiggeell"},"content":"                        \"    :( OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"nniiggeell"},"content":"                        HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"nniiggeell"},"content":"            text \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"nniiggeell"},"content":"        ui.exit();","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"nniiggeell"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"nniiggeell"},"content":"        new Lebron().run();","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"nniiggeell":159}},{"path":"src/main/java/lebron/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class parses the instructions given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"    //default constructor","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     * Splits the text and returns the first word which is the command word.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     * @param text the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"     * @return the first word.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    public String parseText(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"        String[] splitWords \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"        String commandWord \u003d splitWords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        return commandWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     * Splits the text into 2 portions. The first word is the first element in the array, the rest is the second element.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * @param text the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     * @return an array where the first element is the first word, and the second element is the rest of the text.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    public String[] split(String text) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"        String[] splitWords \u003d text.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"        return splitWords;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":33}},{"path":"src/main/java/lebron/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Events;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":" * Represents a storage class to handle writing and loading from a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    private File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"     * @param filePath the file path","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        //if file does not exist","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"     * Loads the file contents and saves it in an arraylist.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"     * @param filePath the file path","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"     * @return an ArrayList containing tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"    public ArrayList\u003cTask\u003e loadFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"        final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"            String[] splitWords \u003d line.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"            String taskName \u003d splitWords[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"            String isDone \u003d splitWords[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"            Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"            switch (taskName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"            case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"                task \u003d new ToDo(splitWords[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"                    task.mark();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"            case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"                String deadline \u003d splitWords[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"                task \u003d new Deadline(splitWords[2], deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"                    task.mark();","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"            case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"                String at \u003d splitWords[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"                task \u003d new Events(splitWords[2], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"                if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"                    task.mark();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"                System.out.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"                        \"    :( OOPS! I\u0027m sorry, but I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"                        HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"     * Saves the current list of tasks into the specified file.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"     * @throws IOException if the stream is invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"    public void saveToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"            String textToAppend \u003d taskList.get(i).toFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"            builder.append(textToAppend + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"        fw.write(builder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":111}},{"path":"src/main/java/lebron/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * Represents a response the bot makes to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    private final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private int count;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * Constructor","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"     * Handles the greet event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"                \"    Hello! I\u0027m LebronChatBot\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"                \"    What can I do for you?\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"                HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the add event.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"     * @param lst the TaskList that the user wants to add the task to","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"    public void replyAdd(ArrayList\u003cTask\u003e lst, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(lst.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE + \"    Got it. I\u0027ve added this task: \\n\" + \"    \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"                task.toString() + \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"                HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the exit event when the user says bye.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"    public void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE +","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"                \"    Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"                HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the display list event when the user says list.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"     * @param lst The TaskList to be displayed.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"    public void replyDisplay(TaskList lst) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE + \"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"        lst.getLst().forEach(item -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"            System.out.println(\"    \" + count + \". \" + item.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"            count++;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nniiggeell"},"content":"        });","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the markDone event.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nniiggeell"},"content":"     * @param task The task that is marked done.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nniiggeell"},"content":"    public void replyMarkDone(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE + \"    Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nniiggeell"},"content":"                \"    \" + task.toString() +","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nniiggeell"},"content":"                \"\\n\" + HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the delete event.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nniiggeell"},"content":"     * @param task the task in the list to delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nniiggeell"},"content":"     * @param size the size of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nniiggeell"},"content":"    public void replyDelete(Task task, int size) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"nniiggeell"},"content":"        String num \u003d String.valueOf(size);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE + \"    Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nniiggeell"},"content":"                \"    \" + task.toString() +","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nniiggeell"},"content":"                \"\\n\" + \"    Now you have \" + num + \" tasks in the list\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nniiggeell"},"content":"                + HORIZONTAL_LINE);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"nniiggeell"},"content":"     * Responds to the find event.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"nniiggeell"},"content":"     * @param lst the current TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"nniiggeell"},"content":"     * @param keyword the keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"nniiggeell"},"content":"    public void replyFind(TaskList lst, String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"nniiggeell"},"content":"        this.count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE + \"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"nniiggeell"},"content":"        lst.getLst().forEach(item -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"nniiggeell"},"content":"            if (item.getName().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"nniiggeell"},"content":"                System.out.println(\"    \" + count + \". \" + item.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"nniiggeell"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"nniiggeell"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"nniiggeell"},"content":"        });","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"nniiggeell"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":115}},{"path":"src/main/java/lebron/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Deadline event.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * @param by the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +  by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        return \"D | \" + super.getDoneValue() + \" | \" + super.getName() + \" | \" + this.by;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":35}},{"path":"src/main/java/lebron/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" * This class represents the Events event.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * @param at          the start","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"        return \"E | \" + super.getDoneValue() + \" | \" + super.getName() + \" | \" + this.at;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":35}},{"path":"src/main/java/lebron/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class represents a Task the user gives to the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    private String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"     * @param name the name of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"     * This method marks the task as true.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    public void mark() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"     * This method returns the status icon of the tast, X if true, blank if false.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"     * @return X if true, blank if false","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"     * This method returns the name of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"     * @return name of the Task","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"        return this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"    public String getDoneValue() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"        return \" | \" + getDoneValue() + \" | \" + name;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"        String format \u003d String.format(\"[%s] \", this.getStatusIcon());","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"        return format + this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":62}},{"path":"src/main/java/lebron/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"import lebron.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":" * Represents the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"    private ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    private int position;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"     * @param lst The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"        this.lst \u003d lst;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"        this.position \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the add event.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nniiggeell"},"content":"     * @param task the Task that the user wants to add","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nniiggeell"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nniiggeell"},"content":"        lst.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nniiggeell"},"content":"        ui.replyAdd(this.lst, task);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the markDone event when the user says done, marking the Task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the Task in the ArrayList lst","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nniiggeell"},"content":"    public void markDone(int pos) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d lst.get(pos);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nniiggeell"},"content":"        task.mark();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nniiggeell"},"content":"        ui.replyMarkDone(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nniiggeell"},"content":"     * This method handles the delete response.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nniiggeell"},"content":"     * @param pos the position of the task in the list to delete","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nniiggeell"},"content":"    public void delete(int pos) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nniiggeell"},"content":"        Task task \u003d lst.remove(pos);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nniiggeell"},"content":"        ui.replyDelete(task, lst.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nniiggeell"},"content":"    public ArrayList\u003cTask\u003e getLst() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nniiggeell"},"content":"        return lst;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nniiggeell"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nniiggeell"},"content":"        return lst.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":66}},{"path":"src/main/java/lebron/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"package lebron.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":" * This class represents the ToDo event.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":" * @author Nigel Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nniiggeell"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nniiggeell"},"content":"     * Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nniiggeell"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nniiggeell"},"content":"     * @param description the name of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nniiggeell"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nniiggeell"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nniiggeell"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nniiggeell"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nniiggeell"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nniiggeell"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nniiggeell"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nniiggeell"},"content":"        return \"T | \" + super.getDoneValue() + \" | \" + super.getName();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nniiggeell"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nniiggeell"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nniiggeell"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nniiggeell":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nniiggeell"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nniiggeell"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"nniiggeell"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nniiggeell"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nniiggeell"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nniiggeell"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nniiggeell":8}}]
