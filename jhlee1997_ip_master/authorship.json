[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00272.0.3\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jhlee1997":15,"-":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" * Duke class is run as a program via main() method","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":" * @author Lee Jae Ho","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":" * @since 0.1","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     * Our main method. This xecutes the Duke program.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"        Application.launch(Ui.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":17,"-":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":" * This class extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Deadline. This handles user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"     * @param input Raw input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    public Deadline(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"        super(input.split(\" /\")[0].substring(9));","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"        this.by \u003d LocalDate.parse(input.split(\" /\")[1].substring(3));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Deadline. This is used when reading duke.txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"     * @param description Description of the task activity.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"     * @param by Time by which this task must be completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"     * Getter for \"by\" in a formatted String.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"     * @return Formatted String that nicely displays LocalDate by into \"MMM d yyyy\".","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"    private String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"     * toString method for Deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"     * @return Displays the task as [D], as well as \"by\".","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getTime() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":51}},{"path":"src/main/java/duke/EmptyDescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":" * This class extends InvalidCommandException. It handles cases when users do not","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":" * specify activity description of the task they wish to add.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"public class EmptyDescriptionError extends InvalidCommandException {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for EmptyDescriptionError","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"     * @param message The message will be either deadline, event, or todo.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"    public EmptyDescriptionError(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", message));","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":16}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":" * This class extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Event. This handles user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"     * @param input Raw input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    public Event(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"        super(input.split(\" /\")[0].substring(6));","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"        this.at \u003d LocalDate.parse(input.split(\" /\")[1].substring(3));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Event. This is used when reading duke.txt file.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"     * @param description Description of the task activity.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"     * @param at Time at which this task will take place.","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"     * Getter for \"at\" in a formatted String.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"     * @return Formatted String that nicely displays LocalDate by into \"MMM d yyyy\".","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"    private String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"     * toString method for Event.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"     * @return Displays the task as [E], as well as \"at\".","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getTime() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":51}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":" * This class handles all exceptions arising within Duke program.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"     * @param message The message will be formatted as shown below.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"        super(String.format(\"     ☹ OOPS!!! %s\\n\", message));","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":" * This class parses the user input into a command understood by Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Parser class. Initializes Storage and TaskList classes.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"     * @param filePath file URL where task information will be stored.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    public Parser(String filePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"     * This method returns the first word of raw user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"     * @param input Raw user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"     * @return The first word which is the command for Duke to understand.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"    public String parse(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"        return handleQuery(command, input);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"     * Method that allows Duke to handle the query by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"     * Error controls to tackle EmptyDescriptionError and UnknownCommandError.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"     * Command parsed by parse() method will be used to identify the query type.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"     * \"bye\" command will store taskList as a duke.txt file, then return null","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"     * which is picked up by the Ui class to shut down the window.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"     * @param command used to classify the query type from the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"     * @param input contains the overall user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"    private String handleQuery(String command, String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"                    storage.store(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jhlee1997"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jhlee1997"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jhlee1997"},"content":"                return null;","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jhlee1997"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jhlee1997"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jhlee1997"},"content":"                    Task t \u003d new Todo(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jhlee1997"},"content":"                    tasks.add(t);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jhlee1997"},"content":"                    return add(t, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jhlee1997"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jhlee1997"},"content":"                    return new EmptyDescriptionError(\"todo\").getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jhlee1997"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jhlee1997"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jhlee1997"},"content":"                    Task t \u003d new Event(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jhlee1997"},"content":"                    tasks.add(t);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jhlee1997"},"content":"                    return add(t, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jhlee1997"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jhlee1997"},"content":"                    return new EmptyDescriptionError(\"event\").getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jhlee1997"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jhlee1997"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jhlee1997"},"content":"                    Task t \u003d new Deadline(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jhlee1997"},"content":"                    tasks.add(t);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jhlee1997"},"content":"                    return add(t, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jhlee1997"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jhlee1997"},"content":"                    return new EmptyDescriptionError(\"event\").getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jhlee1997"},"content":"            case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"jhlee1997"},"content":"                return tasks.list();","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jhlee1997"},"content":"            case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jhlee1997"},"content":"                Task t \u003d tasks.done(Integer.parseInt(input.substring(5)) - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jhlee1997"},"content":"                return done(t);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jhlee1997"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jhlee1997"},"content":"                t \u003d tasks.delete(Integer.parseInt(input.substring(7)) - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"jhlee1997"},"content":"                return delete(t, tasks.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"jhlee1997"},"content":"            case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jhlee1997"},"content":"                String keyword \u003d input.substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jhlee1997"},"content":"                return tasks.find(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"jhlee1997"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jhlee1997"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"jhlee1997"},"content":"                    throw new UnknownCommandError(\"\");","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jhlee1997"},"content":"                } catch (UnknownCommandError e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jhlee1997"},"content":"                    return e.getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"jhlee1997"},"content":"     * This method will show users that the task has been added successfully to taskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"jhlee1997"},"content":"     * @param t The task being added.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"jhlee1997"},"content":"     * @param size The current size of taskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"jhlee1997"},"content":"    public String add(Task t, int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"jhlee1997"},"content":"        return \"     Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"jhlee1997"},"content":"                + String.format(\"       %s\\n\", t)","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"jhlee1997"},"content":"                + String.format(\"     Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"jhlee1997"},"content":"     * This method will show users that the task has been successfully marked as completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"jhlee1997"},"content":"     * @param t The taks that is marked as completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"jhlee1997"},"content":"    public String done(Task t) {","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"jhlee1997"},"content":"        return \"     Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"jhlee1997"},"content":"                + String.format(\"       %s\\n\", t);","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"jhlee1997"},"content":"     * This method will show users that the task has been deleted successfully from the taskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"jhlee1997"},"content":"     * @param t The task being deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"jhlee1997"},"content":"     * @param size The current size of the taskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"jhlee1997"},"content":"    public String delete(Task t, int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"jhlee1997"},"content":"        return \"     Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"jhlee1997"},"content":"                + String.format(\"       %s\\n\", t)","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"jhlee1997"},"content":"                + String.format(\"     Now you have %d tasks in the list.\\n\", size);","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":133}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":" * This class will be responsible for loading and storing the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"    protected File f;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"     * Constructor method for Storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"     * @param filePath User must specify where they wish their file be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"        this.f \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"     * This method loads the currently existing taskList memory to Duke. If the file","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"     * does not exist, then it will be created.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"     * @return Returns the taskList for the TaskList class to be initialized.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"     * @throws IOException Error control for potential IOException.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"        // if the directory \"data\" does not exist, then create the directory","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"        // check if \"duke.txt\" exists. If yes, load the info to taskList. Else, create the file.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"        if (!f.createNewFile()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"                String[] line \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"                Task t;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"                switch(line[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"                        t \u003d new Todo(\"todo \" + line[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"                        t \u003d new Deadline(line[2], LocalDate.parse(line[3]));","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"jhlee1997"},"content":"                        t \u003d new Event(line[2], LocalDate.parse(line[3]));","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"jhlee1997"},"content":"                        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"jhlee1997"},"content":"                    default:","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"jhlee1997"},"content":"                        throw new IllegalStateException(\"Unexpected value: \" + line[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"jhlee1997"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"jhlee1997"},"content":"                    t.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"jhlee1997"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"jhlee1997"},"content":"                result.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"jhlee1997"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"jhlee1997"},"content":"        return result;","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"jhlee1997"},"content":"     * This method stores the current taskList from Duke to the device.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"jhlee1997"},"content":"     * @throws IOException Error control for potential IOException.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"jhlee1997"},"content":"    public void store(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"jhlee1997"},"content":"        FileWriter fw \u003d new FileWriter(f);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"jhlee1997"},"content":"        for (Task t : tasks.tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"jhlee1997"},"content":"            String line \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"jhlee1997"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"jhlee1997"},"content":"                line +\u003d String.format(\"T | %d | %s\\n\", t.isDone ? 1 : 0, t.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"jhlee1997"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"jhlee1997"},"content":"                line +\u003d String.format(\"E | %d | %s | %s\\n\", t.isDone ? 1 : 0, t.description, ((Event)t).at);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"jhlee1997"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"jhlee1997"},"content":"                line +\u003d String.format(\"D | %d | %s | %s\\n\", t.isDone ? 1 : 0, t.description, ((Deadline)t).by);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"jhlee1997"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"jhlee1997"},"content":"            fw.write(line);","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"jhlee1997"},"content":"        fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":86}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":" * This class represents each task registered by the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     * @param description Description of the task activity.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"     * Method to represent the task status.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"     * @return Returns X for completed, and blank for non-completed task.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"     * Setter to mark a task as completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"     * toString method to represent Task into a String.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"     * @return Shows both the status and the description of the activity.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":45}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":" * This class manages all requests made to the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"     * @param tasks Stores the taskList memory as an ArrayList.","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"     * Method to add a task to the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"     * @param t The taks being added.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"     * Method to delete a task from the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"     * @param index Index of the task to remove from the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"     * @return The task being deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"        return t;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"     * Method to mark a task as completed from the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"     * @param index Index of the task to select from the taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"     * @return The task being marked as completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"    public Task done(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"        Task t \u003d tasks.get(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"        return t;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"jhlee1997"},"content":"     * Method to list the currently existing tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"jhlee1997"},"content":"     * @return The String form that will be passed to Ui to be shown to the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"jhlee1997"},"content":"    public String list() {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"jhlee1997"},"content":"        // list out all tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"jhlee1997"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"jhlee1997"},"content":"        StringBuilder result \u003d new StringBuilder(\"     Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"jhlee1997"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"jhlee1997"},"content":"            result.append(String.format(\"     %d.%s\\n\", count, task));","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"jhlee1997"},"content":"            count++;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"jhlee1997"},"content":"        return result.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"jhlee1997"},"content":"     * Method to return the size of the current taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"jhlee1997"},"content":"     * @return The size of the current taskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"jhlee1997"},"content":"    public int size() {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"jhlee1997"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"jhlee1997"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"jhlee1997"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"jhlee1997"},"content":"        StringBuilder result \u003d new StringBuilder(\"     Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"jhlee1997"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"jhlee1997"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"jhlee1997"},"content":"                result.append(String.format(\"     %d.%s\\n\", count, task));","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"jhlee1997"},"content":"                count++;","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"jhlee1997"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"jhlee1997"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"jhlee1997"},"content":"        return result.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":89}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":" * This class extends Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for this class. This handles user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"     * @param input Raw input from the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"    public Todo(String input) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"        super(input.substring(5));","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"     * toString method for this class.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"     * @return Displays the task as [T].","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":" * This class will handle the UI via which the user will interact with Duke.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"public class Ui extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"    private static final String LOGO \u003d \"Hello from\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"    private static final String DIVIDER \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jhlee1997"},"content":"    private static final String GREETING \u003d \"     Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jhlee1997"},"content":"            + \"     What can I do for you?\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"jhlee1997"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jhlee1997"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jhlee1997"},"content":"        // stage design","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jhlee1997"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jhlee1997"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jhlee1997"},"content":"        stage.setMinHeight(500.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jhlee1997"},"content":"        stage.setMinWidth(500.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jhlee1997"},"content":"        // window design","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jhlee1997"},"content":"        AnchorPane window \u003d new AnchorPane();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jhlee1997"},"content":"        window.setPrefSize(500.0, 500.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jhlee1997"},"content":"        // set scene","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"jhlee1997"},"content":"        Scene scene \u003d new Scene(window);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"jhlee1997"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"jhlee1997"},"content":"        // scroll design","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jhlee1997"},"content":"        ScrollPane scroll \u003d new ScrollPane();","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jhlee1997"},"content":"        scroll.setPrefSize(500, 485);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jhlee1997"},"content":"        scroll.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"jhlee1997"},"content":"        scroll.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"jhlee1997"},"content":"        scroll.setVvalue(1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"jhlee1997"},"content":"        scroll.setFitToWidth(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"jhlee1997"},"content":"        AnchorPane.setTopAnchor(scroll, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"jhlee1997"},"content":"        // textField design","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"jhlee1997"},"content":"        TextField textField \u003d new TextField();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jhlee1997"},"content":"        textField.setPrefWidth(500.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jhlee1997"},"content":"        AnchorPane.setLeftAnchor(textField, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jhlee1997"},"content":"        AnchorPane.setBottomAnchor(textField, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jhlee1997"},"content":"        // set scroll and textField as part of window","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"jhlee1997"},"content":"        window.getChildren().addAll(scroll, textField);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"jhlee1997"},"content":"        // chatRecords design","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"jhlee1997"},"content":"        VBox chatRecords \u003d new VBox();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jhlee1997"},"content":"        chatRecords.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jhlee1997"},"content":"        chatRecords.heightProperty().addListener((observable) -\u003e scroll.setVvalue(1.0));","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"jhlee1997"},"content":"        // set chatRecords as part of scroll","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"jhlee1997"},"content":"        scroll.setContent(chatRecords);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"jhlee1997"},"content":"        // shows the stage","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"jhlee1997"},"content":"        stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"jhlee1997"},"content":"        // handles user input","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jhlee1997"},"content":"        Parser parser \u003d new Parser(\"./data/duke.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jhlee1997"},"content":"        // print out welcome message","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jhlee1997"},"content":"        chatRecords.getChildren().add(new Label(LOGO + wrapReply(GREETING)));","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"jhlee1997"},"content":"        //event listener for text entered","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jhlee1997"},"content":"        textField.setOnAction((event) -\u003e {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"jhlee1997"},"content":"            String input \u003d textField.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"jhlee1997"},"content":"            chatRecords.getChildren().add(sendToDuke(input));","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"jhlee1997"},"content":"            textField.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"jhlee1997"},"content":"            String message \u003d parser.parse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"jhlee1997"},"content":"            if (message \u003d\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"jhlee1997"},"content":"                Platform.exit();","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"jhlee1997"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"jhlee1997"},"content":"                chatRecords.getChildren().add(sendToDuke(wrapReply(message)));","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"jhlee1997"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"jhlee1997"},"content":"        });","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"jhlee1997"},"content":"    private Label sendToDuke(String text) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"jhlee1997"},"content":"        Label reply \u003d new Label(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"jhlee1997"},"content":"        reply.setWrapText(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"jhlee1997"},"content":"        return reply;","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"jhlee1997"},"content":"     * This method will wrap any message within a formatted box.","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"jhlee1997"},"content":"     * @param content The message to be shown to the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"jhlee1997"},"content":"    public static String wrapReply(String content) {","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"jhlee1997"},"content":"        return DIVIDER + \"\\n\" + content + DIVIDER;","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":96}},{"path":"src/main/java/duke/UnknownCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":" * This class extends InvalidCommandException. It handles cases when users do not","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":" * give a command that is understood by Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"public class UnknownCommandError extends InvalidCommandException {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"     * Constructor for UnknownCommandError","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"     * @param message This message will be discarded.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    public UnknownCommandError(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":15}},{"path":"test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    public void testParse() {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"        assertEquals(\"todo\", new Parser().parse(\"todo abc\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":13}},{"path":"test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"import duke.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"    public void testGetStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"        Task t \u003d new Task(\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"        assertEquals(\" \", t.getStatusIcon());","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"        assertEquals(\"X\", t.getStatusIcon());","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"jhlee1997"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"jhlee1997"},"content":"        Task t \u003d new Task(\"abc\");","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"jhlee1997"},"content":"        assertEquals(\"[ ] abc\", t.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"jhlee1997"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"jhlee1997"},"content":"        assertEquals(\"[X] abc\", t.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"jhlee1997"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"jhlee1997"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"jhlee1997":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jhlee1997"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"jhlee1997"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"jhlee1997"},"content":"event project meeting /at 2021-08-06","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"jhlee1997"},"content":"todo join sports club","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jhlee1997"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jhlee1997"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jhlee1997"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jhlee1997"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jhlee1997"},"content":"deadline return book /by 2021-08-14","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"jhlee1997"},"content":"event project meeting /at 2021-08-16","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"jhlee1997"},"content":"deadline do homework /by 2021-08-21","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"jhlee1997"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jhlee1997"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jhlee1997"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jhlee1997"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jhlee1997"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jhlee1997"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jhlee1997":17}}]
