[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"# bern.Bern project template","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"3. After that, locate the `src/main/java/bern.Bern.java` file, right-click it, and choose `Run bern.Bern.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernarduskrishna":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"    mainClassName \u003d \"bern.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"    archiveBaseName \u003d \"bern\"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernarduskrishna":17,"-":44}},{"path":"src/main/java/bern/Bern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":" * This class is where the main method resides.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"public class Bern {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for class bern.Bern.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    public Bern() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"    public String getResponse(String input, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        return ui.getReplyUniversal(input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"bernarduskrishna":28}},{"path":"src/main/java/bern/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public enum Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    DONE, DEADLINE, EVENT, TODO, BYE, LIST, DELETE, INVALID, FIND","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":5}},{"path":"src/main/java/bern/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"bernarduskrishna":61}},{"path":"src/main/java/bern/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"bernarduskrishna":12}},{"path":"src/main/java/bern/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"    private Bern bern \u003d new Bern();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBern(bern);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernarduskrishna":31}},{"path":"src/main/java/bern/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    private Bern bern;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"    private ArrayList\u003cTask\u003e arListTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"    public void setBern(Bern b) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"        bern \u003d b;","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        new Storage().initialiseArListTask(arListTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"        String welcomeText \u003d \"Hi! I\u0027m Bern, your trustworthy chatbot.\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"                DialogBox.getDukeDialog(welcomeText, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"        String response \u003d bern.getResponse(input, arListTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"        assert response.length() \u003e 0 : \"response is inexplicably empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"            try {","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernarduskrishna":72}},{"path":"src/main/java/bern/exception/BernException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * A parent class for all exceptions bern.Bern(this programme) related.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class BernException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for BernException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The message passed to the instance of the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public BernException(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        super(s);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":15}},{"path":"src/main/java/bern/exception/DuplicateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class DuplicateException extends BernException {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public DuplicateException(String command) {","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(\"This task has been created before:\\n\" + command);","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"bernarduskrishna":7}},{"path":"src/main/java/bern/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * An exception for empty description.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class EmptyDescriptionException extends BernException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for EmptyDescriptionException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"     * @param command The command whose description is empty.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public EmptyDescriptionException(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        super(\"the description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":15}},{"path":"src/main/java/bern/exception/IndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * An exception for accessing index that is not valid.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class IndexException extends BernException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for IndexException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"     * @param text The command that triggered the error.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public IndexException(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        super(text + \": This command is trying to mark/delete uncreated event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":15}},{"path":"src/main/java/bern/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * Exception for commands that are invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class InvalidCommandException extends BernException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"     * @param text The command that triggered the error.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public InvalidCommandException(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        super(text + \" is not a command I understand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":15}},{"path":"src/main/java/bern/functionalities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":" * A class to contain all methods parsing related.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to create a ToDo instance from a string command.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The command from which a ToDo instance will be made.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The ToDo instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    public ToDo toDoFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        assert desc.length() \u003e 0 : \"description is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        ToDo ans \u003d new ToDo(desc);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to create a Deadline instance from a string command.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The command from which a Deadline instance will be made.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The Deadline instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"    public Deadline deadlineFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7, s.indexOf(\"(by: \") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        assert desc.length() \u003e 0 : \"description is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        String by \u003d s.substring(s.indexOf(\"(by: \") + 5, s.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"        assert by.length() \u003e 0 : \"by is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"        Deadline ans \u003d new Deadline(desc, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to create an Event instance from a string command.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The command from which an Event instance will be made.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The Event instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"    public Event eventFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7, s.indexOf(\"(at: \") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"        assert desc.length() \u003e 0 : \"description is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"        String at \u003d s.substring(s.indexOf(\"(at: \") + 5, s.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"        assert at.length() \u003e 0 : \"at is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"        Event ans \u003d new Event(desc, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to create a Task instance (can be Deadline, Event, or ToDo) from a string command.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The command from which a Task instance will be made.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The Task instance.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"bernarduskrishna"},"content":"    public Task taskFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bernarduskrishna"},"content":"        String cat \u003d s.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bernarduskrishna"},"content":"        assert cat.length() \u003e 0 : \"category is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"bernarduskrishna"},"content":"        return cat.equals(\"T\")","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"bernarduskrishna"},"content":"                ? toDoFromString(s)","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"bernarduskrishna"},"content":"                : cat.equals(\"D\")","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"bernarduskrishna"},"content":"                ? deadlineFromString(s)","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"bernarduskrishna"},"content":"                : eventFromString(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a given string can be parsed as a number (integer).","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"bernarduskrishna"},"content":"     * @param s The given string.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"bernarduskrishna"},"content":"     * @return A boolean to indicate whether it\u0027s a number or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isANumber(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"bernarduskrishna"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"bernarduskrishna"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"bernarduskrishna"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is of category \"Done\".","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is of category \"Done\".","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDone(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is of category \"Deadline\".","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is of category \"Deadline\".","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDeadline(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is of category \"Event\".","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is of category \"Event\".","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isEvent(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is of category \"ToDO\".","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is of category \"ToDO\".","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isToDo(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is of category \"Delete\".","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is of category \"Delete\".","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDelete(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is \"Bye\".","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is \"Bye\".","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isBye(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"bernarduskrishna"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to check whether a command is \"List\".","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The command given.","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Boolean whether the command is \"List\".","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isList(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"bernarduskrishna"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isFind(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":171}},{"path":"src/main/java/bern/functionalities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import bern.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.BernException;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates all methods storage/file related.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to write into file from an ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask An ArrayList of Tasks to be written into a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    public void writeIntoFile(ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"            new Storage().reinitialiseFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"            FileWriter fw \u003d new FileWriter(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"            if (arListTask.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"                fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"            fw.write(new Ui().getReply(Command.LIST, \"\", arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (BernException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to initialise the ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask An ArrayList of Tasks to be initialised.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"    public void initialiseArListTask(ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"        File file \u003d new File(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"                    String taskStr \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"                    assert taskStr.length() \u003e 0 : \"task is empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"                    taskStr \u003d taskStr.substring(taskStr.indexOf(\"[\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"                    Task temp \u003d new Parser().taskFromString(taskStr);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"                    new TaskList().addTask(temp, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to reinitialise the file (delete and make a new empty file).","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"    public void reinitialiseFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"            File file \u003d new File(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"            file.delete();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":76}},{"path":"src/main/java/bern/functionalities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates all methods TaskList related.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to add task into an ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"     * @param task The additional task.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    public void addTask(Task task, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to remove a task from an ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    public void removeTask(int index, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":30}},{"path":"src/main/java/bern/functionalities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.BernException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.DuplicateException;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.IndexException;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.InvalidCommandException;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates all methods UI related.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDeadline(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"deadline\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"        String task \u003d input.substring(len + 1, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        String by \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        Deadline addition \u003d new Deadline(task, by);","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"        if (arListTask.contains(addition)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"            throw new DuplicateException(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(addition, arListTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 8 : \"deadline input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with event.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifEvent(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"event\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"        String task \u003d input.substring(len + 1, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"        String at \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"        Event addition \u003d new Event(task, at);","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"        if (arListTask.contains(addition)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"            throw new DuplicateException(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(addition, arListTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 5 : \"event input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifToDo(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"todo\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"bernarduskrishna"},"content":"        ToDo addition \u003d new ToDo(input.substring(len + 1));","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"bernarduskrishna"},"content":"        if (arListTask.contains(addition)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"bernarduskrishna"},"content":"            throw new DuplicateException(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(addition, arListTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 4 : \"todo input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input is bye.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifBye(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Bye. Hope to see you soon and hope you found my service useful!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input is list.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifList(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"bernarduskrishna"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"bernarduskrishna"},"content":"        for (int i \u003d 0; i \u003c arListTask.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"bernarduskrishna"},"content":"            result +\u003d String.valueOf(i + 1)","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"bernarduskrishna"},"content":"                    + \". \"","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"bernarduskrishna"},"content":"                    + arListTask.get(i).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"bernarduskrishna"},"content":"                    + (i \u003d\u003d arListTask.size() - 1 ? \"\" : \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"bernarduskrishna"},"content":"        if (arListTask.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"bernarduskrishna"},"content":"            result \u003d \"There is no task.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"bernarduskrishna"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDelete(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"delete\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (!new Parser().isANumber(input.substring(7))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"bernarduskrishna"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (Integer.parseInt(input.substring(7)) \u003e arListTask.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"bernarduskrishna"},"content":"            throw new IndexException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"bernarduskrishna"},"content":"        int index \u003d Integer.parseInt(input.substring(len + 1)) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"bernarduskrishna"},"content":"        String temp \u003d arListTask.get(index).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().removeTask(index, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 6 : \"delete input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Noted! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"bernarduskrishna"},"content":"                + temp + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply for any command.","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"bernarduskrishna"},"content":"     * @param c The command type as delineated by enum class Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"bernarduskrishna"},"content":"    public String getReply(Command c, String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"bernarduskrishna"},"content":"        switch (c) {","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"bernarduskrishna"},"content":"        case DONE:","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"bernarduskrishna"},"content":"            return new Ui().ifDone(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"bernarduskrishna"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"bernarduskrishna"},"content":"            return ifDeadline(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"bernarduskrishna"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"bernarduskrishna"},"content":"            return ifEvent(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"bernarduskrishna"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"bernarduskrishna"},"content":"            return ifToDo(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"bernarduskrishna"},"content":"        case BYE:","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"bernarduskrishna"},"content":"            return ifBye(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"bernarduskrishna"},"content":"        case FIND:","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"bernarduskrishna"},"content":"            return ifFind(input, arListTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"bernarduskrishna"},"content":"        case LIST:","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"bernarduskrishna"},"content":"            return ifList(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"bernarduskrishna"},"content":"        case DELETE:","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"bernarduskrishna"},"content":"            return ifDelete(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"bernarduskrishna"},"content":"        case INVALID:","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"bernarduskrishna"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"bernarduskrishna"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"bernarduskrishna"},"content":"            return \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"bernarduskrishna"},"content":"    /***","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with find.","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifFind(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"find\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"bernarduskrishna"},"content":"        String word \u003d input.substring(len + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":214,"author":{"gitId":"bernarduskrishna"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"bernarduskrishna"},"content":"        for (Task t : arListTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"bernarduskrishna"},"content":"            if (t.canFindWord(word)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"bernarduskrishna"},"content":"                found.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"bernarduskrishna"},"content":"        String result \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"bernarduskrishna"},"content":"        for (int i \u003d 0; i \u003c found.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"bernarduskrishna"},"content":"            result +\u003d String.valueOf(i + 1)","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"bernarduskrishna"},"content":"                    + \". \"","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"bernarduskrishna"},"content":"                    + found.get(i).toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"bernarduskrishna"},"content":"                    + (i \u003d\u003d found.size() - 1 ? \"\" : \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"bernarduskrishna"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"bernarduskrishna"},"content":"            result \u003d \"There is no matching task.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 4 : \"find input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"bernarduskrishna"},"content":"        return result;","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get the reply if input starts with done.","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The reply by the bot.","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"bernarduskrishna"},"content":"     * @throws BernException If input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDone(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":247,"author":{"gitId":"bernarduskrishna"},"content":"        int len \u003d \"done\".length();","lastModifiedDate":"2021-09-07"},{"lineNumber":248,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d len || (input.length() \u003d\u003d len + 1 \u0026\u0026 input.substring(len, len + 1).equals(\" \"))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":249,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":250,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (!new Parser().isANumber(input.substring(5))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":251,"author":{"gitId":"bernarduskrishna"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":252,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (Integer.parseInt(input.substring(5)) \u003e arListTask.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":253,"author":{"gitId":"bernarduskrishna"},"content":"            throw new IndexException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":254,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":255,"author":{"gitId":"bernarduskrishna"},"content":"        int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":256,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.get(index).markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":257,"author":{"gitId":"bernarduskrishna"},"content":"        assert input.length() \u003e 4 : \"done input is invalid\";","lastModifiedDate":"2021-09-07"},{"lineNumber":258,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Good job! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":259,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(index).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":260,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":261,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":262,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":263,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to process input from parsing to replying to writing into file.","lastModifiedDate":"2021-09-02"},{"lineNumber":264,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":265,"author":{"gitId":"bernarduskrishna"},"content":"     * @param input The given command.","lastModifiedDate":"2021-09-02"},{"lineNumber":266,"author":{"gitId":"bernarduskrishna"},"content":"     * @param arListTask The initial ArrayList of Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":267,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":268,"author":{"gitId":"bernarduskrishna"},"content":"    public String getReplyUniversal(String input, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":269,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":270,"author":{"gitId":"bernarduskrishna"},"content":"            if (parser.isDone(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":271,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":272,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.DONE, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":273,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isDeadline(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":274,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":275,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.DEADLINE, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":276,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isEvent(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":277,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":278,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.EVENT, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":279,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isToDo(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":280,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":281,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.TODO, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":282,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isBye(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":283,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.BYE, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":284,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isList(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":285,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":286,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.LIST, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":287,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isDelete(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":288,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.DELETE, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":289,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isFind(input)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":290,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.FIND, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":291,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":292,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().getReply(Command.INVALID, input, arListTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":293,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":294,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":295,"author":{"gitId":"bernarduskrishna"},"content":"            if (e instanceof BernException) {","lastModifiedDate":"2021-09-16"},{"lineNumber":296,"author":{"gitId":"bernarduskrishna"},"content":"                return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":297,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":298,"author":{"gitId":"bernarduskrishna"},"content":"                return \"I only handle some errors as specified in IP requirements. \"","lastModifiedDate":"2021-09-16"},{"lineNumber":299,"author":{"gitId":"bernarduskrishna"},"content":"                        + \"Sorry this error wasn\u0027t handled. :\u0027(\";","lastModifiedDate":"2021-09-16"},{"lineNumber":300,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":301,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":302,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":303,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":303}},{"path":"src/main/java/bern/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":" * A class to represents a Task of type \"deadline\".","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"     * @param by When should the task be done by.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to return the String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"            Deadline compared \u003d (Deadline) obj;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"            if (compared.description.equals(this.description) \u0026\u0026 compared.by.equals(this.by)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"                return true;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"                return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":52}},{"path":"src/main/java/bern/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":" * A class to represents a Task of type \"Event\".","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"     * @param at When the task is.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"            this.at \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to return the String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"            Event compared \u003d (Event) obj;","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"            if (compared.description.equals(this.description) \u0026\u0026 compared.at.equals(this.at)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"                return true;","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"                return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":51}},{"path":"src/main/java/bern/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * A class to represent a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to get whether the task is done or not and represent it with an icon.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The status icon (X or empty).","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to return the String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to mark this Task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"    /***","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to see whether can find the word inside the description.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"     * @param word The given word.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"     * @return Whether can find the word or not.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean canFindWord(String word) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"        String[] words \u003d description.split(\"\\\\s+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"        for (String s : words) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"            if (s.equals(word)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"                return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"bernarduskrishna":61}},{"path":"src/main/java/bern/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":" * A class to represents a Task of type \"todo\".","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"     * A method to return the String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"     * @return The String representation of the class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"        if (!(obj instanceof ToDo)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"            ToDo compared \u003d (ToDo) obj;","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"            if (compared.description.equals(this.description)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(\"yo guys im in\");","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"                return true;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"                return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernarduskrishna":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bern.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"bernarduskrishna":19}},{"path":"src/test/java/functionalities/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates tests for Parser functions.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"     * A test for toDoFromString method.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    public void toDoFromStringTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"        ToDo temp \u003d new Parser().toDoFromString(\"[T][ ] Do 2103 project\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"        ToDo compare \u003d new ToDo(\"Do 2103 project\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        assertEquals(compare.toString(), temp.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":23}},{"path":"src/test/java/functionalities/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates tests for TaskList functions.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"     * A test for addTask method.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        ArrayList\u003cTask\u003e arListTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(new ToDo(\"hehe\"), arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(new ToDo(\"hoho\"), arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        assertEquals(2, arListTask.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":28}},{"path":"src/test/java/functionalities/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.BernException;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":" * A class to encapsulates tests for UI functions.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"public class UiTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"     * A test for ifBye method.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    public void ifByeTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"            String temp \u003d new Ui().ifBye(\"hehe\", new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"            assertEquals(\"Bye. Hope to see you soon and hope you found my service useful!\", temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (BernException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"todo Do 2103 project","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"event project meeting /at 2020-01-15","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"done 5","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"todo","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"blah","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"find project","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\bern\\*.java","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"java -classpath ..\\bin Bern \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernarduskrishna":2,"-":19}}]
