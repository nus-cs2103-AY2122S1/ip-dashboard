[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"# Bern project template","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"3. After that, locate the `src/main/java/Bern.java` file, right-click it, and choose `Run Bern.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernarduskrishna":2,"-":22}},{"path":"src/main/java/Bern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import bern.functionalities.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"public class Bern {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    public Bern() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"        ArrayList\u003cTask\u003e arListTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"        new Storage().initialiseArListTask(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"        System.out.println(\"Hi! I\u0027m Bern, your trustworthy chatbot.\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"        while (true) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"            String input \u003d myObj.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"            ui.processInput(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"            if (parser.isBye(input)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        new Bern().run();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"bernarduskrishna":45}},{"path":"src/main/java/bern/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public enum Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    DONE, DEADLINE, EVENT, TODO, BYE, LIST, DELETE, INVALID","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":5}},{"path":"src/main/java/bern/exception/BernException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class BernException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public BernException(String s) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(s);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":7}},{"path":"src/main/java/bern/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class EmptyDescriptionException extends BernException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public EmptyDescriptionException(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(\"the description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":7}},{"path":"src/main/java/bern/exception/IndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class IndexException extends BernException{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public IndexException(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(text + \": This command is trying to mark/delete uncreated event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":7}},{"path":"src/main/java/bern/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class InvalidCommandException extends BernException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public InvalidCommandException(String text) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(text + \" is not a command I understand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":7}},{"path":"src/main/java/bern/functionalities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    public ToDo toDoFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        ToDo ans \u003d new ToDo(desc);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    public Deadline deadlineFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7, s.indexOf(\"(by: \") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        String by \u003d s.substring(s.indexOf(\"(by: \") + 5, s.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        Deadline ans \u003d new Deadline(desc, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"    public Event eventFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"        boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"        String desc \u003d s.substring(7, s.indexOf(\"(at: \") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"        String at \u003d s.substring(s.indexOf(\"(at: \") + 5, s.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"        Event ans \u003d new Event(desc, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"            ans.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        return ans;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"    public Task taskFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"        String cat \u003d s.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"        return cat.equals(\"T\")","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"                ? toDoFromString(s)","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"                : cat.equals(\"D\")","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"                ? deadlineFromString(s)","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"                : eventFromString(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isANumber(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDone(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDeadline(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isEvent(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isToDo(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isDelete(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"bernarduskrishna"},"content":"        return input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isBye(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"bernarduskrishna"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"bernarduskrishna"},"content":"    public boolean isList(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"bernarduskrishna"},"content":"        return input.equals(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":87}},{"path":"src/main/java/bern/functionalities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.BernException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"    public void writeIntoFile(ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"            new Storage().reinitialiseFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"            FileWriter fw \u003d new FileWriter(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"            fw.write(new Ui().getReply(Command.LIST, \"\", arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (BernException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"    public void initialiseArListTask(ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"        File file \u003d new File(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"                    String taskStr \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"                    taskStr \u003d taskStr.substring(taskStr.indexOf(\"[\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"                    Task temp \u003d new Parser().taskFromString(taskStr);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"                    new TaskList().addTask(temp, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"    public void reinitialiseFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"            File file \u003d new File(\"savedList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"            file.delete();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":57}},{"path":"src/main/java/bern/functionalities/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"    public void addTask(Task task, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public void removeTask(int index, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":15}},{"path":"src/main/java/bern/functionalities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.functionalities;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import bern.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.BernException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.IndexException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"import bern.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"import bern.model.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDeadline(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d 8 || (input.length() \u003d\u003d 9 \u0026\u0026 input.substring(8, 9).equals(\" \"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"        // TODO Haven\u0027t handled if there is no /by","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bernarduskrishna"},"content":"        String task \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bernarduskrishna"},"content":"        String by \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(new Deadline(task, by), arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifEvent(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d 5 || (input.length() \u003d\u003d 6 \u0026\u0026 input.substring(5, 6).equals(\" \"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bernarduskrishna"},"content":"        // TODO Haven\u0027t handled if there is no /at","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bernarduskrishna"},"content":"        String task \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bernarduskrishna"},"content":"        String at \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(new Event(task, at), arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\")","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"bernarduskrishna"},"content":"        ;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifToDo(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d 4 || (input.length() \u003d\u003d 5 \u0026\u0026 input.substring(4, 5).equals(\" \"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().addTask(new ToDo(input.substring(5)), arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(arListTask.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\")","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"bernarduskrishna"},"content":"        ;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifBye(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Bye. Hope to see you soon and hope you found my service useful!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifList(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"bernarduskrishna"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"bernarduskrishna"},"content":"        for (int i \u003d 0; i \u003c arListTask.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"bernarduskrishna"},"content":"            result +\u003d String.valueOf(i + 1)","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"bernarduskrishna"},"content":"                    + \". \"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"bernarduskrishna"},"content":"                    + arListTask.get(i).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"bernarduskrishna"},"content":"                    + (i \u003d\u003d arListTask.size() - 1 ? \"\" : \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"bernarduskrishna"},"content":"        if (arListTask.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"bernarduskrishna"},"content":"            result \u003d \"There is no task.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"bernarduskrishna"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDelete(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d 6 || (input.length() \u003d\u003d 7 \u0026\u0026 input.substring(6, 7).equals(\" \"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (!new Parser().isANumber(input.substring(7))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"bernarduskrishna"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (Integer.parseInt(input.substring(7)) \u003e arListTask.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"bernarduskrishna"},"content":"            throw new IndexException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"bernarduskrishna"},"content":"        int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"bernarduskrishna"},"content":"        String temp \u003d arListTask.get(index).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"bernarduskrishna"},"content":"        new TaskList().removeTask(index, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Noted! I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"bernarduskrishna"},"content":"                + temp + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"bernarduskrishna"},"content":"                + \"Now you have \" + String.valueOf(arListTask.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"bernarduskrishna"},"content":"                + (arListTask.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"bernarduskrishna"},"content":"    public String getReply(Command c, String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"bernarduskrishna"},"content":"        switch (c) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bernarduskrishna"},"content":"            case DONE:","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"bernarduskrishna"},"content":"                return new Ui().ifDone(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"bernarduskrishna"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"bernarduskrishna"},"content":"                return ifDeadline(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"bernarduskrishna"},"content":"            case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"bernarduskrishna"},"content":"                return ifEvent(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"bernarduskrishna"},"content":"            case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"bernarduskrishna"},"content":"                return ifToDo(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"bernarduskrishna"},"content":"            case BYE:","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"bernarduskrishna"},"content":"                return ifBye(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"bernarduskrishna"},"content":"            case LIST:","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"bernarduskrishna"},"content":"                return ifList(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"bernarduskrishna"},"content":"            case DELETE:","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"bernarduskrishna"},"content":"                return ifDelete(input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"bernarduskrishna"},"content":"            case INVALID:","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"bernarduskrishna"},"content":"                throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"bernarduskrishna"},"content":"        return \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"bernarduskrishna"},"content":"    public String ifDone(String input, ArrayList\u003cTask\u003e arListTask) throws BernException {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"bernarduskrishna"},"content":"        if (input.length() \u003d\u003d 4 || (input.length() \u003d\u003d 5 \u0026\u0026 input.substring(4, 5).equals(\" \"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"bernarduskrishna"},"content":"            throw new EmptyDescriptionException(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (!new Parser().isANumber(input.substring(5))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"bernarduskrishna"},"content":"            throw new InvalidCommandException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"bernarduskrishna"},"content":"        } else if (Integer.parseInt(input.substring(5)) \u003e arListTask.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"bernarduskrishna"},"content":"            throw new IndexException(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"bernarduskrishna"},"content":"        int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"bernarduskrishna"},"content":"        arListTask.get(index).markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"bernarduskrishna"},"content":"        return \"Good job! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"bernarduskrishna"},"content":"                + arListTask.get(index).toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"bernarduskrishna"},"content":"    public void processInput(String input, ArrayList\u003cTask\u003e arListTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"bernarduskrishna"},"content":"            if (parser.isDone(input)){","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.DONE, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isDeadline(input)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.DEADLINE, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isEvent(input)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.EVENT, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isToDo(input)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.TODO, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isBye(input)){","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.BYE, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isList(input)){","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.LIST, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"bernarduskrishna"},"content":"            } else if (parser.isDelete(input)){","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"bernarduskrishna"},"content":"                System.out.println(new Ui().getReply(Command.DELETE, input, arListTask));","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"bernarduskrishna"},"content":"                storage.writeIntoFile(arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"bernarduskrishna"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"bernarduskrishna"},"content":"                new Ui().getReply(Command.INVALID, input, arListTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"bernarduskrishna"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (BernException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"bernarduskrishna"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"bernarduskrishna":163}},{"path":"src/main/java/bern/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"            this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":24}},{"path":"src/main/java/bern/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"            this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"            this.at \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd YYYY\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":23}},{"path":"src/main/java/bern/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"bernarduskrishna"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"bernarduskrishna"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"bernarduskrishna":24}},{"path":"src/main/java/bern/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"package bern.model;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bernarduskrishna"},"content":"todo Do 2103 project","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"bernarduskrishna"},"content":"event project meeting /at 2020-01-15","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bernarduskrishna"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bernarduskrishna"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bernarduskrishna"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bernarduskrishna"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bernarduskrishna"},"content":"done 5","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bernarduskrishna"},"content":"todo","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bernarduskrishna"},"content":"blah","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bernarduskrishna"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bernarduskrishna":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bernarduskrishna"},"content":"java -classpath ..\\bin Bern \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bernarduskrishna":1,"-":20}}]
