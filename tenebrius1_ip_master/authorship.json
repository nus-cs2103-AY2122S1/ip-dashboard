[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tenebrius1":2,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.util.DataManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates a CLI bot named Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        DataManager dataManager \u003d new DataManager(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"        ToDoList list \u003d new ToDoList(dataManager.readData(), dataManager);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"        parser \u003d new Parser(list, dataManager);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        new Duke(\"./data/task.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    /** Runs Duke */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public void run() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"        Command command;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"                input \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"                command \u003d parser.parse(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"                command.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"                Ui.printException(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":50,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MissingDateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MissingDescriptionException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MultipleDateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import duke.util.DataManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with adding tasks to the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    private final DataManager dataManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    private final String taskType;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"    private final String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    public AddCommand(ToDoList list, DataManager dataManager, String taskType, String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    /** Detects and handles different add commands appropriately. */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"            handleEvent(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"            handleTodo(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"            handleDeadline(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"     * Handles ToDos task creation.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingDescriptionException if no description is entered after todo command.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"    private void handleTodo(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"        String[] extracted \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"        // Check whether description is entered","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"        if (extracted.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"        ToDo task \u003d new ToDo(extracted[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"        list.addToList(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"        dataManager.writeToFile(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"     * Handles Deadline task creation.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingDescriptionException if no description is entered after deadline command.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingDateTimeException if no date/time is entered following a deadline command.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"     * @throws MultipleDateTimeException if multiple date/time is detected in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"    private void handleDeadline(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"        // Check whether description is entered","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"        String[] extracted \u003d input.split(\" \", 2)[1].split(\" /by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"        // Check whether deadline is specified correctly","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"        if (extracted.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingDateTimeException(\"\u0027/by\u0027\");","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"        } else if (extracted.length \u003e 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"            throw new MultipleDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"        String description \u003d extracted[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"        String deadline \u003d extracted[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"        list.addToList(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"        dataManager.writeToFile(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"     * Handler for Event task creation.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingDescriptionException if no description is entered after event command.","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingDateTimeException if no date/time is entered following an event command.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"tenebrius1"},"content":"     * @throws MultipleDateTimeException if multiple date/time is detected in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"tenebrius1"},"content":"    private void handleEvent(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"tenebrius1"},"content":"        // Check whether description is entered","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"tenebrius1"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingDescriptionException();","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"tenebrius1"},"content":"        String[] extracted \u003d input.split(\" \", 2)[1].split(\" /at \");","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"tenebrius1"},"content":"        // Check whether deadline is specified correctly","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"tenebrius1"},"content":"        if (extracted.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingDateTimeException(\"\u0027/at\u0027\");","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"tenebrius1"},"content":"        } else if (extracted.length \u003e 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"tenebrius1"},"content":"            throw new MultipleDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"tenebrius1"},"content":"        String description \u003d extracted[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"tenebrius1"},"content":"        String dateTime \u003d extracted[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(description, dateTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"tenebrius1"},"content":"        list.addToList(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"tenebrius1"},"content":"        dataManager.writeToFile(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":130}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * This class acts as a base class for all commands of Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    public abstract void execute() throws DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":17}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with deleting tasks from the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    private final String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    public DeleteCommand(String input, ToDoList list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    /** Extracts index from user input and removes task from the list and persisted storage. */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"        int index \u003d Parser.extractIndex(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"        list.removeFromList(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        list.updateData();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":29}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with marking tasks as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    private final String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    public DoneCommand(ToDoList list, String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    /** Extracts index from user input and marks corresponding task from the list and persisted storage as","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"     * done.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        int index \u003d Parser.extractIndex(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        list.markTaskAsDone(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        list.updateData();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":31}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with exiting Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        Ui.printExitMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":24}},{"path":"src/main/java/duke/command/FilterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MultipleDateTimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with filtering the tasks list using a date/time specified.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    private final String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public FilterCommand(String input, ToDoList list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        handleFilter(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"     * Handles Filter command logic.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"     * @throws DukeException if no date/time is entered by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"     * @throws MultipleDateTimeException if multiple date/time is detected.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"    public void handleFilter(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"            throw new DukeException(\"MissingDateTimeException: Enter a date/time after your command!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"        } else if (input.split(\" \").length \u003e 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"            throw new MultipleDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"        String[] extracted \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"        ArrayList\u003cTask\u003e extractedTask \u003d list.filterList(extracted[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"        if (extractedTask.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"            Ui.prettyPrint(\"There are no tasks on this day.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"            String output \u003d String.format(\"Here are your tasks for this day:%s\", Ui.LINE_SEPARATOR + \"\\t\\t\");","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"            int count \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"            for (Task t : extractedTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"                output \u003d output.concat(String.format(\"[%d]. %s\", count++, t + Ui.LINE_SEPARATOR + \"\\t\\t\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"            Ui.prettyPrint(output);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":61}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with finding tasks matching a keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    private final String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public FindCommand(ToDoList list, String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        String keyword \u003d Parser.extractKeyword(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d list.searchList(keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"        String output \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"        for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"            output \u003d output.concat(String.format(\"\\t%d. %s\", i, matchingTasks.get(i - 1)));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"            output \u003d output.concat(System.lineSeparator());","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"        Ui.prettyPrint(output);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.util.ToDoList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with printing the tasks in the tasks list.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    private ToDoList list;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public ListCommand(ToDoList list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"        list.printList();","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":23}},{"path":"src/main/java/duke/command/UnrecognisedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.NoSuchCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the command dealing with any invalid/unrecognised commands issued.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"public class UnrecognisedCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    private String input;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public UnrecognisedCommand(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"        throw new NoSuchCommandException(this.input.split(\" \", 2)[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates all exceptions specific to Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"     * Instantiates a new duke.Duke exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"     * @param error the error","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        super(error);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"tenebrius1":18}},{"path":"src/main/java/duke/exception/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to file IO issues.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class DukeIoException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public DukeIoException() {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(\"DukeIOException: Unable to write to data file. Your data will not be saved!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/DukeNegativeIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to negative index input by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class DukeNegativeIndexException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public DukeNegativeIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(\"DukeNegativeIndexException: You can\u0027t have negative tasks!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/IndexFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to wrong format of index in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class IndexFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public IndexFormatException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(\"IndexFormatException: Index entered should only contain positive numerals.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to user inputted index being out of bounds.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public InvalidIndexException(int size) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(String.format(\"InvalidIndexException: You only have %d tasks!\", size));","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/MissingDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to missing accompanying date/time in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class MissingDateTimeException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public MissingDateTimeException(String format) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(String.format(\"MissingDateTimeException: Command issued requires you to specify a date/time using \"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"                + \"%s\", format));","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":15}},{"path":"src/main/java/duke/exception/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to missing accompanying description in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class MissingDescriptionException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public MissingDescriptionException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(\"MissingDescriptionException: Command issued has to be followed by a description.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to missing index in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    public MissingIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        super(\"MissingIndexException: Please enter an index to let me know which task you are referring to.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":13}},{"path":"src/main/java/duke/exception/MissingKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to missing keyword in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public class MissingKeywordException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    public MissingKeywordException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        super(\"MissingQueryException: Please enter a keyword to let me know what you are searching for.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":13}},{"path":"src/main/java/duke/exception/MultipleDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to multiple date/time input by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class MultipleDateTimeException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public MultipleDateTimeException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(\"MultipleDateTimeException: Multiple date/time detected. Please input only one date/time!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":14}},{"path":"src/main/java/duke/exception/MultipleKeywordsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to multiple keywords in user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public class MultipleKeywordsException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    public MultipleKeywordsException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        super(\"MultipleKeywordsException: Unable to search for multiple keywords\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":13}},{"path":"src/main/java/duke/exception/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates exception due to unrecognized user inputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"public class NoSuchCommandException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    public NoSuchCommandException(String command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"        super(String.format(\"NoSuchCommandException: Unrecognised command `%s`. Perhaps you made a typo?\",","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"                command));","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    private final Date deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    private final String deadlineString;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"     * Instantiates a new Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"     * @param description the description of the deadline task.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"     * @param deadline    the deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        this.deadlineString \u003d deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        this.deadline \u003d Parser.parseDateTime(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"     * Reformats the dateTime format into a more readable format to be displayed.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string after reformatting.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    private String deadlineToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"            return deadlineString;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"        DateFormat outFormat;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"        if (this.deadlineString.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"            outFormat \u003d new SimpleDateFormat(\"MMM dd yyyy h.mm aa\");","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"            outFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"        return outFormat.format(this.deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"     * Converts the deadline task into text format meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string of task meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"    public String convertToTxt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"D | %s | %s\", super.convertToTxt(), deadlineToString());","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"     * Checks whether the date and time user input is the same as the deadline of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTime the date and time that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"     * @return true if deadline of task is the same as date and time of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"    public boolean isSameDateTime(String dateTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        return this.deadline.equals(Parser.parseDateTime(dateTime));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"     * String representation of a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"     * @return String representation of a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadlineToString());","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":82}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    private final String dateTimeString;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    private final Date dateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"     * @param description    the description of the event.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTimeString the datetime of event.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    public Event(String description, String dateTimeString) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        this.dateTimeString \u003d dateTimeString;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        this.dateTime \u003d Parser.parseDateTime(dateTimeString);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"     * Reformats the dateTime format into a more readable format to be displayed.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string after reformatting.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    private String dateTimeToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"        if (dateTime \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"            return dateTimeString;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"        DateFormat outFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"        if (this.dateTimeString.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"            outFormat \u003d new SimpleDateFormat(\"MMM dd yyyy h.mm aa\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"            outFormat \u003d new SimpleDateFormat(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"        return outFormat.format(this.dateTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"     * Checks whether the date and time user input is the same as the deadline of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTime the date and time that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"     * @return true if deadline of task is the same as date and time of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"    public boolean isSameDateTime(String dateTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"        return this.dateTime.equals(Parser.parseDateTime(dateTime));","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"     * Converts the event task into text format meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string of task meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"    public String convertToTxt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"E | %s | %s\", super.convertToTxt(), dateTimeToString());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"     * String representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"     * @return String representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.dateTimeToString());","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":82}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates a duke.task.Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    private final String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"     * Instantiates a new Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"     * @param description the description for the task","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"     * Gets the representation of whether a task is done.","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"     * @return Character that represents whether a task is done.","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    /** Marks task as done. */","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"     * Converts the task into text format meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string of task meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"    public String convertToTxt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, this.description);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"    public abstract boolean isSameDateTime(String dateTime);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"     * String representation of a task.","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"     * @return String representation of a task.","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":58}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates a ToDo.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"     * Instantiates a new To do.","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"     * @param description the description for todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"     * Converts the todo task into text format meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"     * Returns the formatted string.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"     * @return Formatted string of task meant for persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    public String convertToTxt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"T | %s\", super.convertToTxt());","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"     * Checks whether the date and time user input is the same as the deadline of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTime the date and time that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"     * @return true if deadline of task is the same as date and time of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    public boolean isSameDateTime(String dateTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"     * String representation of Todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"     * @return String representation of Todos task.","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":50}},{"path":"src/main/java/duke/util/DataManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the data manager used for persisting tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"public class DataManager {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    // Storage file used for persisting task","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    private final File data;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    // Relative path of file","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    public DataManager(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"        this.data \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"     * Reads data from storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"     * Returns an ArrayList of tasks containing all tasks persisted in storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"     * @return ArrayList of tasks persisted in storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"    public ArrayList\u003cTask\u003e readData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"                loadedTasks.add(convertTxtToTasks(sc.nextLine()));","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"            return loadedTasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"            createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"     * Writes data to storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"     * Takes in a task to be stored in persisted storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"     * @param task Task to be persisted in storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"    public void writeToFile(Task task) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"        if (!data.exists()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"            createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"            fw.write(task.convertToTxt() + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"            throw new DukeIoException();","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"     * Updates storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"     * Runs after an edit is made to the ToDoList.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"     * @param tasks Updated state of task list after edit is made.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"     * @throws DukeIoException if there is error writing to the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"    public void updateData(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"                fw.write(t.convertToTxt() + System.lineSeparator());","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"            throw new DukeIoException();","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"     * Converts the txt format stored in storage back to a Task object.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"     * @param txt Text format of Task stored in storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"     * @return Task object of text stored in storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"    private Task convertTxtToTasks(String txt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"        String[] extracted \u003d txt.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"tenebrius1"},"content":"        String taskType \u003d extracted[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"tenebrius1"},"content":"        Task task;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"tenebrius1"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"tenebrius1"},"content":"        case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"tenebrius1"},"content":"            task \u003d new ToDo(extracted[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"tenebrius1"},"content":"        case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"tenebrius1"},"content":"            task \u003d new Deadline(extracted[2], extracted[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"tenebrius1"},"content":"        case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"tenebrius1"},"content":"            task \u003d new Event(extracted[2], extracted[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"tenebrius1"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"tenebrius1"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"tenebrius1"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskType);","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"tenebrius1"},"content":"        if (extracted[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"tenebrius1"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"tenebrius1"},"content":"        return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"tenebrius1"},"content":"    private void createNewFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"tenebrius1"},"content":"            data.getParentFile().mkdirs();","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"tenebrius1"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"tenebrius1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"tenebrius1"},"content":"            System.err.println(\"IOException: Unable to create directory/file. Your data will not be saved!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tenebrius1":132}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import duke.command.FilterCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"import duke.command.UnrecognisedCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.IndexFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MissingIndexException;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MissingKeywordException;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.MultipleKeywordsException;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the parser which deals with making sense of user inputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    private final ToDoList list;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"    private final DataManager dataManager;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public Parser(ToDoList list, DataManager dataManager) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"     * Extracts out index for commands that deals with modifying specific tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"     * @return Desired index specified by user.","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"     * @throws MissingIndexException if user did not input index.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"     * @throws IndexFormatException if user inputs anything besides positive numerals.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"    public static int extractIndex(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"        // Check whether user input index","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"        // Checks whether user entered positive numeral","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"        if (!inputs[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"            throw new IndexFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"        return Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"     * Extracts out index for commands that deals with modifying specific tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTime DateTime entered by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"     * @return Date object after parsing user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"    public static Date parseDateTime(String dateTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"        Date date;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        DateFormat inFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"        if (dateTime.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"            inFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd hhmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"            inFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"            date \u003d inFormat.parse(dateTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"            return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"        return date;","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"     * Extracts out the keyword for find command.","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"     * @return the keyword user is searching for.","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"    public static String extractKeyword(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"        if (input.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"            throw new MissingKeywordException();","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"        } else if (input.split(\" \").length \u003e 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"            throw new MultipleKeywordsException();","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"        return input.split(\" \")[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"tenebrius1"},"content":"     * Parses the user\u0027s input and returns the appropriate command to act on.","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"tenebrius1"},"content":"     * @param input Raw user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"tenebrius1"},"content":"     * @return The corresponding Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"tenebrius1"},"content":"    public Command parse(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"tenebrius1"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"tenebrius1"},"content":"        String lowerCaseInput \u003d inputs[0].toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"tenebrius1"},"content":"        switch (lowerCaseInput) {","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"tenebrius1"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"tenebrius1"},"content":"            return new ListCommand(list);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"tenebrius1"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"tenebrius1"},"content":"            return new DoneCommand(list, input);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"tenebrius1"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"tenebrius1"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"tenebrius1"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"tenebrius1"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"tenebrius1"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"tenebrius1"},"content":"            return new AddCommand(list, dataManager, lowerCaseInput, input);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"tenebrius1"},"content":"        case \"exit\":","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"tenebrius1"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"tenebrius1"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"tenebrius1"},"content":"            return new DeleteCommand(input, list);","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"tenebrius1"},"content":"        case \"filter\":","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"tenebrius1"},"content":"            return new FilterCommand(input, list);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"tenebrius1"},"content":"        case \"find\":","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"tenebrius1"},"content":"            return new FindCommand(list, input);","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"tenebrius1"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"tenebrius1"},"content":"            return new UnrecognisedCommand(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tenebrius1":134}},{"path":"src/main/java/duke/util/ToDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeIoException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeNegativeIndexException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.InvalidIndexException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates a List used by Duke to keep track of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"public class ToDoList {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    private final DataManager dataManager;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    /** Instantiates a new To do list. */","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    public ToDoList(ArrayList\u003cTask\u003e list, DataManager dataManager) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"        this.dataManager \u003d dataManager;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    /** Prints the list of items that the user entered. */","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    public void printList() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        Ui.printList(list);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"     * Adds user input to list and pretty prints a visual feedback.","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"     * @param task Task to be stored into the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"        list.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        Ui.prettyPrint(","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"                String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"                        \"Got it. I\u0027ve added this task:\" + Ui.LINE_SEPARATOR","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"                                + \"\\t\\t%s\\tNow you have %s tasks in the list.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"                        task + Ui.LINE_SEPARATOR, list.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"     * Marks the task at index specified to be done.","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"     * @throws InvalidIndexException if user inputs a number larger than number of tasks currently in list.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"    public void markTaskAsDone(int index) throws DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"        if (index \u003e list.size()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"            throw new InvalidIndexException(list.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"            Ui.prettyPrint(String.format(\"Good job on completing this task!\\r\\n\\t\\t%s\", task));","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"     * Removes the task at index specified from the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"     * @throws InvalidIndexException if user inputs a number larger than number of tasks currently in list.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"     * @throws DukeNegativeIndexException if user inputs a negative number.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"    public void removeFromList(int index) throws DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        if (index \u003e list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"            throw new InvalidIndexException(list.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"        } else if (index \u003c 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"            throw new DukeNegativeIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"            Task task \u003d list.get(index - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"            Ui.prettyPrint(","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"                    String.format(","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"                            \"Noted. I\u0027ve removed this task:\\r\\n\\t\\t%s\\tNow you have %s tasks in the list.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"                            task + Ui.LINE_SEPARATOR, list.size() - 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"            list.remove(index - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"     * Updates the persisted storage with the current state of the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"     * @throws DukeIoException if there is error writing to the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"    public void updateData() throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"        dataManager.updateData(list);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"     * Returns an ArrayList with tasks that matches date and time specified by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"     * @param dateTime the date and time to filter the tasks with.","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"     * @return ArrayList containing task that matches the date and time specified.","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"    public ArrayList\u003cTask\u003e filterList(String dateTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"tenebrius1"},"content":"            if (t.isSameDateTime(dateTime)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"tenebrius1"},"content":"                filteredList.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"tenebrius1"},"content":"        return filteredList;","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"tenebrius1"},"content":"     * Searches through the list and filters out tasks containing a keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"tenebrius1"},"content":"     * Returns ArrayList of tasks containing the keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"tenebrius1"},"content":"     * @param keyword Keyword to search the list with.","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"tenebrius1"},"content":"     * @return ArrayList of tasks containing the keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"tenebrius1"},"content":"    public ArrayList\u003cTask\u003e searchList(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"tenebrius1"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"tenebrius1"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"tenebrius1"},"content":"            if (t.toString().contains(keyword)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"tenebrius1"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"tenebrius1"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":127}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":" * This class encapsulates the UI used for displaying data to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":" * @author Tan Yi Guan","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    private static final String DIVIDER \u003d","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"            \"\\t\" + \"-------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    private static final String BANNER \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"            \"____    __    ____  _______  __        ______   ______   .___  ___.  _______    .___________.  ______       _______   __    __   __  ___  _______  __  \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"                    + \"\\\\   \\\\  /  \\\\  /   / |   ____||  |      /      | /  __  \\\\  |   \\\\/   | |   ____|   |           | /  __  \\\\     |       \\\\ |  |  |  | |  |/  / |   ____||  | \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"                    + \" \\\\   \\\\/    \\\\/   /  |  |__   |  |     |  ,----\u0027|  |  |  | |  \\\\  /  | |  |__      `---|  |----`|  |  |  |    |  .--.  ||  |  |  | |  \u0027  /  |  |__   |  | \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"                    + \"  \\\\            /   |   __|  |  |     |  |     |  |  |  | |  |\\\\/|  | |   __|         |  |     |  |  |  |    |  |  |  ||  |  |  | |    \u003c   |   __|  |  | \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"                    + \"   \\\\    /\\\\    /    |  |____ |  `----.|  `----.|  `--\u0027  | |  |  |  | |  |____        |  |     |  `--\u0027  |    |  \u0027--\u0027  ||  `--\u0027  | |  .  \\\\  |  |____ |__| \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"                    + \"    \\\\__/  \\\\__/     |_______||_______| \\\\______| \\\\______/  |__|  |__| |_______|       |__|      \\\\______/     |_______/  \\\\______/  |__|\\\\__\\\\ |_______|(__) \\r\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"                    + \"                                                                                                                                                       \";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"     * Formats message passed in and prints it out to the screen.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"     * @param message Message to be pretty printed.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"    public static void prettyPrint(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"        System.out.printf(","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"                \"%s\\t%s%s\",","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"                DIVIDER + LINE_SEPARATOR, message + LINE_SEPARATOR, DIVIDER + LINE_SEPARATOR);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    /** Prints the welcome message when a user uses the bot for the first time. */","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        System.out.println(BANNER);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"        prettyPrint(","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"                \"Hello! I\u0027m Duke, your personal CLI bot!\"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tI now function as a simple ToDoList.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tI can keep track of 3 different types of tasks:\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t- ToDo: To add a new todo task, type \u0027todo\u0027 followed by a task description.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t- Deadline: To add a new deadline, type \u0027deadline\u0027 followed by the task \"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"                        + \"description and specify the deadline using \u0027/by \u003cdateTime\u003e\u0027\"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t- Event: To add a new event, type \u0027event\u0027 followed by the event description \"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"                        + \"and specify the timing using \u0027/at \u003cdateTime\u003e\u0027\"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tTo see all your task currently, type \u0027list\u0027.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tTo find task matching a certain keyword, type \u0027find \u003ckeyword\u003e\u0027.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tTo delete a task, type \u0027delete\u0027 followed by the index of the task you wish to \"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"                        + \"delete (e.g delete 2).\"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tYou can also mark tasks as done by typing \u0027done\u0027 followed by the index of the \"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"                        + \"task you completed (e.g done 2).\"","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"                        + LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tOnce you are done, just type \u0027exit\u0027 to quit the program.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"    /** Prints the exit message when user types in the exit command. */","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"        prettyPrint(\"Bye bye! See you again soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"     * Prints all the task contained in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"     * Prints a customized message when list is empty.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"     * @param list the ArrayList containing all the tasks entered by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"    public static void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"        // Custom message for when user types \u0027list\u0027 when nothing is added.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"            System.out.println(\"\\tYou are all done for the day :-)\");","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"                System.out.printf(\"\\t%s. %s\", i, list.get(i - 1) + LINE_SEPARATOR);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"     * Prints error/exceptions messages appropriately in System.err.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"     * @param message the error/exception message to be dispalyed.","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"    public static void printException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"        System.err.println(\"\\t\" + message);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tenebrius1":101}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"    public void convertToTxtTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(\"Test convertToTxt()\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"D | 0 | Test convertToTxt() | Aug 22 2021 10.00 AM\", task.convertToTxt());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_date() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(\"Test toString() with Date\", \"2021-08-22\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[D][ ] Test toString() with Date (by: Aug 22 2021)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_dateTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(\"Test toString() with DateTime\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[D][ ] Test toString() with DateTime (by: Aug 22 2021 10.00 AM)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_normal() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(\"Test toString()\", \"Tonight\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[D][ ] Test toString() (by: Tonight)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        Deadline task \u003d new Deadline(\"Test markAsDone()\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[D][X] Test markAsDone() (by: Aug 22 2021 10.00 AM)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":38}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"    public void convertToTxtTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(\"Test convertToTxt()\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"E | 0 | Test convertToTxt() | Aug 22 2021 10.00 AM\", task.convertToTxt());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_date() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(\"Test toString() with Date\", \"2021-08-22\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[E][ ] Test toString() with Date (at: Aug 22 2021)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_dateTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(\"Test toString() with DateTime\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[E][ ] Test toString() with DateTime (at: Aug 22 2021 10.00 AM)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest_normal() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(\"Test toString()\", \"Tonight\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[E][ ] Test toString() (at: Tonight)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        Event task \u003d new Event(\"Test markAsDone()\", \"2021-08-22 1000\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[E][X] Test markAsDone() (at: Aug 22 2021 10.00 AM)\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":38}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"    public void convertToTxtTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"        ToDo task \u003d new ToDo(\"Test convertToTxt()\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"T | 0 | Test convertToTxt()\", task.convertToTxt());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"        ToDo task \u003d new ToDo(\"Test toString()\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[T][ ] Test toString()\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public void markAsDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        ToDo task \u003d new ToDo(\"Test markAsDone()\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"[T][X] Test markAsDone()\", task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":26}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    public void extractIndexTest() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(2, Parser.extractIndex(\"done 2\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(3, Parser.extractIndex(\"delete 3\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"    public void parseDateTimeTest() throws ParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(new SimpleDateFormat(\"yyyy-MM-dd hhmm\").parse(\"2021-08-09 1800\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"                Parser.parseDateTime(\"2021-08-09 1800\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    public void parseDateTest() throws ParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").parse(\"2021-08-09\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"                Parser.parseDateTime(\"2021-08-09\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":29}},{"path":"src/test/java/duke/util/ToDoListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"public class ToDoListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    // Referenced from","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    // http://www.mastertheboss.com/various-stuff/testing-java/how-to-verify-the-console-output-in-junit-tests/","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    private final String ls \u003d System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    private ToDoList tdlist;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"        tdlist \u003d new ToDoList(new ArrayList\u003cTask\u003e(), null);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"    @AfterEach","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"    public void addToListTest_toDo_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"                \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tGot it. I\u0027ve added this task:\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t\"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"                        + \"[T][ ] read book\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tNow you have 1 tasks in the list.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"                        + ls,","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"    public void addToListTest_eventDateTime_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"tenebrius1"},"content":"                \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tGot it. I\u0027ve added this task:\"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t\"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"tenebrius1"},"content":"                        + \"[E][ ] read book (at: Aug 09 2021 7.00 PM)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tNow you have 1 tasks in the list.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"tenebrius1"},"content":"                        + ls,","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"tenebrius1"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"tenebrius1"},"content":"    public void addToListTest_deadlineDateTime_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Deadline(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"tenebrius1"},"content":"                \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tGot it. I\u0027ve added this task:\"","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t\\t\"","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"tenebrius1"},"content":"                        + \"[D][ ] read book (by: Aug 09 2021 7.00 PM)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tNow you have 1 tasks in the list.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"tenebrius1"},"content":"                        + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"tenebrius1"},"content":"                        + ls,","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"tenebrius1"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"tenebrius1"},"content":"    public void markTaskAsDoneTest_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"tenebrius1"},"content":"        outContent.reset();","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"tenebrius1"},"content":"            tdlist.markTaskAsDone(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"tenebrius1"},"content":"            assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"tenebrius1"},"content":"                    \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\tGood job on completing this task!\"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\t\\t\"","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"tenebrius1"},"content":"                            + \"[E][X] read book (at: Aug 09 2021 7.00 PM)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"tenebrius1"},"content":"                            + ls,","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"tenebrius1"},"content":"                    outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"tenebrius1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"tenebrius1"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"tenebrius1"},"content":"    public void markTaskAsDoneTest_exception() {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"tenebrius1"},"content":"            tdlist.markTaskAsDone(1000);","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"tenebrius1"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"tenebrius1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"tenebrius1"},"content":"            assertEquals(\"InvalidIndexException: You only have 1 tasks!\", e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"tenebrius1"},"content":"    public void removeFromListTest_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"tenebrius1"},"content":"        outContent.reset();","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"tenebrius1"},"content":"            tdlist.removeFromList(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"tenebrius1"},"content":"            assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"tenebrius1"},"content":"                    \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\tNoted. I\u0027ve removed this task:\"","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\t\\t\"","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"tenebrius1"},"content":"                            + \"[E][ ] read book (at: Aug 09 2021 7.00 PM)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\tNow you have 0 tasks in the list.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"tenebrius1"},"content":"                            + ls","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"tenebrius1"},"content":"                            + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"tenebrius1"},"content":"                            + ls,","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"tenebrius1"},"content":"                    outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"tenebrius1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"tenebrius1"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"tenebrius1"},"content":"    public void removeFromListTest_invalidIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"tenebrius1"},"content":"            tdlist.removeFromList(100);","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"tenebrius1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"tenebrius1"},"content":"            assertEquals(\"InvalidIndexException: You only have 1 tasks!\", e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"tenebrius1"},"content":"    public void removeFromListTest_DukeNegativeIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"tenebrius1"},"content":"        tdlist.addToList(new Event(\"read book\", \"2021-08-09 1900\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"tenebrius1"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"tenebrius1"},"content":"            tdlist.removeFromList(-1);","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"tenebrius1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"tenebrius1"},"content":"            assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"tenebrius1"},"content":"                    \"DukeNegativeIndexException: You can\u0027t have negative tasks!\", e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"tenebrius1"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":173}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"package duke.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"public class UiTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"    // Referenced from","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"    // http://www.mastertheboss.com/various-stuff/testing-java/how-to-verify-the-console-output-in-junit-tests/","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"    @AfterEach","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"    public void prettyPrintTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"        Ui.prettyPrint(\"test string\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"                \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\ttest string\"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR,","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"tenebrius1"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tenebrius1"},"content":"    public void printExitMessageTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tenebrius1"},"content":"        Ui.printExitMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"tenebrius1"},"content":"                \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\tBye bye! See you again soon!\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"tenebrius1"},"content":"                        + \"\\t-------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"tenebrius1"},"content":"                        + Ui.LINE_SEPARATOR,","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"tenebrius1"},"content":"                outContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tenebrius1"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tenebrius1"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tenebrius1"},"content":"    public void printException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tenebrius1"},"content":"        Ui.printException(\"TestException\");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tenebrius1"},"content":"        assertEquals(\"\\t\" + \"TestException\" + Ui.LINE_SEPARATOR, errContent.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"tenebrius1"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tenebrius1"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tenebrius1":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"tenebrius1"},"content":"todo declare temperature later","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"tenebrius1"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"tenebrius1"},"content":"deadline finish tutorial /by today 2359","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"tenebrius1"},"content":"deadline review cs2100 lecture /by 15 Aug 8AM","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"tenebrius1"},"content":"event cs2101 tutorial /at Mon 12PM","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"tenebrius1"},"content":"event hackerschool /at Sat 10AM","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"tenebrius1"},"content":"done 5","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"tenebrius1"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"tenebrius1"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"tenebrius1"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"tenebrius1"},"content":"deadline noDeadlineTest","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"tenebrius1"},"content":"deadline multipleDeadlineTest /by 12AM /by 2AM","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"tenebrius1"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"tenebrius1"},"content":"event noDateTimeTest","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"tenebrius1"},"content":"event multipleDateTimeTest /at 12AM /at 2Am","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"tenebrius1"},"content":"done -1","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"tenebrius1"},"content":"done 1000","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"tenebrius1"},"content":"done","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"tenebrius1"},"content":"done abc123","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tenebrius1"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"tenebrius1"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"tenebrius1"},"content":"delete 1000","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"tenebrius1"},"content":"delete abc123","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tenebrius1"},"content":"asdf","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"tenebrius1"},"content":"deadline test /by 2021-08-09 2100","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tenebrius1"},"content":"deadline test /by 2021-08-09","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tenebrius1"},"content":"event test /at 2021-08-09 2100","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tenebrius1"},"content":"event test /at 2021-08-09","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tenebrius1"},"content":"list","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tenebrius1"},"content":"exit","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"tenebrius1":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tenebrius1"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tenebrius1"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tenebrius1":2,"-":19}}]
