[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"### Feature- Management of various task","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"Application allows users to add, delete, mark as done 3 different type of tasks(ToDos, Events and Deadline).","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"### `list` - Lists out all tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"Lists out all task that is previously stored.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"`list`","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"The task are displayed with its type as well as its doneness.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"1.[T][X] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"2.[E][ ] check2  (at: time1)","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"3.[D][ ] check3  (by: time2)","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"### `done` - Marks a task as done","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"It marks the task at the specified number to be done.","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"`done 1`","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome: ","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"The task from the list corresponding to the number will be marked done.","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"[T][X] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"### `todo` - Creates a new todo task","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"Creates a new todo task adding to the back of the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"`todo check1`","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"A new todo task is added to the back of the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"  [T][ ] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"### `event` - Creates a new event task","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"Creates a new event task adding to the back of the list with timing specified by /at.","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"Timing is to be specified in a yyyy-mm-dd format","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"`event check2 /at time1`","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"A new event task is added to the back of the list with timing specified by /at.","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"  [E][ ] check2  (at: time1)","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"### `deadline` - Creates a new deadline task","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"Creates a new deadline task adding to the back of the list with timing specified by /by.","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"Timing is to be specified in a yyyy-mm-dd format","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"`deadline check3 /by time2`","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"A new deadline task is added to the back of the list with timing specified by /by.","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"  [D][ ] check3  (by: time2)","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"### `bye` - Describe action","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"Exits the Duke program.","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"`bye`","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"Program exits.","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"yunpeng1234":88,"-":28}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor with the description and time of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @param by time the task needs to be completed by.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"                by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))+ \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Deadline task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Deadline task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        return \"E\" + super.toHistory() + \" | \" + this.by;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Class that is a chat bot that can store tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    private enum Commands {list, done, todo, event, deadline, delete, find }","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor based on where the storage file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @param filePath where the storage file is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"            tasks \u003d new TaskList(storage.parseFile());","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     * Driver function that runs the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        while(isRunning) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"            String instruction \u003d ui.getInstruction();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"            if(checkBye(instruction)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"                Parser.parse(instruction,this.ui, this.tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        ui.sayFarewell();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"     * Function that checks whether the user wants to exit the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"     * @param instruction instruction given by the user","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"     * @return a boolean on whether the program should terminate","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    private boolean checkBye(String instruction){","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        if(instruction.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"            isRunning \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"            storage.fileClear();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"            for(int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"                storage.writeToFile(tasks.get(i).toHistory());","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            return true;","lastModifiedDate":"2021-08-13"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"        return false;","lastModifiedDate":"2021-08-13"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yunpeng1234":67,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Class that represent all errors/exceptions that are unique to the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String message indicating an error.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * @return Error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        return \"☹ OOPS!!!\";","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Represents the Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor with the description and time of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @param at time the task is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"                at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Event task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Event task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        return \"E\" + super.toHistory() + \" | \" + this.at;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":43}},{"path":"src/main/java/duke/NoDescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents the error when there is missing information after a command.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class NoDescriptionError extends DukeException{","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    private String command;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     * Constructor that takes in the command in String form.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     * @param error which command the user inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public NoDescriptionError(String error) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        this.command \u003d error;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the error with the corresponding command.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the error","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        return super.toString() + \"The description of a \" + command + \" cannot be empty.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Class to represent parsing the commands","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    private enum Commands {list, done, todo, event, deadline, delete, find }","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Method that parses instruction from the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param instruction user\u0027s instruction","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     * @throws NoDescriptionError If user inputs nothing after a task command.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @throws UnknownCommandError If user inputs a command that is outside the scope of the chatbot","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    public static void parse(String instruction, Ui ui, TaskList tasks) throws NoDescriptionError, UnknownCommandError{","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        ui.printLineBreak();","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        String[] splitInstructions \u003d instruction.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        String operative \u003d splitInstructions[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        Commands command;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        String[] temp;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        String item, date, description, keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        Task toAdd;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        int taskPointer;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"            command \u003d Commands.valueOf(operative);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"            throw new UnknownCommandError();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        if(splitInstructions.length \u003d\u003d 1 \u0026\u0026 !operative.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"            throw new NoDescriptionError(operative);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        switch (command) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        case list:","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"            ui.printArrayList(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"        case find:","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"            keyword \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"            TaskList filtered \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"            ui.findTaskMessage(filtered);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        case done:","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            taskPointer \u003d Integer.parseInt(item) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"            tasks.get(taskPointer).markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"            ui.completeTaskMessage(tasks.get(taskPointer));","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        case todo:","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Todo(item);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"            ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        case event:","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"            temp \u003d item.split(\"/at \");","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"            date \u003d temp[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"            description \u003d temp[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Event(description, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"            ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"        case delete:","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"            taskPointer \u003d Integer.parseInt(item) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            Task deleted \u003d tasks.delete(taskPointer);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"            ui. deleteTaskMessage(deleted, tasks.getSize());","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        case deadline:","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            temp \u003d item.split(\"/by \");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"            date \u003d temp[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"            description \u003d temp[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"            ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"yunpeng1234":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":" * Class that encapsulates the file reading/writing for the storage of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    private File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor that takes in the file path of the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     * @param filePath where the storage file is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    public Storage (String filePath){","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        File temp \u003d  new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            temp.getParentFile().mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"            temp.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"            this.file \u003d temp;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Can\u0027t create file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"     * Reads the file of the storage and returns a ArrayList of Tasks from the storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"     * @return ArrayList of Task that is stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    public ArrayList\u003cTask\u003e parseFile () {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        ArrayList\u003cTask\u003e history \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"            FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"            String currentLine;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"            while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"                Task temp \u003d parseTask(currentLine);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"                history.add(temp);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e ) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"File is not found\");","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        return history;","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     * Function that parses the line that is stored in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     * @param task line in the file that represents a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * @return Task object corresponding to the line in the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    public Task parseTask(String task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        String[] temp \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        if (temp.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            Todo toReturn \u003d new Todo(temp[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        } else if (temp[0].equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"            Event toReturn \u003d new Event(temp[2],temp[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            Deadline toReturn \u003d new Deadline(temp[2],temp[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"     * Clears the file to avoid appending of the same tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"    public void fileClear () {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile(), false);","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e ) {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Can\u0027t clear file.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"     * Function that writes a line to file.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"     * @param text text to be written.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"    public void writeToFile (String text) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile(),true);","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.write(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Cant write to file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"yunpeng1234":110}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents a Task","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor that creates a task based on the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a X or nothing depending on whether the task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"     * @return an indicator on the doneness of the class.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    public boolean filterByKeyword(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String to be written in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     * @return String form of the task to be written in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"        return \" | \" + getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" * Represents the collection of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor to create a task list based on the ArrayList of Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param tasks tasks to be added to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor for an empty TaskList class.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     * Deletes a task based on the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     * @param index index of where to delete.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"     * @return the deleted task.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"     * Gets the number of tasks in the tasklist.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"     * @return","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     * Retrieves the task at the given index.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * @param index index of where to retrieve the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     * @return the task retrieved.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a new Tasklist with tasks matching keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"     * @param keyword word to filter tasklist by.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"     * @return Tasklist containing the word.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            if (tasks.get(i).filterByKeyword(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"                result.add(temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        return new TaskList(result);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":79}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor for the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Todo task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Todo task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        return \"T\" + super.toHistory();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":34}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Class that handles all user interaction.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" * Responsible for outputs as well as reading inputs from users.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    private static final Scanner USER_INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    private static final String LINE_BREAKER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    private static final  String GREETING \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    private static  final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    private static final String DELETE_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FIND_TAKS_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message indicating file loading error.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(\"Can\u0027t load saved file\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a string which is the user\u0027s command.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     * @return users command in String form.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public String getInstruction() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        return USER_INPUT.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a line for separation.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    public  void printLineBreak () {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * Prints the content of the task list in a form where users can see.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"     * @param taskList task list to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    public void printArrayList (TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(LIST_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        for(int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(String.valueOf(i+1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a greeting for the user on startup.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public void greet(){","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a farewell message for the user when \u0027bye\u0027 command is inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"    public void sayFarewell() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(FAREWELL);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notifications which informs the user","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is completed based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    public void completeTaskMessage (Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(DONE_MESSAGE + \"\\n\" + task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"    public void findTaskMessage (TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(FIND_TAKS_MESSAGE);","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        for(int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(String.valueOf(i+1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notifcation which informs the user","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is deleted based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"    public void deleteTaskMessage (Task task, int size) {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(DELETE_TASK_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"        taskCounterMessage(size);","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notifcation which informs the user","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is added based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is added.","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"    public void addedTaskMessage (Task task, int size) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(ADD_TASK_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"        taskCounterMessage(size);","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message of how many task are in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"    void taskCounterMessage (int size) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message informing the user of an error that has occured.","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"     * Error is specific to the chat bot itself.","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"     * @param e Duke Exception that has occurred.","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"    void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(e.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"yunpeng1234"},"content":"        printLineBreak();","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":140}},{"path":"src/main/java/duke/UnknownCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Repressents the error when the user inputs an unknown command","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class UnknownCommandError extends DukeException{","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the error.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the error","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"        return super.toString() + \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":16}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskToString(){","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[D][ ] placeholder (by: Jun 6 2022)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"                new Deadline(\"placeholder\", \"2022-06-06\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventMarkAsDone(){","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Deadline(\"placeholder\", \"2022-06-06\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[D][X] placeholder (by: Jun 6 2022)\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":20}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventToString(){","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[E][ ] placeholder (at: Jun 6 2022)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"                new Event(\"placeholder\", \"2022-06-06\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventMarkAsDone(){","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Event(\"placeholder\", \"2022-06-06\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[E][X] placeholder (at: Jun 6 2022)\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":21}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskToString(){","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[ ] placeholder\",","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"                new Task(\"placeholder\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskMarkAsDone(){","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Task(\"placeholder\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[X] placeholder\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":21}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    public void testTodoToString(){","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[T][ ] placeholder\", new Todo(\"placeholder\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public void testTodoMarkAsDone(){","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Todo(\"placeholder\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[T][X] placeholder\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"todo check1","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"event check2 /at 2022-06-08","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"deadline check3 /by 2022-06-08","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"delete 3","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yunpeng1234":1,"-":20}}]
