[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yunpeng1234":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"### Feature- Management of various task","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"Application allows users to add, delete, mark as done 3 different type of tasks(ToDos, Events and Deadline).","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"### `list` - Lists out all tasks","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"Lists out all task that is previously stored.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"`list`","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"The task are displayed with its type as well as its doneness.","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"1.[T][X] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"2.[E][ ] check2  (at: time1)","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"3.[D][ ] check3  (by: time2)","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"### `done` - Marks a task as done","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"It marks the task at the specified number to be done.","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"`done 1`","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome: ","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"The task from the list corresponding to the number will be marked done.","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"[T][X] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"### `todo` - Creates a new todo task","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"Creates a new todo task adding to the back of the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"`todo check1`","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"A new todo task is added to the back of the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"  [T][ ] check1","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"### `event` - Creates a new event task","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"Creates a new event task adding to the back of the list with timing specified by /at.","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"Timing is to be specified in a yyyy-mm-dd format","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"`event check2 /at time1`","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"A new event task is added to the back of the list with timing specified by /at.","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"  [E][ ] check2  (at: time1)","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"### `deadline` - Creates a new deadline task","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"Creates a new deadline task adding to the back of the list with timing specified by /by.","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"Timing is to be specified in a yyyy-mm-dd format","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"Example of usage:","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"`deadline check3 /by time2`","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"Expected outcome:","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"A new deadline task is added to the back of the list with timing specified by /by.","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"  [D][ ] check3  (by: time2)","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"```","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"### `bye` - Describe action","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"Exits the Duke program.","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"`bye`","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"Program exits.","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"yunpeng1234":88,"-":28}},{"path":"src/main/java/duke/Activity.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"public class Activity extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"    protected int duration;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor with the description and time of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     * @param duration of the activity.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    public Activity(String description, String duration) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"        this.duration \u003d Integer.parseInt(duration);","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Activity task.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Activity task.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        return \"[A]\" + super.toString() + \" (needs \"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"                + duration + \" hours)\";","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Activity task for storage purpose.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Activity task for storage purpose.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"        return \"A\" + super.toHistory() + \" | \" + this.duration;","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yunpeng1234":37}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor with the description and time of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @param by time the task needs to be completed by.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Deadline task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Deadline task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        return \"E\" + super.toHistory() + \" | \" + this.by;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        assert img !\u003d null : \" No Image Provided\";","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"        dialog.setFont(new Font(\"Cambria\", 32));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        double xPos \u003d displayPicture.getX() + 50;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"        double yPos \u003d displayPicture.getY() + 50;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"        displayPicture.setClip(new Circle(xPos, yPos, 50));","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"        db.setSpacing(20.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.PALEGREEN, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        db.setSpacing(20.0);","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Class that is a chat bot that can store tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor based on where the storage file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     * @param filePath where the storage file is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    public Duke (String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            tasks \u003d new TaskList(storage.parseFile());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a greeting in string form.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"     * @return Greeting in string form.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    public String greet() {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        return ui.greet();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"     * Function that checks whether the user wants to exit the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"     * @param instruction instruction given by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     * @return a boolean on whether the program should terminate.","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    private boolean checkBye(String instruction) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        assert instruction !\u003d null : \"User has not input anything\";","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        if (instruction.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"            isRunning \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"            storage.fileClear();","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"                storage.writeToFile(tasks.get(i).toHistory());","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"            return true;","lastModifiedDate":"2021-08-13"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        return false;","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"     * Returns response for each user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"     * @return String that duke would reply with.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"        if (checkBye(input)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            return ui.sayFarewell();","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"            return Parser.parse(input, this.ui, this.tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            return ui.printErrorMessage(e);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":75,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Class that represent all errors/exceptions that are unique to the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String message indicating an error.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * @return Error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        return \"\\uD83D\\uDE41 OOPS!!!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Represents the Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor with the description and time of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @param at time the task is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"        this.at \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Event task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Event task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        return \"E\" + super.toHistory() + \" | \" + this.at;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":43}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setRoot(stage);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setController(new MainWindow());","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"            stage \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":29}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"public class MainWindow extends Stage {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/gigachad.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/monkas.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    MainWindow () {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        this.initialize();","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"     * Initialises the window in the application.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\", dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"     * Will terminate the program after user inputs \"bye\" command.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        assert input !\u003d null : \"User should have entered something\";","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"        assert response !\u003d null : \"Duke should return something\";","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"should get out\");","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"            delay.play();","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":87}},{"path":"src/main/java/duke/NoDescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents the error when there is missing information after a command.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class NoDescriptionError extends DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    private String command;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     * Constructor that takes in the command in String form.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     * @param error which command the user inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public NoDescriptionError(String error) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        this.command \u003d error;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the error with the corresponding command.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the error","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        return super.toString() + \"The description of a \" + command + \" cannot be empty.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":27}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Class to represent parsing the commands","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    private enum Commands { LIST, DONE, TODO, EVENT, DEADLINE, DELETE, FIND, ACTIVITY }","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Method that parses instruction from the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param instruction user\u0027s instruction","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Dialog to be printed by duke in the chat box.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"     * @throws NoDescriptionError If user inputs nothing after a task command.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * @throws UnknownCommandError If user inputs a command that is outside the scope of the chat bot.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    public static String parse(String instruction, Ui ui, TaskList tasks)","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"            throws NoDescriptionError, UnknownCommandError {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"        System.out.println(instruction);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        String[] splitInstructions \u003d instruction.split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        String operative \u003d splitInstructions[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        Commands command;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"        String[] temp;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        String item;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        String date;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"        String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"        String keyword;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"        Task toAdd;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"        int taskPointer;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"            command \u003d Commands.valueOf(operative.toUpperCase());","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"            throw new UnknownCommandError();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"        if (splitInstructions.length \u003d\u003d 1 \u0026\u0026 !operative.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"            throw new NoDescriptionError(operative);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        switch (command) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        case LIST:","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"            return ui.printArrayList(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        case FIND:","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"            keyword \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            TaskList filtered \u003d tasks.findMatchingTasks(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"            return ui.findTaskMessage(filtered);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        case DONE:","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"            taskPointer \u003d Integer.parseInt(item) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"            tasks.get(taskPointer).markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"            return ui.completeTaskMessage(tasks.get(taskPointer));","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"        case TODO:","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Todo(item);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"            return ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        case EVENT:","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"            temp \u003d item.split(\"/at \");","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            date \u003d temp[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"            description \u003d temp[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Event(description, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"            return ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        case DELETE:","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            taskPointer \u003d Integer.parseInt(item) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"            Task deleted \u003d tasks.delete(taskPointer);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            return ui.deleteTaskMessage(deleted, tasks.getSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            temp \u003d item.split(\"/by \");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"            date \u003d temp[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"            description \u003d temp[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"            return ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"        case ACTIVITY:","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"            item \u003d splitInstructions[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"            temp \u003d item.split(\"/for \");","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"            date \u003d temp[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"            description \u003d temp[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"            toAdd \u003d new Activity(description, date);","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"            return ui.addedTaskMessage(toAdd, tasks.getSize());","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"            return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"yunpeng1234":91}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":" * Class that encapsulates the file reading/writing for the storage of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    private File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor that takes in the file path of the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     * @param filePath where the storage file is at.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"            File temp \u003d new File(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"            temp.getParentFile().mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"            temp.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"            this.file \u003d temp;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Can\u0027t create file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"     * Reads the file of the storage with the help of a stream","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"     * and returns a ArrayList of Tasks from the storage.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     * @return ArrayList of Task that is stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     * @throws IOException When the file can not be accessed.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"    public ArrayList\u003cTask\u003e parseFile () throws IOException {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"        ArrayList\u003cTask\u003e history \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"        FileReader fileReader \u003d new FileReader(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"        String currentLine;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        while ((currentLine \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"            Task temp \u003d parseTask(currentLine);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            history.add(temp);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        bufferedReader.close();","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"        return history;","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     * Function that parses the line that is stored in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     * @param task line in the file that represents a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * @return Task object corresponding to the line in the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"    public Task parseTask(String task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"        String[] temp \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        if (temp.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"            Todo toReturn \u003d new Todo(temp[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        } else if (temp[0].equalsIgnoreCase(\"E\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"            Event toReturn \u003d new Event(temp[2], temp[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"        } else if (temp[0].equalsIgnoreCase(\"D\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            Deadline toReturn \u003d new Deadline(temp[2], temp[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"            Activity toReturn \u003d new Activity(temp[2], temp[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"            if (temp[1].equalsIgnoreCase(\"1\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"                toReturn.markAsDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"            return toReturn;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"     * Clears the file to avoid appending of the same tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"    public void fileClear () {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile(), false);","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Can\u0027t clear file.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"     * Function that writes a line to file.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"     * @param text text to be written.","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"    public void writeToFile (String text) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile(), true);","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.write(text);","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"            System.out.println(\"Cant write to file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"yunpeng1234":116}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents a Task","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor that creates a task based on the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param description description of a task.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a X or nothing depending on whether the task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"     * @return an indicator on the doneness of the class.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"    public boolean filterByKeyword(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String to be written in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     * @return String form of the task to be written in the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"        return \" | \" + getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":58}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" * Represents the collection of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor to create a task list based on the ArrayList of Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"     * @param tasks tasks to be added to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor for an empty TaskList class.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"     * Deletes a task based on the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     * @param index index of where to delete.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"     * @return the deleted task.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"     * @return the size of the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     * Retrieves the task at the given index.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"     * @param index index of where to retrieve the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"     * @return the task retrieved.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a new Tasklist with tasks matching keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"     * @param keyword word to filter tasklist by.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"     * @return Tasklist containing the word.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    public TaskList findMatchingTasks(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"            Task temp \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"            if (temp.filterByKeyword(keyword)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"                result.add(temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        return new TaskList(result);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":79}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"     * Class Constructor for the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     * @param description","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"     * Returns the String representation of a Todo task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of a Todo task for storage purpose.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"    public String toHistory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"        return \"T\" + super.toHistory();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":34}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" * Class that handles all user interaction.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":" * Responsible for outputs as well as reading inputs from users.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    private static final Scanner USER_INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    private static final String ADD_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    private static final String DELETE_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"    private static final String FIND_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message indicating file loading error.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"        return \"Can\u0027t load saved file\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a string which is the user\u0027s command.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yunpeng1234"},"content":"     * @return users command in String form.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"yunpeng1234"},"content":"    public String getInstruction() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"yunpeng1234"},"content":"        return USER_INPUT.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"yunpeng1234"},"content":"     * Prints the content of the task list in a form where users can see.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yunpeng1234"},"content":"     * @param taskList task list to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yunpeng1234"},"content":"    public String printArrayList (TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d LIST_MESSAGE + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"yunpeng1234"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yunpeng1234"},"content":"            toReturn +\u003d String.valueOf(i + 1) + \".\" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a greeting for the user on startup.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yunpeng1234"},"content":"    public String greet() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d GREETING + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a farewell message for the user when \u0027bye\u0027 command is inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"yunpeng1234"},"content":"    public String sayFarewell() {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d FAREWELL;","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notifications which informs the user","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is completed based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"yunpeng1234"},"content":"    public String completeTaskMessage (Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d DONE_MESSAGE + \"\\n\" + task.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notification to inform users","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is found based on their keyword","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"yunpeng1234"},"content":"     * @param tasks tasklist to find tasks in.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"yunpeng1234"},"content":"    public String findTaskMessage (TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d FIND_TASK_MESSAGE + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"yunpeng1234"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yunpeng1234"},"content":"            toReturn +\u003d String.valueOf(i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"yunpeng1234"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notification which informs the user","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is deleted based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"yunpeng1234"},"content":"    public String deleteTaskMessage (Task task, int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d DELETE_TASK_MESSAGE + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"yunpeng1234"},"content":"        toReturn +\u003d \"   \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"yunpeng1234"},"content":"        toReturn +\u003d taskCounterMessage(size) + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a notifcation which informs the user","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"yunpeng1234"},"content":"     * on which task is added based on their command.","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"yunpeng1234"},"content":"     * @param task task that is added.","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"yunpeng1234"},"content":"    public String addedTaskMessage (Task task, int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"yunpeng1234"},"content":"        String toReturn \u003d ADD_TASK_MESSAGE + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"yunpeng1234"},"content":"        toReturn +\u003d \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"yunpeng1234"},"content":"        toReturn +\u003d taskCounterMessage(size) + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"yunpeng1234"},"content":"        return toReturn;","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message of how many task are in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"yunpeng1234"},"content":"     * @param size size of task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"yunpeng1234"},"content":"     * @return String Message duke returns.","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"yunpeng1234"},"content":"    public String taskCounterMessage (int size) {","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"yunpeng1234"},"content":"        return \"Now you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"yunpeng1234"},"content":"     * Prints a message informing the user of an error that has occured.","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"yunpeng1234"},"content":"     * Error is specific to the chat bot itself.","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"yunpeng1234"},"content":"     * @param e Duke Exception that has occurred.","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"yunpeng1234"},"content":"    public String printErrorMessage(DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"yunpeng1234"},"content":"        return e.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":145}},{"path":"src/main/java/duke/UnknownCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":" * Represents the error when the user inputs an unknown command","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class UnknownCommandError extends DukeException {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"     * Returns a String representation of the error.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"     * @return String representation of the error","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"        return super.toString() + \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"yunpeng1234":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.stage.Stage ?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"\u003cfx:root title\u003d\"My Application\"  type\u003d\"javafx.stage.Stage\" minHeight\u003d\"600.0\" minWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"            \u003croot\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"                \u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" \u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"                        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"                            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"yunpeng1234"},"content":"                                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"-Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"yunpeng1234"},"content":"                            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"yunpeng1234"},"content":"                        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"yunpeng1234"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"yunpeng1234"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"yunpeng1234"},"content":"            \u003c/root\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"yunpeng1234"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"yunpeng1234"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"yunpeng1234"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"yunpeng1234":29}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[D][ ] placeholder (by: Jun 6 2022)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"                new Deadline(\"placeholder\", \"2022-06-06\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Deadline(\"placeholder\", \"2022-06-06\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[D][X] placeholder (by: Jun 6 2022)\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[E][ ] placeholder (at: Jun 6 2022)\",","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"                new Event(\"placeholder\", \"2022-06-06\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public void testEventMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Event(\"placeholder\", \"2022-06-06\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[E][X] placeholder (at: Jun 6 2022)\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":19}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[ ] placeholder\",","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"                new Task(\"placeholder\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"    public void testTaskMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Task(\"placeholder\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[X] placeholder\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":20}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"    public void testTodoToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[T][ ] placeholder\", new Todo(\"placeholder\").toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yunpeng1234"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yunpeng1234"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yunpeng1234"},"content":"    public void testTodoMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"yunpeng1234"},"content":"        Task temp \u003d new Todo(\"placeholder\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yunpeng1234"},"content":"        temp.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yunpeng1234"},"content":"        assertEquals(\"[T][X] placeholder\", temp.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yunpeng1234"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yunpeng1234"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yunpeng1234":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yunpeng1234"},"content":"todo check1","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yunpeng1234"},"content":"event check2 /at 2022-06-08","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yunpeng1234"},"content":"deadline check3 /by 2022-06-08","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yunpeng1234"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yunpeng1234"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yunpeng1234"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yunpeng1234"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yunpeng1234"},"content":"delete 3","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"yunpeng1234"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"yunpeng1234"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yunpeng1234":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"yunpeng1234"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yunpeng1234":1,"-":20}}]
