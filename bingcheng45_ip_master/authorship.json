[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bingcheng45":2,"-":22}},{"path":"src/main/java/duke/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"public enum CommandList {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"    TODO, DONE, DEADLINE, EVENT, DELETE, LIST, BYE, FIND;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":" * This program duke.Duke is a chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":" * @author: Toh Bing Cheng","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":" * @version: CS2103T AY21 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"        } catch (InitialisationError e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"        new Duke(\"data/dukeData.json\").runProgram();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"     * This method runs the program indefinitely till user types in \"bye\".","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"    public void runProgram() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"        boolean run \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        while (run) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"                // wait to read in the user\u0027s input","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"                Command userCommand \u003d Parser.parse(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"                run \u003d userCommand.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"            } catch (IncompleteCommandException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"                run \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"                run \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"            if (run) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"                ui.showLoopWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bingcheng45":58,"-":3}},{"path":"src/main/java/duke/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"public class IncompleteCommandException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"    public IncompleteCommandException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":7}},{"path":"src/main/java/duke/InitialisationError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"public class InitialisationError extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"    public InitialisationError(String errorMsg) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"        super(errorMsg);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"     * Takes in user\u0027s input and convert it into a command obj.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"     * @param input User\u0027s raw input","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"     * @return A command object","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"     * @throws IncompleteCommandException if command is incomplete","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    public static Command parse(String input) throws IncompleteCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"        if (input.toUpperCase().equals(CommandList.BYE.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"            return new ByeCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"        } else if (input.toUpperCase().equals(CommandList.LIST.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"            return new ListCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"        } else if (input.toUpperCase().contains(CommandList.DELETE.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"        } else if (isDone(input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"        } else if (input.toUpperCase().contains(CommandList.FIND.toString())) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"            if (input.length() \u003e 5) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"                String taskMessage \u003d input.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"                return new FindCommand(taskMessage.strip());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"                throw new IncompleteCommandException(\"OOPS incomplete command! Your find command \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"                        \"should have a text after the find like: find book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"            //ADD duke.command.Command","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"            Task newTask \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"            if (input.toUpperCase().contains(CommandList.TODO.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"                if (input.length() \u003e 5) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"                    String taskMessage \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"                    newTask \u003d new Todo(taskMessage.strip());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"                    throw new IncompleteCommandException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"            } else if (input.toUpperCase().contains(CommandList.DEADLINE.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"                if (input.length() \u003e 8) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"                    if (input.contains(\"/by\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"                        String[] stringArr \u003d input.substring(9).split(\"/by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"                        LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"                        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"                            date \u003d LocalDate.parse(stringArr[1].strip());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"                            newTask \u003d new Deadline(stringArr[0], date);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"                        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"                            System.out.println(\"Incorrect date format! Please follow YYYY-MM-DD for the date\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"                        System.out.println(\"Your deadline is missing a /by (date)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"                    throw new IncompleteCommandException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"            } else if (input.toUpperCase().contains(CommandList.EVENT.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"                if (input.length() \u003e 5) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"                    if (input.contains(\"/at\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"                        String[] stringArr \u003d input.substring(6).split(\"/at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"                        newTask \u003d new Event(stringArr[0], LocalDate.parse(stringArr[1].strip()));","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"                        System.out.println(\"Your duke.task.Event is missing a /at (date)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"                    throw new IncompleteCommandException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"            if (newTask !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"                return new AddCommand(input, newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"        return new InvalidCommand(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"     * Check if a given input has done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"     * @param input a string that is the input of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"     * @return a boolean if done command is found.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"    public static boolean isDone(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"        if (input.length() \u003e\u003d 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"            return input.toUpperCase().startsWith(CommandList.DONE.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"     * Check if input string is numeric or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"     * @param input a string input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"     * @return a boolean if input is numeric.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"    public static boolean isNumeric(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"            int num \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":" * Handles all interaction between the program and the files.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    String folderName;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    String fileName;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    String dirPath;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"     * Initialise the path for the files.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"     * @param filePath The filePath that is needed to be stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"        String[] stringArr \u003d filePath.split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"        folderName \u003d stringArr[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"        fileName \u003d stringArr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"        dirPath \u003d System.getProperty(\"user.dir\") + \"\\\\src\\\\main\\\\\" + folderName;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"        this.filePath \u003d dirPath + \"\\\\\" + fileName;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"     * Read the json file and initialise it into Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"     * @return The list of Task to be used in the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"     * @throws InitialisationError Failure to retrieve information from the files.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cTask\u003e load() throws InitialisationError {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"            if (Files.notExists(Path.of(dirPath))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"                Files.createDirectories(Path.of(dirPath));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"            File txtDataFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"            if (!txtDataFile.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"                ui.printErrorMessage(\"No stored data! Starting a brand new state!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"                txtDataFile \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"                txtDataFile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"                // file exist, read the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"                taskList \u003d convertJsonToTaskListObj(\"dukeData.json\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"            throw new InitialisationError(\"An error occurred while reading file: \" + fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"     * Save and write data from the program into the files.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"     * @param taskList The list of task that will be saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"//        String dirPath \u003d System.getProperty(\"user.dir\") + \"\\\\src\\\\main\\\\data\\\\dukeData.json\";","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"        File savedData \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"        //Add employees to list","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"        JSONArray jsonTaskList \u003d new JSONArray();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"        for (int i \u003d 0; i \u003c taskList.getTotalNumberOfTask(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"            Task currTask \u003d taskList.getTaskById(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"            JSONObject TaskDetails \u003d new JSONObject();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"            String type \u003d currTask.getType().toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"            TaskDetails.put(\"type\", type);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"            TaskDetails.put(\"value\", currTask.getValue());","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"            TaskDetails.put(\"time\", currTask.getTime() \u003d\u003d null ? \"\" : currTask.getTime().toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"            TaskDetails.put(\"done\", currTask.isDone());","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"            JSONObject taskObj \u003d new JSONObject();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"            taskObj.put(\"task\", TaskDetails);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"            jsonTaskList.add(taskObj);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"bingcheng45"},"content":"            savedData.delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"bingcheng45"},"content":"            savedData.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"bingcheng45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"bingcheng45"},"content":"            System.out.println(\"An error occurred\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"bingcheng45"},"content":"        //Write JSON file","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"bingcheng45"},"content":"        try (FileWriter file \u003d new FileWriter(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"bingcheng45"},"content":"            //We can write any JSONArray or JSONObject instance to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"bingcheng45"},"content":"            file.write(jsonTaskList.toJSONString());","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"bingcheng45"},"content":"            file.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"bingcheng45"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"bingcheng45"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"bingcheng45"},"content":"     * Helper function that conver json to List of Task objects.","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"bingcheng45"},"content":"     * @param fileName The name of the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"bingcheng45"},"content":"     * @return The list of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"bingcheng45"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"bingcheng45"},"content":"    public List\u003cTask\u003e convertJsonToTaskListObj(String fileName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"bingcheng45"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"bingcheng45"},"content":"        //JSON parser object to parse read file","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"bingcheng45"},"content":"        JSONParser jsonParser \u003d new JSONParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"bingcheng45"},"content":"        String dirPath \u003d System.getProperty(\"user.dir\") + \"\\\\src\\\\main\\\\data\";","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"bingcheng45"},"content":"        try (FileReader reader \u003d new FileReader(dirPath + \"\\\\\" + fileName)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"bingcheng45"},"content":"            //Read JSON file","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"bingcheng45"},"content":"            Object obj \u003d jsonParser.parse(reader);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"bingcheng45"},"content":"            JSONArray taskArr \u003d (JSONArray) obj;","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"bingcheng45"},"content":"            //Iterate over task array","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"bingcheng45"},"content":"            taskArr.forEach(task -\u003e taskList.add(parseTaskObject((JSONObject) task)));","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"bingcheng45"},"content":"        } catch (IOException | ParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"bingcheng45"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"bingcheng45"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"bingcheng45"},"content":"     * Convert JSONObject into Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"bingcheng45"},"content":"     * @param task JSONObject that contains information about task.","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"bingcheng45"},"content":"     * @return A new Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"bingcheng45"},"content":"    private Task parseTaskObject(JSONObject task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"bingcheng45"},"content":"        //Get task object within list","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"bingcheng45"},"content":"        JSONObject taskObject \u003d (JSONObject) task.get(\"task\");","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"bingcheng45"},"content":"        String value \u003d (String) taskObject.get(\"value\");","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"bingcheng45"},"content":"        boolean done \u003d (boolean) taskObject.get(\"done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"bingcheng45"},"content":"        String time \u003d (String) taskObject.get(\"time\");","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"bingcheng45"},"content":"        String type \u003d (String) taskObject.get(\"type\");","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"bingcheng45"},"content":"        type \u003d type.toUpperCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"bingcheng45"},"content":"        Task newTask \u003d new Todo(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"bingcheng45"},"content":"        if (type.equals(CommandList.TODO.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"bingcheng45"},"content":"            newTask \u003d new Todo(value);","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"bingcheng45"},"content":"        } else if (type.equals(CommandList.DEADLINE.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"bingcheng45"},"content":"            newTask \u003d new Deadline(value, LocalDate.parse(time));","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"bingcheng45"},"content":"        } else if (type.equals(CommandList.EVENT.toString())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"bingcheng45"},"content":"            newTask \u003d new Event(value, LocalDate.parse(time));","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"bingcheng45"},"content":"        if (done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"bingcheng45"},"content":"            newTask.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"bingcheng45"},"content":"        return newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":179}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":" * TaskList manages the tasks for Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"     * Constructor that initialises an existing taskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"     * @param taskList A List of task given to initialise TaskList with.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"     * Get the total number of existing tasks in Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"     * @return The number of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    public int getTotalNumberOfTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"     * Retrieve the task object by their index.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"     * @param id Index of the task given in the list of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"     * @return The selected task by the given id.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"    public Task getTaskById(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"        return taskList.get(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"     * Set the Task given by the id to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"     * @param id Index of the task given in the list of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    public void markTaskDoneById(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"        Task task \u003d taskList.get(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"\\t\" + task);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"     * Add task to the list of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"     * @param task The task that is to be added.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"     * Search and display item matching the query.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"     * @param searchItem The query.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    public void findAndDisplay(String searchItem) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        List\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"            if (task.getValue().contains(searchItem)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"                searchList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"        if (searchList.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"            for (int i \u003d 0; i \u003c searchList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"                System.out.println(index + \".\" + searchList.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"            System.out.println(\"Sorry there are no items that match your query!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"     * Remove task by the given index.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"     * @param id Index of the task given in the list of Tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"    public void removeTaskById(int id) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"        taskList.remove(id);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":101}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":" * Handles all User Interface of the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"     * Display the welcome message to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"     * Display a prompt asking user for an action.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    public void showLoopWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"What else can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"     * Reads input by user and returns what user have typed.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"     * @return A String written by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"        return input.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"     * Prints out an error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"     * @param msg The error message that is to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"    public void printErrorMessage(String msg) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"     * Display loading error message.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"bingcheng45"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Initialisation Error! We will override with a fresh state.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"bingcheng45"},"content":"     * Display goodbye message.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"bingcheng45"},"content":"    public void goodBye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"bingcheng45"},"content":"     * Display task removed message.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"bingcheng45"},"content":"     * @param taskToBeDeleted The Task that is to be deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"bingcheng45"},"content":"     * @param totalTask The remaining number of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"bingcheng45"},"content":"    public void taskRemovedMessage(Task taskToBeDeleted, int totalTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"\\t\" + taskToBeDeleted.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Now you have \" + totalTask + \" task in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"bingcheng45"},"content":"     * Display task added message.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"bingcheng45"},"content":"     * @param task The Task that is to be Added.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"bingcheng45"},"content":"     * @param totalTask The new total number of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"bingcheng45"},"content":"    public void taskAddedMessage(Task task, int totalTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Got it. I\u0027ve added this task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"bingcheng45"},"content":"        System.out.println(\"Now you have \" + totalTask + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":100}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"    private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    public AddCommand(String input, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"        ui.taskAddedMessage(task, taskList.getTotalNumberOfTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":25}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"        ui.goodBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    protected String input;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    public Command(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    public abstract boolean execute(TaskList taskList, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":16}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"        if (input.length() \u003e 7) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"            String[] stringArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"            if (Parser.isNumeric(stringArr[1])) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"                int taskId \u003d Integer.parseInt(stringArr[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"                Task taskToBeDeleted \u003d taskList.getTaskById(taskId);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"                taskList.removeTaskById(taskId);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"                ui.taskRemovedMessage(taskToBeDeleted, taskList.getTotalNumberOfTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":29}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws IncompleteCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"        String[] stringArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"        if (stringArr.length \u003e 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"            String taskNumber \u003d stringArr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"            if (Parser.isNumeric(taskNumber)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"                int taskNum \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"                if (taskNum \u003e 0 \u0026\u0026 (taskNum - 1) \u003c taskList.getTotalNumberOfTask()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"                    taskList.markTaskDoneById(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"                    ui.printErrorMessage(\"duke.task.Task number is not in the list!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"                ui.printErrorMessage(\"Please enter a valid task number!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"            throw new IncompleteCommandException(\"Please enter the task number after done! E.g \\\"done 2\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"        taskList.findAndDisplay(super.input);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bingcheng45":18}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public InvalidCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"        ui.printErrorMessage(\"Invalid command!\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"                \"Try TODO, DEADLINE or EVENT follow by task description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"        super(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    public boolean execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"        if (taskList.getTotalNumberOfTask() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"            for (int i \u003d 0; i \u003c taskList.getTotalNumberOfTask(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"                int index \u003d i + 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"                System.out.println(index + \".\" + taskList.getTaskById(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"            System.out.println();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"            ui.printErrorMessage(\"Looks like there isn\u0027t any task!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.CommandList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    public Deadline(String value, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"        super(value);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"        return by;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    public CommandList getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"        return CommandList.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":31}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.CommandList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    public Event(String value, LocalDate at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"        super(value);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"        return at;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"    public CommandList getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"        return CommandList.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.CommandList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":" * duke.task.Task contains information about a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    private String value \u003d null;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"    private LocalDate time \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    public Task(String value) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    public abstract LocalDate getTime();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    public abstract CommandList getType();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"        return done;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"bingcheng45"},"content":"     * Getting the information of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bingcheng45"},"content":"     * @return Information of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"bingcheng45"},"content":"    public String getValue() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bingcheng45"},"content":"        return value;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"bingcheng45"},"content":"     * Mark task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"bingcheng45"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"bingcheng45"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"bingcheng45"},"content":"     * Mark task as undone.","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"bingcheng45"},"content":"    public void markUnDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"bingcheng45"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"bingcheng45"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"bingcheng45"},"content":"     * Get the status icon for this task.","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"bingcheng45"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bingcheng45"},"content":"     * @return A string representing the state of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"bingcheng45"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"bingcheng45"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"bingcheng45"},"content":"        return this.done ? \"X\" : \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"bingcheng45"},"content":"        return \"[\" + getStatusIcon() + \"] \" + value;","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bingcheng45":65}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import duke.CommandList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"    public Todo(String value) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"        super(value);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bingcheng45"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bingcheng45"},"content":"        return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bingcheng45"},"content":"    public CommandList getType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bingcheng45"},"content":"        return CommandList.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bingcheng45"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"bingcheng45"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"bingcheng45"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":28}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public void dummyTest2(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        assertEquals(3,3);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":12}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bingcheng45"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bingcheng45"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bingcheng45"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bingcheng45"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bingcheng45":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bingcheng45"},"content":"read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"bingcheng45"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"bingcheng45"},"content":"ToDo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bingcheng45"},"content":"deadline return book /by sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bingcheng45"},"content":"event lecture /at 2pm today","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bingcheng45"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bingcheng45"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bingcheng45"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bingcheng45"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bingcheng45":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bingcheng45"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bingcheng45":1,"-":20}}]
