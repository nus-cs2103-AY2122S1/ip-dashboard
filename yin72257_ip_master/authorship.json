[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yin72257":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"[T][ ] hi","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"[T][ ] yo","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"[D][ ] 1 (by: 22/02/2022)","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Class representing a task with a do-by date","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    protected Date date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * Creates new deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     * @param description Description of deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     * @param by By a certain date","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     * @throws DukeException If date is in an incorrect format","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    public Deadline(String description, String by) throws DukeException{","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"            date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"            throw new DukeException(\"Date incorrect format\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     * Gives the string format of the deadline task","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     * @return String formatted","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + new SimpleDateFormat(\"dd/MM/yyyy\").format(date) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":" * Main class. Contains the duke program and its data.","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"     * Initialize a Duke instance with the file path for the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"     * @param args","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    private void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"        boolean run \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"        ui.addTaskList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"        ui.addStorage(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        while (run) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"            run \u003d ui.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yin72257":34,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":" * Custom exception for duke to be printed out","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"     * Creates new duke exception with message","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"     * @param message Error message","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     * Gets the message of the duke exception","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":25}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":" * Event task representing a task with a time to do at.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    protected Date date;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"     * Creates new Event task with description and date","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     * @param description Description of task","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     * @param at Time to do task","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     * @throws DukeException Whether time is in correct format","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"            this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        }catch (ParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"            throw new DukeException(\"Date format incorrect\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"     * To string method to return formatted string","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     * @return Formatted String","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"        return \"[E]\" + super.toString() + \" (by: \" + date.toString() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":39}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":" * Parser class handles input messages from the user","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"     * Adds a task list to the parser class","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"     * @param list Task list of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    public void addTaskList(TaskList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     * Adds a storage to allow the parser to save","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"     * @param storage Storage containing the file to write to","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"    public void addStorage(Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     * Handles each command the user inputs. Different commands have different actions.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     * @param input Input string by user","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"     * @return True or false. If false, program ends. If true, program continues.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"    public boolean parse(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"            if (inputArr.length \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"                throw new DukeException(\"You didn\u0027t put any commands.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"            String[] messageArr;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"            switch (inputArr[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"                addTask(new Todo(inputArr[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"                messageArr \u003d inputArr[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"                if (messageArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"duke.Deadline needs a /by clause after the description.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"                addTask(new Deadline(messageArr[0], messageArr[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"                messageArr \u003d inputArr[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"                addTask(new Event(messageArr[0], messageArr[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"Please specify which task to delete.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"                int number \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"                if (list.get(number - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"This task doesn\u0027t exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yin72257"},"content":"                list.get(number - 1).markedAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"      \" + list.get(number - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yin72257"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yin72257"},"content":"                list.listItems();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"yin72257"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"    \" + \"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"yin72257"},"content":"                return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"yin72257"},"content":"            case \"remove\":","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"Please specify which task to delete.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"                int removeIndex \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yin72257"},"content":"                if (list.get(removeIndex - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"This task doesn\u0027t exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"      \" + list.get(removeIndex - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yin72257"},"content":"                list.remove(removeIndex - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yin72257"},"content":"                System.out.println(\"     Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"yin72257"},"content":"            case \"save\":","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"yin72257"},"content":"                storage.save(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"yin72257"},"content":"            case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"yin72257"},"content":"                if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"yin72257"},"content":"                    throw new DukeException(\"The description of a find cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"yin72257"},"content":"                list.find(inputArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"yin72257"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"yin72257"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"yin72257"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"yin72257"},"content":"            System.out.println(\"    \" + de.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"yin72257"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"yin72257"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"yin72257"},"content":"    private void printLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"yin72257"},"content":"    private void addTask(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"yin72257"},"content":"        list.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"      \" + t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"     Now you have \" + list.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":" * Storage to handle logic of writing and reading from the file with the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    private File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"     * Creates a new storage to a certain filepath.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     * @param filepath Path to file from project root.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"        String[] filepathArr \u003d filepath.split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"            String currentPath \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"            for (int i \u003d 0; i \u003c filepathArr.length - 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"                File dir \u003d new File(\"./\" + currentPath + filepathArr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"                if (!dir.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"                    dir.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"            file \u003d new File(\"./\" + filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"            //throw new duke.DukeException(\"Write file error\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"     * Saves a task list to the file in the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"     * @param list TaskList of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"    public void save(TaskList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"                writer.write(list.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"            System.out.println(\"    File saved to /data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"        ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"                stringList.add(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"            scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"        return stringList;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":" * Parent class of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"     * Creates new task with description.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"     * Gets the status icon of the current task. \"X\" for done and \" \" for incomplete.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"     * @return \"X\" for done and \" \" for incomplete.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"     * Gets the description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     * @return Description.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        return description;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"     * Gets the formatted string of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"     * @return Formatted string with the icon and description.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"        String s \u003d \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"        return s;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"     * Mark task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"    public void markedAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":" * Contains a list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     * Creates a new TaskList by parsing an array of Strings into an array of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     * @param stringList Arraylist of strings read from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"     * @throws DukeException If there is an error with parsing.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"    TaskList(ArrayList\u003cString\u003e stringList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        for (int i \u003d 0; i \u003c stringList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"            String s \u003d stringList.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"            Task t \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"            switch (s.charAt(1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"                t \u003d new Todo(s.substring(7));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"                s \u003d s.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"                String[] parsedDeadline \u003d s.split(\"by: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"                t \u003d new Deadline(parsedDeadline[0].substring(0, parsedDeadline[0].length() - 2), parsedDeadline[1].substring(0, parsedDeadline[1].length() - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"                s \u003d s.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"                String[] parsedEvent \u003d s.split(\"at: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"                t \u003d new Event(parsedEvent[0].substring(0, parsedEvent[0].length() - 2), parsedEvent[1].substring(0, parsedEvent[1].length() - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"                throw new DukeException(\"File not in the correct format\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"            if (s.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"                t.markedAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"            tasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"     * Adds task to task list","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"     * @param t Task to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"     * Removes a task from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"     * @param i Index of task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"    public void remove(int i){","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yin72257"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yin72257"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yin72257"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yin72257"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yin72257"},"content":"     * Gets the element at an index in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"yin72257"},"content":"     * @param i Index number.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"yin72257"},"content":"     * @return Task at index.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"yin72257"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"yin72257"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"yin72257"},"content":"    public void find(String s) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yin72257"},"content":"        List\u003cTask\u003e filteredList \u003d list.stream().filter(task -\u003e task.toString().contains(s)).collect(Collectors.toList());","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yin72257"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yin72257"},"content":"            throw new DukeException(s + \" not found in list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yin72257"},"content":"        listItems(filteredList);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yin72257"},"content":"     * Lists out current items.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"yin72257"},"content":"    public void listItems() {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"yin72257"},"content":"        listItems(this.list);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"yin72257"},"content":"    private void listItems(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"yin72257"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"yin72257"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"yin72257"},"content":"            System.out.println(\"      \" + num + \".\" + tasks.get(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":112}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":" * todo task. Represents a task that is yet to be done with no specific timeframe.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"     * Creates new todo task with description","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"     * @param description Description of task","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"     * Formats the todo task into a string.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"     * @return Formatted String.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":" * Ui class to handle reading the user\u0027s inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"     * Creates new user interface and shows the starting title screen.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yin72257"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yin72257"},"content":"     * Reads the next line by the user and parses it","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yin72257"},"content":"     * @return true to continue. false to break.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yin72257"},"content":"    public boolean nextLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yin72257"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yin72257"},"content":"        return parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yin72257"},"content":"     * Message to show an loading error at the beginning.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yin72257"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"    Error loading oops\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yin72257"},"content":"     * Adds a task list to the parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yin72257"},"content":"     * @param list TaskList to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yin72257"},"content":"    public void addTaskList(TaskList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yin72257"},"content":"        parser.addTaskList(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yin72257"},"content":"    private void printLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yin72257"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yin72257"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yin72257"},"content":"     * Adds a storage to the parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yin72257"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yin72257"},"content":"     * @param storage Storage with a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yin72257"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yin72257"},"content":"    public void addStorage(Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yin72257"},"content":"        parser.addStorage(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":69}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"            Deadline deadline \u003d new Deadline(\"Description\", \"18/12/2002\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"            assertEquals(\"[D][ ] Description (by: 18/12/2002)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":18}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yin72257"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yin72257"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yin72257"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yin72257"},"content":"    Todo todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yin72257"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yin72257"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yin72257"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yin72257"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yin72257"},"content":"    public void createTodo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"        todo \u003d new Todo(\"Description\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yin72257"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yin72257"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yin72257"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yin72257"},"content":"        todo \u003d new Todo(\"Description\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yin72257"},"content":"        assertEquals(\"[T][ ] Description\", todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yin72257"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yin72257"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yin72257":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yin72257"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yin72257":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yin72257"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yin72257":1,"-":20}}]
