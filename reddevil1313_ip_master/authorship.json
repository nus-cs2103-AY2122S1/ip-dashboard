[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"reddevil1313":2,"-":22}},{"path":"data/duke_storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"E12021-08-25|project meeting ","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"T0|task one","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":2}},{"path":"src/main/java/duke/ChatbotUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":" * ChatbotUI accepts user input, and outputs a given message.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":" * @author Jovyn Tan","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"public interface ChatbotUI {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    * Takes in a single line of input from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"    *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    * @return A string that the user types into the console.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"    static String acceptUserInput(Scanner sc) {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"        return userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    * Prints out a given message in a pretty format.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    *","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"    * @param message The message to be printed out.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"    */","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"    static void printMessage(String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"        System.out.println(\"---------------------------------------------------------\");","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"        System.out.println(\"\\t\" + message.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"        System.out.println(\"---------------------------------------------------------\");","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":" * A personal assistant chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":" * @author Samay Sagar","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"public class Duke implements ChatbotUI, Parser {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    private static final String FAREWELL_MESSAGE \u003d \"See you soon! :)\";","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"    private static final String FAREWELL_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"    private static final String COMPLETE_TASK_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"    private static final String CREATE_TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"    private static final String CREATE_EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    private static final String CREATE_DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"    private Scanner sc;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"     * The entrypoint of the duke.Duke chat bot.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"        Duke duke \u003d new Duke(\"data/duke_storage.txt\");","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"reddevil1313"},"content":"        duke.greet();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"reddevil1313"},"content":"        duke.taskMode();","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for duke.Duke chatbot.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"reddevil1313"},"content":"    public Duke(String dataStorage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"reddevil1313"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"reddevil1313"},"content":"        this.storage \u003d new Storage(dataStorage);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"reddevil1313"},"content":"        this.loadData();","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"reddevil1313"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"reddevil1313"},"content":"     * Loads data that is saved in a given filename, and parses the data to load tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"reddevil1313"},"content":"    public void loadData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"reddevil1313"},"content":"        ArrayList\u003cString\u003e lines \u003d this.storage.readLines();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"reddevil1313"},"content":"        for (int i \u003d 0; i \u003c lines.size(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"reddevil1313"},"content":"            Task task \u003d Task.parseTaskFromSavedText(lines.get(i));","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"reddevil1313"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"reddevil1313"},"content":"        ChatbotUI.printMessage(\"Loaded tasks from save file!\" + this.taskList.countTasks());","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"reddevil1313"},"content":"     * Saves Chatbot data to a given filename.","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"reddevil1313"},"content":"    public void saveData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"reddevil1313"},"content":"        String content \u003d this.taskList.toSaveData();","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"reddevil1313"},"content":"        this.storage.overwriteNewFile();","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"reddevil1313"},"content":"        this.storage.writeToFile(content);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"reddevil1313"},"content":"    public void endDuke() {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"reddevil1313"},"content":"        this.saveData();","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"reddevil1313"},"content":"        ChatbotUI.printMessage(FAREWELL_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"reddevil1313"},"content":"     * Prints a greeting to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"reddevil1313"},"content":"    public void greet() {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"reddevil1313"},"content":"        ChatbotUI.printMessage(GREETING_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"reddevil1313"},"content":"     * Echoes the user\u0027s input, until the user says \"bye\".","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"reddevil1313"},"content":"    public void echo() {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"reddevil1313"},"content":"        String message \u003d ChatbotUI.acceptUserInput(this.sc);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"reddevil1313"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"reddevil1313"},"content":"            ChatbotUI.printMessage(FAREWELL_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"reddevil1313"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"reddevil1313"},"content":"            ChatbotUI.printMessage(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"reddevil1313"},"content":"            echo();","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"reddevil1313"},"content":"     * Handles the logic for managing a user\u0027s tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"reddevil1313"},"content":"    public void taskMode() {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"reddevil1313"},"content":"        String msg \u003d ChatbotUI.acceptUserInput(this.sc).trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"reddevil1313"},"content":"        if (msg.equals(FAREWELL_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"reddevil1313"},"content":"            this.endDuke();","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"reddevil1313"},"content":"            return;","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"reddevil1313"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"reddevil1313"},"content":"            String output;","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"reddevil1313"},"content":"            TaskList tasks \u003d this.taskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"reddevil1313"},"content":"            if (msg.equals(LIST_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"reddevil1313"},"content":"            } else if (msg.startsWith(COMPLETE_TASK_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.completeTask(Parser.getIntFrom(COMPLETE_TASK_COMMAND, msg));","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"reddevil1313"},"content":"            } else if (msg.startsWith(DELETE_TASK_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.deleteTask(Parser.getIntFrom(DELETE_TASK_COMMAND, msg));","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"reddevil1313"},"content":"            } else if (msg.startsWith(CREATE_TODO_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.addNewTodo(Parser.getStringFrom(CREATE_TODO_COMMAND, msg));","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"reddevil1313"},"content":"            } else if (msg.startsWith(CREATE_EVENT_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.addNewEvent(Parser.getStringFrom(CREATE_EVENT_COMMAND, msg));","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"reddevil1313"},"content":"            } else if (msg.startsWith(CREATE_DEADLINE_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"reddevil1313"},"content":"                output \u003d tasks.addNewDeadline(Parser.getStringFrom(CREATE_DEADLINE_COMMAND, msg));","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"reddevil1313"},"content":"            } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"reddevil1313"},"content":"                throw new DukeException(\"I don\u0027t know what that command means.\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"reddevil1313"},"content":"                        \"\\nPlease input a valid command.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"reddevil1313"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"reddevil1313"},"content":"            ChatbotUI.printMessage(output);","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"reddevil1313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":131,"author":{"gitId":"reddevil1313"},"content":"            ChatbotUI.printMessage(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"reddevil1313"},"content":"        } finally {","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"reddevil1313"},"content":"            taskMode();","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"reddevil1313":130,"-":6}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"reddevil1313":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"public interface Parser {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"     * Gets the description supplied by the user after a command.","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"     * @param command a String that describes the command (e.g. \"event\")","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"     * @param message the String that is input by the user (e.g. \"event Meeting /at tomorrow\")","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"     * @return a String representing the description after the command (e.g. \"Meeting /at tomorrow\")","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"     * @throws DukeException indicates that the description is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"    static String getStringFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"        if (message.length() \u003c\u003d command.length()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"            throw new DukeException(","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"                    String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"            );","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        String description \u003d message.substring(command.length()).trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"            throw new DukeException(","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"                    String.format(\"The description of a %s cannot be empty.\", command)","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"            );","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"        return description;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"     * Parses a user-input for a number supplied after a given command.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"     * @param command A String command that comes before the desired number. (e.g. \"delete\")","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"     * @param message The String that is the full input by the user. (e.g. \"delete 2\")","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"     * @return an int representing the description of the command. (e.g. \"2\")","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"     * @throws DukeException indicates that the description is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"    static int getIntFrom(String command, String message) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"        return Integer.parseInt(getStringFrom(command, message));","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":36}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import java.io.File;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"public class Storage {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"    private final String dataStoragePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    public Storage(String dataStoragePath) {","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"        this.dataStoragePath \u003d dataStoragePath;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"     * Reads the text content of a given file.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"     * @return An ArrayList of the lines read from a given file.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"    public ArrayList\u003cString\u003e readLines() {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"            File file \u003d new File(this.dataStoragePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"                lines.add(data);","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"            sc.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"            System.out.println(\"No save data found.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"        return lines;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"     * Creates a file with the given filename.","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"     * If the file already exists, it will overwrite the existing file with a new file.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"    public void overwriteNewFile() {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataStoragePath, false);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"reddevil1313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"reddevil1313"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"reddevil1313"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"reddevil1313"},"content":"     * Writes a given String to a given file, without overwriting existing content.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"reddevil1313"},"content":"     * @param content The content to be written to the file","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"reddevil1313"},"content":"    public void writeToFile(String content) {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"reddevil1313"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"reddevil1313"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.dataStoragePath, true);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"reddevil1313"},"content":"            fileWriter.write(content);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"reddevil1313"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"reddevil1313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"reddevil1313"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"reddevil1313"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"public class TaskList {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a duke.TaskList which contains Tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"     * Converts a taskList to a text format that can be saved in a txt file.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"     * @return a String that represents the savable data of a duke.TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"            data +\u003d task.toSaveData();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"        return data;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"     * Adds an existing task to the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"     * @param task The task to be added to the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"     * Given a string, creates a To-do from that string and adds it to the list of task.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"     * @param taskTitle a String of the title of the To-do to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"     * @return the newly created To-do","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"    public String addNewTodo(String taskTitle) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"reddevil1313"},"content":"        ToDo task \u003d new ToDo(taskTitle);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"reddevil1313"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"reddevil1313"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"reddevil1313"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"reddevil1313"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"reddevil1313"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"reddevil1313"},"content":"    public String addNewDeadline(String taskTitle) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"reddevil1313"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/by \");","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"reddevil1313"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"reddevil1313"},"content":"        Deadline task \u003d new Deadline(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"reddevil1313"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"reddevil1313"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"reddevil1313"},"content":"     * Given a string, creates a Deadline from that string and adds it to the list of task.","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"reddevil1313"},"content":"     * @param taskTitle a String of the title of the Deadline to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"reddevil1313"},"content":"     * @return the newly created Deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"reddevil1313"},"content":"    public String addNewEvent(String taskTitle) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"reddevil1313"},"content":"        int delimiter \u003d taskTitle.indexOf(\"/at \");","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"reddevil1313"},"content":"        LocalDate due \u003d LocalDate.parse(taskTitle.substring(delimiter + 4));","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"reddevil1313"},"content":"        Event task \u003d new Event(taskTitle.substring(0, delimiter), due);","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"reddevil1313"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"reddevil1313"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + task.toString() + this.countTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"reddevil1313"},"content":"     * Given the index number of a task, marks that task as completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"reddevil1313"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"reddevil1313"},"content":"     * @return the String representation of the completed task","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"reddevil1313"},"content":"    public String completeTask(int taskNumber) {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"reddevil1313"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"reddevil1313"},"content":"        // Assumes that the task exists.","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"reddevil1313"},"content":"        Task task \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"reddevil1313"},"content":"        task.completeTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"reddevil1313"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"reddevil1313"},"content":"     * Tells the user how many tasks there are in the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"reddevil1313"},"content":"     * @return A string that contains the number of tasks in the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"reddevil1313"},"content":"    public String countTasks() {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"reddevil1313"},"content":"        return String.format(\"\\nNow you have %d tasks in the list.\", this.tasks.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"reddevil1313"},"content":"     * Deletes a task when given its index number.","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"reddevil1313"},"content":"     * @param taskNumber an int representing the index of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"reddevil1313"},"content":"     * @return the String representation of the deleted task","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"reddevil1313"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"reddevil1313"},"content":"        int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"reddevil1313"},"content":"        // Assumes that the task exists.","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"reddevil1313"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"reddevil1313"},"content":"                + this.tasks.remove(taskIndex).toString()","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"reddevil1313"},"content":"                + this.countTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"reddevil1313"},"content":"     * Returns a string representing the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"reddevil1313"},"content":"     * @return A string representing the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"reddevil1313"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"reddevil1313"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"reddevil1313"},"content":"        String output \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"reddevil1313"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"reddevil1313"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"reddevil1313"},"content":"            output +\u003d \"\\n\" + index + \".\" + this.tasks.get(i).toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"reddevil1313"},"content":"        return output;","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":121}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a Deadline that specifies whether or not it is completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"     * @param timeDue a LocalDate representing time at which the deadline is due","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    public Deadline(String title, LocalDate timeDue) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"        super(title, Type.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a Deadline that specifies whether or not it is completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"     * @param timeDue a LocalDate representing time at which the deadline is due","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"     * @param isDone a boolean representing whether or not the deadline is completed","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    public Deadline(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"        super(title, Type.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"     * @return A string describing the Deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"        String formattedTimeDue \u003d this.timeDue \u003d\u003d null","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"                ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"        return super.toString() + String.format(\" (by: %s)\", formattedTimeDue);","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"reddevil1313":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for an Event that specifies whether or not it is completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"     * @param desc a String representing the title of the event","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"     * @param timeDue a LocalDate representing time at which the event is due","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    public Event (String desc, LocalDate timeDue) {","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"        super(desc, Type.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for an Event that specifies whether or not it is completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the event","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"     * @param timeDue a LocalDate representing time at which the event is due","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"     * @param isDone a boolean representing whether or not the event is completed","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    public Event(String title, LocalDate timeDue, boolean isDone) {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"        super(title, Type.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"        this.timeDue \u003d timeDue;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"     * Returns the string representation of a Event.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"     * @return A string describing the Event.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"        String formattedTimeDue \u003d this.timeDue \u003d\u003d null","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"                ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"            return super.toString() + String.format(\" (at: %s)\", formattedTimeDue);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"reddevil1313":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"    protected char type;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"    protected LocalDate timeDue;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    protected enum Type {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"        TODO(\u0027T\u0027),","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"        EVENT(\u0027E\u0027),","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"        DEADLINE(\u0027D\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"        public final char indicator;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        Type(char indicator) {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"            this.indicator \u003d indicator;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"        public void setType(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"            task.type \u003d this.indicator;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"     * @param description a String representing the user-input title of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"     * @param task the type of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"    public Task(String description, Type task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"        task.setType(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"     * A factory method for creating tasks with additional details.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"     * @param taskType a TypeIndicator enum representing the type of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"     * @param isDone a boolean representing whether or not the task has been completed","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the task","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"     * @param timeDue a String representing when the task is due, if it is due.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"reddevil1313"},"content":"     * @return a Task that is created from the given details","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"reddevil1313"},"content":"    public static Task createTask(","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"reddevil1313"},"content":"            Type taskType, boolean isDone, String title, LocalDate timeDue) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"reddevil1313"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"reddevil1313"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"reddevil1313"},"content":"                return new Deadline(title, timeDue, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"reddevil1313"},"content":"            case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"reddevil1313"},"content":"                return new Event(title, timeDue, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"reddevil1313"},"content":"            default:","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"reddevil1313"},"content":"                // If the type cannot be parsed, it defaults to TO-DO.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"reddevil1313"},"content":"                return new ToDo(title, isDone);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"reddevil1313"},"content":"     * Parses structured text into a Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"reddevil1313"},"content":"     * Text must be of the format [typeIndicator][done][deadline]|[title]","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"reddevil1313"},"content":"     * @param text The text to be parsed into a Task.","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"reddevil1313"},"content":"     * @return a Task based on the parsed text","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"reddevil1313"},"content":"    public static Task parseTaskFromSavedText(String text) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"reddevil1313"},"content":"        char typeIndicator \u003d text.charAt(0);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"reddevil1313"},"content":"        char doneIndicator \u003d text.charAt(1);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"reddevil1313"},"content":"        boolean isDone \u003d doneIndicator \u003d\u003d \u00271\u0027;","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"reddevil1313"},"content":"        String timeDueString \u003d text.substring(2, text.indexOf(\u0027|\u0027));","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"reddevil1313"},"content":"        LocalDate timeDue \u003d timeDueString.length() \u003d\u003d  0 ? null : LocalDate.parse(timeDueString);","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"reddevil1313"},"content":"        String title \u003d text.substring(text.indexOf(\u0027|\u0027) + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"reddevil1313"},"content":"        return createTask(charToTypeEnum(typeIndicator), isDone, title, timeDue);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"reddevil1313"},"content":"     * Convert a task to a String that can be loaded as load data.","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"reddevil1313"},"content":"     * @return a String that represents its saved state","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"reddevil1313"},"content":"    public String toSaveData() {","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"reddevil1313"},"content":"        int doneIndicator \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"reddevil1313"},"content":"        String timeDueString \u003d this.timeDue \u003d\u003d null","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"reddevil1313"},"content":"                ? \"\" : this.timeDue.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"reddevil1313"},"content":"        return String.format(\"%s%s%s|%s\\n\",","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"reddevil1313"},"content":"                this.type, doneIndicator, timeDueString, this.description);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"reddevil1313"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"reddevil1313"},"content":"    public void completeTask() {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"reddevil1313"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"reddevil1313"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"reddevil1313"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"reddevil1313"},"content":"     * @return A string describing the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"reddevil1313"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"reddevil1313"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"reddevil1313"},"content":"        String doneIndicator \u003d this.isDone ? \"x\" : \" \";","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"reddevil1313"},"content":"        return String.format(\"[%s][%s] %s\", type, doneIndicator, this.description);","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"reddevil1313"},"content":"     * Given a char, convert it to a typeIndicator Enum.","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"reddevil1313"},"content":"     * @param t The char to be converted to a TypeIndicators Enum","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"reddevil1313"},"content":"     * @return a TypeIndicators enum","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"reddevil1313"},"content":"    public static Type charToTypeEnum(char t) {","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"reddevil1313"},"content":"        switch (t) {","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"reddevil1313"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"reddevil1313"},"content":"                return Type.DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"reddevil1313"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"reddevil1313"},"content":"                return Type.EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"reddevil1313"},"content":"            default:","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"reddevil1313"},"content":"                // If the type cannot be inferred, return a TO-DO as default.","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"reddevil1313"},"content":"                return Type.TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"reddevil1313"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":122}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a To-do.","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the to-do","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"    public ToDo(String title) {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"        super(title, Type.TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"     * A constructor for a To-do that sets its completion status.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"     * @param title a String representing the title of the to-do","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"     * @param isDone a boolean representing whether or not the To-do is completed","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"    public ToDo(String title, boolean isDone) {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        super(title, Type.TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"reddevil1313":21}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"    public void createNewDeadlineTest(){","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"        Deadline deadline \u003d new Deadline(\"Submission\", LocalDate.parse(\"2021-02-11\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(\"[D][ ] Submission (by: Feb 11 2021)\", deadline.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    public void markDeadlineAsDoneTest(){","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        Deadline deadline \u003d new Deadline(\"Submission\", LocalDate.parse(\"2021-02-11\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        deadline.completeTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(\"[D][x] Submission (by: Feb 11 2021)\", deadline.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":21}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"public class EventTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"    public void createNewEventTest(){","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"        Event event \u003d new Event(\"Project meeting\", LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(\"[E][ ] Project meeting (at: Jan 1 2021)\", event.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    public void markEventAsDoneTest(){","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        Event event \u003d new Event(\"Project meeting\", LocalDate.parse(\"2021-01-01\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        event.completeTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(\"[E][x] Project meeting (at: Jan 1 2021)\", event.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"    public void parseStringFromCommands(){","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"        String instruction \u003d Parser.getStringFrom(\"deadline\", \"deadline Return book /by: 2021-11-12\");","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(\"Return book /by: 2021-11-12\", instruction);","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"    public void parseIntFromCommands(){","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"        int instruction \u003d Parser.getIntFrom(\"done\", \"done 123\");","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"        assertEquals(123, instruction);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"reddevil1313":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"rm ./data/duke_storage.txt","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"cd text-ui-test","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"echo \"Testing I/O and logic: \"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"cd test-1","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"bash ./runtest.sh","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"cd ..","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"echo \"Testing loading tasks from file: \"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"cd test-2","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"bash ./runtest-2.sh","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":9,"-":5}},{"path":"text-ui-test/test-1/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"todo borrow book","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"event project meeting /at 2021-08-25","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"done 1","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"done 3","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"invalidcommand","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"todo return book","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"delete 2","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"bye","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":16}},{"path":"text-ui-test/test-1/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"    mkdir ../bin","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"# delete output from previous run","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"if ! javac -cp ../../src/main/java/duke/task -Xlint:none -d ../../bin ../../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"    echo \"********** BUILD FAILURE IN TASKS PACKAGE **********\"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"if ! javac -cp ../../bin -Xlint:none -d ../../bin ../../src/main/java/duke/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"# convert to UNIX format","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"    exit 0","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"else","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":43}},{"path":"text-ui-test/test-2/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"todo borrow book","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"event project meeting /at 2021-08-25","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"done 1","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"done 3","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"invalidcommand","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"todo return book","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"delete 2","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"bye","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":16}},{"path":"text-ui-test/test-2/runtest-2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"reddevil1313"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"reddevil1313"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"reddevil1313"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"reddevil1313"},"content":"    mkdir ../bin","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"reddevil1313"},"content":"# delete output from previous run","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"reddevil1313"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"reddevil1313"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"reddevil1313"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"reddevil1313"},"content":"if ! javac -cp ../../src/main/java/duke/task -Xlint:none -d ../../bin ../../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"reddevil1313"},"content":"    echo \"********** BUILD FAILURE IN TASKS PACKAGE **********\"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"reddevil1313"},"content":"if ! javac -cp ../../bin -Xlint:none -d ../../bin ../../src/main/java/duke/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"reddevil1313"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"reddevil1313"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"reddevil1313"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"reddevil1313"},"content":"# convert to UNIX format","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"reddevil1313"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"reddevil1313"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"reddevil1313"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"reddevil1313"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"reddevil1313"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"reddevil1313"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"reddevil1313"},"content":"then","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"reddevil1313"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"reddevil1313"},"content":"    exit 0","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"reddevil1313"},"content":"else","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"reddevil1313"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"reddevil1313"},"content":"    exit 1","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"reddevil1313"},"content":"fi","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"reddevil1313":43}}]
