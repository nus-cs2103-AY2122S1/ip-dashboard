[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Cyn7hius"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Cyn7hius"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Cyn7hius":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"        // ASCII divider to clean up the output","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"        final String divider \u003d \"---------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"        // Initialise the taskList","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Cyn7hius"},"content":"        // Init the scanner","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Cyn7hius"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Cyn7hius"},"content":"        // Intro message","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Cyn7hius"},"content":"        System.out.println(","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Cyn7hius"},"content":"                \"Hello! I\u0027m Duke\" + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Cyn7hius"},"content":"                        \"What can I do for you?\" + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Cyn7hius"},"content":"                        divider);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Cyn7hius"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Cyn7hius"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Cyn7hius"},"content":"                String nextTask \u003d in.nextLine();  // Read user input","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Cyn7hius"},"content":"                // Case where user marks a task as done","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Cyn7hius"},"content":"                // Uses a series of checks to only check for \"done (number)\"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Cyn7hius"},"content":"                if (nextTask.startsWith(\"done\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Cyn7hius"},"content":"                    // there must be a number following \"done\"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Cyn7hius"},"content":"                    if (nextTask.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please use this format: \u0027done (task number)\u0027\");","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"Cyn7hius"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"Cyn7hius"},"content":"                        int taskIndex \u003d Integer.parseInt(nextTask.substring(5)) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Cyn7hius"},"content":"                        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Cyn7hius"},"content":"                            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Cyn7hius"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Cyn7hius"},"content":"                        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Cyn7hius"},"content":"                        System.out.println(divider + \"\\n\" + \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"Cyn7hius"},"content":"                                taskList.get(taskIndex) + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"Cyn7hius"},"content":"                                divider);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Cyn7hius"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please enter a proper task number!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Cyn7hius"},"content":"                    continue;","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Cyn7hius"},"content":"                    // case where user wants to delete a task item, similar to done","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Cyn7hius"},"content":"                } else if (nextTask.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"Cyn7hius"},"content":"                    if (nextTask.length() \u003d\u003d 6) {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please use this format: \u0027delete (task number)\u0027\");","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"Cyn7hius"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"Cyn7hius"},"content":"                        int taskIndex \u003d Integer.parseInt(nextTask.substring(7)) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"Cyn7hius"},"content":"                        if (taskIndex \u003e\u003d taskList.size() || taskIndex \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"Cyn7hius"},"content":"                            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"Cyn7hius"},"content":"                        }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"Cyn7hius"},"content":"                        System.out.println(divider + \"\\n\" + \"Nice! Noted. I\u0027ve removed this task: \" + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"Cyn7hius"},"content":"                                taskList.get(taskIndex) + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"Cyn7hius"},"content":"                                \"You now have \" + (taskList.size() - 1) + \" tasks remaining!\" + \"\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"Cyn7hius"},"content":"                                divider);","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"Cyn7hius"},"content":"                        taskList.remove(taskIndex);","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"Cyn7hius"},"content":"                        continue;","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Cyn7hius"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please enter a proper task number!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"Cyn7hius"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Cyn7hius"},"content":"                // Case where user wants to see the entire task list","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"Cyn7hius"},"content":"                else if (nextTask.equals(\"list\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"Cyn7hius"},"content":"                    System.out.println(divider + \"\\n\" + \"Here are the items in your task list: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"Cyn7hius"},"content":"                    for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"Cyn7hius"},"content":"                        System.out.println(i + 1 + \". \" + taskList.get(i));","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"Cyn7hius"},"content":"                    System.out.println(divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"Cyn7hius"},"content":"                    continue;","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"Cyn7hius"},"content":"                    // Case where user exits the program","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"Cyn7hius"},"content":"                } else if (nextTask.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"Cyn7hius"},"content":"                    System.out.println(divider + \"\\n\" + \"Bye. Hope to see you again soon!\" + \"\\n\" + divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"Cyn7hius"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"Cyn7hius"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"Cyn7hius"},"content":"                // Case where user wants to add a new to do task","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"Cyn7hius"},"content":"                else if (nextTask.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"Cyn7hius"},"content":"                    try {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"Cyn7hius"},"content":"                        String todoDesc \u003d nextTask.substring(5);","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"Cyn7hius"},"content":"                        taskList.add(new Todo(todoDesc));","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"Cyn7hius"},"content":"                        // catch the exception created by .substring method and throw a new DukeException which is caught at the end","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"Cyn7hius"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"Cyn7hius"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"Cyn7hius"},"content":"                // Case where user wants to add a new event task","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"Cyn7hius"},"content":"                else if (nextTask.startsWith(\"event\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"Cyn7hius"},"content":"                    // need to check that for event they use the /at properly else reject","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"Cyn7hius"},"content":"                    if (!nextTask.contains(\"/at \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please use this format: \u0027event \u003ctask\u003e /at \u003cdate and time\u003e\u0027 to specify the date and time!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"Cyn7hius"},"content":"                    int eventDateIndex \u003d nextTask.indexOf(\"/at \") + 4;","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"Cyn7hius"},"content":"                    String eventDesc \u003d nextTask.substring(6, eventDateIndex - 4); //skip \"event \"","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"Cyn7hius"},"content":"                    taskList.add(new Event(eventDesc, nextTask.substring(eventDateIndex)));","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"Cyn7hius"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"Cyn7hius"},"content":"                // Case where user wants to add a new deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"Cyn7hius"},"content":"                else if (nextTask.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"Cyn7hius"},"content":"                    // need to check that for deadline they use the /by properly else reject","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"Cyn7hius"},"content":"                    if (!nextTask.contains(\"/by \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"Cyn7hius"},"content":"                        throw new DukeException(\"Please use this format: \u0027deadline \u003ctask\u003e /by \u003cdate and time\u003e\u0027 to specify the date and time!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"Cyn7hius"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"Cyn7hius"},"content":"                    int deadlineDateIndex \u003d nextTask.indexOf(\"/by \") + 4;","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"Cyn7hius"},"content":"                    String deadlineDesc \u003d nextTask.substring(9, deadlineDateIndex - 4); //skip the \"deadline \"","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"Cyn7hius"},"content":"                    taskList.add(new Deadline(deadlineDesc, nextTask.substring(deadlineDateIndex)));","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"Cyn7hius"},"content":"                    // Else case for all non-recognised user inputs","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"Cyn7hius"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"Cyn7hius"},"content":"                    throw new DukeException(\"Please enter a valid command\");","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"Cyn7hius"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"Cyn7hius"},"content":"                // When adding a new task, this message be printed","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"Cyn7hius"},"content":"                System.out.println(taskList.size() \u003e 1","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"Cyn7hius"},"content":"                        ? divider + \"\\n\" + \"added: \" + taskList.get(taskList.size() - 1) + \"\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"Cyn7hius"},"content":"                        \"now you have: \" + taskList.size() + \" tasks! type \u0027list\u0027 to see them!\" + \"\\n\" + divider","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"Cyn7hius"},"content":"                        : divider + \"\\n\" + \"added: \" + taskList.get(taskList.size() - 1) + \"\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"Cyn7hius"},"content":"                        \"now you have: \" + taskList.size() + \" task! type \u0027list\u0027 to see them!\" + \"\\n\" + divider);","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"Cyn7hius"},"content":"                // catch all the custom exceptions and displays the message","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"Cyn7hius"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"Cyn7hius"},"content":"                System.out.println(divider + \"\\n\" + e.getMessage() + \"\\n\" + divider);","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"Cyn7hius"},"content":"                // catch the remaining exceptions","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"Cyn7hius"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"Cyn7hius"},"content":"                System.out.println(divider + \"\\n\" + \"Please enter a valid task\" + \"\\n\" + divider + \"\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"Cyn7hius"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":151,"author":{"gitId":"Cyn7hius"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Cyn7hius":149,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"    public DukeException () {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"        super(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"    public DukeException (String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Cyn7hius":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"    public Event(String desc, String at) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"        super(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Cyn7hius"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Cyn7hius"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Cyn7hius":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Cyn7hius"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Cyn7hius"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Cyn7hius"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Cyn7hius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Cyn7hius"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Cyn7hius"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Cyn7hius":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"    public Todo(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"        super(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Cyn7hius":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cyn7hius"},"content":"todo 2103T individual project","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Cyn7hius"},"content":"event Welcome Tea /at at SoC","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Cyn7hius"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Cyn7hius"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Cyn7hius"},"content":"delete 0","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Cyn7hius"},"content":"delete 10","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Cyn7hius"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Cyn7hius"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Cyn7hius"},"content":"todo done delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Cyn7hius"},"content":"event Music Concert at Stadium","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Cyn7hius"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Cyn7hius"},"content":"deadline do homework /by tonight","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Cyn7hius"},"content":"deadline do Orbital /by 16th Aug 2359","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Cyn7hius"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Cyn7hius"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Cyn7hius"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Cyn7hius"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Cyn7hius":17}}]
