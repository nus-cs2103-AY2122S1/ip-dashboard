[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"juliussneezer04":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"T,0,hello","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"T,0,bye","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"T,0,goobye","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"T,0,hello","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"juliussneezer04":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":" * Class that inherits from Entry to encapsulate Deadlines.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"public class Deadline extends Entry {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"    public Deadline() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"        this.deadline \u003d LocalDate.now();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"     * @param task Entry to be saved.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"     * @param deadline Deadline of entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if deadline is in wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    public Deadline(String task, String deadline) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"            this.deadline \u003d LocalDate.now();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"     * Returns string to be saved representing the Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to be saved representing the Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"        return \"D\" + super.saveString() + \",\" + this.deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Entry\u0027s toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"     * Returns String description of deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"     * @return String representing Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline.format(formatter) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"     * Returns true if Deadline is Empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"     * @return Boolean corresponding to Deadline\u0027s length.","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"        return super.isEmpty() \u0026\u0026 !deadline.isAfter(LocalDate.now());","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":71}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"    private Label text;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"        text \u003d l;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"    public DialogBox padDukeDialog(int padding) {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"        text.setStyle(\"-fx-padding: \" + padding + \" 0 0 0\");","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"        return this;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"    public DialogBox padUserDialog(int padding) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"        text.setStyle(\"-fx-padding: \" + padding + \" 0 0 0\");","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"        return this;","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"juliussneezer04":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":" * Class to encapsulate Duke Chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    private final Ui dukeUi;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"    private final Parser dukeParser;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"    private final Storage dukeStorage;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    private EntryList entries;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"    private final String TERMINATION_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"    private final String LIST_ENTRIES_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"    private final String MARK_ENTRY_DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"    private final String DELETE_ENTRY_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"    private final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"    private final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"    private final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"    private final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Duke Chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"        this.dukeUi \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"        this.dukeParser \u003d new Parser();","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"        this.dukeStorage \u003d new Storage();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"            this.entries \u003d this.dukeStorage.readData();","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"            //specific to loading error dukeUi","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"            this.dukeUi.handleLoadingError(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"            this.entries \u003d new EntryList();","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane container \u003d new AnchorPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"        VBox dukeContainer \u003d new VBox();","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"        TextField dukeInput \u003d new TextField();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"        Scene scene \u003d new Scene(container);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"        Label sideLabel \u003d new Label(\"DUKE\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"        sideLabel.setTextFill(Color.color(1,1,1));","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"        sideLabel.setFont(new Font(\"Arial\", 45));","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"        sideLabel.setStyle(\"-fx-start-margin: 100\");","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"        container.setPrefSize(700.0, 500.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"        container.setStyle(\"-fx-background-color: #13223b\");","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setContent(dukeContainer);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setPrefSize(500.0, 473.3);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"        HBox topRow \u003d new HBox();","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"        topRow.getChildren().addAll(scrollPane, sideLabel);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"        container.getChildren().addAll(topRow, dukeInput, sendButton);","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"        dukeContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"        dukeInput.setPrefWidth(496.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"juliussneezer04"},"content":"        sendButton.setPrefWidth(200.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"juliussneezer04"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"juliussneezer04"},"content":"            handleUserInput(dukeContainer, dukeInput, stage);","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"juliussneezer04"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"juliussneezer04"},"content":"        dukeInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"juliussneezer04"},"content":"            handleUserInput(dukeContainer, dukeInput, stage);","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"juliussneezer04"},"content":"        });","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"juliussneezer04"},"content":"        dukeContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane.setLeftAnchor(dukeInput , 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"juliussneezer04"},"content":"        AnchorPane.setBottomAnchor(dukeInput, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"juliussneezer04"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"juliussneezer04"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"juliussneezer04"},"content":"        stage.setMinHeight(500.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"juliussneezer04"},"content":"        stage.setMinWidth(700.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"juliussneezer04"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"juliussneezer04"},"content":"        stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"juliussneezer04"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"juliussneezer04"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"juliussneezer04"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"juliussneezer04"},"content":"    private void handleUserInput(VBox dialogContainer, TextField userInput, Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"juliussneezer04"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"juliussneezer04"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText(), stage));","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"juliussneezer04"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"juliussneezer04"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)).padUserDialog(10),","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"juliussneezer04"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke)).padDukeDialog(10)","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"juliussneezer04"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"juliussneezer04"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"juliussneezer04"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"juliussneezer04"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"juliussneezer04"},"content":"    private String getResponse(String input, Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"juliussneezer04"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"juliussneezer04"},"content":"            stage.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"juliussneezer04"},"content":"            return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"juliussneezer04"},"content":"            return run(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"juliussneezer04"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"juliussneezer04"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"juliussneezer04"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"juliussneezer04"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"juliussneezer04"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"juliussneezer04"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"juliussneezer04"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"juliussneezer04"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"juliussneezer04"},"content":"     * Method containing Logic for processed Input.","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"juliussneezer04"},"content":"     * @param parsedTerms ArrayList containing the command, entry and timing (in that order).","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException If ProcessedInput is invalid/incoherent.","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"juliussneezer04"},"content":"    private String processInput(ArrayList\u003cString\u003e parsedTerms) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"juliussneezer04"},"content":"        if (parsedTerms.size() \u003c 3) {","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Duke Cannot Understand Your Entry!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"juliussneezer04"},"content":"        String command \u003d parsedTerms.get(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"juliussneezer04"},"content":"        String entry \u003d parsedTerms.get(1);","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"juliussneezer04"},"content":"        String timing \u003d parsedTerms.get(2);","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"juliussneezer04"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"juliussneezer04"},"content":"        //Process Command","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"juliussneezer04"},"content":"        switch(command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"juliussneezer04"},"content":"            case LIST_ENTRIES_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getEntries();","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"juliussneezer04"},"content":"            case MARK_ENTRY_DONE_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getEntryAsDone(Integer.parseInt(entry));","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"juliussneezer04"},"content":"            case TODO_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getAddEntry(new Todo(entry), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"juliussneezer04"},"content":"            case EVENT_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getAddEntry(new Event(entry, timing), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"juliussneezer04"},"content":"            case DEADLINE_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getAddEntry(new Deadline(entry, timing), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"juliussneezer04"},"content":"            case DELETE_ENTRY_COMMAND:","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getDeleteEntry(Integer.parseInt(entry), this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"juliussneezer04"},"content":"            case FIND_COMMAND:","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"juliussneezer04"},"content":"                output \u003d entries.getFindEntry(entry, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"juliussneezer04"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"juliussneezer04"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"juliussneezer04"},"content":"                throw new DukeException(\"Sorry! Duke can\u0027t understand what that means\");","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"juliussneezer04"},"content":"//        switch(command) {","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"juliussneezer04"},"content":"//        case LIST_ENTRIES_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"juliussneezer04"},"content":"//            entries.displayEntries(this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"juliussneezer04"},"content":"//        case MARK_ENTRY_DONE_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"juliussneezer04"},"content":"//            entries.markEntryAsDone(Integer.parseInt(entry));","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"juliussneezer04"},"content":"//        case TODO_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"juliussneezer04"},"content":"//            entries.addEntry(new Todo(entry), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"juliussneezer04"},"content":"//        case EVENT_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"juliussneezer04"},"content":"//            entries.addEntry(new Event(entry, timing), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"juliussneezer04"},"content":"//        case DEADLINE_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"juliussneezer04"},"content":"//            entries.addEntry(new Deadline(entry, timing), command, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":221,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"juliussneezer04"},"content":"//        case DELETE_ENTRY_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":224,"author":{"gitId":"juliussneezer04"},"content":"//            entries.deleteEntry(Integer.parseInt(entry), this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":227,"author":{"gitId":"juliussneezer04"},"content":"//        case FIND_COMMAND:","lastModifiedDate":"2021-09-01"},{"lineNumber":228,"author":{"gitId":"juliussneezer04"},"content":"//            entries.findEntry(entry, this.dukeUi);","lastModifiedDate":"2021-09-01"},{"lineNumber":229,"author":{"gitId":"juliussneezer04"},"content":"//            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":230,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"juliussneezer04"},"content":"//            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":232,"author":{"gitId":"juliussneezer04"},"content":"//                throw new DukeException(\"Sorry! Duke can\u0027t understand what that means\");","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"juliussneezer04"},"content":"//        }","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"juliussneezer04"},"content":"        return output;","lastModifiedDate":"2021-09-01"},{"lineNumber":235,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"juliussneezer04"},"content":"//    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":238,"author":{"gitId":"juliussneezer04"},"content":"//     * Method to perform initialise Duke operations.","lastModifiedDate":"2021-09-01"},{"lineNumber":239,"author":{"gitId":"juliussneezer04"},"content":"//     */","lastModifiedDate":"2021-09-01"},{"lineNumber":240,"author":{"gitId":"juliussneezer04"},"content":"//    private void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":241,"author":{"gitId":"juliussneezer04"},"content":"//        this.dukeUi.welcomeUser();","lastModifiedDate":"2021-09-01"},{"lineNumber":242,"author":{"gitId":"juliussneezer04"},"content":"//        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":243,"author":{"gitId":"juliussneezer04"},"content":"//        String input \u003d inputScanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"juliussneezer04"},"content":"//        while (!(input.equals(TERMINATION_COMMAND))) {","lastModifiedDate":"2021-09-01"},{"lineNumber":245,"author":{"gitId":"juliussneezer04"},"content":"//            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"juliussneezer04"},"content":"//                ArrayList\u003cString\u003e parsedTerms \u003d this.dukeParser.parseInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":247,"author":{"gitId":"juliussneezer04"},"content":"//                this.processInput(parsedTerms);","lastModifiedDate":"2021-09-01"},{"lineNumber":248,"author":{"gitId":"juliussneezer04"},"content":"//                this.dukeStorage.saveEntries(this.entries);","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"juliussneezer04"},"content":"//            } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":250,"author":{"gitId":"juliussneezer04"},"content":"//                this.dukeUi.handleParsingError(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":251,"author":{"gitId":"juliussneezer04"},"content":"//            }","lastModifiedDate":"2021-09-01"},{"lineNumber":252,"author":{"gitId":"juliussneezer04"},"content":"//            input \u003d inputScanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":253,"author":{"gitId":"juliussneezer04"},"content":"//        }","lastModifiedDate":"2021-09-01"},{"lineNumber":254,"author":{"gitId":"juliussneezer04"},"content":"//        this.dukeUi.printGoodByeUser();","lastModifiedDate":"2021-09-01"},{"lineNumber":255,"author":{"gitId":"juliussneezer04"},"content":"//    }","lastModifiedDate":"2021-09-01"},{"lineNumber":256,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":257,"author":{"gitId":"juliussneezer04"},"content":"    private String run(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":258,"author":{"gitId":"juliussneezer04"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":259,"author":{"gitId":"juliussneezer04"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":260,"author":{"gitId":"juliussneezer04"},"content":"            return this.dukeUi.getGoodByeUser();","lastModifiedDate":"2021-09-01"},{"lineNumber":261,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":262,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":263,"author":{"gitId":"juliussneezer04"},"content":"            ArrayList\u003cString\u003e parsedTerms \u003d this.dukeParser.parseInput(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":264,"author":{"gitId":"juliussneezer04"},"content":"            output \u003d this.processInput(parsedTerms);","lastModifiedDate":"2021-09-01"},{"lineNumber":265,"author":{"gitId":"juliussneezer04"},"content":"            this.dukeStorage.saveEntries(this.entries);","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":267,"author":{"gitId":"juliussneezer04"},"content":"            output \u003d this.dukeUi.getParsingError(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":268,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":269,"author":{"gitId":"juliussneezer04"},"content":"        return output;","lastModifiedDate":"2021-09-01"},{"lineNumber":270,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":271,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"juliussneezer04"},"content":"//    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":273,"author":{"gitId":"juliussneezer04"},"content":"//     * Main method that starts Duke.","lastModifiedDate":"2021-09-01"},{"lineNumber":274,"author":{"gitId":"juliussneezer04"},"content":"//     *","lastModifiedDate":"2021-09-01"},{"lineNumber":275,"author":{"gitId":"juliussneezer04"},"content":"//     * @param args Arguments passed when Duke is started.","lastModifiedDate":"2021-09-01"},{"lineNumber":276,"author":{"gitId":"juliussneezer04"},"content":"//     */","lastModifiedDate":"2021-09-01"},{"lineNumber":277,"author":{"gitId":"juliussneezer04"},"content":"//    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":278,"author":{"gitId":"juliussneezer04"},"content":"//        new Duke().run();","lastModifiedDate":"2021-09-01"},{"lineNumber":279,"author":{"gitId":"juliussneezer04"},"content":"//    }","lastModifiedDate":"2021-09-01"},{"lineNumber":280,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":281,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides the Object\u0027s toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":283,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":284,"author":{"gitId":"juliussneezer04"},"content":"     * @return String description of Duke.","lastModifiedDate":"2021-08-28"},{"lineNumber":285,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":286,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":287,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":288,"author":{"gitId":"juliussneezer04"},"content":"        return \"I\u0027m Duke, a simple chatbot to help you remember tasks!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":289,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"juliussneezer04":289,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    DukeException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"    DukeException(String argument) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"        super(argument);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Object\u0027s toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"     * @return String representing Exception.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"        return super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":28}},{"path":"src/main/java/duke/Entry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":" * Abstract class that defines entry.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"public abstract class Entry {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"    private final String ENTRY;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"    Entry() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"        this.ENTRY \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Entry with a value.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"     * @param value Entry value.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"    Entry(String value) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"        this.ENTRY \u003d value;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"     * Method to revert the isDone status of the Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"    public void revertDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        this.isDone \u003d !this.isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"     * Method to set the isDone status to true of an Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"     * @return Boolean if successful operation.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"    public boolean setDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"     * Returns true if Entry is Empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"     * @return Boolean corresponding to Entry\u0027s length.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"        return this.ENTRY.isEmpty() || this.ENTRY.isBlank();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"     * Returns the string to be saved representing the Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to represent entry in memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"        String isDoneString \u003d \"0\";","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"            isDoneString \u003d \"1\";","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"        return \",\" + isDoneString + \",\" + this.ENTRY;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"        return this.ENTRY.contains(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Object\u0027s toString method to return a description of Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to represent Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"        char isDoneDisplay \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"        return (\"[\" + isDoneDisplay + \"] \" + this.ENTRY);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":87}},{"path":"src/main/java/duke/EntryList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":" * Class that implements methods to store an Arraylist of Entries","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"public class EntryList extends ArrayList\u003cEntry\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"    private int numberOfEntries;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for an Entrylist.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"    EntryList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"        super();","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"        this.numberOfEntries \u003d super.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"     * Prints all the Entries stored currently.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"     * @param ui The UI object for the current Duke execution.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Exception if no entries are to be displayed.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    public void displayEntries(Ui ui) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"        if (numberOfEntries \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"            for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"                ui.printEntry(super.get(i), i + 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"            ui.endCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"No entries to display!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"     * Prints all the Entries stored currently.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Exception if no entries are to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"    public String getEntries() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"        StringBuilder entryList \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"        if (numberOfEntries \u003e 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"            for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"                entryList.append(super.get(i) + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"            return entryList.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"No entries to display!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"    public void findEntry(String keyword, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"        int len \u003d super.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"        ui.listMatches();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"            Entry currentEntry \u003d super.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"            if (currentEntry.contains(keyword)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"                    ui.foundMatches();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"                ui.printEntry(currentEntry, count++);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"        ui.endCommand();","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"     * Finds entries with given keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"     * @param keyword to search for.","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"     * @param ui Ui to return info string.","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"     * @return String of found entries.","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"    public String getFindEntry(String keyword, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"        int len \u003d super.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"        StringBuilder output \u003d new StringBuilder(ui.getListMatches());","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"            Entry currentEntry \u003d super.get(i);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"            if (currentEntry.contains(keyword)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"                    output.append(ui.getFoundMatches());","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"                output.append(ui.getPrintEntry(currentEntry, count++));","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"juliussneezer04"},"content":"        return output.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"juliussneezer04"},"content":"     * Marks a given entry number as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"juliussneezer04"},"content":"     * @param entryNumber The number of the entry to be marked.","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown when no entry exists for the given entryNumber.","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"juliussneezer04"},"content":"    public void markEntryAsDone(int entryNumber) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"juliussneezer04"},"content":"        if (entryNumber \u003e 0 \u0026\u0026 entryNumber \u003c\u003d numberOfEntries) {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"juliussneezer04"},"content":"            if (super.get(entryNumber - 1).setDone()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"juliussneezer04"},"content":"                System.out.println(\"Nice! I\u0027ve marked this entry as done:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"juliussneezer04"},"content":"                System.out.println(\"\\t\" + super.get(entryNumber - 1));","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"juliussneezer04"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"juliussneezer04"},"content":"                System.out.println(\"Entry is already marked as done!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"There\u0027s no Entry corresponding to that Number!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"juliussneezer04"},"content":"     * Marks a given entry number as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"juliussneezer04"},"content":"     * @param entryNumber The number of the entry to be marked.","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"juliussneezer04"},"content":"     * @return String for marked entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown when no entry exists for the given entryNumber.","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"juliussneezer04"},"content":"    public String getEntryAsDone(int entryNumber) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"juliussneezer04"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"juliussneezer04"},"content":"        if (entryNumber \u003e 0 \u0026\u0026 entryNumber \u003c\u003d numberOfEntries) {","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"juliussneezer04"},"content":"            if (super.get(entryNumber - 1).setDone()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"juliussneezer04"},"content":"                output.append(\"Nice! I\u0027ve marked this entry as done:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"juliussneezer04"},"content":"                output.append(\"\\t\" + super.get(entryNumber - 1));","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"juliussneezer04"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"juliussneezer04"},"content":"                output.append(\"Entry is already marked as done!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"juliussneezer04"},"content":"            return output.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"There\u0027s no Entry corresponding to that Number!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"juliussneezer04"},"content":"     * Adds given Entry to the List when adding from memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry Entry to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"juliussneezer04"},"content":"    public void addEntry(Entry entry) {","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"juliussneezer04"},"content":"        super.add(numberOfEntries++, entry);","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"juliussneezer04"},"content":"     * Adds given Entry to the List.","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"juliussneezer04"},"content":"     * Prints Success Message if Successful.","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry The Entry to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"juliussneezer04"},"content":"     * @param command The command corresponding to the Entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"juliussneezer04"},"content":"     * @param ui UI object to print Entry if added.","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if Entry is empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"juliussneezer04"},"content":"    public void addEntry(Entry entry, String command, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"juliussneezer04"},"content":"        if (!entry.isEmpty()){","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"juliussneezer04"},"content":"            super.add(numberOfEntries++, entry);","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"juliussneezer04"},"content":"            ui.addEntry(entry, numberOfEntries);","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"The \" + command + \" description can\u0027t be empty!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"juliussneezer04"},"content":"     * Adds given Entry to the List.","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"juliussneezer04"},"content":"     * Prints Success Message if Successful.","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry The Entry to be added.","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"juliussneezer04"},"content":"     * @param command The command corresponding to the Entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to show added Entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if Entry is empty.","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"juliussneezer04"},"content":"    public String getAddEntry(Entry entry, String command, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"juliussneezer04"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"juliussneezer04"},"content":"        if (!entry.isEmpty()){","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"juliussneezer04"},"content":"            super.add(numberOfEntries++, entry);","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"juliussneezer04"},"content":"            output.append(ui.getAddEntry(entry, numberOfEntries));","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"The \" + command + \" description can\u0027t be empty!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"juliussneezer04"},"content":"        return output.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":180,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"juliussneezer04"},"content":"     * Deletes entry by index.","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"juliussneezer04"},"content":"     * @param index Index of Entry to be deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"juliussneezer04"},"content":"     * @param ui UI Object to print deleted Entry message.","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if no Entry corresponds to the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"juliussneezer04"},"content":"    public void deleteEntry(int index, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"juliussneezer04"},"content":"        if (super.isEmpty() || index \u003c 1 || index \u003e numberOfEntries) {","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Duke can\u0027t find anything to delete!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"juliussneezer04"},"content":"            Entry deletedEntry \u003d super.remove(index - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"juliussneezer04"},"content":"            numberOfEntries--;","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"juliussneezer04"},"content":"            ui.showDeletedEntry(deletedEntry);","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"juliussneezer04"},"content":"     * Deletes entry by index.","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"juliussneezer04"},"content":"     * @param index Index of Entry to be deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":202,"author":{"gitId":"juliussneezer04"},"content":"     * @param ui UI Object to print deleted Entry message.","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to show deleted entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":204,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if no Entry corresponds to the index.","lastModifiedDate":"2021-09-01"},{"lineNumber":205,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"juliussneezer04"},"content":"    public String getDeleteEntry(int index, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"juliussneezer04"},"content":"        if (super.isEmpty() || index \u003c 1 || index \u003e numberOfEntries) {","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Duke can\u0027t find anything to delete!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"juliussneezer04"},"content":"            Entry deletedEntry \u003d super.remove(index - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"juliussneezer04"},"content":"            numberOfEntries--;","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"juliussneezer04"},"content":"            return ui.getDeletedEntry(deletedEntry);","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":215}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":" * Class that inherits from Entry to encapsulate Events.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"public class Event extends Entry{","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"    private LocalDate event;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"    Event() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"        this.event \u003d LocalDate.now();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"     * @param task Entry Task to be saved.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"     * @param event Event details.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if event format is incorrect.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    Event(String task, String event) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"            this.event \u003d LocalDate.parse(event);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"            this.event \u003d LocalDate.now();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Object\u0027s toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"     * @return String representing Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.event.format(formatter) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"     * Returns string to be saved representing the Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to be saved representing the Event.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"        return \"E\" + super.saveString() + \",\" + this.event;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"     * Returns true if Event is Empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"     * @return Boolean corresponding to Event\u0027s length.","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"    public boolean isEmpty() { return super.isEmpty() || !event.isAfter(LocalDate.now()); }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":68}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"juliussneezer04":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":" * Class that implements method to parse user inputs.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Parser Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"    Parser() {}","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"     * Returns parsed input in an Arraylist.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"     * @param input String input from user.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"     * @return ArrayList of command, entry, timing (if present).","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error is thrown if Command is invalid.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"    public ArrayList\u003cString\u003e parseInput(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"        ArrayList\u003cString\u003e terms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"        this.parseString(input, terms);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"        String command \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"        if (terms.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Duke can\u0027t find any commands :(\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"            command \u003d terms.remove(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        this.parseEntry(terms);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        String entry \u003d terms.isEmpty() ? \"\" : terms.remove(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        String timing \u003d terms.isEmpty() ? \"\" : this.parseTiming(terms);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(command, entry, timing));","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"    private void parseString(String input, ArrayList\u003cString\u003e terms) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"        // Function to store all terms in input as separate Strings (separated by space in the input)","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"        int length \u003d input.length();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"        if (length \u003e\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"            StringBuilder currentWord \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"            for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"                char currentChar \u003d input.charAt(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"                if (currentChar \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"                    terms.add(currentWord.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"                    currentWord.setLength(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"                    currentWord.append(currentChar);","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"            terms.add(currentWord.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"    private String parseTiming(ArrayList\u003cString\u003e terms) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"        if (terms.get(0).startsWith(\"/\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"            terms.remove(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"            StringBuilder timing \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"            int len \u003d terms.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"                if (i !\u003d len - 1){","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"                    timing.append(terms.get(i)).append(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"                    timing.append(terms.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"            return timing.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"            return \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"    private void parseEntry(ArrayList\u003cString\u003e terms) {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"        if (!terms.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"            StringBuilder entry \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"            // Combine All Strings Until End of List or \u0027/\u0027 character is found","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"            ArrayList\u003cString\u003e termsCopy \u003d new ArrayList\u003c\u003e(terms);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"            for (String term : termsCopy) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"                if (term.startsWith(\"/\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"                    String entryDesc \u003d entry.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"                    terms.add(0, entryDesc.substring(0, entryDesc.length()-1));","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"                    return;","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"                    entry.append(term).append(\u0027 \u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"                    terms.remove(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"juliussneezer04"},"content":"            String entryDesc \u003d entry.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"juliussneezer04"},"content":"            terms.add(0, entryDesc.substring(0, entryDesc.length()-1));","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":93}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":" * Class that implements methods to store Entries.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"    private final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"    private final Path DATA_DIRECTORY_PATH \u003d Paths.get(PROJECT_ROOT,\"data\");","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"    Storage() {}","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"     * Saves all Entries from entries into memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"     * @param entries EntryList of all entries to be saved.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Erro thrown if data file is corrupted/missing.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"    public void saveEntries(EntryList entries) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        Path dataPath \u003d DATA_DIRECTORY_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"        File dukeData \u003d new File(dataPath.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"            FileWriter fw \u003d new FileWriter(dukeData);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"            BufferedWriter dukeWriter \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"            for (Entry entry : entries){","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"                String nextEntry \u003d entry.saveString();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"                dukeWriter.write(nextEntry);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"                dukeWriter.write(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"            dukeWriter.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"            fw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"            throw new DukeException(\"Duke\u0027s data file is corrupted/missing! Can\u0027t be saved\");","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"     * Returns EntryList with data from memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"     * @return EntryList containing all data from memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"     * @throws DukeException Error thrown if file is missing/corrupted.","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"    public EntryList readData() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"        Path dataPath \u003d DATA_DIRECTORY_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"        File dukeData \u003d new File(dataPath.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"        EntryList entries \u003d new EntryList();","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"            Scanner fileScanner \u003d new Scanner(dukeData);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"            fileScanner.useDelimiter(\"[,\\n]\");","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"                String entryType \u003d fileScanner.next();","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"                boolean isDone \u003d Integer.parseInt(fileScanner.next()) \u003d\u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"                String entryData \u003d fileScanner.next();","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"                Entry nextEntry \u003d new Todo(\"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"                boolean hasNextEntry \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"                switch (entryType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"                case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"                    nextEntry \u003d new Todo(entryData);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"                case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"                    String deadlineTiming \u003d fileScanner.next();","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"                    nextEntry \u003d new Deadline(entryData, deadlineTiming);","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"                case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"                    String eventTiming \u003d fileScanner.next();","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"                    nextEntry \u003d new Event(entryData, eventTiming);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"                default:","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"                    //Corrupted Entry Case","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"                    hasNextEntry \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"                if (hasNextEntry) {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"                        nextEntry.setDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"juliussneezer04"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"juliussneezer04"},"content":"                    entries.addEntry(nextEntry);","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"juliussneezer04"},"content":"            return entries;","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"juliussneezer04"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"juliussneezer04"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"juliussneezer04"},"content":"                if (!(dukeData.createNewFile())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"juliussneezer04"},"content":"                    throw new DukeException(\"Uh-Oh! Your Data can\u0027t be stored!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"juliussneezer04"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"juliussneezer04"},"content":"                    return new EntryList();","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"juliussneezer04"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"juliussneezer04"},"content":"            } catch (IOException err) {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"juliussneezer04"},"content":"                throw new DukeException(\"Uh-Oh! Your Data can\u0027t be stored!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"juliussneezer04"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":105}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":" * Class that inherits from Entry to encapsulate Todos.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"public class Todo extends Entry {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"    Todo() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"     * @param task The String that will be stored as a Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"    Todo(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Entry\u0027s toString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"     * Returns string to be saved representing the Todo.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to be saved representing the Todo.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"        return \"T\" + super.saveString();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":44}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":" * Class that implements methods to present the Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"//    private AnchorPane container;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"//    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"//    private VBox dukeContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"//    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"//    private Label sideLabel;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"//    private Scene dukeScene;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"//    private TextField dukeInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"     * Constructor to create a UI object.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"    Ui() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"//        container \u003d new AnchorPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"//        dukeContainer \u003d new VBox();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"//        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"juliussneezer04"},"content":"//        sideLabel \u003d new Label(\"DUKE\");","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"juliussneezer04"},"content":"//        dukeScene \u003d new Scene(dukeContainer);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"juliussneezer04"},"content":"//        dukeInput \u003d new TextField();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"juliussneezer04"},"content":"    private final static String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"juliussneezer04"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"juliussneezer04"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"juliussneezer04"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"juliussneezer04"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"juliussneezer04"},"content":"    private final static String HORIZONTAL_DIVIDE \u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"juliussneezer04"},"content":"        \"___________________________________________________________________\";","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out a welcome message.","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"juliussneezer04"},"content":"    public void welcomeUser() {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"What can Duke do for you today?\");","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"juliussneezer04"},"content":"//    public void startUi(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"juliussneezer04"},"content":"//        sideLabel.setStyle(\"-fx-start-margin: 150\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"juliussneezer04"},"content":"//        sideLabel.setTextFill(Color.color(1,1,1));","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"juliussneezer04"},"content":"//        sideLabel.setFont(new Font(\"Helvetica\", 45));","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"juliussneezer04"},"content":"//        container.setPrefSize(700.0, 500.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"juliussneezer04"},"content":"//        container.setStyle(\"-fx-background-color: #13223b\");","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"juliussneezer04"},"content":"//        System.out.println(\"HERE\");","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setContent(dukeContainer);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setPrefSize(500.0, 473.3);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"juliussneezer04"},"content":"//        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"juliussneezer04"},"content":"//        HBox topRow \u003d new HBox();","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"juliussneezer04"},"content":"//        topRow.getChildren().addAll(scrollPane, sideLabel);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"juliussneezer04"},"content":"//        container.getChildren().addAll(topRow, dukeInput, sendButton);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"juliussneezer04"},"content":"//        dukeContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"juliussneezer04"},"content":"//        dukeInput.setPrefWidth(496.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"juliussneezer04"},"content":"//        sendButton.setPrefWidth(200.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"juliussneezer04"},"content":"//        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"juliussneezer04"},"content":"//        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"juliussneezer04"},"content":"//        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"juliussneezer04"},"content":"//        AnchorPane.setLeftAnchor(dukeInput , 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"juliussneezer04"},"content":"//        AnchorPane.setBottomAnchor(dukeInput, 1.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"juliussneezer04"},"content":"//","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"juliussneezer04"},"content":"//        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"juliussneezer04"},"content":"//        stage.setResizable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"juliussneezer04"},"content":"//        stage.setMinHeight(500.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"juliussneezer04"},"content":"//        stage.setMinWidth(700.0);","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"juliussneezer04"},"content":"//        stage.setScene(dukeScene);","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"juliussneezer04"},"content":"//        stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"juliussneezer04"},"content":"//    }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out the added entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry THe newly-added entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"juliussneezer04"},"content":"     * @param id The #id of the newly-added entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"juliussneezer04"},"content":"    public void addEntry(Entry entry, int id) {","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"I\u0027ve added entry to your list!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"juliussneezer04"},"content":"        this.printEntry(entry, id);","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out the added entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry THe newly-added entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"juliussneezer04"},"content":"     * @param id The #id of the newly-added entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"juliussneezer04"},"content":"    public String getAddEntry(Entry entry, int id) {","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"juliussneezer04"},"content":"        return \"I\u0027ve added entry to your list!\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"juliussneezer04"},"content":"        this.getPrintEntry(entry, id);","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out a horizontal line at the end of some operation.","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"juliussneezer04"},"content":"    public void endCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"juliussneezer04"},"content":"    public void listMatches() {","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"Looking for matching tasks in your list..\");","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"juliussneezer04"},"content":"    public String getListMatches() {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"juliussneezer04"},"content":"        return \"Looking for matching tasks in your list..\";","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"juliussneezer04"},"content":"    public void foundMatches() {","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"Here are the matching tasks in your list..\");","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"juliussneezer04"},"content":"    public String getFoundMatches() {","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"juliussneezer04"},"content":"        return \"Here are the matching tasks in your list..\";","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out given entry.","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry Entry to be printed.","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"juliussneezer04"},"content":"     * @param id ID of entry to be printed.","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"juliussneezer04"},"content":"    public void printEntry(Entry entry, int id) {","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"\\t\" + id + \".\" + entry);","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"juliussneezer04"},"content":"     * Returns given entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"juliussneezer04"},"content":"     * @param entry Entry to be printed.","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"juliussneezer04"},"content":"     * @param id ID of entry to be printed.","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"juliussneezer04"},"content":"     * @return String for given entry.","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"juliussneezer04"},"content":"    public String getPrintEntry(Entry entry, int id) {","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"juliussneezer04"},"content":"        return \"\\t\" + id + \".\" + entry;","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out farewell message.","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"juliussneezer04"},"content":"    public void printGoodByeUser() {","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out farewell message.","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":176,"author":{"gitId":"juliussneezer04"},"content":"     * @return String to say farewell to user.","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"juliussneezer04"},"content":"    public String getGoodByeUser() {","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"juliussneezer04"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":180,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out the Error Message received when Parsing.","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"juliussneezer04"},"content":"     * @param parsingError Error encountered while parsing input.","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"juliussneezer04"},"content":"    public void handleParsingError(DukeException parsingError) {","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(parsingError.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out the Error Message received when Parsing.","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"juliussneezer04"},"content":"     * @param parsingError Error encountered while parsing input.","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"juliussneezer04"},"content":"    public String getParsingError(DukeException parsingError) {","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"juliussneezer04"},"content":"        return parsingError.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out the Error Message received when loading data from memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"juliussneezer04"},"content":"     * @param loadingError Error encountered while loading data from memory.","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"juliussneezer04"},"content":"    public void handleLoadingError(DukeException loadingError) {","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(loadingError.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":211,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out entry just after deletion.","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"juliussneezer04"},"content":"     * @param deletedEntry Entry that has just been deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"juliussneezer04"},"content":"    public void showDeletedEntry(Entry deletedEntry) {","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(\"Removed entry\\n\" + deletedEntry);","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"juliussneezer04"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":221,"author":{"gitId":"juliussneezer04"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"juliussneezer04"},"content":"     * Prints out entry just after deletion.","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"juliussneezer04"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":224,"author":{"gitId":"juliussneezer04"},"content":"     * @param deletedEntry Entry that has just been deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":225,"author":{"gitId":"juliussneezer04"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":226,"author":{"gitId":"juliussneezer04"},"content":"    public String getDeletedEntry(Entry deletedEntry) {","lastModifiedDate":"2021-09-01"},{"lineNumber":227,"author":{"gitId":"juliussneezer04"},"content":"        return \"Removed entry\\n\" + deletedEntry;","lastModifiedDate":"2021-09-01"},{"lineNumber":228,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":229,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":229}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"            Deadline deadline \u003d new Deadline(\"testing-deadline\", \"2021-08-20\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(\"[D][ ] testing-deadline(by: Aug 20 2021)\", deadline.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"    public void deadlineSaveStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"            Deadline deadline \u003d new Deadline(\"testing-deadline\", \"2021-08-20\");","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(\"D,0,testing-deadline,2021-08-20\", deadline.saveString());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    public void invalidDateTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"            Deadline deadline \u003d new Deadline(\"testing-deadline\", \"20th Aug\");","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":36}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"    public void dukeTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"        assertEquals(\"I\u0027m a Duke, a simple chatbot to help you remember tasks!\", duke.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"juliussneezer04"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"juliussneezer04"},"content":"            Event event \u003d new Event(\"testing-event\", \"2021-08-20\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(\"[E][ ] testing-event(at: Aug 20 2021)\", event.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"juliussneezer04"},"content":"    public void eventSaveStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"juliussneezer04"},"content":"            Event event \u003d new Event(\"testing-event\", \"2021-08-20\");","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(\"E,0,testing-event,2021-08-20\", event.saveString());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"juliussneezer04"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"juliussneezer04"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"juliussneezer04"},"content":"    public void invalidDateTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"juliussneezer04"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"juliussneezer04"},"content":"            Event event \u003d new Event(\"testing-event\", \"20 Aug\");","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"juliussneezer04"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"juliussneezer04"},"content":"            assertEquals(new DukeException(\"Invalid timing format! Enter dates in yyyy-mm-dd format\").getMessage(), e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"juliussneezer04"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"juliussneezer04"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"juliussneezer04"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"juliussneezer04":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"juliussneezer04"},"content":"hello","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"juliussneezer04"},"content":"todo hello","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"juliussneezer04"},"content":"deadline study /by sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"juliussneezer04"},"content":"event exam /at end of sem","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"juliussneezer04"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"juliussneezer04"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"juliussneezer04"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"juliussneezer04":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"juliussneezer04"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"juliussneezer04":1,"-":20}}]
