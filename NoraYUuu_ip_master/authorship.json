[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NoraYUuu":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"javafx {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"NoraYUuu":22,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"T | 0 | 666","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":1}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"     * Outputs a user dialog.","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"     * @param text text to display in the dialog","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"     * @param img image beside the dialog","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"     * @return a Dialog to be displayed","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"     * Outputs a duke dialog.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"     * @param text text to display in the dialog","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"     * @param img image beside the dialog","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"     * @return a Dialog to be displayed","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.GetDayCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.SearchCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":" * This class is the Duke class to start the whole program","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    private final TaskList myTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a new duke.Duke instance","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"        myTasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"        run();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"    private void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"        storage.loadFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     * Decides which instruction is given from user.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    public void processInput(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"        Parser.KeyWord result \u003d parser.parse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"        Command executeNext;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"        switch (result) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        case END:","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"            ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"            exitCommand.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"        case LIST:","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new ListCommand(myTasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"        case DONE:","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new DoneCommand(myTasks, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"        case DELETE:","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new DeleteCommand(myTasks, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"        case GET:","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new GetDayCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"        case SEARCH:","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new SearchCommand(myTasks, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"        case ADD:","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"            executeNext \u003d new AddCommand(myTasks, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"            executeNext.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"     * Saves file","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"    public static void saveFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"        Storage.saveFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"NoraYUuu"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"NoraYUuu"},"content":"        ui.setMainWindow(mainWindow);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"NoraYUuu":88,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":" * This class is a subclass of exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    private static final String IND \u003d \"    \";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    //for sentences","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    private static final String IND_2 \u003d \"     \";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    private static final String DIV \u003d IND + \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    private final String message;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * The construction method of an exception","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     * @param m message of the exception","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    DukeException(String m) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        this.message \u003d m;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     * Prints the exception","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"     * @return string form of the exception","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"        return DIV + \"\\n\" + IND_2 + message + \"\\n\" + DIV;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"NoraYUuu":34}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    private Duke dukeApplication \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMain(this, dukeApplication);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"    public void getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        dukeApplication.processInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    private Main main;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    public void setMain(Main d, Duke duke) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        main \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        this.duke.setMainWindow(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        main.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"     * Gives response to user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"     * @param s input from the user","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"    public void sendDukeResponse(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"        if (!s.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"                    DialogBox.getDukeDialog(s, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with user\u0027s input by parsing them and convert each instruction","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":" * into different commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"     * Enum class for keyword in user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    public enum KeyWord {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"        END(\"bye\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"        GET(\"get\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"        SEARCH(\"find\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"        ADD(\"add\");","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"        private final String inputKeyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        KeyWord(String k) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"            this.inputKeyword \u003d k;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        public String getInputKeyword() {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"            return inputKeyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"     * Assesses the input from the user line by line.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     * @param next next line to be assessed.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"     * @return an int indicating next step to be taken.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"    public KeyWord parse(String next) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"        if (next.equals(KeyWord.END.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.END;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"        } else if (next.equals(KeyWord.LIST.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.LIST;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"        } else if (next.length() \u003e 3 \u0026\u0026 next.substring(0, 4).equals(KeyWord.DONE.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.DONE;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"        } else if (next.length() \u003e 5 \u0026\u0026 next.substring(0, 6).equals(KeyWord.DELETE.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.DELETE;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        } else if (next.length() \u003e 2 \u0026\u0026 next.substring(0, 3).equals(KeyWord.GET.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.GET;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"        } else if (next.length() \u003e 3 \u0026\u0026 next.substring(0, 4).equals(KeyWord.SEARCH.getInputKeyword())) {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.SEARCH;","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"            return KeyWord.ADD;","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":54}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":" * The class for accessing and writing to local file which stores task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    private static final String FILE_PATH \u003d new File(\"\").getAbsolutePath().concat(\"/data/duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    private static File storedList;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     * Loads file from local disc to store list of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    public void loadFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"        storedList \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"            if (!storedList.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"                if (!storedList.getParentFile().exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"                    storedList.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"                storedList.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"                System.out.println(\"Local file created.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"            TaskList.loadList(storedList);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(\"error when loading file: \" + e);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"     * Writes to the file by appending","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"     * @param s takes in input string","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    public static void writeToList(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH, true);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"            fw.write(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(\":( Error when writing to file\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"     * Saves the file to hard disk","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"    public static void saveFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(\":( Error when re-writing file\");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"        ArrayList\u003cTask\u003e arr \u003d TaskList.getTaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"        for (Task t : arr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"            int c \u003d t.getStatusIcon().equals(\"X\") ? 1 : 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"            String now \u003d t.getType() + \" | \" + c + \" | \" + t.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"            if (!t.getType().equals(\"T\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"                now +\u003d \" | \" + t.getTime();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"            if (!arr.get(arr.size() - 1).equals(t)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"                now +\u003d \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"            writeToList(now);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":" * This class stores all duke.TaskList of the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    //for division","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    private static String ind \u003d \"    \";","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"    //for sentences","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    private static String ind2 \u003d \"     \";","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    private static String div \u003d ind + \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     * Adds a new task according to instruction","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"     * @param t input from the user","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"     * @throws DukeException if the input is invalid","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"    public void addTask(String t) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"        String[] ss \u003d t.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"        processAddingTask(ss);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"    private void processAddingTask(String ... s) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"        String[] ss \u003d s;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        switch (ss[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"            String i \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"            for (int q \u003d 1; q \u003c ss.length; q++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"                i +\u003d ss[q];","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"                if (q !\u003d ss.length - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"                    i +\u003d \" \";","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"            if (i !\u003d \"\") {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"                Todo todo \u003d new Todo(i);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"                this.taskList.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"                noteAdded(todo);","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"            int j \u003d findTime(\"/by\", ss);","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"            String[] info \u003d getInfo(j, ss);","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"            if (!(info[0] !\u003d \"\" \u0026\u0026 info[1] !\u003d \"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description and time of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"            Deadline ddl;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"            if (info[1].length() \u003d\u003d 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"                LocalDate date \u003d getDate(info[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"                ddl \u003d new Deadline(info[0], date);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"            } else if (info[1].length() \u003d\u003d 16) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"                LocalDateTime time \u003d getTime(info[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"                ddl \u003d new Deadline(info[0], time);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"                throw new DukeException(\"Please enter time in the form of dd/MM/yyyy HH:mm or dd/MM/yyyy.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"            this.taskList.add(ddl);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"            noteAdded(ddl);","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"        case (\"event\"):","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"            int k \u003d findTime(\"/at\", ss);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"            String[] info2 \u003d getInfo(k, ss);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"            if (!(info2[0] !\u003d \"\" \u0026\u0026 info2[1] !\u003d \"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"                throw new DukeException(\"☹ OOPS!!! The description and time of an event cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"NoraYUuu"},"content":"            Event e;","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"NoraYUuu"},"content":"            if (info2[1].length() \u003c 10) {","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"NoraYUuu"},"content":"                throw new DukeException(\"Please enter time in the form of dd/MM/yyyy time.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"NoraYUuu"},"content":"            LocalDate date \u003d getDate(info2[1].substring(0, 10));","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"NoraYUuu"},"content":"            String time \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"NoraYUuu"},"content":"            if (info2[1].length() \u003e\u003d 11) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"NoraYUuu"},"content":"                time \u003d info2[1].substring(11);","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"NoraYUuu"},"content":"            e \u003d new Event(info2[0], date, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"NoraYUuu"},"content":"            this.taskList.add(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"NoraYUuu"},"content":"            noteAdded(e);","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"NoraYUuu"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"NoraYUuu"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"NoraYUuu"},"content":"    private void noteAdded(Task t) {","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"NoraYUuu"},"content":"        int total \u003d taskList.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"NoraYUuu"},"content":"        String sOrNot \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"NoraYUuu"},"content":"        assert total \u003e\u003d 0 : \"Should not have negative number of tasks in the taskList\";","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"NoraYUuu"},"content":"        if (total \u003c\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"NoraYUuu"},"content":"            sOrNot \u003d \"task\";","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"NoraYUuu"},"content":"            sOrNot \u003d \"tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"NoraYUuu"},"content":"        Duke.saveFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"NoraYUuu"},"content":"        Ui.sayAdd(t, total, sOrNot);","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"NoraYUuu"},"content":"     * Stringifies and prints all tasks in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"NoraYUuu"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(div);","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(ind2 + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"NoraYUuu"},"content":"        Ui.printTasks(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(div);","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"NoraYUuu"},"content":"     * Completes a task","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"NoraYUuu"},"content":"     * @param pos position of the task to be completed","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"NoraYUuu"},"content":"     * @throws DukeException if the position is invalid throws exceptions","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"NoraYUuu"},"content":"    public void complete(int pos) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"NoraYUuu"},"content":"        if (!(this.taskList.size() \u003e pos - 1 \u0026\u0026 pos \u003e 0)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"☹ OOPS!!! There isn\u0027t a task with index \" + pos + \" in your list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"NoraYUuu"},"content":"        String p \u003d this.taskList.get(pos - 1).finished();","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"NoraYUuu"},"content":"        Duke.saveFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"NoraYUuu"},"content":"        Ui.sayDone(p);","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"NoraYUuu"},"content":"     * Deletes a task","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"NoraYUuu"},"content":"     * @param pos position of the task to be deleted","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"NoraYUuu"},"content":"     * @throws DukeException if the position is invalid throws exceptions","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"NoraYUuu"},"content":"    public void delete(int pos) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"NoraYUuu"},"content":"        if (!(this.taskList.size() \u003e pos - 1 \u0026\u0026 pos \u003e 0)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"☹ OOPS!!! There isn\u0027t a task with index \" + pos + \" in your list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"NoraYUuu"},"content":"        Task deleted \u003d this.taskList.get(pos - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"NoraYUuu"},"content":"        this.taskList.remove(deleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"NoraYUuu"},"content":"        int total \u003d taskList.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"NoraYUuu"},"content":"        String sOrNot \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"NoraYUuu"},"content":"        if (total \u003c\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"NoraYUuu"},"content":"            sOrNot \u003d \"task\";","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"NoraYUuu"},"content":"            sOrNot \u003d \"tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"NoraYUuu"},"content":"        Duke.saveFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"NoraYUuu"},"content":"        Ui.sayDelete(deleted, total, sOrNot);","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"NoraYUuu"},"content":"    private static int findTime(String s, String[] arr) {","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"NoraYUuu"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"NoraYUuu"},"content":"            if (arr[i].equals(s)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"NoraYUuu"},"content":"                return i;","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"NoraYUuu"},"content":"        return 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"NoraYUuu"},"content":"    private static String[] getInfo(int j, String[] ss) {","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"NoraYUuu"},"content":"        String[] result \u003d new String[2];","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"NoraYUuu"},"content":"        String name \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"NoraYUuu"},"content":"        String time \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"NoraYUuu"},"content":"        if (j !\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"NoraYUuu"},"content":"            int counter \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"NoraYUuu"},"content":"            while (counter \u003c j) {","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"NoraYUuu"},"content":"                name +\u003d ss[counter];","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"NoraYUuu"},"content":"                if (counter !\u003d j - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"NoraYUuu"},"content":"                    name +\u003d \" \";","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"NoraYUuu"},"content":"                counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"NoraYUuu"},"content":"            counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"NoraYUuu"},"content":"            while (counter \u003c ss.length) {","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"NoraYUuu"},"content":"                time +\u003d ss[counter];","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"NoraYUuu"},"content":"                if (counter !\u003d ss.length - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"NoraYUuu"},"content":"                    time +\u003d \" \";","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"NoraYUuu"},"content":"                counter++;","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"NoraYUuu"},"content":"        result[0] \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"NoraYUuu"},"content":"        result[1] \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"NoraYUuu"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"NoraYUuu"},"content":"     * Loads tasks previously stored in local hard disk into the arraylist.","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"NoraYUuu"},"content":"     * @param f the file read from disk","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"NoraYUuu"},"content":"    public static void loadList(File f) throws FileNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"NoraYUuu"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-21"},{"lineNumber":211,"author":{"gitId":"NoraYUuu"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":212,"author":{"gitId":"NoraYUuu"},"content":"            String next \u003d s.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":213,"author":{"gitId":"NoraYUuu"},"content":"            String[] n \u003d next.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":214,"author":{"gitId":"NoraYUuu"},"content":"            switch (n[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":215,"author":{"gitId":"NoraYUuu"},"content":"            case (\"T\"):","lastModifiedDate":"2021-08-21"},{"lineNumber":216,"author":{"gitId":"NoraYUuu"},"content":"                Todo t \u003d new Todo(n[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"NoraYUuu"},"content":"                int completed \u003d Integer.parseInt(n[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":218,"author":{"gitId":"NoraYUuu"},"content":"                if (completed \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":219,"author":{"gitId":"NoraYUuu"},"content":"                    t.setFinish();","lastModifiedDate":"2021-08-21"},{"lineNumber":220,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":221,"author":{"gitId":"NoraYUuu"},"content":"                taskList.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"NoraYUuu"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":223,"author":{"gitId":"NoraYUuu"},"content":"            case (\"E\"):","lastModifiedDate":"2021-08-21"},{"lineNumber":224,"author":{"gitId":"NoraYUuu"},"content":"                DateTimeFormatter ff \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"NoraYUuu"},"content":"                String time \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"NoraYUuu"},"content":"                if (n.length \u003e 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"NoraYUuu"},"content":"                    time \u003d n[4];","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"NoraYUuu"},"content":"                Event e \u003d new Event(n[2], LocalDate.parse(n[3], ff), time);","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"NoraYUuu"},"content":"                int c \u003d Integer.parseInt(n[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"NoraYUuu"},"content":"                if (c \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"NoraYUuu"},"content":"                    e.setFinish();","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"NoraYUuu"},"content":"                taskList.add(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"NoraYUuu"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":236,"author":{"gitId":"NoraYUuu"},"content":"            case (\"D\"):","lastModifiedDate":"2021-08-21"},{"lineNumber":237,"author":{"gitId":"NoraYUuu"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"NoraYUuu"},"content":"                DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"NoraYUuu"},"content":"                Deadline d;","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"NoraYUuu"},"content":"                if (n[3].length() \u003d\u003d 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"NoraYUuu"},"content":"                    d \u003d new Deadline(n[2], LocalDate.parse(n[3], formatter2));","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"NoraYUuu"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"NoraYUuu"},"content":"                    d \u003d new Deadline(n[2], LocalDateTime.parse(n[3], formatter));","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"NoraYUuu"},"content":"                int cd \u003d Integer.parseInt(n[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":246,"author":{"gitId":"NoraYUuu"},"content":"                if (cd \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":247,"author":{"gitId":"NoraYUuu"},"content":"                    d.setFinish();","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":249,"author":{"gitId":"NoraYUuu"},"content":"                taskList.add(d);","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"NoraYUuu"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":251,"author":{"gitId":"NoraYUuu"},"content":"            default:","lastModifiedDate":"2021-08-21"},{"lineNumber":252,"author":{"gitId":"NoraYUuu"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":254,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":255,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":256,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":257,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":258,"author":{"gitId":"NoraYUuu"},"content":"     * Gets all the duke.TaskList listed.","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":260,"author":{"gitId":"NoraYUuu"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"NoraYUuu"},"content":"        return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":263,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"NoraYUuu"},"content":"    private LocalDateTime getTime(String t) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"NoraYUuu"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"NoraYUuu"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"NoraYUuu"},"content":"            dateTime \u003d LocalDateTime.parse(t, formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"Please enter time in the form of dd/MM/yyyy HH:mm.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":273,"author":{"gitId":"NoraYUuu"},"content":"        return dateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":274,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"NoraYUuu"},"content":"    private LocalDate getDate(String t) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":277,"author":{"gitId":"NoraYUuu"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":278,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"NoraYUuu"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"NoraYUuu"},"content":"            date \u003d LocalDate.parse(t, formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"Please enter time in the form of dd/MM/yyyy.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"NoraYUuu"},"content":"        return date;","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"NoraYUuu"},"content":"     * Returns all duke.TaskList on a single day","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"NoraYUuu"},"content":"     * @param s string indicating the date","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"NoraYUuu"},"content":"     * @return an arraylist of all relevant duke.TaskList","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"NoraYUuu"},"content":"     * @throws DukeException if the date format is incorrect","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"NoraYUuu"},"content":"    public static ArrayList\u003cTask\u003e getOnADay(String s) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"NoraYUuu"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"NoraYUuu"},"content":"        LocalDate target;","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"NoraYUuu"},"content":"            if (s.equals(\"today\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":299,"author":{"gitId":"NoraYUuu"},"content":"                target \u003d LocalDate.now();","lastModifiedDate":"2021-09-07"},{"lineNumber":300,"author":{"gitId":"NoraYUuu"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":301,"author":{"gitId":"NoraYUuu"},"content":"                target \u003d LocalDate.parse(s, formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":303,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2021-08-22"},{"lineNumber":304,"author":{"gitId":"NoraYUuu"},"content":"            throw new DukeException(\"Please enter date in the form of dd/MM/yyyy.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":305,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":306,"author":{"gitId":"NoraYUuu"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":307,"author":{"gitId":"NoraYUuu"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":308,"author":{"gitId":"NoraYUuu"},"content":"            if (target.equals(t.getDate())) {","lastModifiedDate":"2021-08-22"},{"lineNumber":309,"author":{"gitId":"NoraYUuu"},"content":"                result.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":311,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":312,"author":{"gitId":"NoraYUuu"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":313,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":314,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":315,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":316,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":317,"author":{"gitId":"NoraYUuu"},"content":"     * Checks validity of the task position to be finished","lastModifiedDate":"2021-08-22"},{"lineNumber":318,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":319,"author":{"gitId":"NoraYUuu"},"content":"     * @param next input from user","lastModifiedDate":"2021-08-22"},{"lineNumber":320,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":321,"author":{"gitId":"NoraYUuu"},"content":"    public void getDone(String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":322,"author":{"gitId":"NoraYUuu"},"content":"        String emp \u003d next.substring(4, 5);","lastModifiedDate":"2021-08-22"},{"lineNumber":323,"author":{"gitId":"NoraYUuu"},"content":"        if (!emp.equals(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":324,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as done 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":325,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":326,"author":{"gitId":"NoraYUuu"},"content":"        String index \u003d next.substring(5);","lastModifiedDate":"2021-08-22"},{"lineNumber":327,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":328,"author":{"gitId":"NoraYUuu"},"content":"            int position \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":329,"author":{"gitId":"NoraYUuu"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":330,"author":{"gitId":"NoraYUuu"},"content":"                this.complete(position);","lastModifiedDate":"2021-08-22"},{"lineNumber":331,"author":{"gitId":"NoraYUuu"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-22"},{"lineNumber":332,"author":{"gitId":"NoraYUuu"},"content":"                Ui.showError(dukeException);","lastModifiedDate":"2021-08-22"},{"lineNumber":333,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":334,"author":{"gitId":"NoraYUuu"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-08-22"},{"lineNumber":335,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as done 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":336,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":337,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":338,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":339,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":340,"author":{"gitId":"NoraYUuu"},"content":"     * Checks validity of the task position to be deleted","lastModifiedDate":"2021-08-22"},{"lineNumber":341,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":342,"author":{"gitId":"NoraYUuu"},"content":"     * @param next input from user","lastModifiedDate":"2021-08-22"},{"lineNumber":343,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":344,"author":{"gitId":"NoraYUuu"},"content":"    public void getDelete(String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":345,"author":{"gitId":"NoraYUuu"},"content":"        String emp \u003d next.substring(6, 7);","lastModifiedDate":"2021-08-22"},{"lineNumber":346,"author":{"gitId":"NoraYUuu"},"content":"        if (!emp.equals(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":347,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as delete 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":348,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":349,"author":{"gitId":"NoraYUuu"},"content":"        String index \u003d next.substring(7);","lastModifiedDate":"2021-08-22"},{"lineNumber":350,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":351,"author":{"gitId":"NoraYUuu"},"content":"            int position \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":352,"author":{"gitId":"NoraYUuu"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":353,"author":{"gitId":"NoraYUuu"},"content":"                this.delete(position);","lastModifiedDate":"2021-08-22"},{"lineNumber":354,"author":{"gitId":"NoraYUuu"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-22"},{"lineNumber":355,"author":{"gitId":"NoraYUuu"},"content":"                Ui.showError(dukeException);","lastModifiedDate":"2021-08-22"},{"lineNumber":356,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":357,"author":{"gitId":"NoraYUuu"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-08-22"},{"lineNumber":358,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as delete 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":359,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":360,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":361,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":362,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":363,"author":{"gitId":"NoraYUuu"},"content":"     * Returns last Task in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":364,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":365,"author":{"gitId":"NoraYUuu"},"content":"     * @return an instance of Task","lastModifiedDate":"2021-08-22"},{"lineNumber":366,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":367,"author":{"gitId":"NoraYUuu"},"content":"    public Task getLast() {","lastModifiedDate":"2021-08-22"},{"lineNumber":368,"author":{"gitId":"NoraYUuu"},"content":"        return taskList.get(taskList.size() - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":369,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":370,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":371,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":372,"author":{"gitId":"NoraYUuu"},"content":"     * Returns a Task in the list in a certain position","lastModifiedDate":"2021-08-22"},{"lineNumber":373,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":374,"author":{"gitId":"NoraYUuu"},"content":"     * @return an instance of Task","lastModifiedDate":"2021-08-22"},{"lineNumber":375,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":376,"author":{"gitId":"NoraYUuu"},"content":"    public Task getTask(int pos) {","lastModifiedDate":"2021-08-22"},{"lineNumber":377,"author":{"gitId":"NoraYUuu"},"content":"        return taskList.get(pos);","lastModifiedDate":"2021-08-22"},{"lineNumber":378,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":379,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":380,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":381,"author":{"gitId":"NoraYUuu"},"content":"     * Searches for tasks containing a keyword in its description.","lastModifiedDate":"2021-08-22"},{"lineNumber":382,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":383,"author":{"gitId":"NoraYUuu"},"content":"     * @param n the search string","lastModifiedDate":"2021-08-22"},{"lineNumber":384,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":385,"author":{"gitId":"NoraYUuu"},"content":"    public static void search(String n) {","lastModifiedDate":"2021-08-22"},{"lineNumber":386,"author":{"gitId":"NoraYUuu"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":387,"author":{"gitId":"NoraYUuu"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":388,"author":{"gitId":"NoraYUuu"},"content":"            if (!n.isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":389,"author":{"gitId":"NoraYUuu"},"content":"                if (t.getDescription().toLowerCase().contains(n.toLowerCase())) {","lastModifiedDate":"2021-08-22"},{"lineNumber":390,"author":{"gitId":"NoraYUuu"},"content":"                    result.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":391,"author":{"gitId":"NoraYUuu"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":392,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":393,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":394,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(div);","lastModifiedDate":"2021-08-22"},{"lineNumber":395,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(ind2 + \"Here are the tasks including \" + n + \": \");","lastModifiedDate":"2021-08-22"},{"lineNumber":396,"author":{"gitId":"NoraYUuu"},"content":"        Ui.printTasks(result);","lastModifiedDate":"2021-08-22"},{"lineNumber":397,"author":{"gitId":"NoraYUuu"},"content":"        System.out.println(div);","lastModifiedDate":"2021-08-22"},{"lineNumber":398,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":399,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NoraYUuu":399}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.util.List;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":" * Ui class to print lines and intake inputs from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    //for division","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    private static final String IND \u003d \"    \";","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    //for sentences","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    private static final String IND_2 \u003d \"     \";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    private static final String DIV \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    private static MainWindow mainWindow \u003d null;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"     * Checks whether sc still has next line of input","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     * @return boolean","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    public boolean hasNext() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        return sc.hasNext();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"     * Returns next line in input","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"     * @return next line as String","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"    public String getNext() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"     * Prints a sentence in desirable format","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"     * @param s takes in the content","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"    public static void printDuke(String s) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(DIV + \"\\n\" + IND_2 + s + \"\\n\" + DIV + \"\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"     * Prints an error message","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"     * @param e takes in the exception","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"    public static void showError(DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(e.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"     * Prints a list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"     * @param taskList takes in a list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"        Stream\u003cString\u003e taskString \u003d taskList.stream().map(task -\u003e {","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"            int position \u003d taskList.indexOf(task) + 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"            return IND_2 + position + \". \" + task + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"        });","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"        List\u003cString\u003e stringList \u003d taskString.collect(Collectors.toList());","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"        for (String s: stringList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"            tasks +\u003d s;","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"     * Prints message after deleting a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"     * @param deleted task deleted","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"NoraYUuu"},"content":"     * @param total   total number of tasks in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"NoraYUuu"},"content":"     * @param sOrNot  check use \"task\" or \"tasks\" in the sentence.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"NoraYUuu"},"content":"    public static void sayDelete(Task deleted, int total, String sOrNot) {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"NoraYUuu"},"content":"        String s \u003d DIV + \"\\n\" + IND_2 + \"Noted. I\u0027ve removed this task: \" + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"NoraYUuu"},"content":"                + IND_2 + \" \" + deleted + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"NoraYUuu"},"content":"                + IND_2 + \"Now you have \" + total + \" \" + sOrNot + \" in the list.\" + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"NoraYUuu"},"content":"                + DIV + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"NoraYUuu"},"content":"     * Prints message after adding a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"NoraYUuu"},"content":"     * @param t      task added","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"NoraYUuu"},"content":"     * @param total  total number of tasks in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"NoraYUuu"},"content":"     * @param sOrNot check use \"task\" or \"tasks\" in the sentence.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"NoraYUuu"},"content":"    public static void sayAdd(Task t, int total, String sOrNot) {","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"NoraYUuu"},"content":"        String s \u003d DIV + \"\\n\" + IND_2 + \"Got it. I\u0027ve added this task: \" + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"NoraYUuu"},"content":"                + IND_2 + \" \" + t + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"NoraYUuu"},"content":"                + IND_2 + \"Now you have \" + total + \" \" + sOrNot + \" in the list.\" + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"NoraYUuu"},"content":"                + DIV + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"NoraYUuu"},"content":"     * Prints message after finishing a task","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"NoraYUuu"},"content":"     * @param p takes in the String of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"NoraYUuu"},"content":"    public static void sayDone(String p) {","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"NoraYUuu"},"content":"        String s \u003d DIV + \"\\n\" + IND_2 + \"Nice! I\u0027ve marked this task as done: \" + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"NoraYUuu"},"content":"                + IND_2 + IND_2 + p + \"\\n\" + DIV + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"NoraYUuu"},"content":"            mainWindow.sendDukeResponse(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"NoraYUuu"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"NoraYUuu"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"NoraYUuu"},"content":"        greeting();","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"NoraYUuu"},"content":"    private static void greeting() {","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"NoraYUuu"},"content":"        String g \u003d \"Hello! I\u0027m Duke\";","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"NoraYUuu"},"content":"        String g2 \u003d \"Here are the tasks to be finished today: \";","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"NoraYUuu"},"content":"        if (mainWindow \u003d\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(g + \"\\n\" + IND_2 + g2);","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"NoraYUuu"},"content":"            return;","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"NoraYUuu"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskList.getOnADay(\"today\");","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"NoraYUuu"},"content":"            String taskString \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"NoraYUuu"},"content":"            for (Task t: tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"NoraYUuu"},"content":"                taskString +\u003d t + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(g + \"\\n\" + IND_2 + g2 + \"\\n\" + taskString);","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"NoraYUuu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"NoraYUuu"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"NoraYUuu"},"content":"    public static void sayBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"NoraYUuu"},"content":"        Ui.printDuke(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"NoraYUuu"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":163}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the add task command.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    private String next;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a new AddCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * @param myTasks all tasks now","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     * @param next instruction","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    public AddCommand(TaskList myTasks, String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"        this.myTasks \u003d myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        this.next \u003d next;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is adding a task)","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(next);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"            Ui.showError(dukeException);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":" * Abstract class that all other Command classes inherit from.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"     * Executes codes according to different command.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":11}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the deleting task command.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    private String next;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a new DeleteCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"     * @param myTasks all tasks now","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * @param next instruction","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    public DeleteCommand(TaskList myTasks, String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"        this.myTasks \u003d myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"        this.next \u003d next;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is deleting a task)","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        if (next.length() \u003e 7) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.getDelete(next);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as delete 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":35}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the finish task command.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    private String next;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a new DoneCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"     * @param myTasks all tasks now","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * @param next instruction","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    public DoneCommand(TaskList myTasks, String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"        this.myTasks \u003d myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"        this.next \u003d next;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is finishing a task)","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        if (next.length() \u003e 5) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.getDone(next);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid number, such as done 3\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":35}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is exiting the program)","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"        Ui.sayBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":17}},{"path":"src/main/java/duke/command/GetDayCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the show task on a specific day command.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"public class GetDayCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    private String next;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a new GetDayCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"     * @param next instruction provided, specifically include the date user wants.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    public GetDayCommand(String next) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"        this.next \u003d next;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is getting all relevant tasks)","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        //14 for general date, 9 for \"get today\"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"        boolean checkLength \u003d next.length() \u003d\u003d 14 || next.length() \u003d\u003d 9;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        if (!checkLength) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid date, such as get dd/MM/yyyy or \u0027get today\u0027\");","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"            ArrayList\u003cTask\u003e tasks \u003d TaskList.getOnADay(next.substring(4));","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printTasks(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"            Ui.showError(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":43}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * This class deals with the show all tasks command.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"     * Lists all tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"     * @param myTasks all tasks currently available","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    public ListCommand(TaskList myTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"        super();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"        this.myTasks \u003d myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"     * Executes instructions according to the Command type (here is getting all tasks)","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        myTasks.printTaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":28}},{"path":"src/main/java/duke/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * Command class to hand search instruction from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    private String searchString;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"     * Creates a new SearchCommand","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"     * @param taskList takes in a list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * @param s instruction for searching","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"    public SearchCommand(TaskList taskList, String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"        this.searchString \u003d s;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"     * Starts searching in all tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"        if (searchString.length() \u003e 5 \u0026\u0026 searchString.split(\" \").length \u003e\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"            TaskList.search(searchString.substring(5));","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"            Ui.printDuke(\"☹ OOPS!!! Please enter a valid keyword, such as find book\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * This class is a subclass of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    protected LocalDateTime ddl;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    private int whichOne;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"     * @param description detail of a deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"     * @param ddl time of a deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    public Deadline(String description, LocalDateTime ddl) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        this.ddl \u003d ddl;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"        this.whichOne \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"     * @param description detail of a deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     * @param date time of a deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"        this.whichOne \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"     * Returns date of a deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"     * @return LocalDate of the deadline task","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"        LocalDate result;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"        if (whichOne \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"            result \u003d ddl.toLocalDate();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"            result \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"     * Outputs after stringifying a deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"     * @return return the string form of the deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"        String time \u003d this.whichOne \u003d\u003d 0 ? Task.toTimeFormat(ddl) : Task.toDateFormat(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"                + time + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"     * Gets type of the deadline event","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"        return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"     * Gets time of the deadline event","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"        String time \u003d this.whichOne \u003d\u003d 0 ? ddl.toLocalDate() + \" \" + ddl.toLocalTime() : date.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"        return time;","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NoraYUuu":86}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * This class is a subclass of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    private String time;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"     * The construction method for an event.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     * @param description detail of an event","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     * @param date time of a deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    public Event(String description, LocalDate date, String time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"     * Returns date","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"     * @return date in the form of LocalDate","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"        return date;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"     * Outputs after transforming to String an event.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"     * @return return the string form of the event","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + Task.toDateFormat(date) + \" \" + time + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"     * Gets type of the event","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"     * @return String of the type","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"        return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"     * Gets time of the event","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"     * @return time of the event","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"        return date.toString() + \" | \" + time;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NoraYUuu":65}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * This class is to create a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"     * Creates a task","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     * @param description detail of the task to be created","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"     * Returns task status","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"     * @return string form of the status icon","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"     * Prints a task","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"     * @return string form of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"        String s \u003d \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"        return s;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"     * Finishes a task","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"     * @return string form of the task after complete it","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"    public String finished() {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"        return this.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"     * Finishes the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"    public void setFinish() {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"     * Gets type of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"     * Gets description of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"     * Gets time of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"     * Returns deadline/time of a task","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"NoraYUuu"},"content":"     * @return LocalDate of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"NoraYUuu"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"NoraYUuu"},"content":"        return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"NoraYUuu"},"content":"     * Converts a LocalDate instance to String format.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"NoraYUuu"},"content":"     * @param date intaks a LocalDate","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"NoraYUuu"},"content":"     * @return string of the input","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"NoraYUuu"},"content":"    protected static String toDateFormat(LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"NoraYUuu"},"content":"        return date.getMonth() + \" \" + date.getDayOfMonth() + \" \" + date.getYear();","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"NoraYUuu"},"content":"     * Converts a LocalDateTime instance to String format.","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"NoraYUuu"},"content":"     * @param time intaks a LocalDateTime","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"NoraYUuu"},"content":"     * @return string of the input","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"NoraYUuu"},"content":"    protected static String toTimeFormat(LocalDateTime time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"NoraYUuu"},"content":"        return time.getMonth() + \" \" + time.getDayOfMonth() + \" \" + time.getYear() + \" \" + time.toLocalTime();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"NoraYUuu"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"NoraYUuu"},"content":"        return isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NoraYUuu":116}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package duke.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":" * This class is a subclass of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":" * @author Deng Huaiyu(G12)","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"     * Constructs a todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"     * @param description detail of a todo","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"     * Stringifies and outputs a todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"     * @return return the string form of the todo","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"     * Gets type of the todo task","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"     * @return type of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"        return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NoraYUuu":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NoraYUuu":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a todo task can be added successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"    public void addTask_differentType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"            assertEquals((new Todo(\"Watch TV\")).toString(), this.createTask(\"todo Watch TV\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a wrong todo task can be added successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"    public void addTask_todoTask_wrongInput() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"            this.createTask(\"Watch TV\", new TaskList());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"            assertEquals(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"                    + \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"                    + \"    ____________________________________________________________\", e.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a deadline task can be added successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"    public void addTask_deadlineType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"            assertEquals((new Deadline(\"Watch TV\", LocalDateTime.of","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"                    (LocalDate.of(2021, 8, 23), LocalTime.of(14, 00))))","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"                    .toString(), this.createTask(\"deadline Watch TV /by 23/08/2021 14:00\", new TaskList()));","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a deadline task without time can be added successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    public void addTask_deadlineType_emptyTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"            this.createTask(\"deadline Watch TV /by \", new TaskList());","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"            assertEquals(\"    ____________________________________________________________\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"                    + \"     ☹ OOPS!!! The description and time of a deadline cannot be empty.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"                    + \"    ____________________________________________________________\", e.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"    private String createTask(String n, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"        taskList.addTask(n);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"        return taskList.getLast().toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":78}},{"path":"src/test/java/commandtest/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"package commandtest;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"    private TaskList myTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"    DoneCommandTest() {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"        this.start();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"    private void start() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"        this.myTasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(\"todo watch TV\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(\"event watch TV /at 20/08/2021 16:00\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(\"todo watch TV again\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(\"deadline watch friend\u0027s TV /by 14/09/2021 15:00\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"            myTasks.addTask(\"todo wash hair\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"            System.out.println(d);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether an event task can be marked as done successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"NoraYUuu"},"content":"    public void markTask_differentType_asDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"NoraYUuu"},"content":"        String result \u003d printExpect(1);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NoraYUuu"},"content":"        assertEquals(result, printDone(\"done 2\", 1));","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a todo task can be marked as done successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"NoraYUuu"},"content":"    public void markTask_differentType_asDone2() {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"NoraYUuu"},"content":"        String result \u003d printExpect(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NoraYUuu"},"content":"        assertEquals(result, printDone(\"done 1\", 0));","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a todo task can be marked as done successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"NoraYUuu"},"content":"    public void markTask_differentType_asDone3() {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"NoraYUuu"},"content":"        String result \u003d printExpect(2);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NoraYUuu"},"content":"        assertEquals(result, printDone(\"done 3\", 2));","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"NoraYUuu"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"NoraYUuu"},"content":"     * Tests whether a deadline task can be marked as done successfully","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"NoraYUuu"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"NoraYUuu"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"NoraYUuu"},"content":"    public void markTask_differentType_asDone4() {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"NoraYUuu"},"content":"        String result \u003d printExpect(3);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"NoraYUuu"},"content":"        assertEquals(result, printDone(\"done 4\", 3));","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"NoraYUuu"},"content":"    private String printDone(String s, int pos) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"NoraYUuu"},"content":"        DoneCommand c \u003d new DoneCommand(myTasks, s);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"NoraYUuu"},"content":"        c.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"NoraYUuu"},"content":"        return myTasks.getTask(pos).toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"NoraYUuu"},"content":"    private String printExpect(int pos) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NoraYUuu"},"content":"        String[] s \u003d this.myTasks.getTask(pos).toString().split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"NoraYUuu"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"NoraYUuu"},"content":"        for (int i \u003d 0; i \u003c s.length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"NoraYUuu"},"content":"            if (i \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"NoraYUuu"},"content":"                result +\u003d \"X\" + s[i];","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"NoraYUuu"},"content":"            } else if (i !\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"NoraYUuu"},"content":"                result +\u003d \" \" + s[i];","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"NoraYUuu"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"NoraYUuu"},"content":"                result +\u003d s[i];","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"NoraYUuu"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"NoraYUuu"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"NoraYUuu"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"NoraYUuu"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"NoraYUuu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"NoraYUuu"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"NoraYUuu":89}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NoraYUuu"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"NoraYUuu"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"NoraYUuu"},"content":"todo cut hair","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"NoraYUuu"},"content":"deadline finish homework /by 14/08/2021 08:00","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"NoraYUuu"},"content":"deadline /by today 5pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"NoraYUuu"},"content":"deadline bio exam /by 14/08/2021","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"NoraYUuu"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"NoraYUuu"},"content":"event KTV","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"NoraYUuu"},"content":"event KTV /at Mon 2-4 pm","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"NoraYUuu"},"content":"event KTV /at 27/08/2021 2-4pm","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"NoraYUuu"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"NoraYUuu"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"NoraYUuu"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"NoraYUuu"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"NoraYUuu"},"content":"done 7","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"NoraYUuu"},"content":"done0","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"NoraYUuu"},"content":"deadline math lecture /at 27/08/2021","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"deadline math lecture /by 27/08/2021 16:00","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"NoraYUuu"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"NoraYUuu"},"content":"deleteee","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"NoraYUuu"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"NoraYUuu"},"content":"delete 90","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"NoraYUuu"},"content":"dletre","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"NoraYUuu"},"content":"todo read another book","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"NoraYUuu"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"NoraYUuu"},"content":"get 27/08/2021","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"NoraYUuu"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"NoraYUuu":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"NoraYUuu"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"NoraYUuu":1,"-":20}}]
