[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"# duke.util.duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"3. After that, locate the `src/main/java/duke.util.duke.java` file, right-click it, and choose `Run duke.util.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KT27Learn":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"plugins {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"repositories {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"dependencies {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"test {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    testLogging {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        showExceptions true","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        showCauses true","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        showStackTraces true","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"application {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"shadowJar {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"run{","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KT27Learn":46}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":":execute","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":":end","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":":fail","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"exit /b 1","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":":mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":":omega","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KT27Learn":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Current Progress: A-CheckStyle. Use CheckStyle","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" * On running the program, Duke greets the user and awaits for inputted text.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":" * Program stores whatever text entered by the user and display them back","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":" * to the user when requested.","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    private Tasklist taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    private Store storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * Takes in the file path to load the save data from store","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        storage \u003d new Store(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"            taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"     * Initializes the Duke chat bot and runs the chat bot","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"                Command c \u003d Parser.parseCommandString(fullCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"     * Main method for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"     * Initialises Duke and starts taking in commands from the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        new Duke(\"/Users/keithtan/Desktop/NUS/CS2103 IP/ip/data/duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KT27Learn":71,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the add task command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private final String taskDetails;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    private final String taskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     * Takes in the task details and type of task and creates a add command to add","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"     * the current task to the tasklist","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    public AddCommand(String taskDetails, String taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * Executes the add command and adds the inputted task to the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d list.addTask(this.taskDetails, this.taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":50}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Abstract class that encapsulates a command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"     * Returns a boolean of whether current command is the \u0027bye\u0027 command","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean returns boolean of whether current command is \u0027bye\u0027 command","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     * Executes the command and runs any methods that is related to the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    public abstract void execute(Tasklist list, Ui ui, Store storage) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":40}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the delete task command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private final int toDelete;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Takes in the task number to delete and creates a delete command","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public DeleteCommand(int toDelete) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * Executes the delete command and delete the inputted task to the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d list.deleteTask(toDelete);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":45}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the bye command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for ExitCommand","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Initializes an exit command to signal Duke should be ended","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * Returns a boolean of whether current command is the \u0027bye\u0027 command","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean returns boolean of whether current command is \u0027bye\u0027 command","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"     * Executes the exit command. Saves current task list to hard disk and prints the goodbye message","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        storage.saveTasksToStore(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":56}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the delete task command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private final String searchTerm;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Takes in the search term to filter the tasks and creates the find command","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * Executes the filter task command. Returns a specific task in the task list that contains search term.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d list.filterTask(searchTerm);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the help command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for Help Command.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Initializes the help command","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * Executes the help command. Prints the help message for the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":45}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates an invalid command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"error\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public InvalidCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"     * Alerts the user that an invalid command has been inputted","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the list command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"     * Executes the list command. Prints the current task list for the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(\"Here are the tasks in your list:\\n\" + list.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":40}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Store;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates the mark task command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    private final int toMark;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     * Takes in the task number to mark and creates a mark command","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    public MarkCommand(int toMark) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     * Executes the mark task command. Marks a specific task in the task list as completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * @param list Tasklist of current tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     * @param ui Ui which prints any successful message from the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     * @param storage Current Storage of DUke","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws an exception if any Duke Error occurs while running","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"     *                       the associated methods","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    public void execute(Tasklist list, Ui ui, Store storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d list.markTask(toMark);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class to encapsulates all possible exceptions that will be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    private String message;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"     * Exception that might be raised during user interaction with Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        return this.message;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":35}},{"path":"src/main/java/duke/exception/FileWritingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates a file writing exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class FileWritingException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for FileWritingException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception raised when saving the tasklist to the hard drive","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public FileWritingException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi, Duke ran into an error trying to save task to your hard drive. Please try again!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":26}},{"path":"src/main/java/duke/exception/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates an index out of range exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class IndexOutOfRangeException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for IndexOutOfRangeException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception when user inputs a integer that is out of the range of the","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     * current tasklist","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    public IndexOutOfRangeException(int enteredIndex, int listSize) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi, \" + enteredIndex + \" is not a valid index. List has currently \" + listSize + \" items.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":27}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates an invalid argument exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for InvalidArgumentException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception when user inputs a invalid argument for the commands","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public InvalidArgumentException(String invalidCondition, String origin) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi, the \" + invalidCondition + \" for the \" + origin + \" is invalid!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":26}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates an invalid command exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for InvalidCommandException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception when user inputs a invalid coomand","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi I don\u0027t understand your command :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":26}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates a missing argument exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for MissingArgumentException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception when user is missing any arguments for the commands","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public MissingArgumentException(String missingCondition, String origin) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi, you are missing the \" + missingCondition + \" for the \" + origin + \"!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":26}},{"path":"src/main/java/duke/exception/TooManyArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Class that encapsulates a too many arguments exception that might be","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * raised whilst interacting with chatbot, Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class TooManyArgumentsException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for TooManyArgumentsException","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Exception when user inputs too many arguments for the commands","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public TooManyArgumentsException(String missingCondition, String origin) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        super(\"Hi, there are too many \" + missingCondition + \" for the \" + origin + \"!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.util.DukeDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" * Extends the Task Class which where it is a task that needs","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * to be done before a specific time","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    private DukeDate dueBy;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for Deadline","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"     * Task that contains a deadline to accomplish the task by","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    public Deadline(String description, DukeDate dueBy) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the deadline of task","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     * @return DukeDate returns the deadline of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    public DukeDate getDeadline() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        return this.dueBy;","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        String taskStatus \u003d this.isCompleted() ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        String dateTime \u003d this.dueBy.getEndTimeString();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        return \"[\" + \"D\" + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"                + \"[\" + taskStatus + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"                + \" \" + this.getDescription() + \" \"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"                + \"(by: \" + dateTime + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.util.DukeDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" * Extends the Event Class which where it is a task that start at a","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * specific time and ends at a specific time","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    private DukeDate duration;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for Event","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"     * Task that contains a duration to accomplish the task","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    public Event(String description, DukeDate duration) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the duration of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     * @return DukeDate returns the duration of the event","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    public DukeDate getDuration() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        return this.duration;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        String taskStatus \u003d this.isCompleted() ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        return \"[\" + \"E\" + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"                + \"[\" + taskStatus + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"                + \" \" + this.getDescription() + \" \"","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"                + \"(at: \" + this.duration.toString() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the Task Class which contains a task description","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * and their completion status","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    private String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"     * Task contains a description string and isCompleted boolean to show whether task has been completed","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"     * Sets Duke.util.Duke.task.Task Completion Status to true and returns true if successfully marked","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean returns true if task successfully marked and false if task","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     *                 already marked","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    public boolean completeTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"            return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"            this.isCompleted \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"            return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the completion status of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean Returns the completion status of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"     * @return String Returns the description of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        return this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean Returns true if search term exists in the description","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"    public boolean checkTerm(String searchTerm) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        String[] descriptionArr \u003d this.description.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        for (String word : descriptionArr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"            if (word.equals(searchTerm)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"                return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        String taskStatus \u003d isCompleted ? \"X\" : \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"        return \"[\" + taskStatus + \"]\" + \" \" + description;","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":87}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Extends the Task Class which where it is a task that does","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" * not have a date/time attached to it","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for ToDo","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"     * Todo is a task without a duration","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        String taskStatus \u003d this.isCompleted() ? \"X\" : \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        return \"[\" + \"T\" + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"                + \"[\" + taskStatus + \"]\"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"                + \" \" + this.getDescription();","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":33}},{"path":"src/main/java/duke/util/DukeDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the DukeDate Class where it stores the duration/dates","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * for the deadline and event classes","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"public class DukeDate {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    private final DateTimeFormatter officialFormat \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for DukeDate","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"     * Holds the start time date and end time date of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    public DukeDate(LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * Constructor for DukeDate","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * Holds the start time date and end time date of the task and sets the start time","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     * to be the current start time date","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    public DukeDate(LocalDateTime endTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        this.startTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the start date and time of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"     * @return LocalDateTime returns the start date and time of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public LocalDateTime getStartTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        return this.startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the end date and time of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"     * @return LocalDateTime returns the end date and time of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"    public LocalDateTime getEndTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        return this.endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the end date and time of the task in a string format","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"     * @return String returns the end date and time of the task in a string","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"    public String getEndTimeString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        return this.endTime.format(officialFormat);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        return this.startTime.format(this.officialFormat) + \" to \" + this.endTime.format(this.officialFormat);","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        if (obj instanceof DukeDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"            DukeDate temp \u003d (DukeDate) obj;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"            return temp.getStartTime().isEqual(this.startTime) \u0026\u0026 temp.getEndTime().isEqual(this.endTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"KT27Learn":91}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.TooManyArgumentsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the parser where it parses the inputted command from the user and runs","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":" * the correct command","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"     * Checks whether given string is an integer","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"     * @param str string to determine whether it is an integer","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"     * @return boolean returns true if string is an integer and","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     *         returns false otherwise","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    private static boolean isNumeric(String str) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        // null or empty","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        for (char c : str.toCharArray()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"     * Checks whether user inputted the description for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"     * @param strArr String array containing the command","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"     * @param event String stating the type of task to be added","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"     * @return String Returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"     * @throws MissingArgumentException throws a MissingArgumentException if no description found","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    private static String checkDescription(String[] strArr, String event) throws MissingArgumentException {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"description\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        } else if (strArr[1].trim().isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"description\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"            return strArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"     * Checks whether user inputted the description for the task","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"     * @param strArr String array containing the command","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"     * @param event String stating the type of task to be added","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"     * @return String Returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"     * @throws MissingArgumentException throws a MissingArgumentException if no description found","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"    private static String checkSearchTerm(String[] strArr, String event) throws MissingArgumentException,","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"            TooManyArgumentsException {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"search term\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"        } else if (strArr.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"            throw new TooManyArgumentsException(\"search terms\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"        } else if (strArr[1].trim().isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"search term\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"            return strArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"     * Checks whether user inputted an appropriate integer to mark the task","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"     * @param strArr String array containing the integer","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"     * @param event String stating whether task is to be marked or deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"     * @return int Returns the task number to be marked","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"     * @throws MissingArgumentException throws a Duke.util.Duke.exception.MissingArgumentException if no integer found","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"     * @throws InvalidArgumentException throws a Duke.util.Duke.exception.InvalidArgumentException if no integer","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"     *                                  inputted after done command","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"    private static int checkInteger(String[] strArr, String event) throws MissingArgumentException,","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"            InvalidArgumentException {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"integer\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        } else if (!isNumeric(strArr[1])) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"            throw new InvalidArgumentException(\"integer\", event);","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"            return Integer.parseInt(strArr[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"     * Parses the inputted command and creates the corresponding command","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"     * @param command String containing the inputted command","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"     * @return Command Returns the corresponding command","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws a Duke Exception that might be raised during the parsing of the inputted","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"     *                       command","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"    public static Command parseCommandString(String command) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"        Command currentCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        String[] checkCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"        switch(checkCommand[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new AddCommand(checkDescription(checkCommand, \"todo\"), \"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new AddCommand(checkDescription(checkCommand, \"event\"), \"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new AddCommand(checkDescription(checkCommand, \"deadline\"), \"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"            int deleteTaskNumber \u003d checkInteger(checkCommand, \"deleting task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new DeleteCommand(deleteTaskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"            int doneTaskNumber \u003d checkInteger(checkCommand, \"marking of task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new MarkCommand(doneTaskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"KT27Learn"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"        case \"filter\":","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new FindCommand(checkSearchTerm(command.split(\" \"), \"filter\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"KT27Learn"},"content":"        case \"help\":","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new HelpCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"            currentCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"        return currentCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":168}},{"path":"src/main/java/duke/util/Store.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.FileWritingException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the Store Class which has the functions that stores the task","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":" * list in the hard drive","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"public class Store {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    private final DateTimeFormatter officialFormat \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    public Store(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"     * Loads tasks in hard disk to current task list","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"     * @return Tasklist returns a tasklist of all tasks stored in the hard drive","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"     * @throws FileWritingException throws an Duke.util.Duke.exception.FileWritingException if error encountered during","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"     *                              loading of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    public Tasklist load() throws FileWritingException {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        Tasklist result;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"            File inputFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"            if (!inputFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"                inputFile.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"                inputFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(inputFile));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"            String currentLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"            Tasklist storeList \u003d new Tasklist();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"            while ((currentLine \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"                if (currentLine.trim().equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"                    continue;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"                Task currentTask \u003d parseLine(currentLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"                storeList.addTask(currentTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"            reader.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"            result \u003d storeList;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"            throw new FileWritingException();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"     * Saves tasks currently in the tasks list to the hard disk","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"     * @param list Task list containing tasks to be saved into the hard disk","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"     * @throws FileWritingException throws a FileWritingException if error encountered during","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"     *                              saving of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"    public void saveTasksToStore(Tasklist list) throws FileWritingException {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"            String fileString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"            fileString +\u003d list.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"            bw.write(fileString);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"            bw.newLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"            bw.flush();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"            bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"            throw new FileWritingException();","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"     * Function parses each line in the file that contains task list that is saved in","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"     * the hard drive","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"     * @param line line from file, which contains tasks list saved in hard drive,","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"     *             to be parsed","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"     * @throws FileWritingException throws a FileWritingException if error encountered during","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"     *                              parsing of file line","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"    public Task parseLine(String line) throws FileWritingException {","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        char type \u003d line.charAt(3);","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"        boolean isCompleted \u003d line.charAt(6) \u003d\u003d (\u0027X\u0027) ? true : false;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"            Task tempTodoTask \u003d new ToDo(line.substring(9));","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"            if (isCompleted) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"                tempTodoTask.completeTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"            return tempTodoTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"            String eventDetails \u003d line.substring(9);","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"            String[] checkEventDetails \u003d eventDetails.split(\"at: \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"            String[] eventDate \u003d checkEventDetails[1].substring(0, checkEventDetails[1].length() - 1)","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"                    .split(\" to \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"            LocalDateTime eventStartTime \u003d LocalDateTime.parse(eventDate[0], officialFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"            LocalDateTime eventEndTime \u003d LocalDateTime.parse(eventDate[1], officialFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"            DukeDate eventDuration \u003d new DukeDate(eventStartTime, eventEndTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"            Task tempEventTask \u003d new Event(checkEventDetails[0]","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"                    .substring(0, checkEventDetails[0].length() - 2), eventDuration);","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"            if (isCompleted) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"                tempEventTask.completeTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"            return tempEventTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"            String deadlineDetails \u003d line.substring(9);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"            String[] checkDeadlineDetails \u003d deadlineDetails.split(\"by: \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"            LocalDateTime deadlineDate \u003d LocalDateTime.parse(checkDeadlineDetails[1]","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"                    .substring(0, checkDeadlineDetails[1].length() - 1), officialFormat);","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"            DukeDate deadlineDukeDate \u003d new DukeDate(deadlineDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"            Task tempDeadlineTask \u003d new Deadline(checkDeadlineDetails[0]","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"                    .substring(0, checkDeadlineDetails[0].length() - 2), deadlineDukeDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"            if (isCompleted) {","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"                tempDeadlineTask.completeTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"            return tempDeadlineTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"            throw new FileWritingException();","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"KT27Learn":146}},{"path":"src/main/java/duke/util/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.IndexOutOfRangeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the task List which contains a list of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    private static final DateTimeFormatter[] DATE_FORMATTERS \u003d {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"mm-DD-yyyy HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-DD-mm HH:mm\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    };","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"     * Getter that returns the current length of the list","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"     * @return int returns current length of list","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"     * Checks whether user inputted the time for the deadline/event task","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"     * @param strArr String array containing the inputted description and time","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"     * @param event String stating the type of task to be added","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"     * @return String Returns the time of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"     * @throws MissingArgumentException throws a MissingArgumentException if no time found","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"     * @throws InvalidArgumentException throws a InvalidArgumentException if error occurs when parsing","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"     *                                  inputted command line for dates","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"    private DukeDate checkTime(String[] strArr, String event) throws MissingArgumentException,","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        InvalidArgumentException {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"time\", event);","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"        } else if (strArr[1].trim().isEmpty()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"            throw new MissingArgumentException(\"time\", event);","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"            if (event.equals(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"                return new DukeDate(parseDateTime(strArr[1], event));","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"                //if task is an event","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"                String[] eventDuration \u003d strArr[1].split(\" to \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"                return new DukeDate(parseDateTime(eventDuration[0], event),","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"                        parseDateTime(eventDuration[1], event));","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"     * Parses the LocalDateTime from the inputted date and time string in the command","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"     * @param dateTime String array containing the inputted date and time","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"     * @param event String stating the type of task to be added","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"     * @return LocalDateTime Returns the time of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"     * @throws InvalidArgumentException throws an InvalidArgumentException if error occurs when parsing","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"     *                                  inputted command line for dates","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"    public LocalDateTime parseDateTime(String dateTime, String event) throws InvalidArgumentException {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime result \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"        for (DateTimeFormatter df : DATE_FORMATTERS) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"                result \u003d LocalDateTime.parse(dateTime, df);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"            } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"                // Ignore; try next formatter","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"            throw new InvalidArgumentException(\"times\", event);","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"            return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"     * Adds tasks read from store in hard drive","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"     * @param storeTask Task that was saved in hard drive to be loaded into  current task list","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"    public void addTask(Task storeTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"        tasks.add(storeTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"     * Adds the task to the list","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"     * @param description String containing the description and time of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"     * @param task Duke.util.Duke.command.Command stating the type of task to be added","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"     * @return String Returns the success message of added the task to the list","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"     * @throws DukeException throws a duke exception depending on the error found","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"    public String addTask(String description, String task) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"        Task newTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"        switch(task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"            newTask \u003d new ToDo(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"            String[] deadlineDetails \u003d description.split(\" /by \", 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"            DukeDate deadlineTime \u003d checkTime(deadlineDetails, \"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"            newTask \u003d new Deadline(deadlineDetails[0], deadlineTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"        case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"            String[] eventDetails \u003d description.split(\" /at \", 2);","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"KT27Learn"},"content":"            DukeDate eventTime \u003d checkTime(eventDetails, \"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"KT27Learn"},"content":"            newTask \u003d new Event(eventDetails[0], eventTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"KT27Learn"},"content":"            break;","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"        default:","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"            //unexpected error occurs","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"KT27Learn"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"                + \"  \" + newTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"        return successMessage;","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"KT27Learn"},"content":"     * Marks the designated tasks as complete","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"KT27Learn"},"content":"     * @param taskNumber task to be marked as complete","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"KT27Learn"},"content":"     * @return String message to be printed depending on if tasks is marked","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"KT27Learn"},"content":"     * @throws IndexOutOfRangeException throws the exception if index given is out of","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"KT27Learn"},"content":"     *              range of the current list","lastModifiedDate":"2021-08-16"},{"lineNumber":169,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"KT27Learn"},"content":"    public String markTask(int taskNumber) throws IndexOutOfRangeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"KT27Learn"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"KT27Learn"},"content":"            throw new IndexOutOfRangeException(taskNumber, tasks.size());","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"KT27Learn"},"content":"            if (tasks.get(taskNumber - 1).completeTask()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"KT27Learn"},"content":"                String markTaskMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"KT27Learn"},"content":"                        + tasks.get(taskNumber - 1).toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"KT27Learn"},"content":"                return markTaskMessage;","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"KT27Learn"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"KT27Learn"},"content":"                String markTaskMessage \u003d tasks.get(taskNumber - 1).toString() + \" already marked!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"KT27Learn"},"content":"                return markTaskMessage;","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":196,"author":{"gitId":"KT27Learn"},"content":"     * Delete the designated tasks from the task list","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"KT27Learn"},"content":"     * @param taskNumber task to be deleted","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"KT27Learn"},"content":"     * @return String message to be printed depending on if tasks is marked","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"KT27Learn"},"content":"     * @throws IndexOutOfRangeException throws the exception if index given is out of","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"KT27Learn"},"content":"     *              range of the current list","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"KT27Learn"},"content":"    public String deleteTask(int taskNumber) throws IndexOutOfRangeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"KT27Learn"},"content":"        if (taskNumber \u003e tasks.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"KT27Learn"},"content":"            throw new IndexOutOfRangeException(taskNumber, tasks.size());","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"KT27Learn"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"KT27Learn"},"content":"            Task taskToRemove \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"KT27Learn"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":213,"author":{"gitId":"KT27Learn"},"content":"            String deletedTaskMessage \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"KT27Learn"},"content":"                    + \"  \" + taskToRemove.toString() + \"\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"KT27Learn"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";;","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"KT27Learn"},"content":"            return deletedTaskMessage;","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":221,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"KT27Learn"},"content":"     * Filter the task list to find tasks whose description the fit the search term","lastModifiedDate":"2021-08-23"},{"lineNumber":224,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"KT27Learn"},"content":"     * @param searchTerm search term to filter the task list by","lastModifiedDate":"2021-08-23"},{"lineNumber":226,"author":{"gitId":"KT27Learn"},"content":"     * @return String message to be printed depending on if any tasks are found","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"KT27Learn"},"content":"    public String filterTask(String searchTerm) {","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"KT27Learn"},"content":"        Tasklist tempList \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"KT27Learn"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"KT27Learn"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":233,"author":{"gitId":"KT27Learn"},"content":"            if (currentTask.checkTerm(searchTerm)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":234,"author":{"gitId":"KT27Learn"},"content":"                tempList.addTask(currentTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":235,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":236,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":237,"author":{"gitId":"KT27Learn"},"content":"        return tempList.getSize() \u003d\u003d 0 ? \"No tasks fit search term\"","lastModifiedDate":"2021-08-23"},{"lineNumber":238,"author":{"gitId":"KT27Learn"},"content":"                : \"Here are the matching tasks in your list:\\n\" + tempList.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":239,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":240,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":241,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"KT27Learn"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":243,"author":{"gitId":"KT27Learn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":244,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":245,"author":{"gitId":"KT27Learn"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"KT27Learn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"KT27Learn"},"content":"            String listItem \u003d String.format(\"%d.%s\", (i + 1), tasks.get(i).toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":248,"author":{"gitId":"KT27Learn"},"content":"            if (i \u003d\u003d (tasks.size() - 1)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"KT27Learn"},"content":"                listString +\u003d listItem;","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"KT27Learn"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":251,"author":{"gitId":"KT27Learn"},"content":"                listString +\u003d listItem + \"\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":252,"author":{"gitId":"KT27Learn"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":253,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":255,"author":{"gitId":"KT27Learn"},"content":"        return listString;","lastModifiedDate":"2021-08-15"},{"lineNumber":256,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":257,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":258,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":259,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":259}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":" * Project Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":" * Description:","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":" * Encapsulates the UI that interacts with the user through scanner the inputted text from the user and prints","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":" * messages based on the result of the different Command methods","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":" * @author Keith Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    private static Scanner commandScanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        this.commandScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"     * Reads the next command inputted by the user","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        return commandScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"     * Prints out message according to desired format to user","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"     * @param message message to bve printed","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        String finalMessage \u003d HORIZONTAL_LINE","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\" + message + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"                + HORIZONTAL_LINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        System.out.println(finalMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"     * Prints out greeting message","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"                + \"\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"        printMessage(greeting);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"     * Prints out goodbye message","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        String byeString \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"        printMessage(byeString);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"     * Prints out help message","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        String helpString \u003d \"Here are the following commands Duke.util.Duke accepts:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"                + \"todo - adds a todo task, type \u0027todo\u0027 followed by a description\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"                + \"event - adds a event task, type \u0027todo\u0027 followed by a description and event duration\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"                + \"deadline - adds a deadline task, type \u0027deadline\u0027 followed by a description and event due date\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"                + \"list - shows the current task list\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"                + \"done - marks a task in the task list as complete, type \u0027done\u0027 followed by an integer\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"                + \"delete - deletes a task in the task list, type \u0027delete\u0027 followed by an integer\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"                + \"filter - filter task lists for tasks through searching for a keyword\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"                + \"bye - exits the duke chat bot and saves all task in the task list to the hard disk\";","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"        printMessage(helpString);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"     * Prints out error message","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"     * @param de DukeException that was thrown during running of the application","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"    public void printErrorMessage(DukeException de) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"        printMessage(de.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":93}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import duke.util.DukeDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        Deadline tempTask \u003d new Deadline(\"testing the tester\", new DukeDate(dateTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(\"[D][ ] testing the tester (by: 12-Dec-2020 12:00)\", tempTask.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    public void testGetDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDate \u003d new DukeDate(dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        Deadline tempTask \u003d new Deadline(\"testing the tester\", savedDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.getDeadline(), savedDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    public void testCompleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        Deadline tempTask \u003d new Deadline(\"testing the tester\", new DukeDate(dateTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        tempTask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.isCompleted(), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    public void testGetDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        Deadline tempTask \u003d new Deadline(\"testing the tester\", new DukeDate(dateTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.getDescription(), \"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    public void testCheckTerm() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        Deadline tempTask \u003d new Deadline(\"testing the tester\", new DukeDate(dateTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.checkTerm(\"testing\"), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":55}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import duke.util.DukeDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        Event tempTask \u003d new Event(\"testing the tester\", new DukeDate(dateStartTime,","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"            dateEndTime));","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(\"[E][ ] testing the tester (at: 12-Dec-2020 12:00 to 12-Jan-2020 20:00)\",","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"            tempTask.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    public void testGetDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        Event tempTask \u003d new Event(\"testing the tester\", savedDuration);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.getDuration(), savedDuration);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    public void testCompleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        Event tempTask \u003d new Event(\"testing the tester\", savedDuration);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        tempTask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.isCompleted(), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    public void testGetDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        Event tempTask \u003d new Event(\"testing the tester\", savedDuration);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.getDescription(), \"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"    public void testCheckTerm() {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        Event tempTask \u003d new Event(\"testing the tester\", savedDuration);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.checkTerm(\"tester\"), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":64}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"        ToDo tempTask \u003d new ToDo(\"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(\"[T][ ] testing the tester\", tempTask.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"    public void testCompleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"        ToDo tempTask \u003d new ToDo(\"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        tempTask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.isCompleted(), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    public void testGetDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        ToDo tempTask \u003d new ToDo(\"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.getDescription(), \"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    public void testCheckTerm() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        ToDo tempTask \u003d new ToDo(\"testing the tester\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(tempTask.checkTerm(\"tester\"), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":32}},{"path":"src/test/java/duke/util/DukeDateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"public class DukeDateTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"        DukeDate tempDate \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(\"12-Dec-2020 12:00 to 12-Jan-2020 20:00\", tempDate.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"    public void testGetStartTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(dateStartTime, savedDuration.getStartTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    public void testGetEndTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(dateEndTime, savedDuration.getEndTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    public void testGetEndTimeString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MMM-yyyy HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateStartTime \u003d LocalDateTime.parse(\"12-Dec-2020 12:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        LocalDateTime dateEndTime \u003d LocalDateTime.parse(\"12-Jan-2020 20:00\", format);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        DukeDate savedDuration \u003d new DukeDate(dateStartTime, dateEndTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(savedDuration.getEndTimeString(), \"12-Jan-2020 20:00\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":46}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_exitCommand_returnExitCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof ExitCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_invalidCommand_returnInvalidCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"diwjiewjiqjeq\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof InvalidCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_todoTask_returnAddCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"todo test123\");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof AddCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_deadlineTask_returnAddCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"deadline test123 /by 2020-Aug-20 21:00\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof AddCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_eventTask_returnAddCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"event test123 /by 2020-Aug-20 21:00 to 21-Sep-2021 17:00\");","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof AddCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_invalidTask_returnInvalidCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"todo    \");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof InvalidCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_markTask_returnMarkCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"done 2\");","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof MarkCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_deleteTask_returnDeleteCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"delete 2\");","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof DeleteCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"KT27Learn"},"content":"    public void testParseCommandString_invalidInteger_returnInvalidCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"KT27Learn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"KT27Learn"},"content":"        Command finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d parser.parseCommandString(\"done dfadjowe\");","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"KT27Learn"},"content":"            finalCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"KT27Learn"},"content":"        assertTrue(finalCommand instanceof InvalidCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":159}},{"path":"src/test/java/duke/util/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"public class TasklistTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"    public void testAddTask_deadlineTask_returnSuccessMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"        Tasklist temp \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"        String message \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"            message \u003d temp.addTask(\"test123 /by 24-07-2010 19:00\", \"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"            message \u003d e.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"                + \"  [D][ ] test123 (by: 24-Jul-2010 19:00)\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(message, successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    public void testAddTask_invalidTask_returnInvalidCommandExceptionMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"        Tasklist temp \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        String message \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"            message \u003d temp.addTask(\"Invalid Command\", \"sup\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"            message \u003d e.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(message, \"Hi I don\u0027t understand your command :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    public void testAddTask_invalidDate_returnInvalidArgumentExceptionMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"        Tasklist temp \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        String message \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"            message \u003d temp.addTask(\"test123 /at 12:00\", \"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"            message \u003d e.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(message, \"Hi, the times for the event is invalid!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"    public void testDeleteTask_deleteTask_returnSuccessMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"        Tasklist temp \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        String message \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"            temp.addTask(\"test123 /at 24-07-2010 19:00 to 24-Dec-2010 00:00\", \"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"            temp.addTask(\"test1\", \"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"            message \u003d temp.deleteTask(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"            message \u003d e.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"        String deleteMessage \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"                + \"  [E][ ] test123 (at: 24-Jul-2010 19:00 to 24-Dec-2010 00:00)\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"                + \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(message, deleteMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"        Tasklist temp \u003d new Tasklist();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"            temp.addTask(\"test1\", \"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"            temp.addTask(\"test12 /by 24-07-2010 19:00\", \"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"            temp.addTask(\"test123 /at 24-07-2010 19:00 to 24-Dec-2010 00:00\", \"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"            temp \u003d new Tasklist();","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"        String successMessage \u003d \"1.[T][ ] test1\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"                + \"2.[D][ ] test12 (by: 24-Jul-2010 19:00)\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"                + \"3.[E][ ] test123 (at: 24-Jul-2010 19:00 to 24-Dec-2010 00:00)\";","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(temp.toString(), successMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":90}},{"path":"src/test/java/duke/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"import duke.exception.FileWritingException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"public class UiTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"    private final String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"    public void setUpStreams() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"    @AfterEach","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"    public void restoreStreams() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"    public void testPrintMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"        ui.printMessage(\"Test123\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(horizontalLine + \"\\nTest123\\n\" + horizontalLine + \"\\n\", outContent.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"    public void testPrintWelcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"KT27Learn"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"KT27Learn"},"content":"                + \"\\nHello! I\u0027m Duke\"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"KT27Learn"},"content":"                + \"\\nWhat can I do for you?\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"KT27Learn"},"content":"                + horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\", outContent.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"KT27Learn"},"content":"    public void testPrintGoodbyeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"KT27Learn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"KT27Learn"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"KT27Learn"},"content":"                + \"\\nBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KT27Learn"},"content":"                + horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\", outContent.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KT27Learn"},"content":"    public void testPrintErrorMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KT27Learn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KT27Learn"},"content":"        ui.printErrorMessage(new FileWritingException());","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"KT27Learn"},"content":"                + \"\\nHi, Duke.util.Duke ran into an error trying to save task to your hard drive. Please try again!\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"KT27Learn"},"content":"                + horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\", outContent.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"KT27Learn"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"KT27Learn"},"content":"    public void testPrintHelpMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"KT27Learn"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"KT27Learn"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"KT27Learn"},"content":"        String helpString \u003d \"Here are the following commands Duke.util.Duke accepts:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"KT27Learn"},"content":"                + \"todo - adds a todo task, type \u0027todo\u0027 followed by a description\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"KT27Learn"},"content":"                + \"event - adds a event task, type \u0027todo\u0027 followed by a description and event duration\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"KT27Learn"},"content":"                + \"deadline - adds a deadline task, type \u0027deadline\u0027 followed by a description and event due date\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"KT27Learn"},"content":"                + \"list - shows the current task list\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"KT27Learn"},"content":"                + \"done - marks a task in the task list as complete, type \u0027done\u0027 followed by an integer\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"KT27Learn"},"content":"                + \"delete - deletes a task in the task list, type \u0027delete\u0027 followed by an integer\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"KT27Learn"},"content":"                + \"filter - filter task lists for tasks through searching for a keyword\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"KT27Learn"},"content":"                + \"bye - exits the duke chat bot and saves all task in the task list to the hard disk\";","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"KT27Learn"},"content":"        assertEquals(horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"KT27Learn"},"content":"                + helpString","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"KT27Learn"},"content":"                + horizontalLine","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"KT27Learn"},"content":"                + \"\\n\", outContent.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"KT27Learn"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"KT27Learn"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KT27Learn":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KT27Learn"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"KT27Learn"},"content":"deadline level9 test /by 12-03-2020 18:00","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"KT27Learn"},"content":"todo testing 123","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"KT27Learn"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"KT27Learn"},"content":"deadline Level9 test /by 12","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"KT27Learn"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"KT27Learn"},"content":"filter Level9","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"KT27Learn"},"content":"filter none","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KT27Learn"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"KT27Learn"},"content":"event test123 /at 23-Dec-2020 15:00 to 2020-Dec-24 12:00","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"KT27Learn"},"content":"delete 2","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"KT27Learn"},"content":"event","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"KT27Learn"},"content":"done 5","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"KT27Learn"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"delete 4","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"list","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"KT27Learn":17}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"KT27Learn"},"content":"# delete output from previous run","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"KT27Learn"},"content":"if [ -e \"../../../data/duke.txt\" ]","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"KT27Learn"},"content":"then","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"KT27Learn"},"content":"    rm ../../../data/duke.txt","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"KT27Learn"},"content":"fi","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"KT27Learn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/command/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KT27Learn"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KT27Learn"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KT27Learn"},"content":"    exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KT27Learn"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"KT27Learn"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"KT27Learn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/exception/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"KT27Learn"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"KT27Learn"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"KT27Learn"},"content":"    exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"KT27Learn"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"KT27Learn"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KT27Learn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"KT27Learn"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"KT27Learn"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"KT27Learn"},"content":"    exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"KT27Learn"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"KT27Learn"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"KT27Learn"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"KT27Learn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/util/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"KT27Learn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KT27Learn":29,"-":43}}]
