[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    sourceSets \u003d []","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanhuakun":19,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"Duke helps you to manage your tasks via commands with a simple GUI.","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"## Requirements","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"* Java 11 version installed","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"* `Duke.jar` downloaded from the releases page","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"### Add tasks to record down","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"Duke contains support for four types of tasks, namely `Todo`, `Deadline`, `Event` and `Recurring` tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"#### Todo","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"A task to be done.","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"#### Deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"A task to be done by a given date.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"#### Event","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"An event or activity that will occur at a given date.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"#### Recurring","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"A task to be done by a given date, and will need to be done again after a set interval of days.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"**Take not that the recurring task will only be added when the current one is done.**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"### Listing tasks and finding them","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"You can use the `list` and `find` commands to lookup tasks easily.","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"### Checking off tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"You can mark tasks as done to keep track of tasks that are not completed yet.","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"### Delete tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"You can delete tasks to reduce clutter.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"### Local storage","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"Tasks are saved between sessions, even after PC reboot.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"## Command Reference","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"#### Add Todo","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"`todo task_name`","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"where task_name is the name of the task.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"Example: `todo Read TextBook`","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"#### Add Deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"`deadline task_name /by due_date`","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"where `task_name` is the name of the task,","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"where `due_date` is the deadline given in yyyy-mm-dd format.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"Example: `deadline Homework /by 2021-09-11`","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"#### Add Event","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"`event event_name /at event_date`","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"where `event_name` is the name of the event,","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"where `event_date` is the date of the event given in yyyy-mm-dd format.","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"Example: `event Christmas /at 2021-12-25`","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"#### Add Recurring","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"`recurring task_name /by due_date /every interval`","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"where `task_name` is the name of the task,","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"where `due_date` is the deadline given in yyyy-mm-dd format,","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"where `interval` is the the number of days for said task to recur.","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"Example: `recurring Sweep The Floor /by 2021-09-13 / every 7`","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"#### List all added tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"`list` command to view all tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"#### Find tasks by keywords","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"`find keyword` command to filter tasks containing `keyword`","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"#### Mark tasks as done","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"`done task_index` to mark a particular task as done, where `task_index` is the index of the task when using the `list` function","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"#### Delete Tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"`delete task_index` to delete a particular task from the list, where `task_index` is the index of the task when using the `list` function","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"tanhuakun":68,"-":20}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"//@@author tanhuakun-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        dialog.setMinHeight(Label.USE_PREF_SIZE);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"tanhuakun":16,"-":50}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    /** Relative path to file used in our Duke simulations */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public static String FILE_PATH \u003d \"data/\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    FileController fc;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    Parser parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        fc \u003d new FileController(FILE_PATH, \"list.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        String contents \u003d fc.readContentsAsString();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        taskList \u003d new TaskList(contents);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * Gets String response to a particular input","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * @param input Full input sent to duke","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * @return String response after parsing input","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            Command c \u003d parser.parseCommand(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            return c.execute(taskList, fc);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    public String getWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        return \"Hello from\\n\" + \" ____        _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanhuakun":44,"-":3}},{"path":"src/main/java/duke/FileController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"/** class for handling file I/O */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"public class FileController {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    /** file path of file */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    private String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    /** file name of file */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    private String fileName;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public FileController(String filePath, String fileName) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * Writes given text to file specified by this object.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * @param text String to write.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     * @return True if file writes successfully, false otherwise.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public boolean writeText(String text) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            FileWriter fw;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"                fw \u003d new FileWriter(filePath.concat(fileName));","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"                File f \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"                f.mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"                fw \u003d new FileWriter(filePath.concat(fileName));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * Returns the whole contents of the file in a single String.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * @return contents of file specified in this object.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public String readContentsAsString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"            File f \u003d new File(filePath.concat(fileName));","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"                sb.append(s.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"            return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tanhuakun":64}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tanhuakun":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"//@@author tanhuakun-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            mainWindow.setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            mainWindow.showDukeMessage(duke.getWelcome());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"tanhuakun":10,"-":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author tanhuakun-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                createPadding(),","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(response, dukeImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                createPadding()","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void showDukeMessage(String msg) {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DialogBox.getDukeDialog(msg, dukeImage),","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                createPadding()","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public HBox createPadding() {","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        HBox padding \u003d new HBox();","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        padding.setMinHeight(6);","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return padding;","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"tanhuakun":11,"-":63}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import duke.command.PrintListCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.InvalidCommandDukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.NoArgumentDukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.WrongArgumentDukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.RecurringTask;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    /** For separation of name and date in deadline input */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    private static final String DEADLINE_DELIMITER \u003d \" /by \";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    /** For separation of name and date in event input */","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    private static final String EVENT_DELIMITER \u003d \" /at \";","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    /** For separation of name and date in recurring task input */","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    private static final String RECURRING_DELIMITER_1 \u003d \" /by \";","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    /** For separation of date and interval in recurring task input */","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    private static final String RECURRING_DELIMITER_2 \u003d \" /every \";","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * Reads and returns the corresponding command from a given string.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     * @param command Command in String format.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     * @return Command that can execute the actions required.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     * @throws DukeException If command is invalid","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    public Command parseCommand(String command) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        String inputFirst;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        int breakPoint \u003d command.indexOf(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        if (breakPoint \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"            inputFirst \u003d command;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"            inputFirst \u003d command.substring(0, command.indexOf(\" \"));","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"            switch(inputFirst) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"            case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"                return new PrintListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"            case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"                return markDone(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"                return addTodo(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"                return addDeadline(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"                return addEvent(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"                return delete(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"            case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"                return find(getArgs(command));","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"            case \"recurring\":","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"                return addRecurring(getArgs(command));","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"                throw new InvalidCommandDukeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"            throw new DukeException(\"Error for command: \\\"\" + inputFirst + \"\\\"\\n\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"     * Returns a Command that adds a Todo task","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"     * @param args String containing Todo task details","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"     * @return Command that adds the given Todo task when executed","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"    private Command addTodo(String args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        return new AddTaskCommand(new Todo(args));","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    private Command addDeadline(String args) throws WrongArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"        String[] strArr \u003d args.split(DEADLINE_DELIMITER, 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"        if (strArr.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"            LocalDate date \u003d getLocalDate(strArr[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"            return new AddTaskCommand(new Deadline(strArr[0], date));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(String.format(\"Did you forget to use%s\",","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"                    DEADLINE_DELIMITER));","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"     * Returns a Command that adds an Event task","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"     * @param args String containing Event task details","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"     * @return Command that adds the given Event task when executed","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException if argument is wrongly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"    private Command addEvent(String args) throws WrongArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"        String[] strArr \u003d args.split(EVENT_DELIMITER, 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        if (strArr.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"            LocalDate date \u003d getLocalDate(strArr[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"            return new AddTaskCommand(new Event(strArr[0], date));","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(String.format(\"Did you forget to use%s\",","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"                    EVENT_DELIMITER));","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"     * Returns a Command that adds a Recurring task","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"     * @param args String containing Recurring task details","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"     * @return Command that adds the given Recurring task when executed","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException if argument is wrongly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"    private Command addRecurring(String args) throws WrongArgumentDukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"        String[] strArr \u003d args.split(RECURRING_DELIMITER_1);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"        if (strArr.length \u003c 2) {","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(String.format(\"Did you forget to use%s\",","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"                    RECURRING_DELIMITER_1));","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"        String[] strArr2 \u003d strArr[1].split(RECURRING_DELIMITER_2);","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        if (strArr2.length \u003c 2) {","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(String.format(\"Did you forget to use%s\",","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"                    RECURRING_DELIMITER_2));","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"        LocalDate date \u003d getLocalDate(strArr2[0]);","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        int intervalInDays \u003d getInt(strArr2[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"        return new AddTaskCommand(new RecurringTask(strArr[0], date, intervalInDays));","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"     * Gets argument to command if it exists.","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"     * @param str String full command","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"     * @return get argument to command","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"     * @throws NoArgumentDukeException if no arguments","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"    private String getArgs(String str) throws NoArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"tanhuakun"},"content":"        int index \u003d str.indexOf(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"tanhuakun"},"content":"            throw new NoArgumentDukeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"tanhuakun"},"content":"        String argument \u003d str.substring(str.indexOf(\" \") + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"tanhuakun"},"content":"        return argument;","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"tanhuakun"},"content":"     * Marks a Task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"tanhuakun"},"content":"     * @param indexStr string format of index","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException if argument is wrongly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"    private Command markDone(String indexStr) throws WrongArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"            return new MarkDoneCommand(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(\"Not a number specified\");","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"     * Deletes an entry in this Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"tanhuakun"},"content":"     * @param indexStr string format of index","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException if argument is wrongly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"tanhuakun"},"content":"    private Command delete(String indexStr) throws WrongArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"tanhuakun"},"content":"            int index \u003d Integer.parseInt(indexStr);","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"tanhuakun"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"tanhuakun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(\"Not a number specified\");","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"tanhuakun"},"content":"     * Finds an entry containing the specified string.","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"tanhuakun"},"content":"     * @param toFind String to find in all entries.","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"tanhuakun"},"content":"     * @return A command that will find the entries when executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"tanhuakun"},"content":"    private Command find(String toFind) {","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"        return new FindCommand(toFind);","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"tanhuakun"},"content":"     * Converts a string to a LocalDate","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"tanhuakun"},"content":"     * @param str string representation of a date","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"tanhuakun"},"content":"     * @return LocalDate object represented by string","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException if argument is wrongly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"tanhuakun"},"content":"    private LocalDate getLocalDate(String str) throws WrongArgumentDukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":201,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":202,"author":{"gitId":"tanhuakun"},"content":"            return LocalDate.parse(str);","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"tanhuakun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":204,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(\"Cannot parse date.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":207,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":208,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":209,"author":{"gitId":"tanhuakun"},"content":"     * Returns an int from string.","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"tanhuakun"},"content":"     * @param str String representation of a number.","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"tanhuakun"},"content":"     * @return Int value represented by string.","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"tanhuakun"},"content":"     * @throws WrongArgumentDukeException If str does not represent a number.","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"tanhuakun"},"content":"    private int getInt(String str) throws WrongArgumentDukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"tanhuakun"},"content":"            return Integer.parseInt(str);","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"tanhuakun"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"tanhuakun"},"content":"            throw new WrongArgumentDukeException(\"Cannot parse number\");","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":222}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.UnsavedChangesException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"/** Command to add tasks */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    /** task to add */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    private Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public String execute(TaskList tasks, FileController fc) throws UnsavedChangesException {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        assert tasks.get(tasks.size() - 1) \u003d\u003d task;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        if (!fc.writeText(tasks.serialize())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            throw new UnsavedChangesException();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"Added: %s\\nNow you have %d tasks\", task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"/** Class for executing commands */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"     * Executes an action with the given parameters.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"     * @param tasks A TaskList to work on.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * @param fc A FileController to use.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public abstract String execute(TaskList tasks, FileController fc);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":16}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.InvalidOperationDukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.UnsavedChangesException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    private int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public String execute(TaskList tasks, FileController fc) throws UnsavedChangesException {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"            throw new InvalidOperationDukeException(\"Number is out of bounds\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        Task task \u003d tasks.remove(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        assert tasks.size() \u003d\u003d index - 1 || tasks.get(index - 1) !\u003d task;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        if (!fc.writeText(tasks.serialize())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            throw new UnsavedChangesException();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"Removed task %d %s\", index, task);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    private String toFind;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public FindCommand(String toFind) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"        this.toFind \u003d toFind;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public String execute(TaskList tasks, FileController fc) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        // looks for all tasks with name containing the string to find.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            String name \u003d task.getName();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            if (name.contains(toFind)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"                sb.append(\"\\n\")","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"                        .append(task.toString())","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"                        .append(String.format(\". ID in list: %d\", i));","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        sb.insert(0, String.format(\"Found %d entries\", count));","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":34}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.InvalidOperationDukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.exceptions.UnsavedChangesException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    private int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public String execute(TaskList tasks, FileController fc) throws InvalidOperationDukeException, UnsavedChangesException {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"            throw new InvalidOperationDukeException(\"Number is out of bounds\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        tasks.markDoneAndAddNextTask(index - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        assert tasks.get(index - 1).isDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        if (!fc.writeText(tasks.serialize())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            throw new UnsavedChangesException();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"Task %d is done\\n%s\", index, tasks.get(index - 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":28}},{"path":"src/main/java/duke/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    public String execute(TaskList tasks, FileController fc) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":10}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** Base exception class for all exceptions in Duke */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"        return new StringBuilder()","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"                .append(\"Error: \")","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"                .append(super.getMessage())","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"                .toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"tanhuakun":17}},{"path":"src/main/java/duke/exceptions/InvalidCommandDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** DukeException representing unknown commands */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class InvalidCommandDukeException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public InvalidCommandDukeException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"        super(\"Command not recognized\");","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"tanhuakun":8}},{"path":"src/main/java/duke/exceptions/InvalidOperationDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** DukeException representing an attempt to do something that is not supported on existing tasks */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class InvalidOperationDukeException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public InvalidOperationDukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"tanhuakun":8}},{"path":"src/main/java/duke/exceptions/NoArgumentDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** DukeException representing a lack of arguments found */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class NoArgumentDukeException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public NoArgumentDukeException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"        super(String.format(\"Arguments required for this command.\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"tanhuakun":8}},{"path":"src/main/java/duke/exceptions/UnsavedChangesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** DukeException representing that changes made are not being saved */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class UnsavedChangesException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public UnsavedChangesException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"        super(\"Changes not saved to file... please check if everything is ok\");","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tanhuakun":8}},{"path":"src/main/java/duke/exceptions/WrongArgumentDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** DukeException representing that the argument is probably wrongly formatted */","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public class WrongArgumentDukeException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public WrongArgumentDukeException(String str) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"        super(String.format(\"The argument is wrong: \" + str));","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"tanhuakun":8}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    private static final String IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    LocalDate deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public Deadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public String getIdentifier() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        return IDENTIFIER;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    public String getDetailsWithDelimiter(String delimiter) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"%s%s%s\", taskName, delimiter, deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        Deadline d \u003d (Deadline) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        return taskName.equals(d.taskName) \u0026\u0026 isDone \u003d\u003d d.isDone \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                deadline.equals(d.deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanhuakun":39}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    private static final String IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    LocalDate time;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public Event(String taskName, LocalDate time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), time);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public String getIdentifier() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        return IDENTIFIER;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public String getDetailsWithDelimiter(String delimiter) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"%s%s%s\", taskName, delimiter, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        return taskName.equals(e.taskName) \u0026\u0026 isDone \u003d\u003d e.isDone \u0026\u0026","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"                time.equals(e.time);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanhuakun":40}},{"path":"src/main/java/duke/tasks/RecurringTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"public class RecurringTask extends Task {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    private static final String IDENTIFIER \u003d \"R\";","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    private int intervalInDays;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    private LocalDate nextDeadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public RecurringTask(String taskName, LocalDate nextDeadline, int intervalInDays) {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"        super(taskName);","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        this.nextDeadline \u003d nextDeadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        this.intervalInDays \u003d intervalInDays;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"[R]%s (by: %s, every %d days)\", super.toString(),","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"                nextDeadline, intervalInDays);","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    public String getIdentifier() {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        return IDENTIFIER;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public String getDetailsWithDelimiter(String delimiter) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"%s%s%s%s%d\", taskName, delimiter, nextDeadline,","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"                delimiter, intervalInDays);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * Returns the same task but at the next deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * @return A recurring task object representing the same task but one deadline later","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public Task getNextTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        return new RecurringTask(taskName, nextDeadline.plusDays(intervalInDays),","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"                intervalInDays);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        if (!(o instanceof RecurringTask)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        RecurringTask r \u003d (RecurringTask) o;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        return taskName.equals(r.taskName) \u0026\u0026 isDone \u003d\u003d r.isDone \u0026\u0026","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"                nextDeadline.equals(r.nextDeadline) \u0026\u0026","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"                intervalInDays \u003d\u003d r.intervalInDays;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"tanhuakun":55}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/** Class representing a task. */","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    /* name of the Task. */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    /* Is the class done. */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        Task t \u003d (Task) o;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        return taskName.equals(t.taskName) \u0026\u0026 isDone \u003d\u003d t.isDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     * Marks the current Task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"     * Gets the isDone status of the current task","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * @return True if task is done, false otherwise;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        return isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"     * Returns the name of this task","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"     * @return String representation of name","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    public String getName() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        return taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"     * Gets an identifier for the labelled task.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"     * @return A string identifier for this task.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    public abstract String getIdentifier();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"     * Gets all unique details of the task separated by a delimiter","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"     * @param delimiter String to use for separation","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"     * @return Details of the task with a delimiter.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"    public abstract String getDetailsWithDelimiter(String delimiter);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"     * Returns the next task to do after this one","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"     * @return null by default as most tasks are one-time.","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"    public Task getNextTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"        return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanhuakun":87}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"/** Manage tasklists */","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    ArrayList\u003cTask\u003e storedList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"     * Constructor for tasklist","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"     * @param string a string representation of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public TaskList(String string) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        storedList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"        string.lines().forEach((line) -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"            Task savedTask \u003d TaskUtils.stringToTask(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"            if (savedTask !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"                storedList.add(savedTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"                System.out.println(\"Line \" + line + \" is not a task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        boolean isFirst \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c storedList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            if (isFirst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"                isFirst \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"            sb.append(String.format(\"%d.%s\", i + 1, storedList.get(i)));","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        if (isFirst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        storedList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     * Converts the whole task list to a String containing each individual","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * task serialized and separated in different lines.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"     * @return String representation of entire task list serialized.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    public String serialize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        boolean isFirst \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        for(Task task : storedList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"            if (isFirst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"                isFirst \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"            sb.append(TaskUtils.taskToString(task));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"     * Gets the size of the tasklist","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"     * @return the size of the tasklist","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        return storedList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        return storedList.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"        return storedList.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"     * Marks a task as done and adds the next task specified by the task","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"     * @param index task to mark done","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"    public void markDoneAndAddNextTask(int index) {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        Task taskToMark \u003d storedList.get(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        if (taskToMark.isDone()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"        taskToMark.markDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"        Task nextTask \u003d taskToMark.getNextTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"        if (nextTask !\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"            storedList.add(nextTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":102}},{"path":"src/main/java/duke/tasks/TaskUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"/** Utility class for handling things related to Task **/","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"public class TaskUtils {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    /** cached things */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    public static String DONE_MARKER \u003d \"1\";","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public static String NOT_DONE_MARKER \u003d \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public static String DELIMITER \u003d \" | \";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * Returns a task encoded by the given String","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"     * @param str","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"     * @return Task specified by str","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static Task stringToTask(String str) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        String[] segments \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        if (segments.length \u003c 3) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        boolean isDone \u003d segments[1].equals(DONE_MARKER);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        Task toReturn;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        switch (segments[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                toReturn \u003d new Todo(segments[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"                if (segments.length !\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"                    return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"                toReturn \u003d new Deadline(segments[2], LocalDate.parse(segments[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"            case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"                if (segments.length !\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                    return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"                toReturn \u003d new Event(segments[2], LocalDate.parse(segments[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"            case \"R\":","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                if (segments.length !\u003d 5) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"                    return null;","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"                toReturn \u003d new RecurringTask(segments[2], LocalDate.parse(segments[3]),","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                        Integer.parseInt(segments[4]));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"                break;","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"                return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"            toReturn.markDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        return toReturn;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"     * Returns a string representation of a task for saving","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"     * @param task","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"     * @return specific string representation of a task","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    public static String taskToString(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        sb.append(task.getIdentifier())","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"                .append(DELIMITER)","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"                .append(task.isDone() ? DONE_MARKER : NOT_DONE_MARKER)","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"                .append(DELIMITER)","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"                .append(task.getDetailsWithDelimiter(DELIMITER));","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tanhuakun":72}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"    private static final String IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public String getIdentifier() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        return IDENTIFIER;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public String getDetailsWithDelimiter(String delimiter) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        return taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanhuakun":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" style\u003d\"-fx-background-color:#e1f5f5;-fx-border-color: black\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tanhuakun":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color:azure;\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"tanhuakun":19}},{"path":"src/test/data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"T | 0 | HELP!!!!","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":1}},{"path":"src/test/java/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"import duke.FileController;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"public class CommandTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public void testAddCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        FileController fc \u003d new FileController(\"data/\", \"test.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        String contents \u003d fc.readContentsAsString();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"        TaskList taskList \u003d new TaskList(contents);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        while (taskList.size() \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"            taskList.remove(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        Task t \u003d new Todo(\"HELP!!!!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        Command c \u003d new AddTaskCommand(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        c.execute(taskList, fc);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        Assert.assertEquals(taskList.get(0), t);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":25}},{"path":"src/test/java/TaskUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.TaskUtils;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"public class TaskUtilsTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public void serializeTaskTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        Todo t \u003d new Todo(\"Die\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        String serialized \u003d TaskUtils.taskToString(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"        Assert.assertEquals(serialized, \"T | 0 | Die\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        t.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        serialized \u003d TaskUtils.taskToString(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        Assert.assertEquals(serialized, \"T | 1 | Die\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public void taskFromSerializationTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        String string \u003d \"D | 0 | Live | 1999-02-10\";","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        Task task \u003d new Deadline(\"Live\", LocalDate.parse(\"1999-02-10\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        Assert.assertEquals(task, TaskUtils.stringToTask(string));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanhuakun":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"hello","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"deadline rrr","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"event llllll","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"delete 999","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanhuakun":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"\"C:\\Java JDK\\jdk-11.0.9\\bin\\java\" -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanhuakun":1,"-":20}}]
