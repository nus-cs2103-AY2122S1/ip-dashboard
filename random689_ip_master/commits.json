{"authorDailyContributionsMap":{"random689":[{"date":"2021-08-18","commitResults":[{"hash":"693cd107a5c66210fb8e3ac98eadecb95008e770","messageTitle":"Implement a skeletal version of Duke that starts by greeting the user, simply echos commands entered by the user, and exits when the user types bye.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":6}}},{"hash":"2e90c65869e07965c3275e5d475eec2ed7278637","messageTitle":"Add the ability to mark tasks as done. Also added in a task class to handle the tasks","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":3}}},{"hash":"3a809e61ff44977702d15ed88e912e2a1efc81fd","messageTitle":"Add the ability to mark tasks as done. Also added in a task class to handle the tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"17a07aa4a977b312cee61d79137d4cde059425bf","messageTitle":"Add support for tracking three types of tasks:     ToDos: tasks without any date/time attached to it e.g., visit new theme park     Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm     Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm","messageBody":" Also added the classes as well for each new task.\n Also updated the if else to switch-case\n Also removed the old base case and makes the bot give an re try response.\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":15}}},{"hash":"0ea76285ac9b43268878753534933a1f281e032f","messageTitle":"Add support for tracking three types of tasks:     ToDos: tasks without any date/time attached to it e.g., visit new theme park     Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm     Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm","messageBody":" Also added the classes as well for each new task.\n Also updated the if else to switch-case\n Also removed the old base case and makes the bot give an re try response.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"7ea48544a6cbd4edf2c1feaf987e4fff6b78766c","messageTitle":"Add support for tracking three types of tasks:     ToDos: tasks without any date/time attached to it e.g., visit new theme park     Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm     Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm","messageBody":" Also added the classes as well for each new task.\n Also updated the if else to switch-case\n Also removed the old base case and makes the bot give an retry response.\n\n added and used the textUItesting.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0}}},{"hash":"3e44b050b9f10e543a6da907e379cc677c2de59c","messageTitle":"Added DukeExceptions to catch the errors for: 1. Invalid command for \"done\", \"todo\", \"deadline\" and \"event\" 2. Catch invalid numbers (out of range) for \"done\"","messageBody":"Also updated to remove the extra space in each space (using trim)\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":80,"deletions":42}}},{"hash":"1a925e28c0bb4974fdb6b80f7b31bbe089a9fe61","messageTitle":"Added DukeExceptions to catch the errors for: 1. Invalid command for \"done\", \"todo\", \"deadline\" and \"event\" 2. Catch invalid numbers (out of range) for \"done\"","messageBody":"Also updated to remove the extra space in each space (using trim)\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"d4617a19e3b08dc4942aeb98962221b5891e1eb9","messageTitle":"Added DukeExceptions to catch the errors for: 1. Invalid command for \"done\", \"todo\", \"deadline\" and \"event\" 2. Catch invalid numbers (out of range) for \"done\"","messageBody":"Also updated to remove the extra space in each space (using trim)\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"f3a00bb86f57a7b4c1104281636ffb319a477104","messageTitle":"Added DukeExceptions to catch the errors for: 1. Invalid command for \"done\", \"todo\", \"deadline\" and \"event\" 2. Catch invalid numbers (out of range) for \"done\"","messageBody":"Also updated to remove the extra space in each space (using trim)\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"845ed27beac45d02cb8cf6b013b5a8d8b31edaa7","messageTitle":"Add support for deleting tasks from the list.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":25,"deletions":9}}}]},{"date":"2021-08-24","commitResults":[{"hash":"a9660bb6f1d04b0966fa6ae361e33c645e220345","messageTitle":"Add the ability for the bot to save the list to harddisk","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":0},"java":{"insertions":156,"deletions":81}}}]},{"date":"2021-08-25","commitResults":[{"hash":"dde444e89a8009820e0135f299328e61017ceb55","messageTitle":"Add the ability for the bot to recognise date time by adding a new TaskTime class to handle it","messageBody":"The way the time gated tasks handle the time should be the same for event and deadline task\n","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":10},"java":{"insertions":34,"deletions":6}}},{"hash":"085191b26a43fbed46001576d02cd3325b4e8216","messageTitle":"Add Ui, Command, TaskList, Parser, Storage class to make the code more OOP","messageBody":"Add the ability for the code to read an existing file and import the existing file\u0027s list to continue.\n","tags":["A-moreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":402,"deletions":164}}},{"hash":"087478b4a895500dd006e85b3833e061218d5b7d","messageTitle":"Organise the class into duke package and their subpackages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":77,"deletions":3},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"f0c47c9ad258b97c96c901fadafc60c94f621bc6","messageTitle":"Add JUnit test to test the behaviour of the codes.","messageBody":"","tags":["A-Jar","A-JUnit","A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":0}}},{"hash":"6e6f2b07bb7e42e5d3d4b238e288ed7558f8f3b2","messageTitle":"Add JavaDoc comments Tweak the code to comply with a coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":329,"deletions":17}}},{"hash":"e176565a5e4098fd84658cb470cc9902bb8bf28e","messageTitle":"Give users a way to find a task by searching for a keyword","messageBody":"Added FindCommand class\nAdded searchList function to TaskList\nAdded new ui functions to Ui\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":0}}}]},{"date":"2021-08-26","commitResults":[{"hash":"b97c48d40b78f51d838f0e5fb8819f3cd69c3eca","messageTitle":"Update the coding style to adhere to the coding style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":28}}}]},{"date":"2021-09-01","commitResults":[{"hash":"4cfce6a67e4da1b60b27c8f56fcdbc540a730300","messageTitle":"Use Gradle to automate some of the build tasks of the project","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"bf291190bb3d6f6cecf80cd103e602eb3dc78e5e","messageTitle":"Use checkStyle to detect coding style violations","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":82,"deletions":55}}},{"hash":"fab7e3074437196619028db0036e390bc5a1db0b","messageTitle":"Add a GUI to Duke","messageBody":"To be updated to remove redundant code and classes\nTo add a new interface for Duke\n","tags":["Level-10"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":374,"deletions":47}}},{"hash":"f0dab5d99887051c8163af91f58698abc520155a","messageTitle":"Add a GUI to Duke Add new interface to Pika (previously Duke) Update code style","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":11},"fxml":{"insertions":2,"deletions":2},"java":{"insertions":165,"deletions":196},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}}]},{"date":"2021-09-02","commitResults":[{"hash":"bc8d14739eef96d707ee8ba5663eda6410c51109","messageTitle":"Add a GUI to Duke Add new interface to Pika (previously Duke) Add user interface as Ash Fix minor bugs Change colours and GUI interface","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":0},"fxml":{"insertions":7,"deletions":3},"java":{"insertions":16,"deletions":6}}}]},{"date":"2021-09-07","commitResults":[{"hash":"bfc1aaa7e8792958db20f1b866b2e66a4f1e66ec","messageTitle":"Add assertions to taskList, Storage, Ui, TaskTime methods","messageBody":"There are several methods that hold certain assumptions that their input will be of the right format. The assertions are there to ensure that if any of those assumption fails, it will be caught\n\nLet\u0027s also check if there are any other functions that needs to have an assertion due to the inputs.\n","tags":["A-FullCommitMesssage","A-Assertions"],"fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":2},"java":{"insertions":72,"deletions":62}}}]},{"date":"2021-09-08","commitResults":[{"hash":"8b6c5939e237f21cf011125ea5f363b089816906","messageTitle":"Use refactor to improve the code quality","messageBody":"Update most of the javadocs to adhere to coding standards\nUpdate variable so that those that should not be final are not\nUpdate naming convention for some function to improve clarity\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":6},"java":{"insertions":98,"deletions":108}}}]}]},"authorFileTypeContributionMap":{"random689":{"java":1427,"md":2,"fxml":39,"sh":0,"bat":1,"gradle":18,"txt":21}},"authorContributionVariance":{"random689":79221.47},"authorDisplayNameMap":{"random689":"CS2103-T16-3 NG Y..HUAN"}}
